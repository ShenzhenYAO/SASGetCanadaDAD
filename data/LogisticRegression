{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0","name":"Logistic regression","children":[{"idx":"MY425b4274-bafd-4aa9-b046-9fb04692dc03","name":"Prepare data","custparents":[{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">data _null_;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*the following is to disconnect from remote server, and run the program in HQC server*/</div><div class=\"ql-code-block\">%let nccSASTools=S:\\Collaborative_researchers\\Shenzhen\\My Project\\Projects\\DoNotDelete Common Macros\\MyMacros.sas;</div><div class=\"ql-code-block\">%include \"&amp;nccSASTools\" /LRECL=32767;</div><div class=\"ql-code-block\">%let localDataPath=P:\\Physician_Impact_Pro(SYao)_Bio14-143\\Data;</div><div class=\"ql-code-block\">libname localD \"&amp;localDataPath\";</div><div class=\"ql-code-block\">%let localTargetPath=P:\\Physician_Impact_Pro(SYao)_Bio14-143\\Output\\Result data;</div><div class=\"ql-code-block\">libname localT \"&amp;localTargetPath\";</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*prepare data*/</div><div class=\"ql-code-block\">%VbsUnzip(</div><div class=\"ql-code-block\">\t\ttgtDir=,</div><div class=\"ql-code-block\">\t\tzipFile=%str(&amp;localTargetPath.\\VXM_FS.zip),</div><div class=\"ql-code-block\">\t\tsrcFile=%str(VXM_FS.sas7bdat)</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%let resultfolder=ResultMainAnalysis;</div><div class=\"ql-code-block\">%let srcData0=Data_&amp;resultfolder;</div><div class=\"ql-code-block\">%let compVar=CompFS;</div><div class=\"ql-code-block\">%let UPCIndexVar = UPCIndexF;</div><div class=\"ql-code-block\">%let theCutOff = median;</div><div class=\"ql-code-block\">%let adhTerm = Adherence_Adjust;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make cat for &amp;UPCINdexVar.*/</div><div class=\"ql-code-block\">%GetMeanStats(</div><div class=\"ql-code-block\">\t\tdata=VXM_FS,</div><div class=\"ql-code-block\">\t\twhere=,</div><div class=\"ql-code-block\">\t\tgroupVars=,</div><div class=\"ql-code-block\">\t\ttheVar=&amp;UPCINdexVar.,</div><div class=\"ql-code-block\">\t\ttheStats=mean median p25 p75 ,</div><div class=\"ql-code-block\">\t\ttarget=_tmp1,</div><div class=\"ql-code-block\">\t\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data _null_;</div><div class=\"ql-code-block\">\tset _tmp1;</div><div class=\"ql-code-block\">\tcall symput('UPCIndexCutoff', &amp;theCutOff);</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">%let UPCIndexCutoff=&amp;UPCIndexCutoff;</div><div class=\"ql-code-block\">%put &gt;&gt;&gt; UPCIndexCutoff=&amp;UPCIndexCutoff;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*Make UPCIndex category*/</div><div class=\"ql-code-block\">data &amp;srcData0;</div><div class=\"ql-code-block\">\tset VXM_FS;</div><div class=\"ql-code-block\">\t&amp;UPCIndexVar._Cat='L';/*low*/</div><div class=\"ql-code-block\">\tif &amp;UPCIndexVar. &gt;= &amp;UPCIndexCutoff  then &amp;UPCIndexVar._Cat='H';/*high*/</div><div class=\"ql-code-block\">\tCombTerm_FS = strip(&amp;UPCIndexVar._Cat) || strip(&amp;CompVar);</div><div class=\"ql-code-block\">\tif ThirdPartyPayPCT_Pre365=. then ThirdPartyPayPCT_Pre365=0;</div><div class=\"ql-code-block\">\tif total_Cost_Pre365=. then total_Cost_Pre365=0;</div><div class=\"ql-code-block\">\tThirdPartyPayPCT100_Pre365 =round(ThirdPartyPayPCT_Pre365*100, \"1\");</div><div class=\"ql-code-block\">\ttotal_Cost_Pre365_Int = round(total_Cost_Pre365, \"1\");</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div></div><p><br></p>"},{"idx":"MYa769cf12-25be-4b2f-b5d4-5079e341f4db","name":"Test models [theTeest()]","custparents":[{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro theTeest(theteestPath=, themainV=, checkAllInteraction=, srcData0=);</div><div class=\"ql-code-block\">%local theTeestPath theMainV teestTarget teestTargetPath vars1 vars2 checkAllInteraction srcData0 ;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%let teestTargetPath = &amp;localTargetPath.\\&amp;resultfolder.\\&amp;theteestPath;</div><div class=\"ql-code-block\">options dlcreatedir;</div><div class=\"ql-code-block\">libname teestT \"&amp;teestTargetPath\";</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*clean up all _xPilot files in the work dir*/</div><div class=\"ql-code-block\">proc datasets nolist;</div><div class=\"ql-code-block\">\tdelete _xPilot:;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%let groupVars = key_hsn;</div><div class=\"ql-code-block\">%let outcomeVar=&amp;adhTerm;</div><div class=\"ql-code-block\">%let CatMainVar=&amp;theMainV;</div><div class=\"ql-code-block\">%let NumMainvar=;</div><div class=\"ql-code-block\">%let NumCoVars= age  NDINS_PRE365 HDays_AcuteCare_Pre365 </div><div class=\"ql-code-block\">\t\t\t\t\t\tNVISITS_GP_PRE365 NVISITS_SP_PRE365 NVISITS_ER_PRE365</div><div class=\"ql-code-block\">\t\t\t\t\t\tCHARLSON_INDEX ThirdPartyPayPCT100_Pre365 total_Cost_Pre365_Int</div><div class=\"ql-code-block\">\t\t\t\t\t;</div><div class=\"ql-code-block\">%let CatCoVars = </div><div class=\"ql-code-block\">\t\t\t\t\t\tsex_desc </div><div class=\"ql-code-block\">\t\t\t\t\t\tresitype </div><div class=\"ql-code-block\">\t\t\t\t\t\tQAIPPE </div><div class=\"ql-code-block\">\t\t\t\t\t\tBENZO_PRE365</div><div class=\"ql-code-block\">\t\t\t\t\t\tPSYCHO_PRE365</div><div class=\"ql-code-block\">\t\t\t\t\t\tANTIDEP_PRE365</div><div class=\"ql-code-block\">\t\t\t\t\t\tANTICHO_PRE365</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_DIABETES</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_HTN</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_NS_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_ASTHMA</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_COPD</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_HF</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_AP_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_MOODANX</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_OA</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_SUBABUSE_OLD</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_AF_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_AMI</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_CD_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_CV_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_HP_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_IHD</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_STROKE_1POP</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_WF_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_OSTEO_1POP</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_OB_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_CA_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_PV_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_DA_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_NONRA</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_LB_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_AK_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_RF_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_VTE_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_CO_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_IB_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_RA</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_CK_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_LV_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_EPAD</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_UB_PS</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_AD</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_SUICIDE_OLD</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_SCHIZO_EVER</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_PD</div><div class=\"ql-code-block\">\t\t\t\t\t\tCC_PRE365_MS</div><div class=\"ql-code-block\">\t\t\t\t;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data teestT._XPilot1;</div><div class=\"ql-code-block\">\tretain &amp;groupVars &amp;outcomeVar &amp;CatMainVar &amp;NumMainVar  &amp;CatCoVars &amp;NumCoVars;</div><div class=\"ql-code-block\">\tset &amp;srcData0;</div><div class=\"ql-code-block\">\tkeep &amp;outcomeVar &amp;CatMainVar &amp;NumMainVar &amp;NumCoVars &amp;groupVars &amp;CatCoVars;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make standardized var names</div><div class=\"ql-code-block\">\tfor the outcome, rename it as Y</div><div class=\"ql-code-block\">\tfor NumCoVars: Xn_N_...</div><div class=\"ql-code-block\">\tfor CatCoVars: Xn_C_...</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%makeStdVarNames(</div><div class=\"ql-code-block\">\tdata =teestT._XPilot1, </div><div class=\"ql-code-block\">\toutcomeVar = &amp;outcomeVar, CatMainVar=&amp;CatMainVar, </div><div class=\"ql-code-block\">\tNumCoVars=&amp;NumCoVars, CatCoVars=&amp;CatCoVars, </div><div class=\"ql-code-block\">\tleadingZ=1,</div><div class=\"ql-code-block\">\ttarget=_XPilot2, varsMapfile=varsmap, dlmt=, </div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data teestT._xpilot2;</div><div class=\"ql-code-block\">\tset _xpilot2;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data teestT.VarsMap;</div><div class=\"ql-code-block\">\tset VarsMap;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string of standardized CatMainVar (if there is no such var, the stdCatMainVar will be null)*/</div><div class=\"ql-code-block\">%let stdCatMainVar=;</div><div class=\"ql-code-block\">data _null_;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif renamed = 'X01_C';</div><div class=\"ql-code-block\">\tcall symput('stdCatMainVar', renamed);</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%put &gt;&gt;&gt; stdCatMainVar = &amp;stdCatMainVar;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string of standardized NumMainVar (if there is no such var, the stdNumMainVar will be null)*/</div><div class=\"ql-code-block\">%let stdNumMainVar=;</div><div class=\"ql-code-block\">data _null_;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif renamed = 'X01_N';</div><div class=\"ql-code-block\">\tcall symput('stdNumMainVar', renamed);</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%put &gt;&gt;&gt; stdNumMainVar = &amp;stdNumMainVar;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string of standardized CatCoVars*/</div><div class=\"ql-code-block\">data _XPilot3a;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif index(renamed, '_C') &gt;0 and not (renamed in: ('X01_')) ;</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot3a, \ttheVar=renamed, theStrVarName=stdCatCoVars, DLMT=);</div><div class=\"ql-code-block\">data teestT._xpilot3a;</div><div class=\"ql-code-block\">\tset _xpilot3a;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string of standardized NumCoVars*/</div><div class=\"ql-code-block\">data _XPilot3b;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif index(renamed, '_N') &gt;0 and not (renamed in: ('X01_')) ;</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot3b, \ttheVar=renamed, theStrVarName=stdNumCoVars, DLMT=);</div><div class=\"ql-code-block\">data teestT._xpilot3b;</div><div class=\"ql-code-block\">\tset _xpilot3b;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*For the catMainvar and assign numeric number for each level*/</div><div class=\"ql-code-block\">%CatVarsMakeRanks(</div><div class=\"ql-code-block\">\tdata =_XPilot2, </div><div class=\"ql-code-block\">\tCatVars=&amp;stdCatMainVar, </div><div class=\"ql-code-block\">\ttarget=_XPilot4a, </div><div class=\"ql-code-block\">\tdlmt=, </div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot4a;</div><div class=\"ql-code-block\">\tset _xpilot4a;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*loop for CatCoVars and assign numeric number for each level*/</div><div class=\"ql-code-block\">%CatVarsMakeRanks(</div><div class=\"ql-code-block\">\tdata =_XPilot4a, </div><div class=\"ql-code-block\">\tCatVars=&amp;stdCatCoVars, </div><div class=\"ql-code-block\">\ttarget=_XPilot4b, </div><div class=\"ql-code-block\">\tdlmt=, </div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot4b;</div><div class=\"ql-code-block\">\tset _xpilot4b;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*For the numMainvar and assign numeric number for each level*/</div><div class=\"ql-code-block\">%NumVarsMakeRanks(</div><div class=\"ql-code-block\">\tdata=_XPilot4b,</div><div class=\"ql-code-block\">\tNumVars=&amp;stdNumMainVar,</div><div class=\"ql-code-block\">\ttarget=_XPilot4c</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot4c;</div><div class=\"ql-code-block\">\tset _xpilot4c;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*loop for NumCoVars and make quartile and quintile ranks*/</div><div class=\"ql-code-block\">%NumVarsMakeRanks(</div><div class=\"ql-code-block\">\tdata=_XPilot4c,</div><div class=\"ql-code-block\">\tNumVars=&amp;stdNumCoVars,</div><div class=\"ql-code-block\">\ttarget=_XPilot4</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot4;</div><div class=\"ql-code-block\">\tset _xpilot4;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*add surfix to the standardized categorical var names. </div><div class=\"ql-code-block\">\te.g., for a string of  X3_C X4_C, change it to \tX3_C_CatN X4_C_CatN</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">%VarsAddPreSurfix(srcVars=&amp;stdCatMainVar, targetVarName=stdCatMainVar_CatN, prefix=, surfix=_CatN);</div><div class=\"ql-code-block\">%VarsAddPreSurfix(srcVars=&amp;stdCatMainVar, targetVarName=stdCatMainVar_CatC, prefix=, surfix=_CatC);</div><div class=\"ql-code-block\">%VarsAddPreSurfix(srcVars=&amp;stdCatCoVars, targetVarName=stdCatCoVars_CatN, prefix=, surfix=_CatN);</div><div class=\"ql-code-block\">%VarsAddPreSurfix(srcVars=&amp;stdCatCoVars, targetVarName=stdCatCoVars_CatC, prefix=, surfix=_CatC);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*check multicollinearity*/</div><div class=\"ql-code-block\">%checkMultiCollin (</div><div class=\"ql-code-block\">\tdata = _XPilot4,</div><div class=\"ql-code-block\">\ttarget = _XPilot5a, </div><div class=\"ql-code-block\">\tY=Y, </div><div class=\"ql-code-block\">\tVars=%str( &amp;stdCatMainVar_CatN  &amp;stdNumMainVar   &amp;stdCatCoVars_CatN &amp;stdNumCoVars),</div><div class=\"ql-code-block\">\tvarsMapFile=VarsMap,</div><div class=\"ql-code-block\">\tVIFCutOff=2.5,</div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot5a;</div><div class=\"ql-code-block\">\tset _xpilot5a;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*exclude those with VIF &gt; &amp;VIFCutOff (e.g., 2.5)*/</div><div class=\"ql-code-block\">data _XPilot5;</div><div class=\"ql-code-block\">\tset _XPilot5a;</div><div class=\"ql-code-block\">\tif MultiCollin=0;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">/*sort variables*/</div><div class=\"ql-code-block\">%sort(data=_XPilot5, sorter=variable);</div><div class=\"ql-code-block\">data teestT._xpilot5;</div><div class=\"ql-code-block\">\tset _xpilot5;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string for vars to be kept after VIF check (without multicollinearity problems)*/</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot5, \ttheVar=variable, theStrVarName=nonMultiCollinVars, DLMT=);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*Given a list of vars (theVars), keep those not having multicollinearity problems.  */</div><div class=\"ql-code-block\">%GetNonMultiCollinVars(</div><div class=\"ql-code-block\">\ttheVars=&amp;stdCatCoVars_CatN, </div><div class=\"ql-code-block\">\ttheNonCollinVarHeaders=&amp;nonMultiCollinVars, </div><div class=\"ql-code-block\">\ttargetVarName=stdCatCoVars_CatN_nonMultiCollin, </div><div class=\"ql-code-block\">\tdlmt=, debug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">%put stdCatCoVars_CatN_nonMultiCollin = &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\">%GetNonMultiCollinVars(</div><div class=\"ql-code-block\">\ttheVars=&amp;stdNumCoVars, </div><div class=\"ql-code-block\">\ttheNonCollinVarHeaders=&amp;nonMultiCollinVars, </div><div class=\"ql-code-block\">\ttargetVarName=stdNumCoVars_nonMultiCollin, </div><div class=\"ql-code-block\">\tdlmt=, debug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">%put stdNumCoVars_nonMultiCollin = &amp;stdNumCoVars_nonMultiCollin;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*Select Vars, Univariate, excluding vars with a p &gt; .05*/</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\">\t\t\t\t\t/selection=forward slentry=.05 slstay= .05;</div><div class=\"ql-code-block\">\tods output ModelBuildingSummary=_XPilot6a ModelANOVA = _XPilot6b;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\">\t\t\t\t\t/selection=forward slentry=.05 slstay= .05;</div><div class=\"ql-code-block\">\tods output ModelBuildingSummary=_XPilot6c ModelANOVA = _XPilot6d;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\">\t\t\t\t\t/selection=stepwise slentry=.05 slstay= .05;</div><div class=\"ql-code-block\">\tods output ModelBuildingSummary=_XPilot6e ModelANOVA = _XPilot6f;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data teestT._xpilot6a;</div><div class=\"ql-code-block\">\tset _xpilot6a;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._xpilot6b;\tset _xpilot6b;run;</div><div class=\"ql-code-block\">data teestT._xpilot6c;\tset _xpilot6c;run;</div><div class=\"ql-code-block\">data teestT._xpilot6d;\tset _xpilot6d;run;</div><div class=\"ql-code-block\">data teestT._xpilot6e;\tset _xpilot6e;run;</div><div class=\"ql-code-block\">data teestT._xpilot6f;\tset _xpilot6f;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*keep variables that appear in _XPilot5, _XPilot6B 6D and 6F</div><div class=\"ql-code-block\">\tThese are vars that </div><div class=\"ql-code-block\">\t1. not having multicollinearity problem</div><div class=\"ql-code-block\">\t2. with an effect p &lt;.05 in the multivariable model</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">PROC SQL;</div><div class=\"ql-code-block\">   CREATE TABLE _XPilot7a </div><div class=\"ql-code-block\">\tAS </div><div class=\"ql-code-block\">   SELECT t0.variable </div><div class=\"ql-code-block\">      FROM _XPilot5 t0, _XPilot6B t1, _XPilot6D t2, _XPilot6F t3</div><div class=\"ql-code-block\">      WHERE (</div><div class=\"ql-code-block\">\t\t\tt0.variable = tranwrd(t1.Effect, '_CatN', '') </div><div class=\"ql-code-block\">\t\t\tAND t0.variable =tranwrd(t2.Effect, '_CatN', '') </div><div class=\"ql-code-block\">\t\t\tAND t0.variable =tranwrd(t3.Effect, '_CatN', '') </div><div class=\"ql-code-block\">\t\t\t)</div><div class=\"ql-code-block\">\torder by variable;</div><div class=\"ql-code-block\">QUIT;</div><div class=\"ql-code-block\">data teestT._xpilot7a;\tset _xpilot7a;run;</div><div class=\"ql-code-block\">/*in varsmap, indicate those selected in _XPilot7a*/</div><div class=\"ql-code-block\">%print(data=varsmap, obs=100); </div><div class=\"ql-code-block\">%sqljoinv2(</div><div class=\"ql-code-block\">\tt1=varsmap,</div><div class=\"ql-code-block\">\tt2=_XPilot7a,</div><div class=\"ql-code-block\">\ttarget=_XPilot7,</div><div class=\"ql-code-block\">\tvars=%str(t1.*, ifn(t2.variable=\"\", 0, 1) as S7),</div><div class=\"ql-code-block\">\tjtype=left,</div><div class=\"ql-code-block\">\tjterm=%str(t1.renamed=t2.variable)</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot7;\tset _xpilot7;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%let mustHaveCoVars=&amp;CatMainVar &amp;NumMainVar Sex_desc ResiType ;</div><div class=\"ql-code-block\">%put &gt;&gt;&gt; &amp;mustHaveCoVars;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%StringToTable(theStr=&amp;mustHaveCoVars, target=_XPilot8a, varname=original, dlmt=, debug=);</div><div class=\"ql-code-block\">data teestT._XPilot8a;\tset _XPilot8a;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*in _XPilot7, indicate those selected in _XPilot8a*/</div><div class=\"ql-code-block\">%sqljoinv2(</div><div class=\"ql-code-block\">\tt1=_XPilot7,</div><div class=\"ql-code-block\">\tt2=_XPilot8a,</div><div class=\"ql-code-block\">\ttarget=_XPilot8b,</div><div class=\"ql-code-block\">\tvars=%str(t1.*, ifn(t2.original=\"\", 0, 1) as S8),</div><div class=\"ql-code-block\">\tjtype=left,</div><div class=\"ql-code-block\">\tjterm=%str(strip(upcase(t1.original))=strip(upcase(t2.original))),</div><div class=\"ql-code-block\">\torderby=t1.renamed</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._XPilot8b;\tset _XPilot8b;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data _XPilot8;</div><div class=\"ql-code-block\">\tset _XPilot8b;</div><div class=\"ql-code-block\">\ts8=sum(s8, s7);</div><div class=\"ql-code-block\">\tif S8 &gt; 1 then S8=1;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot8;\tset _XPilot8;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make variable strings*/</div><div class=\"ql-code-block\">data _XPilot8_N _XPilot8_C;</div><div class=\"ql-code-block\">\tset _XPilot8;</div><div class=\"ql-code-block\">\twhere S8&gt;0;</div><div class=\"ql-code-block\">\tif renamed not in:('X01_') then do;</div><div class=\"ql-code-block\">\t\tif index(renamed, '_N') &gt; 0 then output _XPilot8_N;</div><div class=\"ql-code-block\">\t\telse output _XPilot8_C;</div><div class=\"ql-code-block\">\tend;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot8_C;\tset _XPilot8_C;run;</div><div class=\"ql-code-block\">data teestT._XPilot8_N;\tset _XPilot8_N;run;</div><div class=\"ql-code-block\">/*selected stdNumCoVars*/</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot8_N, theVar=renamed, theStrVarName=stdNumCoVars_S2, DLMT=);</div><div class=\"ql-code-block\">/*selected stdCatCoVars*/</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot8_C, \ttheVar=renamed, theStrVarName=stdCatCoVars_selected2, DLMT= );</div><div class=\"ql-code-block\">/*change categorical vars from X01_C to X01_C_CatN by adding the surfix _CatN*/</div><div class=\"ql-code-block\">%VarsAddPreSurfix(srcVars=&amp;stdCatCoVars_selected2, targetVarName=stdCatCoVars_SCatN2, prefix=, DLMT= , surfix=_CatN);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*9. Given a list of interestd vars, check interaction with the main variable. </div><div class=\"ql-code-block\">\tThe result is a table containing interested vars, and the type 3 result of the interaction terms (each interested var * the main variable)</div><div class=\"ql-code-block\">\t\te.g., resitype * X01_CatN</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">%checkVarsIntInt(</div><div class=\"ql-code-block\">\tdata = _XPilot4,</div><div class=\"ql-code-block\">\ttheVars= &amp;NumCoVars &amp;CatCoVars, </div><div class=\"ql-code-block\">\ttheVarsMapFile=VarsMap, </div><div class=\"ql-code-block\">\tstdCatMainVar_CatN=&amp;stdCatMainVar_CatN, </div><div class=\"ql-code-block\">\tstdNumMainVar=&amp;stdNumMainVar,</div><div class=\"ql-code-block\">\tdebug=,</div><div class=\"ql-code-block\">\ttarget =_XPilot9a</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._XPilot9a;\tset _XPilot9a;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*if check all vars, then some do have interaction with the main effect. But these conditions are not major, and not really of interest ...*/</div><div class=\"ql-code-block\">data _XPilot9;</div><div class=\"ql-code-block\">\tset _XPilot9a;</div><div class=\"ql-code-block\">\tif pValue &lt; .05 ;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot9;\tset _XPilot9;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*keep interested interaction terms in the final model </div><div class=\"ql-code-block\">\thowever, the vars should be determined later (depending on whether to include the numeric value, </div><div class=\"ql-code-block\">\tor the categories of the numeric value)</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*Determine what type of var best fit the models, i.e., numeric value, or categories, </div><div class=\"ql-code-block\">\tcheck AIC and -2Log</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">%checkVarsNumCatFit(</div><div class=\"ql-code-block\">\tdata=_XPilot4, </div><div class=\"ql-code-block\">\tintintTable=_XPilot9, </div><div class=\"ql-code-block\">\ttheVars = &amp;stdNumCoVars_S2 , </div><div class=\"ql-code-block\">\tstdNumCoVars_S2=&amp;stdNumCoVars_S2,</div><div class=\"ql-code-block\">\tstdCatMainVar_CatN=&amp;stdCatMainVar_CatN, </div><div class=\"ql-code-block\">\tstdNumMainVar=&amp;stdNumMainVar, </div><div class=\"ql-code-block\">\tstdCatCoVars_SCatN2=&amp;stdCatCoVars_SCatN2, </div><div class=\"ql-code-block\">\ttarget=_XPilot10a, </div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._XPilot10a;\tset _XPilot10a;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*From above, make a distinct list of num var types that are best fit*/</div><div class=\"ql-code-block\">%distinct(data=_XPilot10a, target=_XPilot10b, vars=%str(renamed, ref_covar));</div><div class=\"ql-code-block\">data teestT._XPilot10b;\tset _XPilot10b;run;</div><div class=\"ql-code-block\">/*A string of</div><div class=\"ql-code-block\">\tthe categorical var names of the original continuous vars</div><div class=\"ql-code-block\">\t\t(e.g., X49_N =&gt; X49_N_QuiN ...)</div><div class=\"ql-code-block\">\tWhich is to be added in the class statement, and the model statement as well</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">/*From _XPilot10b, select rows that a ref_CoVar not equal to the numeric var</div><div class=\"ql-code-block\">\te.g., the numeric var (in the column 'renamed') = X49_N</div><div class=\"ql-code-block\">\twhile the ref_CoVar = X49_N_QuiN</div><div class=\"ql-code-block\">\tIn that case, X49_N_QuiN (age measured by categories) better fits the model than X49_N (the continuous measure)</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">data _XPilot10c;\t</div><div class=\"ql-code-block\">\tset _XPilot10b;</div><div class=\"ql-code-block\">\tif renamed ne ref_Covar;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot10c, \ttheVar=ref_CoVar, theStrVarName=stdNumVars_CatN10, DLMT= );</div><div class=\"ql-code-block\">%put stdNumVars_CatN10 = &amp;stdNumVars_CatN10;</div><div class=\"ql-code-block\">/*stdNumVars_CatN9 is like 'X49_N_QUIN X51_N_QUIN X52_N_QUIN X53_N_QUAN'*/</div><div class=\"ql-code-block\">data teestT._XPilot10c;\tset _XPilot10c;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*A string of</div><div class=\"ql-code-block\">\tthe original continuous vars in continuouse type (e.g., X49_N)</div><div class=\"ql-code-block\">\t\twhich is to replace &amp;stdNumCoVars_S3 in the model statement </div><div class=\"ql-code-block\">\tIt would be the flip of the above (rows that the values are the same in the column 'renamed' and in 'ref_CoVar'</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">data _XPilot10d;</div><div class=\"ql-code-block\">\tset _XPilot10b;</div><div class=\"ql-code-block\">\tif renamed=ref_CoVar;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot10d;\tset _XPilot10d;run;</div><div class=\"ql-code-block\">/*If _XPilot10d is empty, the result var stdNumVars9 will be empty*/</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot10d, \ttheVar=ref_CoVar, theStrVarName=stdNumVars10, DLMT= );</div><div class=\"ql-code-block\">%put &gt;&gt;&gt; stdNumVars10 = &amp;stdNumVars10;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/* A string of </div><div class=\"ql-code-block\">\tthe interactions between the main var and the continuous vars either in the original continuous type, or </div><div class=\"ql-code-block\">\t\t\tin categorical type if the latter best fit the model </div><div class=\"ql-code-block\">\t\t\t(e.g., X49_N * X01_C_CatN =&gt; X49_N_QuiN * X01_C_CatN)</div><div class=\"ql-code-block\">\twhich is to partially replace the &amp;theIntTerm in the model statement for those continuous vars that </div><div class=\"ql-code-block\">\t\ta categorical type better fits the models</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">/*the interaction terms (with the main var) are in _XPilot8*/</div><div class=\"ql-code-block\">%sqljoinv2(</div><div class=\"ql-code-block\">\tt1=_XPilot9,</div><div class=\"ql-code-block\">\tt2=_XPilot10c,</div><div class=\"ql-code-block\">\ttarget=_XPilot10e1,</div><div class=\"ql-code-block\">\tvars=%str(t1.*, t2.ref_covar),</div><div class=\"ql-code-block\">\tjtype=left,</div><div class=\"ql-code-block\">\tjvars=renamed</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._XPilot10e1;\tset _XPilot10e1;run;</div><div class=\"ql-code-block\">/*In the following, the interaction term is partially change (only those continuous vars that a categorical type </div><div class=\"ql-code-block\">\t\tbetter fit the model will be replaced)</div><div class=\"ql-code-block\">\te.g. if there are three interaction variables:</div><div class=\"ql-code-block\">\t\t\tX02_C_CatN * X01_C_CatN (1)</div><div class=\"ql-code-block\">\t\t\tX49_N * X01_C_CatN (2), while the categorical measure X49_N_QuiN fits the model better than X49_N</div><div class=\"ql-code-block\">\t\t\tX50_N * X01_C_CatN (3), and X50_N fits the model better than (X50_QuiN)</div><div class=\"ql-code-block\">\t\t(1) will be remained unchange</div><div class=\"ql-code-block\">\t\t(2) X49_N will be replaced by X49_N_QuiN</div><div class=\"ql-code-block\">\t\t(3) will be remained unchanged</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">data _XPilot10e;</div><div class=\"ql-code-block\">\tset _XPilot10e1;</div><div class=\"ql-code-block\">\tformat newIntTerm $100.;</div><div class=\"ql-code-block\">\tif ref_covar ne '' then do;</div><div class=\"ql-code-block\">\t\t/*replace the var names (e.g., X49_N) with the names in ref_covar (e.g., X49_N_QuiN)*/</div><div class=\"ql-code-block\">\t\tnewIntTerm = tranwrd(intTerm, strip(renamed), strip(Ref_CoVar));</div><div class=\"ql-code-block\">\tend;</div><div class=\"ql-code-block\">\telse do;</div><div class=\"ql-code-block\">\t\tnewIntTerm= intTerm;</div><div class=\"ql-code-block\">\tend;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot10e, \ttheVar=newIntTerm, theStrVarName=theIntTerm10, DLMT= );</div><div class=\"ql-code-block\">%put &gt;&gt;&gt; theIntTerm10 = &amp;theIntTerm10;</div><div class=\"ql-code-block\">data teestT._XPilot10e;\tset _XPilot10e;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%print(data=_XPilot8, obs=100);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*decisions, what interaction terms to be retained?*/</div><div class=\"ql-code-block\">%let theIntTerm11=&amp;theIntTerm10;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%let stdNumMainVar=;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%macro testLackfit;</div><div class=\"ql-code-block\">%let stdNumMainVar=;</div><div class=\"ql-code-block\">\t%let data=_XPilot4;</div><div class=\"ql-code-block\">\t/*lackfit*/</div><div class=\"ql-code-block\">\t/*ods trace on;*/</div><div class=\"ql-code-block\">\tods results off;</div><div class=\"ql-code-block\">\tproc logistic data=&amp;data namelen=200;</div><div class=\"ql-code-block\">\t\tclass </div><div class=\"ql-code-block\">\t\t\t/*when measured by categories of numeric vars, the categories are added in the class statement */</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;stdNumVars_CatN10) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\t&amp;stdNumVars_CatN10</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\t&amp;stdCatMainVar_CatN  &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t model Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdCatCoVars_SCatN2 </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars_CatN10 </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars10</div><div class=\"ql-code-block\">\t\t\t\t\t&amp;theIntTerm11 /lackfit; </div><div class=\"ql-code-block\">\t\tods output ModelANOVA =_XPilot11a0 LackFitChiSq = _XPilot11a ;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tods results on;</div><div class=\"ql-code-block\">\t/*ods trace off;*/</div><div class=\"ql-code-block\">\tdata teestT._XPilot11a0;\tset _XPilot11a0;run;</div><div class=\"ql-code-block\">\tdata teestT._XPilot11a;\tset _XPilot11a;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%let VarsInModel = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2  &amp;stdNumVars_CatN10 &amp;stdNumVars10  &amp;theIntTerm11;</div><div class=\"ql-code-block\">\t%put VarsInModel = &amp;VarsInModel;</div><div class=\"ql-code-block\">\t/*store vars into a table*/</div><div class=\"ql-code-block\">\t%StringToTable(theStr=&amp;VarsInModel, target=_XPilot11b1, varname=variable, dlmt=, debug=);</div><div class=\"ql-code-block\">\tdata _XPilot11b2;</div><div class=\"ql-code-block\">\t\tset _XPilot11b1;</div><div class=\"ql-code-block\">\t\tformat renamed $30.;</div><div class=\"ql-code-block\">\t\tif index(variable, '*') = 0 then renamed=scan(variable, 1, '_') || '_' || scan(variable, 2, '_');</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t/*map the original names*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=_XPilot11b2,</div><div class=\"ql-code-block\">\t\tt2=VarsMap,</div><div class=\"ql-code-block\">\t\ttarget=_XPilot11b,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.original),</div><div class=\"ql-code-block\">\t\tjtype=left,</div><div class=\"ql-code-block\">\t\tjvars=renamed,</div><div class=\"ql-code-block\">\t\torderby=renamed</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\">\tdata teestt._XPilot11b;</div><div class=\"ql-code-block\">\t\tset _XPilot11b;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*optional, check all intereactions. Not recommended (takes a lot of time). Only run it when checkAllInteraction=1*/</div><div class=\"ql-code-block\">\t%macro checkAllInt;</div><div class=\"ql-code-block\">\t\t%let vars1= &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2  &amp;stdNumVars_CatN10 &amp;stdNumVars10;</div><div class=\"ql-code-block\">\t\t%AddDlmt(theStr=&amp;vars1, DLMT=|, preFix=);</div><div class=\"ql-code-block\">\t\t%let vars2=&amp;DLMTStr0824;</div><div class=\"ql-code-block\">\t\t%let DLMTStr0824=;</div><div class=\"ql-code-block\">\t\tproc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\t\t\tclass </div><div class=\"ql-code-block\">\t\t\t\t/*when measured by categories of numeric vars, the categories are added in the class statement */</div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars_CatN10</div><div class=\"ql-code-block\">\t\t\t\t&amp;stdCatMainVar_CatN  &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t\t model Y = &amp;vars2 @2 /lackfit; </div><div class=\"ql-code-block\">\t\t\tods output ModelANOVA =_XPilot12b0 LackFitChiSq = _XPilot12b ;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%mend checkAllInt;</div><div class=\"ql-code-block\">\t%if &amp;checkAllInteraction = 1 %then %do;</div><div class=\"ql-code-block\">\t\t\t%checkAllInt;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend testLackFit;</div><div class=\"ql-code-block\">%testLackFit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend theTeest ;</div><div class=\"ql-code-block\">%theTeest(theTeestPath=Combined, theMainV=CombTerm_FS, srcData0=&amp;srcData0);</div><div class=\"ql-code-block\">%theTeest(theTeestPath=UPCIndex, theMainV=&amp;UPCIndexVar._Cat, srcData0=&amp;srcData0);</div><div class=\"ql-code-block\">%theTeest(theTeestPath=&amp;CompVar, theMainV=&amp;CompVar, srcData0=&amp;srcData0);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%beep;</div></div>","children":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35","name":"substeps","custparents":[{"idx":"MYa769cf12-25be-4b2f-b5d4-5079e341f4db"}],"children":[{"idx":"MYd726b4f9-2dab-47e4-a786-dd5a0bd01517","name":"Settings","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"children":[{"idx":"MY6bc83555-e8ee-4df3-9d1b-ec330d161892","name":"Set local vars","custparents":[{"idx":"MYd726b4f9-2dab-47e4-a786-dd5a0bd01517"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local theTeestPath theMainV teestTarget teestTargetPath vars1 vars2 checkAllInteraction srcData0 ;</div></div><p><br></p>","children":[]},{"idx":"MY004433dd-ebd9-4b1a-8228-a0227bcf3c1f","name":"Delete tmp files","custparents":[{"idx":"MYd726b4f9-2dab-47e4-a786-dd5a0bd01517"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*clean up all _xPilot files in the work dir*/</div><div class=\"ql-code-block\">proc datasets nolist;</div><div class=\"ql-code-block\">\tdelete _xPilot:;</div><div class=\"ql-code-block\">run;</div></div>"},{"idx":"MY03081ee1-42d6-4b5c-b832-9f57f2e3241d","name":"Set parameters","custparents":[{"idx":"MYd726b4f9-2dab-47e4-a786-dd5a0bd01517"}],"NodeDescription":"<p><br></p><p>%let teestTargetPath = &amp;localTargetPath.\\&amp;resultfolder.\\&amp;theteestPath;</p><p>options dlcreatedir;</p><p>libname teestT \"&amp;teestTargetPath\";</p><p><br></p><p>%let groupVars = key_hsn;</p><p>%let outcomeVar=Adherence_Adjust;</p><p>%let CatMainVar=&amp;theMainV;</p><p>%let NumMainvar=;</p><p>%let NumCoVars= age  NDINS_PRE365 HDays_AcuteCare_Pre365 </p><p>\t\t\t\t\t\tNVISITS_GP_PRE365 NVISITS_SP_PRE365 NVISITS_ER_PRE365</p><p>\t\t\t\t\t\tCHARLSON_INDEX ThirdPartyPayPCT100_Pre365 total_Cost_Pre365_Int</p><p>\t\t\t\t\t;</p><p>%let CatCoVars = </p><p>\t\t\t\t\t\tsex_desc </p><p>\t\t\t\t\t\tresitype </p><p>\t\t\t\t\t\tQAIPPE </p><p>\t\t\t\t\t\tBENZO_PRE365</p><p>\t\t\t\t\t\tPSYCHO_PRE365</p><p>\t\t\t\t\t\tANTIDEP_PRE365</p><p>\t\t\t\t\t\tANTICHO_PRE365</p><p>\t\t\t\t\t\tCC_PRE365_DIABETES</p><p>\t\t\t\t\t\tCC_PRE365_HTN</p><p>\t\t\t\t\t\tCC_PRE365_NS_PS</p><p>\t\t\t\t\t\tCC_PRE365_ASTHMA</p><p>\t\t\t\t\t\tCC_PRE365_COPD</p><p>\t\t\t\t\t\tCC_PRE365_HF</p><p>\t\t\t\t\t\tCC_PRE365_AP_PS</p><p>\t\t\t\t\t\tCC_PRE365_MOODANX</p><p>\t\t\t\t\t\tCC_PRE365_OA</p><p>\t\t\t\t\t\tCC_PRE365_SUBABUSE_OLD</p><p>\t\t\t\t\t\tCC_PRE365_AF_PS</p><p>\t\t\t\t\t\tCC_PRE365_AMI</p><p>\t\t\t\t\t\tCC_PRE365_CD_PS</p><p>\t\t\t\t\t\tCC_PRE365_CV_PS</p><p>\t\t\t\t\t\tCC_PRE365_HP_PS</p><p>\t\t\t\t\t\tCC_PRE365_IHD</p><p>\t\t\t\t\t\tCC_PRE365_STROKE_1POP</p><p>\t\t\t\t\t\tCC_PRE365_WF_PS</p><p>\t\t\t\t\t\tCC_PRE365_OSTEO_1POP</p><p>\t\t\t\t\t\tCC_PRE365_OB_PS</p><p>\t\t\t\t\t\tCC_PRE365_CA_PS</p><p>\t\t\t\t\t\tCC_PRE365_PV_PS</p><p>\t\t\t\t\t\tCC_PRE365_DA_PS</p><p>\t\t\t\t\t\tCC_PRE365_NONRA</p><p>\t\t\t\t\t\tCC_PRE365_LB_PS</p><p>\t\t\t\t\t\tCC_PRE365_AK_PS</p><p>\t\t\t\t\t\tCC_PRE365_RF_PS</p><p>\t\t\t\t\t\tCC_PRE365_VTE_PS</p><p>\t\t\t\t\t\tCC_PRE365_CO_PS</p><p>\t\t\t\t\t\tCC_PRE365_IB_PS</p><p>\t\t\t\t\t\tCC_PRE365_RA</p><p>\t\t\t\t\t\tCC_PRE365_CK_PS</p><p>\t\t\t\t\t\tCC_PRE365_LV_PS</p><p>\t\t\t\t\t\tCC_PRE365_EPAD</p><p>\t\t\t\t\t\tCC_PRE365_UB_PS</p><p>\t\t\t\t\t\tCC_PRE365_AD</p><p>\t\t\t\t\t\tCC_PRE365_SUICIDE_OLD</p><p>\t\t\t\t\t\tCC_PRE365_SCHIZO_EVER</p><p>\t\t\t\t\t\tCC_PRE365_PD</p><p>\t\t\t\t\t\tCC_PRE365_MS</p><p>;</p>"},{"idx":"MYfcbfff05-9e40-451d-93c7-9c84eeff22dc","name":"Get source data","custparents":[{"idx":"MYd726b4f9-2dab-47e4-a786-dd5a0bd01517"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">data teestT._XPilot1;</div><div class=\"ql-code-block\" data-language=\"plain\">\tretain &amp;groupVars &amp;outcomeVar &amp;CatMainVar &amp;NumMainVar  &amp;CatCoVars &amp;NumCoVars;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset &amp;srcData0;</div><div class=\"ql-code-block\" data-language=\"plain\">\tkeep &amp;outcomeVar &amp;CatMainVar &amp;NumMainVar &amp;NumCoVars &amp;groupVars &amp;CatCoVars;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"}]},{"idx":"MY139c46ac-eb57-4531-ae8d-bbc88c14680d","name":"Check vars","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"NodeDescription":"<p>[to do]</p><ol><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>missing values</li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>distribution</li></ol>"},{"idx":"MY7545a771-ae35-41a2-8411-955efc913863","name":"Standardize vars","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"children":[{"idx":"MY392a4e74-44ae-4539-aef1-93683e2b3e80","name":"Make standard var names","custparents":[{"idx":"MY7545a771-ae35-41a2-8411-955efc913863"}],"children":[{"idx":"MY546820d4-3812-40e2-9878-96c4e4d15712","name":"Standardize var names (Xn_...)","custparents":[{"idx":"MY392a4e74-44ae-4539-aef1-93683e2b3e80"}],"children":[{"idx":"MY2cd0a210-0e26-479f-802b-816660060d60","name":"Run makeStdVarNames()","custparents":[{"idx":"MY546820d4-3812-40e2-9878-96c4e4d15712"}],"NodeDescription":"<p>Including stdCatMainVar, stdNumMainVar, stdCatCoVars, stdNumCoVars</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%macro makeStdVarNames(data =, outcomeVar=, CatMainVar=, NumMainVar=, NumCoVars=, CatCoVars=, target=,  </div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvarsMapfile=, dlmt=, leadingZ=, debug=);</div><div class=\"ql-code-block\" data-language=\"plain\">\t%local data CatMainVar NumMainVar NumCoVars CatCoVars target i theNumCoVar theCatCoVars dlmt debug j k zk leadingZ varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;varsMapfile) =0 %then %let varsMapfile = varsMap;</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*leading zeros*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;leadingZ) =0 %then %let leadingZ = 1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*At first, let the target file be the source file*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset &amp;data;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;outcomeVar=Y;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;outcomeVar = \"&amp;outcomeVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t/*Create the var map file, enter the renamed, and original outcome var*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trenamed='Y';</div><div class=\"ql-code-block\" data-language=\"plain\">\t\toriginal = \"&amp;outcomeVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t%let k=1; /*for the main variable, the k value is always 1, so that it always takes the position of X1_...*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for the main variable of categorical type */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;CatMainVar) ne 0 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*add leading zeros (X1 =&gt; X01, easy for ordering*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*create a map record for the renamed (like X1_C), and the original (like CombTerm_FS)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata makeStdVarNames_tmp1a;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trenamed= \"X&amp;zk._C\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\toriginal = \"&amp;CatMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*append the map record into the var map file*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp1a;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*In the target file, rename the original var (like CombTerm_FS =&gt; X1_C)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tsave the original name into the var's label*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;CatMainVar = X&amp;zk._C;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;CatMainVar= \"&amp;CatMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for the main variable of numerical type*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;NumMainVar) ne 0 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*create a map record for the renamed (like X1_N), and the original (like Age, if age is the main variable for analyses)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata makeStdVarNames_tmp1b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trenamed= \"X&amp;zk._N\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\toriginal = \"&amp;NumMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*append the map record into the var map file*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp1b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*In the target file, rename the original var (like Age =&gt; X1_N)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tsave the original name into the var's label*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;NumMainVar = X&amp;zk._N;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;NumMainVar= \"&amp;NumMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\">\t</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*define the dlmt*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%let i=1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%do %until ( %eval(%length(%scan(&amp;CatCoVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theCatCoVar = %scan(&amp;CatCoVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt;theCatCoVar = &amp;theCatCoVar;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let k = %eval(&amp;k+ 1);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata makeStdVarNames_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trenamed= \"X&amp;zk._C\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\toriginal = \"&amp;theCatCoVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*for a given CatCoVar, rename it by adding the prefix: Xn_C_...*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;theCatCoVar = X&amp;zk._C;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;theCatCoVar= \"&amp;theCatCoVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\">\t</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for numeric covariates */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%let i=1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%do %until ( %eval(%length(%scan(&amp;NumCoVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theNumCoVar = %scan(&amp;NumCoVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt;theNumCoVar = &amp;theNumCoVar;\t</div><div class=\"ql-code-block\" data-language=\"plain\">\t</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*for a given NumCoVar, rename it by adding the prefix: Xn_N_...*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let k= %eval(&amp;k+1);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata makeStdVarNames_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trenamed= \"X&amp;zk._N\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\toriginal = \"&amp;theNumCoVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;theNumCoVar=X&amp;zk._N;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;theNumCoVar= \"&amp;theNumCoVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tdelete makeStdVarNames_tmp:;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%mend makeStdVarNames;</div></div><p><br></p>","children":[{"idx":"MY2db44ad9-4b86-4535-84a9-7815d21e8532","name":"Save the result data sets and varsmap","custparents":[{"idx":"MY2cd0a210-0e26-479f-802b-816660060d60"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">data teestT._xpilot2;</div><div class=\"ql-code-block\">\tset _xpilot2;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data teestT.VarsMap;</div><div class=\"ql-code-block\">\tset VarsMap;</div><div class=\"ql-code-block\">run;</div></div>"}],"_substeps":{"idx":"MYda018acd-9360-42dc-b702-eddeb17aba9d","name":"substeps","custparents":[{"idx":"MY2cd0a210-0e26-479f-802b-816660060d60"}],"NodeDescription":"<p><br></p>","children":[{"idx":"MYfaee19b7-e8b3-4080-97de-1f1281a7d127","name":"Define local vars","custparents":[{"idx":"MYda018acd-9360-42dc-b702-eddeb17aba9d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local data CatMainVar NumMainVar NumCoVars CatCoVars target i theNumCoVar theCatCoVars dlmt debug j k zk leadingZ varsMapfile;</div><div class=\"ql-code-block\"><br></div></div>","children":[{"idx":"MY56eb6c49-5b90-45dd-a45a-fef0ada87988","name":"set default values","custparents":[{"idx":"MYfaee19b7-e8b3-4080-97de-1f1281a7d127"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%if %length(&amp;varsMapfile) =0 %then %let varsMapfile = varsMap;</div><div class=\"ql-code-block\" data-language=\"plain\">/*leading zeros*/</div><div class=\"ql-code-block\" data-language=\"plain\">%if %length(&amp;leadingZ) =0 %then %let leadingZ = 1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*define the dlmt*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div></div><p><br></p>","children":[{"idx":"MY3b3266fe-16b1-4710-85cc-4f823be602e7","name":"Init target file","custparents":[{"idx":"MY56eb6c49-5b90-45dd-a45a-fef0ada87988"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*At first, let the target file be the source file*/</div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\t\t\trename &amp;outcomeVar=Y;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;outcomeVar = \"&amp;outcomeVar\";</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MYde765e43-9060-4c56-bc38-e57b39eca19d","name":"Init Vars Map File","custparents":[{"idx":"MY3b3266fe-16b1-4710-85cc-4f823be602e7"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*Create the var map file, enter the renamed, and original outcome var*/</div><div class=\"ql-code-block\">\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\">\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\">\t\trenamed='Y';</div><div class=\"ql-code-block\">\t\toriginal = \"&amp;outcomeVar\";</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MYfd97fbd1-4011-4fe8-abfd-3aa7980f2fde","name":"Std name for the main categorical var","custparents":[{"idx":"MYde765e43-9060-4c56-bc38-e57b39eca19d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t%let k=1; /*for the main variable, the k value is always 1, so that it always takes the position of X1_...*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for the main variable of categorical type */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;CatMainVar) ne 0 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*add leading zeros (X1 =&gt; X01, easy for ordering*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*create a map record for the renamed (like X1_C), and the original (like CombTerm_FS)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata makeStdVarNames_tmp1a;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trenamed= \"X&amp;zk._C\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\toriginal = \"&amp;CatMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*append the map record into the var map file*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp1a;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*In the target file, rename the original var (like CombTerm_FS =&gt; X1_C)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tsave the original name into the var's label*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;CatMainVar = X&amp;zk._C;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;CatMainVar= \"&amp;CatMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div></div><p><br></p>"},{"idx":"MYee6f0259-74a7-4607-b42a-cab0dfec61b5","name":"Std name for the main continuous var","custparents":[{"idx":"MYde765e43-9060-4c56-bc38-e57b39eca19d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for the main variable of numerical type*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if %length(&amp;NumMainVar) ne 0 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*create a map record for the renamed (like X1_N), and the original (like Age, if age is the main variable for analyses)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata makeStdVarNames_tmp1b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trenamed= \"X&amp;zk._N\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\toriginal = \"&amp;NumMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*append the map record into the var map file*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp1b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*In the target file, rename the original var (like Age =&gt; X1_N)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tsave the original name into the var's label*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;NumMainVar = X&amp;zk._N;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;NumMainVar= \"&amp;NumMainVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div></div><p>\t%end;</p>"},{"idx":"MY4158e24b-fcd2-4c70-b037-9cba4f434b73","name":"Std names for categorical covariates","custparents":[{"idx":"MYde765e43-9060-4c56-bc38-e57b39eca19d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%let i=1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%do %until ( %eval(%length(%scan(&amp;CatCoVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theCatCoVar = %scan(&amp;CatCoVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt;theCatCoVar = &amp;theCatCoVar;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let k = %eval(&amp;k+ 1);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata makeStdVarNames_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trenamed= \"X&amp;zk._C\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\toriginal = \"&amp;theCatCoVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*for a given CatCoVar, rename it by adding the prefix: Xn_C_...*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trename &amp;theCatCoVar = X&amp;zk._C;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tlabel &amp;theCatCoVar= \"&amp;theCatCoVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div></div><p><br></p>","children":[{"idx":"MY0fe153c5-1b23-4c66-b059-6fbc4ca31f76","name":"delete tmp files","custparents":[{"idx":"MY4158e24b-fcd2-4c70-b037-9cba4f434b73"},{"idx":"MYee6f0259-74a7-4607-b42a-cab0dfec61b5"},{"idx":"MY7b89b119-dfa1-4c5c-8f68-2d4499a36f69"},{"idx":"MYfd97fbd1-4011-4fe8-abfd-3aa7980f2fde"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeStdVarNames_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div></div>"}]},{"idx":"MY7b89b119-dfa1-4c5c-8f68-2d4499a36f69","name":"Std names for continuous covariates","custparents":[{"idx":"MYde765e43-9060-4c56-bc38-e57b39eca19d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*making standard vars for numeric covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;NumCoVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theNumCoVar = %scan(&amp;NumCoVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theNumCoVar = &amp;theNumCoVar;\t</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t\t/*for a given NumCoVar, rename it by adding the prefix: Xn_N_...*/</div><div class=\"ql-code-block\">\t\t%let k= %eval(&amp;k+1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata makeStdVarNames_tmp2;</div><div class=\"ql-code-block\">\t\t\tformat renamed $10. original $100.;</div><div class=\"ql-code-block\">\t\t\t%let zk=%sysfunc(putN(&amp;k, z%eval(&amp;leadingZ+1)));</div><div class=\"ql-code-block\">\t\t\trenamed= \"X&amp;zk._N\";</div><div class=\"ql-code-block\">\t\t\toriginal = \"&amp;theNumCoVar\";</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\tdata &amp;varsMapfile;</div><div class=\"ql-code-block\">\t\t\tset &amp;varsMapfile makeStdVarNames_tmp2;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset &amp;target;</div><div class=\"ql-code-block\">\t\t\trename &amp;theNumCoVar=X&amp;zk._N;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theNumCoVar= \"&amp;theNumCoVar\";</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div></div>"}]}]}]}]}]}}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%makeStdVarNames(</div><div class=\"ql-code-block\">\tdata =teestT._XPilot1, </div><div class=\"ql-code-block\">\toutcomeVar = &amp;outcomeVar, CatMainVar=&amp;CatMainVar, </div><div class=\"ql-code-block\">\tNumCoVars=&amp;NumCoVars, CatCoVars=&amp;CatCoVars, </div><div class=\"ql-code-block\">\tleadingZ=1,</div><div class=\"ql-code-block\">\ttarget=_XPilot2, varsMapfile=varsmap, dlmt=, </div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div></div>"},{"idx":"MYf0137613-7df1-4fb1-b062-063ec85b69a8","name":"Make strings for std var names","custparents":[{"idx":"MY392a4e74-44ae-4539-aef1-93683e2b3e80"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*make a string of standardized CatMainVar (if there is no such var, the stdCatMainVar will be null)*/</div><div class=\"ql-code-block\">%let stdCatMainVar=;</div><div class=\"ql-code-block\">data _null_;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif renamed = 'X01_C';</div><div class=\"ql-code-block\">\tcall symput('stdCatMainVar', renamed);</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%put &gt;&gt;&gt; stdCatMainVar = &amp;stdCatMainVar;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string of standardized NumMainVar (if there is no such var, the stdNumMainVar will be null)*/</div><div class=\"ql-code-block\">%let stdNumMainVar=;</div><div class=\"ql-code-block\">data _null_;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif renamed = 'X01_N';</div><div class=\"ql-code-block\">\tcall symput('stdNumMainVar', renamed);</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%put &gt;&gt;&gt; stdNumMainVar = &amp;stdNumMainVar;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string of standardized CatCoVars*/</div><div class=\"ql-code-block\">data _XPilot3a;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif index(renamed, '_C') &gt;0 and not (renamed in: ('X01_')) ;</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot3a, \ttheVar=renamed, theStrVarName=stdCatCoVars, DLMT=);</div><div class=\"ql-code-block\">data teestT._xpilot3a;</div><div class=\"ql-code-block\">\tset _xpilot3a;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*make a string of standardized NumCoVars*/</div><div class=\"ql-code-block\">data _XPilot3b;</div><div class=\"ql-code-block\">\tset varsmap;</div><div class=\"ql-code-block\">\tif index(renamed, '_N') &gt;0 and not (renamed in: ('X01_')) ;</div><div class=\"ql-code-block\">run; </div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot3b, \ttheVar=renamed, theStrVarName=stdNumCoVars, DLMT=);</div><div class=\"ql-code-block\">data teestT._xpilot3b;</div><div class=\"ql-code-block\">\tset _xpilot3b;</div><div class=\"ql-code-block\">run;</div></div>"}]},{"idx":"MYc7f693f6-89fe-4ac0-bff8-3499cb8e4238","name":"Make standardized categorical levels","custparents":[{"idx":"MY7545a771-ae35-41a2-8411-955efc913863"}],"children":[{"idx":"MY906ae56d-69f7-4903-a777-a0e6cf51c0f2","name":"Make strings to tag std vars for cats and level numbers","custparents":[{"idx":"MYc7f693f6-89fe-4ac0-bff8-3499cb8e4238"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*add surfix to the standardized categorical var names. </div><div class=\"ql-code-block\" data-language=\"plain\">\te.g., for a string of  X3_C X4_C, change it to \tX3_C_CatN X4_C_CatN</div><div class=\"ql-code-block\" data-language=\"plain\">*/</div><div class=\"ql-code-block\" data-language=\"plain\">%VarsAddPreSurfix(srcVars=&amp;stdCatMainVar, targetVarName=stdCatMainVar_CatN, prefix=, surfix=_CatN);</div><div class=\"ql-code-block\" data-language=\"plain\">%VarsAddPreSurfix(srcVars=&amp;stdCatMainVar, targetVarName=stdCatMainVar_CatC, prefix=, surfix=_CatC);</div><div class=\"ql-code-block\" data-language=\"plain\">%VarsAddPreSurfix(srcVars=&amp;stdCatCoVars, targetVarName=stdCatCoVars_CatN, prefix=, surfix=_CatN);</div><div class=\"ql-code-block\" data-language=\"plain\">%VarsAddPreSurfix(srcVars=&amp;stdCatCoVars, targetVarName=stdCatCoVars_CatC, prefix=, surfix=_CatC);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"}],"_substeps":{"idx":"MY0f92b14c-fce7-40fe-b58a-43b2d4453cb4","name":"substeps","custparents":[{"idx":"MYc7f693f6-89fe-4ac0-bff8-3499cb8e4238"}],"children":[{"idx":"MY66a266a8-a5b6-4121-8266-e52787f8ed61","name":"Levels for categorical vars","custparents":[{"idx":"MY0f92b14c-fce7-40fe-b58a-43b2d4453cb4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*loop for CatCoVars and assign numeric number for each level*/</div><div class=\"ql-code-block\">%CatVarsMakeRanks(</div><div class=\"ql-code-block\">\tdata =_XPilot4a, </div><div class=\"ql-code-block\">\tCatVars=&amp;stdCatCoVars, </div><div class=\"ql-code-block\">\ttarget=_XPilot4b, </div><div class=\"ql-code-block\">\tdlmt=, </div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot4b;</div><div class=\"ql-code-block\">\tset _xpilot4b;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*For the numMainvar and assign numeric number for each level*/</div><div class=\"ql-code-block\">%NumVarsMakeRanks(</div><div class=\"ql-code-block\">\tdata=_XPilot4b,</div><div class=\"ql-code-block\">\tNumVars=&amp;stdNumMainVar,</div><div class=\"ql-code-block\">\ttarget=_XPilot4c</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._xpilot4c;</div><div class=\"ql-code-block\">\tset _xpilot4c;</div><div class=\"ql-code-block\">run;</div></div>","children":[{"idx":"MYd8bccd57-4533-45b9-895f-fd095896747c","name":"Categorical levels for the main categorical var","custparents":[{"idx":"MY66a266a8-a5b6-4121-8266-e52787f8ed61"}],"children":[{"idx":"MY576cc459-daba-4522-b955-ccc6807b2b7e","name":"Run CatVarsMakeRanks()","custparents":[{"idx":"MYd8bccd57-4533-45b9-895f-fd095896747c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro CatVarsMakeRanks(data =, catvars=, target=, dlmt=, debug=);</div><div class=\"ql-code-block\">\t%local data catvars target i theCatVar dlmt debug;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*if catvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;catvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;catvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theCatVar = %scan(&amp;catvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theCatVar = &amp;theCatVar;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*for a categorical var, assign a numeric number to each level*/</div><div class=\"ql-code-block\">\t\t%makeVarCatN(</div><div class=\"ql-code-block\">\t\t\tdata=&amp;target, </div><div class=\"ql-code-block\">\t\t\ttarget=&amp;target, </div><div class=\"ql-code-block\">\t\t\ttheCatVar=&amp;theCatVar, </div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\">/*\t\t%freq(data=&amp;target, table= &amp;theCatVar._CatC &amp;theCatVar._CatN );*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%exit:</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend CatVarsMakeRanks;</div></div>","children":[],"_substeps":{"idx":"MYf47dbb33-b2de-46ee-8ef0-253a32cded95","name":"substeps","custparents":[{"idx":"MY576cc459-daba-4522-b955-ccc6807b2b7e"}],"children":[{"idx":"MY03a9cfeb-b2dc-49a5-bf39-2cb871912279","name":"Set local vars","custparents":[{"idx":"MYf47dbb33-b2de-46ee-8ef0-253a32cded95"}],"children":[{"idx":"MY192c4154-257f-431a-8a51-0da3329f6592","name":"Init the target file","custparents":[{"idx":"MY03a9cfeb-b2dc-49a5-bf39-2cb871912279"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MYe01c81db-4c98-441a-a5c2-08011a50385e","name":"Set default values","custparents":[{"idx":"MY192c4154-257f-431a-8a51-0da3329f6592"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*if catvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;catvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div></div>","children":[{"idx":"MY18ac1525-96a7-4ece-9f80-3df2c2aea682","name":"Loop for each var and make ranks (levels)","custparents":[{"idx":"MYe01c81db-4c98-441a-a5c2-08011a50385e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t%let i=1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%do %until ( %eval(%length(%scan(&amp;catvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theCatVar = %scan(&amp;catvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt;theCatVar = &amp;theCatVar;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*for a categorical var, assign a numeric number to each level*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%makeVarCatN(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tdata=&amp;target, </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\ttarget=&amp;target, </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\ttheCatVar=&amp;theCatVar, </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\" data-language=\"plain\">/*\t\t%freq(data=&amp;target, table= &amp;theCatVar._CatC &amp;theCatVar._CatN );*/</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%exit:</div></div>","children":[],"_substeps":{"idx":"MY5437ac52-ebbc-4052-a3df-2413ba3fba49","name":"substeps","custparents":[{"idx":"MY18ac1525-96a7-4ece-9f80-3df2c2aea682"}],"children":[{"idx":"MYe10ad931-2ec2-48b8-93ca-147bd604e7ce","name":"Run makeVarCatN()","custparents":[{"idx":"MY5437ac52-ebbc-4052-a3df-2413ba3fba49"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*for a categorical var, assign a numeric number to each level*/</div><div class=\"ql-code-block\">%macro makeVarCatN(data=, target=, theCatVar=, debug=);</div><div class=\"ql-code-block\">\t%local data target theCatVar debug theLabel theLabelC theLabelN;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t/*get the levels*/</div><div class=\"ql-code-block\">\tproc freq data=&amp;data nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theCatVar /nocol nocum norow nopct out=makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\trun; </div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t/*assign a number for each level*/\t</div><div class=\"ql-code-block\">\tdata makeVarCatN_tmp2;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\t\t\t&amp;theCatVar._CatN =_n_;</div><div class=\"ql-code-block\">\t\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*attach the numeric value of the levels back to the source data, and rename the original var as var._CatC (to standardize the var names)*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\">\t\tt2=makeVarCatN_tmp2,\t\t</div><div class=\"ql-code-block\">/*\t\ttarget=%str(&amp;target(rename = ( &amp;theCatVar=&amp;theCatVar._CatC))),*/</div><div class=\"ql-code-block\">\t\ttarget=makeVarCatN_tmp3,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theCatVar._CatN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars = &amp;theCatVar</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theCatVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelC = %sysfunc(strip(&amp;theLabel))_CatC;</div><div class=\"ql-code-block\">\t\t%let theLabelN = %sysfunc(strip(&amp;theLabel))_CatN;</div><div class=\"ql-code-block\">\t\t/*%put &gt;&gt;&gt; &amp;theLabelC &amp;theLabelN;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;</div><div class=\"ql-code-block\">\t\t\trename &amp;theCatVar = &amp;theCatVar._CatC;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar = \"&amp;theLabelC\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar._CatN = \"&amp;theLabelN\";</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeVarCatN_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend makeVarCatN;</div></div>","children":[],"_substeps":{"idx":"MYd9dba76d-7c55-49e4-94be-bb1d2d21148d","name":"substeps","custparents":[{"idx":"MYe10ad931-2ec2-48b8-93ca-147bd604e7ce"}],"children":[{"idx":"MYf96cbe89-5b33-48d1-8cc7-92c64328abfa","name":"Set local vars","custparents":[{"idx":"MYd9dba76d-7c55-49e4-94be-bb1d2d21148d"}],"children":[{"idx":"MY55bab6d7-c1d6-4532-8ac7-54014da81d6b","name":"Get values of the categorical levels","custparents":[{"idx":"MYf96cbe89-5b33-48d1-8cc7-92c64328abfa"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*get the levels*/</div><div class=\"ql-code-block\">\tproc freq data=&amp;data nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theCatVar /nocol nocum norow nopct out=makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\trun; </div></div>","children":[{"idx":"MY4b470b74-5d1c-4694-9764-a3c77772996a","name":"Assign a number for each level","custparents":[{"idx":"MY55bab6d7-c1d6-4532-8ac7-54014da81d6b"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*assign a number for each level*/\t</div><div class=\"ql-code-block\">\tdata makeVarCatN_tmp2;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\t\t\t&amp;theCatVar._CatN =_n_;</div><div class=\"ql-code-block\">\t\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MY0310a16a-73b4-42b3-b5f3-5a738985a841","name":"Add a new var for categories as level numbers","custparents":[{"idx":"MY4b470b74-5d1c-4694-9764-a3c77772996a"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*attach the numeric value of the levels back to the source data, and rename the original var as var._CatC (to standardize the var names)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt2=makeVarCatN_tmp2,\t\t</div><div class=\"ql-code-block\" data-language=\"plain\">/*\t\ttarget=%str(&amp;target(rename = ( &amp;theCatVar=&amp;theCatVar._CatC))),*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=makeVarCatN_tmp3,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvars=%str(t1.*, t2.&amp;theCatVar._CatN),</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjtype=inner,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjvars = &amp;theCatVar</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>","children":[{"idx":"MY0f467e14-d1b6-41ed-a19a-eccfb2a1b5ea","name":"Label vars of std names","custparents":[{"idx":"MY0310a16a-73b4-42b3-b5f3-5a738985a841"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theCatVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelC = %sysfunc(strip(&amp;theLabel))_CatC;</div><div class=\"ql-code-block\">\t\t%let theLabelN = %sysfunc(strip(&amp;theLabel))_CatN;</div><div class=\"ql-code-block\">\t\t/*%put &gt;&gt;&gt; &amp;theLabelC &amp;theLabelN;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;</div><div class=\"ql-code-block\">\t\t\trename &amp;theCatVar = &amp;theCatVar._CatC;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar = \"&amp;theLabelC\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar._CatN = \"&amp;theLabelN\";</div><div class=\"ql-code-block\">\t\trun;</div></div>","children":[{"idx":"MY179c679b-b758-420e-b835-649f2b6de900","name":"Delete tmp files","custparents":[{"idx":"MY0f467e14-d1b6-41ed-a19a-eccfb2a1b5ea"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tdelete makeVarCatN_tmp:;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div></div><p><br></p>"}]}]}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local data target theCatVar debug theLabel theLabelC theLabelN;</div></div>"}]}}]}}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local data catvars target i theCatVar dlmt debug;</div><div class=\"ql-code-block\"><br></div></div>"}]}}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*For the catMainvar and assign numeric number for each level*/</div><div class=\"ql-code-block\">%CatVarsMakeRanks(</div><div class=\"ql-code-block\">data =test2,</div><div class=\"ql-code-block\">CatVars=&amp;stdCatMainVar,</div><div class=\"ql-code-block\">target=test4a,</div><div class=\"ql-code-block\">dlmt=,</div><div class=\"ql-code-block\">debug=</div><div class=\"ql-code-block\">);</div></div>"},{"idx":"MY3b4553e2-7f40-4806-ad54-f577eb949d56","name":"Categorical levels for categorical covariates","custparents":[{"idx":"MY66a266a8-a5b6-4121-8266-e52787f8ed61"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*loop for CatCoVars and assign numeric number for each level*/</div><div class=\"ql-code-block\">%CatVarsMakeRanks(</div><div class=\"ql-code-block\">data =test4a,</div><div class=\"ql-code-block\">CatVars=&amp;stdCatCoVars,</div><div class=\"ql-code-block\">target=test4b,</div><div class=\"ql-code-block\">dlmt=,</div><div class=\"ql-code-block\">debug=</div><div class=\"ql-code-block\">);</div></div>","children":[{"idx":"7819fa9c-4cb4-44c3-a70e-33ffd87c0bf6","name":"Run CatVarsMakeRanks()","custparents":[{"idx":"MY3b4553e2-7f40-4806-ad54-f577eb949d56"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro CatVarsMakeRanks(data =, catvars=, target=, dlmt=, debug=);</div><div class=\"ql-code-block\">\t%local data catvars target i theCatVar dlmt debug;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*if catvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;catvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;catvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theCatVar = %scan(&amp;catvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theCatVar = &amp;theCatVar;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*for a categorical var, assign a numeric number to each level*/</div><div class=\"ql-code-block\">\t\t%makeVarCatN(</div><div class=\"ql-code-block\">\t\t\tdata=&amp;target, </div><div class=\"ql-code-block\">\t\t\ttarget=&amp;target, </div><div class=\"ql-code-block\">\t\t\ttheCatVar=&amp;theCatVar, </div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\">/*\t\t%freq(data=&amp;target, table= &amp;theCatVar._CatC &amp;theCatVar._CatN );*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%exit:</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend CatVarsMakeRanks;</div></div>","children":[],"_substeps":{"idx":"MYf47dbb33-b2de-46ee-8ef0-253a32cded95","name":"substeps","children":[{"idx":"MY03a9cfeb-b2dc-49a5-bf39-2cb871912279","name":"Set local vars","custparents":[{"idx":"MYf47dbb33-b2de-46ee-8ef0-253a32cded95"}],"children":[{"idx":"MY192c4154-257f-431a-8a51-0da3329f6592","name":"Init the target file","custparents":[{"idx":"MY03a9cfeb-b2dc-49a5-bf39-2cb871912279"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MYe01c81db-4c98-441a-a5c2-08011a50385e","name":"Set default values","custparents":[{"idx":"MY192c4154-257f-431a-8a51-0da3329f6592"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*if catvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;catvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div></div>","children":[{"idx":"MY18ac1525-96a7-4ece-9f80-3df2c2aea682","name":"Loop for each var and make ranks (levels)","custparents":[{"idx":"MYe01c81db-4c98-441a-a5c2-08011a50385e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;catvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theCatVar = %scan(&amp;catvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theCatVar = &amp;theCatVar;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*for a categorical var, assign a numeric number to each level*/</div><div class=\"ql-code-block\">\t\t%makeVarCatN(</div><div class=\"ql-code-block\">\t\t\tdata=&amp;target, </div><div class=\"ql-code-block\">\t\t\ttarget=&amp;target, </div><div class=\"ql-code-block\">\t\t\ttheCatVar=&amp;theCatVar, </div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\">/*\t\t%freq(data=&amp;target, table= &amp;theCatVar._CatC &amp;theCatVar._CatN );*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\" data-language=\"true\">\t%end;</div></div>","children":[],"_substeps":{"idx":"MY5437ac52-ebbc-4052-a3df-2413ba3fba49","name":"substeps","custparents":[{"idx":"MY18ac1525-96a7-4ece-9f80-3df2c2aea682"}],"children":[{"idx":"MYe10ad931-2ec2-48b8-93ca-147bd604e7ce","name":"Run makeVarCatN()","custparents":[{"idx":"MY5437ac52-ebbc-4052-a3df-2413ba3fba49"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*for a categorical var, assign a numeric number to each level*/</div><div class=\"ql-code-block\">%macro makeVarCatN(data=, target=, theCatVar=, debug=);</div><div class=\"ql-code-block\">\t%local data target theCatVar debug theLabel theLabelC theLabelN;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t/*get the levels*/</div><div class=\"ql-code-block\">\tproc freq data=&amp;data nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theCatVar /nocol nocum norow nopct out=makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\trun; </div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t/*assign a number for each level*/\t</div><div class=\"ql-code-block\">\tdata makeVarCatN_tmp2;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\t\t\t&amp;theCatVar._CatN =_n_;</div><div class=\"ql-code-block\">\t\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*attach the numeric value of the levels back to the source data, and rename the original var as var._CatC (to standardize the var names)*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\">\t\tt2=makeVarCatN_tmp2,\t\t</div><div class=\"ql-code-block\">/*\t\ttarget=%str(&amp;target(rename = ( &amp;theCatVar=&amp;theCatVar._CatC))),*/</div><div class=\"ql-code-block\">\t\ttarget=makeVarCatN_tmp3,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theCatVar._CatN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars = &amp;theCatVar</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theCatVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelC = %sysfunc(strip(&amp;theLabel))_CatC;</div><div class=\"ql-code-block\">\t\t%let theLabelN = %sysfunc(strip(&amp;theLabel))_CatN;</div><div class=\"ql-code-block\">\t\t/*%put &gt;&gt;&gt; &amp;theLabelC &amp;theLabelN;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;</div><div class=\"ql-code-block\">\t\t\trename &amp;theCatVar = &amp;theCatVar._CatC;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar = \"&amp;theLabelC\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar._CatN = \"&amp;theLabelN\";</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeVarCatN_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend makeVarCatN;</div></div>","children":[],"_substeps":{"idx":"MYd9dba76d-7c55-49e4-94be-bb1d2d21148d","name":"substeps","custparents":[{"idx":"MYe10ad931-2ec2-48b8-93ca-147bd604e7ce"}],"children":[{"idx":"MYf96cbe89-5b33-48d1-8cc7-92c64328abfa","name":"Set local vars","custparents":[{"idx":"MYd9dba76d-7c55-49e4-94be-bb1d2d21148d"}],"children":[{"idx":"MY55bab6d7-c1d6-4532-8ac7-54014da81d6b","name":"Get values of the categorical levels","custparents":[{"idx":"MYf96cbe89-5b33-48d1-8cc7-92c64328abfa"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*get the levels*/</div><div class=\"ql-code-block\">\tproc freq data=&amp;data nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theCatVar /nocol nocum norow nopct out=makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\trun; </div></div>","children":[{"idx":"MY4b470b74-5d1c-4694-9764-a3c77772996a","name":"Assign a number for each level","custparents":[{"idx":"MY55bab6d7-c1d6-4532-8ac7-54014da81d6b"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*assign a number for each level*/\t</div><div class=\"ql-code-block\">\tdata makeVarCatN_tmp2;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp1;</div><div class=\"ql-code-block\">\t\t\t&amp;theCatVar._CatN =_n_;</div><div class=\"ql-code-block\">\t\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MY0310a16a-73b4-42b3-b5f3-5a738985a841","name":"Add a new var for categories as level numbers","custparents":[{"idx":"MY4b470b74-5d1c-4694-9764-a3c77772996a"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*attach the numeric value of the levels back to the source data, and rename the original var as var._CatC (to standardize the var names)*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\">\t\tt2=makeVarCatN_tmp2,\t\t</div><div class=\"ql-code-block\">/*\t\ttarget=%str(&amp;target(rename = ( &amp;theCatVar=&amp;theCatVar._CatC))),*/</div><div class=\"ql-code-block\">\t\ttarget=makeVarCatN_tmp3,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theCatVar._CatN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars = &amp;theCatVar</div><div class=\"ql-code-block\">\t);</div></div>","children":[{"idx":"MY0f467e14-d1b6-41ed-a19a-eccfb2a1b5ea","name":"Label vars of std names","custparents":[{"idx":"MY0310a16a-73b4-42b3-b5f3-5a738985a841"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theCatVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelC = %sysfunc(strip(&amp;theLabel))_CatC;</div><div class=\"ql-code-block\">\t\t%let theLabelN = %sysfunc(strip(&amp;theLabel))_CatN;</div><div class=\"ql-code-block\">\t\t/*%put &gt;&gt;&gt; &amp;theLabelC &amp;theLabelN;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeVarCatN_tmp3;</div><div class=\"ql-code-block\">\t\t\trename &amp;theCatVar = &amp;theCatVar._CatC;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar = \"&amp;theLabelC\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theCatVar._CatN = \"&amp;theLabelN\";</div><div class=\"ql-code-block\">\t\trun;</div></div>","children":[{"idx":"MY179c679b-b758-420e-b835-649f2b6de900","name":"Delete tmp files","custparents":[{"idx":"MY0f467e14-d1b6-41ed-a19a-eccfb2a1b5ea"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeVarCatN_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div></div>"}]}]}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local data target theCatVar debug theLabel theLabelC theLabelN;</div></div>"}]}}]}}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local data catvars target i theCatVar dlmt debug;</div><div class=\"ql-code-block\"><br></div></div>"}]}}]}]},{"idx":"MY1b3589d2-084f-4aac-b2f3-47e67628c9cc","name":"Make categories and levels for continuous vars","custparents":[{"idx":"MY0f92b14c-fce7-40fe-b58a-43b2d4453cb4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*For the numMainvar and assign numeric number for each level*/</div><div class=\"ql-code-block\" data-language=\"plain\">%NumVarsMakeRanks(</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata=_XPilot4b,</div><div class=\"ql-code-block\" data-language=\"plain\">\tNumVars=&amp;stdNumMainVar,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttarget=_XPilot4c</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot4c;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot4c;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">/*loop for NumCoVars and make quartile and quintile ranks*/</div><div class=\"ql-code-block\" data-language=\"plain\">%NumVarsMakeRanks(</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata=_XPilot4c,</div><div class=\"ql-code-block\" data-language=\"plain\">\tNumVars=&amp;stdNumCoVars,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttarget=_XPilot4</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot4;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot4;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div></div><p><br></p>","children":[{"idx":"MY03eba40b-1965-43c9-b647-077df86f903c","name":"Make categories and levels for the main continuous var","custparents":[{"idx":"MY1b3589d2-084f-4aac-b2f3-47e67628c9cc"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*For the numMainvar and assign numeric number for each level*/</div><div class=\"ql-code-block\" data-language=\"plain\">%NumVarsMakeRanks(</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata=_XPilot4b,</div><div class=\"ql-code-block\" data-language=\"plain\">\tNumVars=&amp;stdNumMainVar,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttarget=_XPilot4c</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot4c;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot4c;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div></div><p><br></p>","children":[{"idx":"MY8cdccea8-42f1-461c-a408-c77b428da41b","name":"Run NumVarsMakeRanks()","custparents":[{"idx":"MY03eba40b-1965-43c9-b647-077df86f903c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro NumVarsMakeRanks(data =, numvars=, target=, dlmt=, debug=);</div><div class=\"ql-code-block\">\t%local data numvars target i theNumVar dlmt debug;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*if numvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;numvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;numvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theNumVar = %scan(&amp;numvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theNumVar = &amp;theNumVar;</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t/*for a given var, make categories accoridng to p25 p50 p75 cutoff, and p20 p40 p60 p80 cutoff*/</div><div class=\"ql-code-block\">\t\t%makeRanks(</div><div class=\"ql-code-block\">\t\t\tdata = &amp;target,</div><div class=\"ql-code-block\">\t\t\ttarget= &amp;target,</div><div class=\"ql-code-block\">\t\t\ttheRankVar=&amp;theNumVar,</div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\">\t\t);\t</div><div class=\"ql-code-block\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\">/*\t\t%freq(data=&amp;target, table= &amp;theNumVar._QuaC &amp;theNumVar._QuiC);*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\">%exit:</div><div class=\"ql-code-block\">%mend NumVarsMakeRanks;</div></div>","children":[],"_substeps":{"idx":"MYc461df6a-2b77-47fb-ad70-d921520f2b33","name":"substeps","custparents":[{"idx":"MY8cdccea8-42f1-461c-a408-c77b428da41b"}],"children":[{"idx":"MY64a2792a-6624-42bc-923d-a2bd8dc56381","name":"set local vars","custparents":[{"idx":"MYc461df6a-2b77-47fb-ad70-d921520f2b33"}],"children":[{"idx":"MYc430772c-7416-42c5-932e-c69ef68c51b4","name":"Init the target file","custparents":[{"idx":"MY64a2792a-6624-42bc-923d-a2bd8dc56381"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MY7215bca8-4286-4b74-b57c-d26476cae1b8","name":"Set default valeus","custparents":[{"idx":"MYc430772c-7416-42c5-932e-c69ef68c51b4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*if numvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;numvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div></div>","children":[{"idx":"MYb9400ee8-15a3-48be-8c2d-00345bb7699d","name":"Loop for each var and make categories","custparents":[{"idx":"MY7215bca8-4286-4b74-b57c-d26476cae1b8"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;numvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theNumVar = %scan(&amp;numvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theNumVar = &amp;theNumVar;</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t/*for a given var, make categories accoridng to p25 p50 p75 cutoff, and p20 p40 p60 p80 cutoff*/</div><div class=\"ql-code-block\">\t\t%makeRanks(</div><div class=\"ql-code-block\">\t\t\tdata = &amp;target,</div><div class=\"ql-code-block\">\t\t\ttarget= &amp;target,</div><div class=\"ql-code-block\">\t\t\ttheRankVar=&amp;theNumVar,</div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\">\t\t);\t</div><div class=\"ql-code-block\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\">/*\t\t%freq(data=&amp;target, table= &amp;theNumVar._QuaC &amp;theNumVar._QuiC);*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\">%exit:</div></div>","children":[{"idx":"MY311efd36-37f1-4d6b-bfa1-15031c633b95","name":"Run makeRanks()","custparents":[{"idx":"MYb9400ee8-15a3-48be-8c2d-00345bb7699d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*for a given variable in the source dataset, make quartile and quintile rank categories*/</div><div class=\"ql-code-block\">%macro makeRanks(data=, target=, theRankVar=, debug=, groupVars=);</div><div class=\"ql-code-block\">\t%local data target theRankVar debug groupVars p25 p50 p75 p20 p40 p60 p80</div><div class=\"ql-code-block\">\t\ttheLabel theLabelQuac theLabelQuan theLabelQuic theLabelQuin</div><div class=\"ql-code-block\">\t\t;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;groupVars) = 0 %then %let groupVars = Key_hsn;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*1. keep groupvars (to make distinct records, e.g., key_hsn, key_hsn by drugclass, etc) and theRankVar, i.e.</div><div class=\"ql-code-block\">\t\t\tthe var to make ranks (e.g., theRankVar = age)</div><div class=\"ql-code-block\">\t\t\t- change missing values to 0</div><div class=\"ql-code-block\">\t\t\t- change values to the rounded integers</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\">\tdata makeRanks_tmp1;</div><div class=\"ql-code-block\">\t\tset &amp;data ;</div><div class=\"ql-code-block\">\t\tkeep &amp;groupVars &amp;theRankVar ;</div><div class=\"ql-code-block\">\t\tif &amp;theRankVar = . then &amp;theRankVar = 0;</div><div class=\"ql-code-block\">\t\t&amp;theRankVar = round(&amp;theRankVar, \"1\");</div><div class=\"ql-code-block\">\trun; </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*2. create corresponding ranks var using:</div><div class=\"ql-code-block\">\t\ta. quartiles, b. quintiles</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*determine the Q values (e.g., p25, p75, etc)*/</div><div class=\"ql-code-block\">\t%GetMeanStats(</div><div class=\"ql-code-block\">\t\tdata=makeRanks_tmp1,</div><div class=\"ql-code-block\">\t\twhere=,</div><div class=\"ql-code-block\">\t\tgroupVars=,</div><div class=\"ql-code-block\">\t\ttheVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t\ttheStats=mean median p25 p75 p20 p40 p60 p80,</div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp2,</div><div class=\"ql-code-block\">\t\tdebug=</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*determine the quartile cut-off values p25 p50 p75</div><div class=\"ql-code-block\">\t\tNote: these values must be of integers</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\">\t\tcall symput ('p25', int(p25));</div><div class=\"ql-code-block\">\t\tcall symput ('p50', int(median));</div><div class=\"ql-code-block\">\t\tcall symput ('p75', int(p75));</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; &amp;p25 &amp;p50 &amp;p75;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*make quartiles</div><div class=\"ql-code-block\">\tNote, it does not matter if the p25 = p50, the macro makeCategories ignores repeated cutoff points. Nice!</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%MakeCategories(</div><div class=\"ql-code-block\">\t    Data=makeRanks_tmp1, </div><div class=\"ql-code-block\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t    theTargetVar=&amp;theRankVar._QUAC,</div><div class=\"ql-code-block\">\t    theCutOffs=&amp;p25 &amp;p50 &amp;p75, </div><div class=\"ql-code-block\">\t    dlmt=, </div><div class=\"ql-code-block\">\t    debug=, </div><div class=\"ql-code-block\">\t    closeSide=left,</div><div class=\"ql-code-block\">\t    target=makeRanks_tmp3a</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*get the quartile categories */</div><div class=\"ql-code-block\">\tproc freq data=makeRanks_tmp3a nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theRankVar._QUAC /out=makeRanks_tmp3b;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tdata makeRanks_tmp3c;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp3b;</div><div class=\"ql-code-block\">\t\t&amp;theRankVar._QUAN =_n_;</div><div class=\"ql-code-block\">\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*attach numeric values corresponding to the quartile categories */</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=makeRanks_tmp3a,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp3c, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp3,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;theRankVar._QUAC</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*make quintiles*/</div><div class=\"ql-code-block\">\t/*determine the vars  p20 p40 p60 p80*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\">\t\tcall symput ('p20', int(p20));</div><div class=\"ql-code-block\">\t\tcall symput ('p40', int(p40));</div><div class=\"ql-code-block\">\t\tcall symput ('p60', int(p60));</div><div class=\"ql-code-block\">\t\tcall symput ('p80', int(p80));</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; &amp;p20 &amp;p40 &amp;p60 &amp;p80;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%MakeCategories(</div><div class=\"ql-code-block\">\t    Data=makeRanks_tmp3, </div><div class=\"ql-code-block\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t    theTargetVar=&amp;theRankVar._QUIC,</div><div class=\"ql-code-block\">\t    theCutOffs= &amp;p20 &amp;p40 &amp;p60 &amp;p80, </div><div class=\"ql-code-block\">\t    dlmt=, </div><div class=\"ql-code-block\">\t    debug=, </div><div class=\"ql-code-block\">\t    closeSide=left,</div><div class=\"ql-code-block\">\t    target=makeRanks_tmp5a</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*get the quintile categories */</div><div class=\"ql-code-block\">\tproc freq data=makeRanks_tmp5a nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theRankVar._QUIC /out=makeRanks_tmp5b;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tdata makeRanks_tmp5c;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp5b;</div><div class=\"ql-code-block\">\t\t&amp;theRankVar._QUIN =_n_ ;</div><div class=\"ql-code-block\">\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*attach numeric values corresponding to the quintile categories */</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=makeRanks_tmp5a,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp5c, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp5,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;theRankVar._QUIC</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*Attach the rank categories and level numbers back to the source data*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp5, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp6,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAC, t2.&amp;theRankVar._QUAN, t2.&amp;theRankVar._QUIC, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;groupVars</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theRankVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelQuac = %sysfunc(strip(&amp;theLabel))_QUAC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuan = %sysfunc(strip(&amp;theLabel))_QUAN;</div><div class=\"ql-code-block\">\t\t%let theLabelQuic = %sysfunc(strip(&amp;theLabel))_QUIC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuin = %sysfunc(strip(&amp;theLabel))_QUIN;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; &amp;theLabelQuac &amp;theLabelQuan &amp;theLabelQuic &amp;theLabelQuin;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAC = \"&amp;theLabelQuac\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAN = \"&amp;theLabelQuan\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIC = \"&amp;theLabelQuic\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIN = \"&amp;theLabelQuin\";</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeRanks_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend makeRanks;</div></div>","children":[],"_substeps":{"idx":"MYfa8c7b4e-e294-4866-ac3d-adf1fb0e407c","name":"substeps","custparents":[{"idx":"MY311efd36-37f1-4d6b-bfa1-15031c633b95"}],"children":[{"idx":"MYc458ae15-fccb-46bb-aad8-24e97a256960","name":"Set local vars","custparents":[{"idx":"MYfa8c7b4e-e294-4866-ac3d-adf1fb0e407c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t%local data target theRankVar debug groupVars p25 p50 p75 p20 p40 p60 p80</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttheLabel theLabelQuac theLabelQuan theLabelQuic theLabelQuin</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t;</div></div><p><br></p>","children":[{"idx":"MY1b70fc14-7f0d-498e-aa4f-c77643d5626b","name":"Set default valeus","custparents":[{"idx":"MYc458ae15-fccb-46bb-aad8-24e97a256960"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%if %length(&amp;groupVars) = 0 %then %let groupVars = Key_hsn;</div></div>","children":[{"idx":"MY24a6aaa3-87fc-415a-ba56-4e7bc6a2d1e5","name":"Make a subset with the selected var","custparents":[{"idx":"MY1b70fc14-7f0d-498e-aa4f-c77643d5626b"}],"NodeDescription":"<p>/*a. Keep the group vars and the selected var (which is the one to make categories); b. let missing values =0*/</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*1. keep groupvars (to make distinct records, e.g., key_hsn, key_hsn by drugclass, etc) and theRankVar, i.e.</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tthe var to make ranks (e.g., theRankVar = age)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t- change missing values to 0</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t- change values to the rounded integers</div><div class=\"ql-code-block\" data-language=\"plain\">\t*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata makeRanks_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset &amp;data ;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tkeep &amp;groupVars &amp;theRankVar ;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tif &amp;theRankVar = . then &amp;theRankVar = 0;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t&amp;theRankVar = round(&amp;theRankVar, \"1\");</div><div class=\"ql-code-block\" data-language=\"plain\">\trun; </div></div><p>/*</p><p>[_W] Making a subset is to reduce the size of the data, so as to improve efficiency</p><p>*/</p>","children":[{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a","name":"Get the mean median percentile stats [GetMeanStats()]","custparents":[{"idx":"MY24a6aaa3-87fc-415a-ba56-4e7bc6a2d1e5"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*determine the Q values (e.g., p25, p75, etc)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%GetMeanStats(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata=makeRanks_tmp1,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\twhere=,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tgroupVars=,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttheVar=&amp;theRankVar,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttheStats=mean median p25 p75 p20 p40 p60 p80,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=makeRanks_tmp2,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdebug=</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>","children":[{"idx":"MY3206bbc4-a261-4011-a87c-bf01e8e867b7","name":"Get the quartile cutoffs","custparents":[{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*determine the quartile cut-off values p25 p50 p75</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tNote: these values must be of integers</div><div class=\"ql-code-block\" data-language=\"plain\">\t*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata _null_;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p25', int(p25));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p50', int(median));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p75', int(p75));</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%put &gt;&gt;&gt; &amp;p25 &amp;p50 &amp;p75;</div></div><p><br></p>","children":[{"idx":"MYa40351ed-73ff-4edd-98e4-757b7d3776f4","name":"Make quartile categories [MakeCategories()]","custparents":[{"idx":"MY3206bbc4-a261-4011-a87c-bf01e8e867b7"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*make quartiles</div><div class=\"ql-code-block\" data-language=\"plain\">\tNote, it does not matter if the p25 = p50, the macro makeCategories ignores repeated cutoff points. Nice!</div><div class=\"ql-code-block\" data-language=\"plain\">\t*/</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t%MakeCategories(</div><div class=\"ql-code-block\" data-language=\"plain\">\t    Data=makeRanks_tmp1, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\" data-language=\"plain\">\t    theTargetVar=&amp;theRankVar._QUAC,</div><div class=\"ql-code-block\" data-language=\"plain\">\t    theCutOffs=&amp;p25 &amp;p50 &amp;p75, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    dlmt=, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    debug=, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    closeSide=left,</div><div class=\"ql-code-block\" data-language=\"plain\">\t    target=makeRanks_tmp3a</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>","children":[{"idx":"MYb522d4d1-ab7b-4453-8cf6-30419a469fd1","name":"Assign numbers for quartile levels","custparents":[{"idx":"MYa40351ed-73ff-4edd-98e4-757b7d3776f4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*get the quartile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\tproc freq data=makeRanks_tmp3a nlevels noprint;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttable &amp;theRankVar._QUAC /out=makeRanks_tmp3b;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata makeRanks_tmp3c;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp3b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t&amp;theRankVar._QUAN =_n_;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdrop count percent;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div></div><p><br></p>","children":[{"idx":"MYa609f2e6-421e-4751-b0ec-4c2f5e159f59","name":"Append the num levels into the subset","custparents":[{"idx":"MYb522d4d1-ab7b-4453-8cf6-30419a469fd1"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*attach numeric values corresponding to the quartile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt1=makeRanks_tmp3a,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt2=makeRanks_tmp3c, </div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=makeRanks_tmp3,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAN),</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjtype=inner,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjvars =&amp;theRankVar._QUAC</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>"}]}]}]},{"idx":"10100ea0-7035-465b-912f-1de0edbba9ee","name":"Get the quintile cutoffs","custparents":[{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a"},{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*make quintiles*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*determine the vars  p20 p40 p60 p80*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata _null_;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p20', int(p20));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p40', int(p40));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p60', int(p60));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p80', int(p80));</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%put &gt;&gt;&gt; &amp;p20 &amp;p40 &amp;p60 &amp;p80;</div></div><p><br></p>","children":[{"idx":"bdfc21c7-a54f-4cae-8643-250c3f504cdc","name":"Make quintile categories [MakeCategories()]","custparents":[{"idx":"10100ea0-7035-465b-912f-1de0edbba9ee"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%MakeCategories(</div><div class=\"ql-code-block\">\t    Data=makeRanks_tmp3, </div><div class=\"ql-code-block\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t    theTargetVar=&amp;theRankVar._QUIC,</div><div class=\"ql-code-block\">\t    theCutOffs= &amp;p20 &amp;p40 &amp;p60 &amp;p80, </div><div class=\"ql-code-block\">\t    dlmt=, </div><div class=\"ql-code-block\">\t    debug=, </div><div class=\"ql-code-block\">\t    closeSide=left,</div><div class=\"ql-code-block\">\t    target=makeRanks_tmp5a</div><div class=\"ql-code-block\">\t);</div></div>","children":[{"idx":"e04a2854-251b-46e3-98c2-9664c824d307","name":"Assign numbers for quintile levels","custparents":[{"idx":"bdfc21c7-a54f-4cae-8643-250c3f504cdc"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*get the quintile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\tproc freq data=makeRanks_tmp5a nlevels noprint;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttable &amp;theRankVar._QUIC /out=makeRanks_tmp5b;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata makeRanks_tmp5c;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp5b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t&amp;theRankVar._QUIN =_n_ ;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdrop count percent;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div></div><p><br></p>","children":[{"idx":"fedc2368-fead-434b-8877-fea12d495cc2","name":"Append the num levels into the subset","custparents":[{"idx":"e04a2854-251b-46e3-98c2-9664c824d307"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t/*attach numeric values corresponding to the quintile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt1=makeRanks_tmp5a,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt2=makeRanks_tmp5c, </div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=makeRanks_tmp5,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjtype=inner,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjvars =&amp;theRankVar._QUIC</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>","children":[{"idx":"MY95fce9a4-e3ef-4997-b500-15a74e5c37d4","name":"Attach the subset to the original data","custparents":[{"idx":"fedc2368-fead-434b-8877-fea12d495cc2"},{"idx":"MYa609f2e6-421e-4751-b0ec-4c2f5e159f59"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*Attach the rank categories and level numbers back to the source data*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp5, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp6,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAC, t2.&amp;theRankVar._QUAN, t2.&amp;theRankVar._QUIC, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;groupVars</div><div class=\"ql-code-block\">\t);</div></div>","children":[{"idx":"MY0dcaf78b-d351-43e9-a1e3-a250268edf2e","name":"Add labels","custparents":[{"idx":"MY95fce9a4-e3ef-4997-b500-15a74e5c37d4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theRankVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelQuac = %sysfunc(strip(&amp;theLabel))_QUAC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuan = %sysfunc(strip(&amp;theLabel))_QUAN;</div><div class=\"ql-code-block\">\t\t%let theLabelQuic = %sysfunc(strip(&amp;theLabel))_QUIC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuin = %sysfunc(strip(&amp;theLabel))_QUIN;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; &amp;theLabelQuac &amp;theLabelQuan &amp;theLabelQuic &amp;theLabelQuin;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAC = \"&amp;theLabelQuac\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAN = \"&amp;theLabelQuan\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIC = \"&amp;theLabelQuic\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIN = \"&amp;theLabelQuin\";</div><div class=\"ql-code-block\">\t\trun;</div></div>","children":[{"idx":"MY2dd3ca58-f9a4-4026-9e87-71d2fae99b98","name":"Delete tmp files","custparents":[{"idx":"MY0dcaf78b-d351-43e9-a1e3-a250268edf2e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeRanks_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div></div>"}]}]}]}]}]}]}]}]}]}]}]}}]}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%local data numvars target i theNumVar dlmt debug;</div></div>"}]}}]},{"idx":"c00f0354-cd2e-4ca1-849f-3e996221a97f","name":"Make categories and levels for the continuous Covariates","custparents":[{"idx":"MY1b3589d2-084f-4aac-b2f3-47e67628c9cc"},{"idx":"MY1b3589d2-084f-4aac-b2f3-47e67628c9cc"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*loop for NumCoVars and make quartile and quintile ranks*/</div><div class=\"ql-code-block\" data-language=\"plain\">%NumVarsMakeRanks(</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata=_XPilot4c,</div><div class=\"ql-code-block\" data-language=\"plain\">\tNumVars=&amp;stdNumCoVars,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttarget=_XPilot4</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot4;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot4;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div></div><p><br></p>","children":[{"idx":"6f6f84ac-c357-49be-81c4-f0acea755121","name":"Run NumVarsMakeRanks()","custparents":[{"idx":"c00f0354-cd2e-4ca1-849f-3e996221a97f"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro NumVarsMakeRanks(data =, numvars=, target=, dlmt=, debug=);</div><div class=\"ql-code-block\">\t%local data numvars target i theNumVar dlmt debug;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*if numvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;numvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;numvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theNumVar = %scan(&amp;numvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theNumVar = &amp;theNumVar;</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t/*for a given var, make categories accoridng to p25 p50 p75 cutoff, and p20 p40 p60 p80 cutoff*/</div><div class=\"ql-code-block\">\t\t%makeRanks(</div><div class=\"ql-code-block\">\t\t\tdata = &amp;target,</div><div class=\"ql-code-block\">\t\t\ttarget= &amp;target,</div><div class=\"ql-code-block\">\t\t\ttheRankVar=&amp;theNumVar,</div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\">\t\t);\t</div><div class=\"ql-code-block\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\">/*\t\t%freq(data=&amp;target, table= &amp;theNumVar._QuaC &amp;theNumVar._QuiC);*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\">%exit:</div><div class=\"ql-code-block\">%mend NumVarsMakeRanks;</div></div>","children":[],"_substeps":{"idx":"MYc461df6a-2b77-47fb-ad70-d921520f2b33","name":"substeps","custparents":[{"idx":"MY8cdccea8-42f1-461c-a408-c77b428da41b"}],"children":[{"idx":"MY64a2792a-6624-42bc-923d-a2bd8dc56381","name":"set local vars","custparents":[{"idx":"MYc461df6a-2b77-47fb-ad70-d921520f2b33"}],"children":[{"idx":"MYc430772c-7416-42c5-932e-c69ef68c51b4","name":"Init the target file","custparents":[{"idx":"MY64a2792a-6624-42bc-923d-a2bd8dc56381"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MY7215bca8-4286-4b74-b57c-d26476cae1b8","name":"Set default valeus","custparents":[{"idx":"MYc430772c-7416-42c5-932e-c69ef68c51b4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*if numvars is empty, exit*/</div><div class=\"ql-code-block\">\t%if %length(&amp;numvars) = 0 %then %goto exit;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div></div>","children":[{"idx":"MYb9400ee8-15a3-48be-8c2d-00345bb7699d","name":"Loop for each var and make categories","custparents":[{"idx":"MY7215bca8-4286-4b74-b57c-d26476cae1b8"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;numvars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theNumVar = %scan(&amp;numvars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;theNumVar = &amp;theNumVar;</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t/*for a given var, make categories accoridng to p25 p50 p75 cutoff, and p20 p40 p60 p80 cutoff*/</div><div class=\"ql-code-block\">\t\t%makeRanks(</div><div class=\"ql-code-block\">\t\t\tdata = &amp;target,</div><div class=\"ql-code-block\">\t\t\ttarget= &amp;target,</div><div class=\"ql-code-block\">\t\t\ttheRankVar=&amp;theNumVar,</div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug</div><div class=\"ql-code-block\">\t\t);\t</div><div class=\"ql-code-block\">\t\t/*Report the levels*/</div><div class=\"ql-code-block\">/*\t\t%freq(data=&amp;target, table= &amp;theNumVar._QuaC &amp;theNumVar._QuiC);*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\">%exit:</div></div>","children":[{"idx":"MY311efd36-37f1-4d6b-bfa1-15031c633b95","name":"Run makeRanks()","custparents":[{"idx":"MYb9400ee8-15a3-48be-8c2d-00345bb7699d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*for a given variable in the source dataset, make quartile and quintile rank categories*/</div><div class=\"ql-code-block\">%macro makeRanks(data=, target=, theRankVar=, debug=, groupVars=);</div><div class=\"ql-code-block\">\t%local data target theRankVar debug groupVars p25 p50 p75 p20 p40 p60 p80</div><div class=\"ql-code-block\">\t\ttheLabel theLabelQuac theLabelQuan theLabelQuic theLabelQuin</div><div class=\"ql-code-block\">\t\t;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;groupVars) = 0 %then %let groupVars = Key_hsn;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*1. keep groupvars (to make distinct records, e.g., key_hsn, key_hsn by drugclass, etc) and theRankVar, i.e.</div><div class=\"ql-code-block\">\t\t\tthe var to make ranks (e.g., theRankVar = age)</div><div class=\"ql-code-block\">\t\t\t- change missing values to 0</div><div class=\"ql-code-block\">\t\t\t- change values to the rounded integers</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\">\tdata makeRanks_tmp1;</div><div class=\"ql-code-block\">\t\tset &amp;data ;</div><div class=\"ql-code-block\">\t\tkeep &amp;groupVars &amp;theRankVar ;</div><div class=\"ql-code-block\">\t\tif &amp;theRankVar = . then &amp;theRankVar = 0;</div><div class=\"ql-code-block\">\t\t&amp;theRankVar = round(&amp;theRankVar, \"1\");</div><div class=\"ql-code-block\">\trun; </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*2. create corresponding ranks var using:</div><div class=\"ql-code-block\">\t\ta. quartiles, b. quintiles</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*determine the Q values (e.g., p25, p75, etc)*/</div><div class=\"ql-code-block\">\t%GetMeanStats(</div><div class=\"ql-code-block\">\t\tdata=makeRanks_tmp1,</div><div class=\"ql-code-block\">\t\twhere=,</div><div class=\"ql-code-block\">\t\tgroupVars=,</div><div class=\"ql-code-block\">\t\ttheVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t\ttheStats=mean median p25 p75 p20 p40 p60 p80,</div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp2,</div><div class=\"ql-code-block\">\t\tdebug=</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*determine the quartile cut-off values p25 p50 p75</div><div class=\"ql-code-block\">\t\tNote: these values must be of integers</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\">\t\tcall symput ('p25', int(p25));</div><div class=\"ql-code-block\">\t\tcall symput ('p50', int(median));</div><div class=\"ql-code-block\">\t\tcall symput ('p75', int(p75));</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; &amp;p25 &amp;p50 &amp;p75;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*make quartiles</div><div class=\"ql-code-block\">\tNote, it does not matter if the p25 = p50, the macro makeCategories ignores repeated cutoff points. Nice!</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%MakeCategories(</div><div class=\"ql-code-block\">\t    Data=makeRanks_tmp1, </div><div class=\"ql-code-block\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t    theTargetVar=&amp;theRankVar._QUAC,</div><div class=\"ql-code-block\">\t    theCutOffs=&amp;p25 &amp;p50 &amp;p75, </div><div class=\"ql-code-block\">\t    dlmt=, </div><div class=\"ql-code-block\">\t    debug=, </div><div class=\"ql-code-block\">\t    closeSide=left,</div><div class=\"ql-code-block\">\t    target=makeRanks_tmp3a</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*get the quartile categories */</div><div class=\"ql-code-block\">\tproc freq data=makeRanks_tmp3a nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theRankVar._QUAC /out=makeRanks_tmp3b;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tdata makeRanks_tmp3c;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp3b;</div><div class=\"ql-code-block\">\t\t&amp;theRankVar._QUAN =_n_;</div><div class=\"ql-code-block\">\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*attach numeric values corresponding to the quartile categories */</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=makeRanks_tmp3a,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp3c, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp3,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;theRankVar._QUAC</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*make quintiles*/</div><div class=\"ql-code-block\">\t/*determine the vars  p20 p40 p60 p80*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\">\t\tcall symput ('p20', int(p20));</div><div class=\"ql-code-block\">\t\tcall symput ('p40', int(p40));</div><div class=\"ql-code-block\">\t\tcall symput ('p60', int(p60));</div><div class=\"ql-code-block\">\t\tcall symput ('p80', int(p80));</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; &amp;p20 &amp;p40 &amp;p60 &amp;p80;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%MakeCategories(</div><div class=\"ql-code-block\">\t    Data=makeRanks_tmp3, </div><div class=\"ql-code-block\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t    theTargetVar=&amp;theRankVar._QUIC,</div><div class=\"ql-code-block\">\t    theCutOffs= &amp;p20 &amp;p40 &amp;p60 &amp;p80, </div><div class=\"ql-code-block\">\t    dlmt=, </div><div class=\"ql-code-block\">\t    debug=, </div><div class=\"ql-code-block\">\t    closeSide=left,</div><div class=\"ql-code-block\">\t    target=makeRanks_tmp5a</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*get the quintile categories */</div><div class=\"ql-code-block\">\tproc freq data=makeRanks_tmp5a nlevels noprint;</div><div class=\"ql-code-block\">\t\ttable &amp;theRankVar._QUIC /out=makeRanks_tmp5b;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tdata makeRanks_tmp5c;</div><div class=\"ql-code-block\">\t\tset makeRanks_tmp5b;</div><div class=\"ql-code-block\">\t\t&amp;theRankVar._QUIN =_n_ ;</div><div class=\"ql-code-block\">\t\tdrop count percent;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*attach numeric values corresponding to the quintile categories */</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=makeRanks_tmp5a,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp5c, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp5,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;theRankVar._QUIC</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*Attach the rank categories and level numbers back to the source data*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp5, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp6,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAC, t2.&amp;theRankVar._QUAN, t2.&amp;theRankVar._QUIC, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;groupVars</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theRankVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelQuac = %sysfunc(strip(&amp;theLabel))_QUAC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuan = %sysfunc(strip(&amp;theLabel))_QUAN;</div><div class=\"ql-code-block\">\t\t%let theLabelQuic = %sysfunc(strip(&amp;theLabel))_QUIC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuin = %sysfunc(strip(&amp;theLabel))_QUIN;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; &amp;theLabelQuac &amp;theLabelQuan &amp;theLabelQuic &amp;theLabelQuin;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAC = \"&amp;theLabelQuac\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAN = \"&amp;theLabelQuan\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIC = \"&amp;theLabelQuic\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIN = \"&amp;theLabelQuin\";</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeRanks_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend makeRanks;</div></div>","children":[],"_substeps":{"idx":"MYfa8c7b4e-e294-4866-ac3d-adf1fb0e407c","name":"substeps","custparents":[{"idx":"MY311efd36-37f1-4d6b-bfa1-15031c633b95"}],"children":[{"idx":"MYc458ae15-fccb-46bb-aad8-24e97a256960","name":"Set local vars","custparents":[{"idx":"MYfa8c7b4e-e294-4866-ac3d-adf1fb0e407c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t%local data target theRankVar debug groupVars p25 p50 p75 p20 p40 p60 p80</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttheLabel theLabelQuac theLabelQuan theLabelQuic theLabelQuin</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t;</div></div><p><br></p>","children":[{"idx":"MY1b70fc14-7f0d-498e-aa4f-c77643d5626b","name":"Set default valeus","custparents":[{"idx":"MYc458ae15-fccb-46bb-aad8-24e97a256960"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%if %length(&amp;groupVars) = 0 %then %let groupVars = Key_hsn;</div></div>","children":[{"idx":"MY24a6aaa3-87fc-415a-ba56-4e7bc6a2d1e5","name":"Make a subset with the selected var","custparents":[{"idx":"MY1b70fc14-7f0d-498e-aa4f-c77643d5626b"}],"NodeDescription":"<p>/*a. Keep the group vars and the selected var (which is the one to make categories); b. let missing values =0*/</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*1. keep groupvars (to make distinct records, e.g., key_hsn, key_hsn by drugclass, etc) and theRankVar, i.e.</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tthe var to make ranks (e.g., theRankVar = age)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t- change missing values to 0</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t- change values to the rounded integers</div><div class=\"ql-code-block\" data-language=\"plain\">\t*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata makeRanks_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset &amp;data ;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tkeep &amp;groupVars &amp;theRankVar ;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tif &amp;theRankVar = . then &amp;theRankVar = 0;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t&amp;theRankVar = round(&amp;theRankVar, \"1\");</div><div class=\"ql-code-block\" data-language=\"plain\">\trun; </div></div><p>/*</p><p>[_W] Making a subset is to reduce the size of the data, so as to improve efficiency</p><p>*/</p>","children":[{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a","name":"Get the mean median percentile stats [GetMeanStats()]","custparents":[{"idx":"MY24a6aaa3-87fc-415a-ba56-4e7bc6a2d1e5"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*determine the Q values (e.g., p25, p75, etc)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t%GetMeanStats(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata=makeRanks_tmp1,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\twhere=,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tgroupVars=,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttheVar=&amp;theRankVar,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttheStats=mean median p25 p75 p20 p40 p60 p80,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=makeRanks_tmp2,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdebug=</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>","children":[{"idx":"MY3206bbc4-a261-4011-a87c-bf01e8e867b7","name":"Get the quartile cutoffs","custparents":[{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*determine the quartile cut-off values p25 p50 p75</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tNote: these values must be of integers</div><div class=\"ql-code-block\" data-language=\"plain\">\t*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata _null_;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p25', int(p25));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p50', int(median));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p75', int(p75));</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%put &gt;&gt;&gt; &amp;p25 &amp;p50 &amp;p75;</div></div><p><br></p>","children":[{"idx":"MYa40351ed-73ff-4edd-98e4-757b7d3776f4","name":"Make quartile categories [MakeCategories()]","custparents":[{"idx":"MY3206bbc4-a261-4011-a87c-bf01e8e867b7"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*make quartiles</div><div class=\"ql-code-block\" data-language=\"plain\">\tNote, it does not matter if the p25 = p50, the macro makeCategories ignores repeated cutoff points. Nice!</div><div class=\"ql-code-block\" data-language=\"plain\">\t*/</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t%MakeCategories(</div><div class=\"ql-code-block\" data-language=\"plain\">\t    Data=makeRanks_tmp1, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\" data-language=\"plain\">\t    theTargetVar=&amp;theRankVar._QUAC,</div><div class=\"ql-code-block\" data-language=\"plain\">\t    theCutOffs=&amp;p25 &amp;p50 &amp;p75, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    dlmt=, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    debug=, </div><div class=\"ql-code-block\" data-language=\"plain\">\t    closeSide=left,</div><div class=\"ql-code-block\" data-language=\"plain\">\t    target=makeRanks_tmp3a</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>","children":[{"idx":"MYb522d4d1-ab7b-4453-8cf6-30419a469fd1","name":"Assign numbers for quartile levels","custparents":[{"idx":"MYa40351ed-73ff-4edd-98e4-757b7d3776f4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*get the quartile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\tproc freq data=makeRanks_tmp3a nlevels noprint;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttable &amp;theRankVar._QUAC /out=makeRanks_tmp3b;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata makeRanks_tmp3c;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp3b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t&amp;theRankVar._QUAN =_n_;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdrop count percent;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div></div><p><br></p>","children":[{"idx":"MYa609f2e6-421e-4751-b0ec-4c2f5e159f59","name":"Append the num levels into the subset","custparents":[{"idx":"MYb522d4d1-ab7b-4453-8cf6-30419a469fd1"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*attach numeric values corresponding to the quartile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt1=makeRanks_tmp3a,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt2=makeRanks_tmp3c, </div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=makeRanks_tmp3,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAN),</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjtype=inner,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjvars =&amp;theRankVar._QUAC</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>"}]}]}]},{"idx":"10100ea0-7035-465b-912f-1de0edbba9ee","name":"Get the quintile cutoffs","custparents":[{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a"},{"idx":"MYab301c2c-03b5-4b4b-93d3-f94c3094992a"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*make quintiles*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*determine the vars  p20 p40 p60 p80*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata _null_;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p20', int(p20));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p40', int(p40));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p60', int(p60));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tcall symput ('p80', int(p80));</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%put &gt;&gt;&gt; &amp;p20 &amp;p40 &amp;p60 &amp;p80;</div></div><p><br></p>","children":[{"idx":"bdfc21c7-a54f-4cae-8643-250c3f504cdc","name":"Make quintile categories [MakeCategories()]","custparents":[{"idx":"10100ea0-7035-465b-912f-1de0edbba9ee"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%MakeCategories(</div><div class=\"ql-code-block\">\t    Data=makeRanks_tmp3, </div><div class=\"ql-code-block\">\t    theVar=&amp;theRankVar,</div><div class=\"ql-code-block\">\t    theTargetVar=&amp;theRankVar._QUIC,</div><div class=\"ql-code-block\">\t    theCutOffs= &amp;p20 &amp;p40 &amp;p60 &amp;p80, </div><div class=\"ql-code-block\">\t    dlmt=, </div><div class=\"ql-code-block\">\t    debug=, </div><div class=\"ql-code-block\">\t    closeSide=left,</div><div class=\"ql-code-block\">\t    target=makeRanks_tmp5a</div><div class=\"ql-code-block\">\t);</div></div>","children":[{"idx":"e04a2854-251b-46e3-98c2-9664c824d307","name":"Assign numbers for quintile levels","custparents":[{"idx":"bdfc21c7-a54f-4cae-8643-250c3f504cdc"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*get the quintile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\tproc freq data=makeRanks_tmp5a nlevels noprint;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttable &amp;theRankVar._QUIC /out=makeRanks_tmp5b;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata makeRanks_tmp5c;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset makeRanks_tmp5b;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t&amp;theRankVar._QUIN =_n_ ;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdrop count percent;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div></div><p><br></p>","children":[{"idx":"fedc2368-fead-434b-8877-fea12d495cc2","name":"Append the num levels into the subset","custparents":[{"idx":"e04a2854-251b-46e3-98c2-9664c824d307"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t/*attach numeric values corresponding to the quintile categories */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt1=makeRanks_tmp5a,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt2=makeRanks_tmp5c, </div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=makeRanks_tmp5,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjtype=inner,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjvars =&amp;theRankVar._QUIC</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div></div><p><br></p>","children":[{"idx":"MY95fce9a4-e3ef-4997-b500-15a74e5c37d4","name":"Attach the subset to the original data","custparents":[{"idx":"fedc2368-fead-434b-8877-fea12d495cc2"},{"idx":"MYa609f2e6-421e-4751-b0ec-4c2f5e159f59"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*Attach the rank categories and level numbers back to the source data*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=&amp;data,</div><div class=\"ql-code-block\">\t\tt2=makeRanks_tmp5, </div><div class=\"ql-code-block\">\t\ttarget=makeRanks_tmp6,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.&amp;theRankVar._QUAC, t2.&amp;theRankVar._QUAN, t2.&amp;theRankVar._QUIC, t2.&amp;theRankVar._QUIN),</div><div class=\"ql-code-block\">\t\tjtype=inner,</div><div class=\"ql-code-block\">\t\tjvars =&amp;groupVars</div><div class=\"ql-code-block\">\t);</div></div>","children":[{"idx":"MY0dcaf78b-d351-43e9-a1e3-a250268edf2e","name":"Add labels","custparents":[{"idx":"MY95fce9a4-e3ef-4997-b500-15a74e5c37d4"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*It does not work to change label values directly in data steps</div><div class=\"ql-code-block\">\t\t\tThe label values have to be extracted into macro variables, and then assigned back to the target vars*/</div><div class=\"ql-code-block\">\t\t/*get the label of the var, and save into a macro variable*/</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;\t\t</div><div class=\"ql-code-block\">\t\t\tcall symput('theLabel', label(&amp;theRankVar));</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theLabelQuac = %sysfunc(strip(&amp;theLabel))_QUAC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuan = %sysfunc(strip(&amp;theLabel))_QUAN;</div><div class=\"ql-code-block\">\t\t%let theLabelQuic = %sysfunc(strip(&amp;theLabel))_QUIC;</div><div class=\"ql-code-block\">\t\t%let theLabelQuin = %sysfunc(strip(&amp;theLabel))_QUIN;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; &amp;theLabelQuac &amp;theLabelQuan &amp;theLabelQuic &amp;theLabelQuin;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*add labels to the vars*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset makeRanks_tmp6;</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAC = \"&amp;theLabelQuac\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUAN = \"&amp;theLabelQuan\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIC = \"&amp;theLabelQuic\";</div><div class=\"ql-code-block\">\t\t\tlabel &amp;theRankVar._QUIN = \"&amp;theLabelQuin\";</div><div class=\"ql-code-block\">\t\trun;</div></div>","children":[{"idx":"MY2dd3ca58-f9a4-4026-9e87-71d2fae99b98","name":"Delete tmp files","custparents":[{"idx":"MY0dcaf78b-d351-43e9-a1e3-a250268edf2e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete makeRanks_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div></div>"}]}]}]}]}]}]}]}]}]}]}]}}]}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%local data numvars target i theNumVar dlmt debug;</div></div>"}]}}]}]}]}}]},{"idx":"MYcd2b08ac-eeaa-4c14-a4a2-834669cad745","name":"Check multicollinearity","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*check multicollinearity*/</div><div class=\"ql-code-block\" data-language=\"plain\">%checkMultiCollin (</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata = _XPilot4,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttarget = _XPilot5a, </div><div class=\"ql-code-block\" data-language=\"plain\">\tY=Y, </div><div class=\"ql-code-block\" data-language=\"plain\">\tVars=%str( &amp;stdCatMainVar_CatN  &amp;stdNumMainVar   &amp;stdCatCoVars_CatN &amp;stdNumCoVars),</div><div class=\"ql-code-block\" data-language=\"plain\">\tvarsMapFile=VarsMap,</div><div class=\"ql-code-block\" data-language=\"plain\">\tVIFCutOff=2.5,</div><div class=\"ql-code-block\" data-language=\"plain\">\tdebug=</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot5a;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot5a;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div></div><p><br></p>","children":[{"idx":"MY9ea42375-570a-4820-bdf8-2cf76d94ed88","name":"Run CheckMultiCollin()","custparents":[{"idx":"MYcd2b08ac-eeaa-4c14-a4a2-834669cad745"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro checkMultiCollin(data = , target=, Y=, Vars=,  VarsMapFile=, VIFCutOff=, debug=);</div><div class=\"ql-code-block\">\t%local data target Y Vars VarsMapFile;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*By default, set VIF CutOff = 2.5*/</div><div class=\"ql-code-block\">\t%if %length(&amp;VIFCutOff) = 0 %then %let VIFCutOff =2.5;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; Vars= &amp;Vars;</div><div class=\"ql-code-block\">\t/*1. get VIF of vars. Highlight those with a VIF greater than &amp;VIFCutOff(e.g., 2.5), there is no clue which var is colliner with which*/</div><div class=\"ql-code-block\">\tods results off;</div><div class=\"ql-code-block\">\tods select none;</div><div class=\"ql-code-block\">\tproc reg data=&amp;data;</div><div class=\"ql-code-block\">\t\tmodel &amp;Y=&amp;vars /vif tol;</div><div class=\"ql-code-block\">\t\tods output ParameterEstimates = checkMultiCollin_tmp1;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tods select all;</div><div class=\"ql-code-block\">\tods results on;</div><div class=\"ql-code-block\">\tdata checkMultiCollin_tmp2;</div><div class=\"ql-code-block\">\t\tset checkMultiCollin_tmp1;</div><div class=\"ql-code-block\">\t\tif variable in: ('X');</div><div class=\"ql-code-block\">\t\tkeep Variable VarianceInflation;</div><div class=\"ql-code-block\">\t\trename VarianceInflation = VIF;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t/*Indicate those with VIF &gt; &amp;VIFCutOff*/</div><div class=\"ql-code-block\">\tData checkMultiCollin_tmp3;</div><div class=\"ql-code-block\">\t\tset checkMultiCollin_tmp2;</div><div class=\"ql-code-block\">\t\tif VIF &gt; &amp;VIFCutOff then MultiCollin=1;</div><div class=\"ql-code-block\">\t\telse MultiCollin=0;</div><div class=\"ql-code-block\">\t\tvariable=tranwrd(variable, '_CatN', '');</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=checkMultiCollin_tmp3,</div><div class=\"ql-code-block\">\t\tt2= &amp;VarsMapFile,</div><div class=\"ql-code-block\">\t\ttarget=&amp;target,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.original),</div><div class=\"ql-code-block\">\t\tjtype=left,</div><div class=\"ql-code-block\">\t\tjterm=%str(t1.variable = t2.renamed),</div><div class=\"ql-code-block\">\t\torderby =VIF desc</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete checkMultiCollin_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\">%mend checkMultiCollin;</div></div>","children":[{"idx":"MY8fb0c122-9bb5-4411-8bd4-2ed8121e3c1c","name":"Keep vars not having multicollinearity","custparents":[{"idx":"MY9ea42375-570a-4820-bdf8-2cf76d94ed88"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot5a;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot5a;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">/*exclude those with VIF &gt; &amp;VIFCutOff (e.g., 2.5)*/</div><div class=\"ql-code-block\" data-language=\"plain\">data _XPilot5;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _XPilot5a;</div><div class=\"ql-code-block\" data-language=\"plain\">\tif MultiCollin=0;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">/*sort variables*/</div><div class=\"ql-code-block\" data-language=\"plain\">%sort(data=_XPilot5, sorter=variable);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot5;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot5;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div></div><p><br></p>","children":[{"idx":"MY75e001b1-d374-4946-b352-720f68835fae","name":"Make a string for the retained vars (the std var names without surfix)","custparents":[{"idx":"MY8fb0c122-9bb5-4411-8bd4-2ed8121e3c1c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*make a string for vars to be kept after VIF check (without multicollinearity problems)*/</div><div class=\"ql-code-block\" data-language=\"plain\">%ValueToString(Data=_XPilot5, \ttheVar=variable, theStrVarName=nonMultiCollinVars, DLMT=);</div></div><p><br></p>","children":[{"idx":"MYacade9ee-1180-42a4-a119-e8b97c31d286","name":"Make a corresponding string for kept categorical vars","custparents":[{"idx":"MY75e001b1-d374-4946-b352-720f68835fae"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*Given a list of vars (theVars), keep those not having multicollinearity problems.  */</div><div class=\"ql-code-block\" data-language=\"plain\">%GetNonMultiCollinVars(</div><div class=\"ql-code-block\" data-language=\"plain\">\ttheVars=&amp;stdCatCoVars_CatN, </div><div class=\"ql-code-block\" data-language=\"plain\">\ttheNonCollinVarHeaders=&amp;nonMultiCollinVars, </div><div class=\"ql-code-block\" data-language=\"plain\">\ttargetVarName=stdCatCoVars_CatN_nonMultiCollin, </div><div class=\"ql-code-block\" data-language=\"plain\">\tdlmt=, debug=</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">%put stdCatCoVars_CatN_nonMultiCollin = &amp;stdCatCoVars_CatN_nonMultiCollin;</div></div><p><br></p>","children":[{"idx":"MY7f8a4f0c-bb2a-4e9a-b431-f9dcf6f98ba9","name":"Run GetNonMultiCollinVars()","custparents":[{"idx":"MYacade9ee-1180-42a4-a119-e8b97c31d286"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro GetNonMultiCollinVars(theVars=, theNonCollinVarHeaders=, targetVarName=, dlmt=, debug=);</div><div class=\"ql-code-block\">\t/*must have, enable in operator, and set delimiter = ' ' (a single space)*/</div><div class=\"ql-code-block\">\toptions minoperator mindelimiter=' ';</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local theVars theNonCollinVarHeaders targetVarName i dlmt debug theVar theVarSeg1 theVarSeg2 theVarHeader;</div><div class=\"ql-code-block\">\t%global &amp;targetVarName;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%let &amp;targetVarName=;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">/*\t\t%put &gt;&gt;&gt;theVar = &amp;theVar;*/</div><div class=\"ql-code-block\">\t\t/*get the header of theVar. (e.g., if theVar = X2_C_CatN, get the header (X2_C)</div><div class=\"ql-code-block\">\t\t\tsuch header will be used to match the headers in &amp;theNonCollinVarHeaders</div><div class=\"ql-code-block\">\t\t*/</div><div class=\"ql-code-block\">\t\t%let theVarSeg1=%scan(&amp;theVar, 1, \"_\");</div><div class=\"ql-code-block\">\t\t%let theVarSeg2=%scan(&amp;theVar, 2, \"_\");</div><div class=\"ql-code-block\">\t\t%let theVarHeader=&amp;theVarSeg1._&amp;theVarSeg2;</div><div class=\"ql-code-block\">/*\t\t%put theVarHeader = &amp;theVarHeader;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*check if theVar header matches a header in &amp;theNonCollinVarHeaders*/</div><div class=\"ql-code-block\">/*\t\t%put &gt;&gt;&gt;theNonCollinVarHeaders= &amp;theNonCollinVarHeaders;*/</div><div class=\"ql-code-block\">\t\t%if &amp;theVarHeader in (&amp;theNonCollinVarHeaders) %then %do;</div><div class=\"ql-code-block\">\t\t\t/*add the current var into the targetVar list*/</div><div class=\"ql-code-block\">\t\t\t%let &amp;targetVarName = &amp;&amp;&amp;targetVarName &amp;theVar;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend GetNonMultiCollinVars;</div></div>","children":[],"_substeps":{"idx":"MYfbb228a7-4065-42ed-bbbe-e1cfb88f50a3","name":"substeps","custparents":[{"idx":"MY7f8a4f0c-bb2a-4e9a-b431-f9dcf6f98ba9"}],"children":[{"idx":"MY9dc8a112-57d5-4895-8d23-66a4fc67f0d2","name":"set options (enable operator 'in' in macros)","custparents":[{"idx":"MYfbb228a7-4065-42ed-bbbe-e1cfb88f50a3"}],"children":[{"idx":"MY6e4c72f6-57ca-4459-bd11-a52e152a6a1e","name":"Set local and global vars","custparents":[{"idx":"MY9dc8a112-57d5-4895-8d23-66a4fc67f0d2"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%local theVars theNonCollinVarHeaders targetVarName i dlmt debug theVar theVarSeg1 theVarSeg2 theVarHeader;</div><div class=\"ql-code-block\">\t%global &amp;targetVarName;</div><div class=\"ql-code-block\">\t</div></div>","children":[{"idx":"MY402bdfc1-7e1c-419d-8cf8-d9c16a38a55f","name":"set default values","custparents":[{"idx":"MY6e4c72f6-57ca-4459-bd11-a52e152a6a1e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%let &amp;targetVarName=;</div><div class=\"ql-code-block\"><br></div></div>","children":[{"idx":"MYf700e64e-6515-43fd-8ac2-4ee08d06ca2b","name":"Loop for each var and kept matched","custparents":[{"idx":"MY402bdfc1-7e1c-419d-8cf8-d9c16a38a55f"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%let i=1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\" data-language=\"plain\">/*\t\t%put &gt;&gt;&gt;theVar = &amp;theVar;*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*get the header of theVar. (e.g., if theVar = X2_C_CatN, get the header (X2_C)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tsuch header will be used to match the headers in &amp;theNonCollinVarHeaders</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVarSeg1=%scan(&amp;theVar, 1, \"_\");</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVarSeg2=%scan(&amp;theVar, 2, \"_\");</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVarHeader=&amp;theVarSeg1._&amp;theVarSeg2;</div><div class=\"ql-code-block\" data-language=\"plain\">/*\t\t%put theVarHeader = &amp;theVarHeader;*/</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*check if theVar header matches a header in &amp;theNonCollinVarHeaders*/</div><div class=\"ql-code-block\" data-language=\"plain\">/*\t\t%put &gt;&gt;&gt;theNonCollinVarHeaders= &amp;theNonCollinVarHeaders;*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%if &amp;theVarHeader in (&amp;theNonCollinVarHeaders) %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t/*add the current var into the targetVar list*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let &amp;targetVarName = &amp;&amp;&amp;targetVarName &amp;theVar;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*[_W]must have, enable in operator, and set delimiter = ' ' (a single space)*/</div><div class=\"ql-code-block\" data-language=\"plain\">options minoperator mindelimiter=' ';</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"}]}}]},{"idx":"d7da4c8c-f57b-4b1b-87a8-85d23e2908fc","name":"Make a corresponding string for kept continuous vars","custparents":[{"idx":"MY75e001b1-d374-4946-b352-720f68835fae"},{"idx":"MY75e001b1-d374-4946-b352-720f68835fae"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%GetNonMultiCollinVars(</div><div class=\"ql-code-block\" data-language=\"plain\">\ttheVars=&amp;stdNumCoVars, </div><div class=\"ql-code-block\" data-language=\"plain\">\ttheNonCollinVarHeaders=&amp;nonMultiCollinVars, </div><div class=\"ql-code-block\" data-language=\"plain\">\ttargetVarName=stdNumCoVars_nonMultiCollin, </div><div class=\"ql-code-block\" data-language=\"plain\">\tdlmt=, debug=</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">%put stdNumCoVars_nonMultiCollin = &amp;stdNumCoVars_nonMultiCollin;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>","children":[{"idx":"f023cfe6-7a6f-406b-9924-15a10180d450","name":"Run GetNonMultiCollinVars()","custparents":[{"idx":"d7da4c8c-f57b-4b1b-87a8-85d23e2908fc"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro GetNonMultiCollinVars(theVars=, theNonCollinVarHeaders=, targetVarName=, dlmt=, debug=);</div><div class=\"ql-code-block\">\t/*must have, enable in operator, and set delimiter = ' ' (a single space)*/</div><div class=\"ql-code-block\">\toptions minoperator mindelimiter=' ';</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local theVars theNonCollinVarHeaders targetVarName i dlmt debug theVar theVarSeg1 theVarSeg2 theVarHeader;</div><div class=\"ql-code-block\">\t%global &amp;targetVarName;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%let &amp;targetVarName=;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">/*\t\t%put &gt;&gt;&gt;theVar = &amp;theVar;*/</div><div class=\"ql-code-block\">\t\t/*get the header of theVar. (e.g., if theVar = X2_C_CatN, get the header (X2_C)</div><div class=\"ql-code-block\">\t\t\tsuch header will be used to match the headers in &amp;theNonCollinVarHeaders</div><div class=\"ql-code-block\">\t\t*/</div><div class=\"ql-code-block\">\t\t%let theVarSeg1=%scan(&amp;theVar, 1, \"_\");</div><div class=\"ql-code-block\">\t\t%let theVarSeg2=%scan(&amp;theVar, 2, \"_\");</div><div class=\"ql-code-block\">\t\t%let theVarHeader=&amp;theVarSeg1._&amp;theVarSeg2;</div><div class=\"ql-code-block\">/*\t\t%put theVarHeader = &amp;theVarHeader;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*check if theVar header matches a header in &amp;theNonCollinVarHeaders*/</div><div class=\"ql-code-block\">/*\t\t%put &gt;&gt;&gt;theNonCollinVarHeaders= &amp;theNonCollinVarHeaders;*/</div><div class=\"ql-code-block\">\t\t%if &amp;theVarHeader in (&amp;theNonCollinVarHeaders) %then %do;</div><div class=\"ql-code-block\">\t\t\t/*add the current var into the targetVar list*/</div><div class=\"ql-code-block\">\t\t\t%let &amp;targetVarName = &amp;&amp;&amp;targetVarName &amp;theVar;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend GetNonMultiCollinVars;</div></div>","children":[],"_substeps":{"idx":"2edfbccb-8825-49a6-b343-acb8bd826715","name":"substeps","custparents":[{"idx":"f023cfe6-7a6f-406b-9924-15a10180d450"}],"children":[{"idx":"ea0c2a2b-0934-4256-9f27-c0cbb7edf72c","name":"set options (enable operator 'in' in macros)","custparents":[{"idx":"2edfbccb-8825-49a6-b343-acb8bd826715"}],"children":[{"idx":"cda391bc-204e-49cb-b664-72c8b60f383e","name":"Set local and global vars","custparents":[{"idx":"ea0c2a2b-0934-4256-9f27-c0cbb7edf72c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%local theVars theNonCollinVarHeaders targetVarName i dlmt debug theVar theVarSeg1 theVarSeg2 theVarHeader;</div><div class=\"ql-code-block\">\t%global &amp;targetVarName;</div><div class=\"ql-code-block\">\t</div></div>","children":[{"idx":"19db550d-921c-4ee9-89ef-d26a99e9ceb8","name":"set default values","custparents":[{"idx":"cda391bc-204e-49cb-b664-72c8b60f383e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%let &amp;targetVarName=;</div><div class=\"ql-code-block\"><br></div></div>","children":[{"idx":"4228d266-cf8a-4a84-9223-ad6b303b58d2","name":"Loop for each var and kept matched","custparents":[{"idx":"19db550d-921c-4ee9-89ef-d26a99e9ceb8"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">/*\t\t%put &gt;&gt;&gt;theVar = &amp;theVar;*/</div><div class=\"ql-code-block\">\t\t/*get the header of theVar. (e.g., if theVar = X2_C_CatN, get the header (X2_C)</div><div class=\"ql-code-block\">\t\t\tsuch header will be used to match the headers in &amp;theNonCollinVarHeaders</div><div class=\"ql-code-block\">\t\t*/</div><div class=\"ql-code-block\">\t\t%let theVarSeg1=%scan(&amp;theVar, 1, \"_\");</div><div class=\"ql-code-block\">\t\t%let theVarSeg2=%scan(&amp;theVar, 2, \"_\");</div><div class=\"ql-code-block\">\t\t%let theVarHeader=&amp;theVarSeg1._&amp;theVarSeg2;</div><div class=\"ql-code-block\">/*\t\t%put theVarHeader = &amp;theVarHeader;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*check if theVar header matches a header in &amp;theNonCollinVarHeaders*/</div><div class=\"ql-code-block\">/*\t\t%put &gt;&gt;&gt;theNonCollinVarHeaders= &amp;theNonCollinVarHeaders;*/</div><div class=\"ql-code-block\">\t\t%if &amp;theVarHeader in (&amp;theNonCollinVarHeaders) %then %do;</div><div class=\"ql-code-block\">\t\t\t/*add the current var into the targetVar list*/</div><div class=\"ql-code-block\">\t\t\t%let &amp;targetVarName = &amp;&amp;&amp;targetVarName &amp;theVar;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\">\t%end;</div></div>"}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*[_W]must have, enable in operator, and set delimiter = ' ' (a single space)*/</div><div class=\"ql-code-block\" data-language=\"plain\">options minoperator mindelimiter=' ';</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"}]}}]}]}]}],"_substeps":{"idx":"MY97b87ef1-ad8f-44b7-8f95-9330fe201ff9","name":"substeps","custparents":[{"idx":"MY9ea42375-570a-4820-bdf8-2cf76d94ed88"}],"children":[{"idx":"MYb2338941-b7a5-4236-8a95-5baf0f70faad","name":"Set local vars","custparents":[{"idx":"MY97b87ef1-ad8f-44b7-8f95-9330fe201ff9"}],"children":[{"idx":"MY81c1107c-c22d-451c-b6d5-5a084950a094","name":"set default values","custparents":[{"idx":"MYb2338941-b7a5-4236-8a95-5baf0f70faad"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*By default, set VIF CutOff = 2.5*/</div><div class=\"ql-code-block\" data-language=\"plain\">%if %length(&amp;VIFCutOff) = 0 %then %let VIFCutOff =2.5;</div><div class=\"ql-code-block\" data-language=\"plain\">%put &gt;&gt;&gt; Vars= &amp;Vars;</div></div><p><br></p>","children":[{"idx":"MY90bf15b5-0a52-4828-ae74-e3842eb77714","name":"Run prog reg and get VIF","custparents":[{"idx":"MY81c1107c-c22d-451c-b6d5-5a084950a094"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*1. get VIF of vars. Highlight those with a VIF greater than &amp;VIFCutOff(e.g., 2.5), there is no clue which var is colliner with which*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tods results off;</div><div class=\"ql-code-block\" data-language=\"plain\">\tods select none;</div><div class=\"ql-code-block\" data-language=\"plain\">\tproc reg data=&amp;data;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tmodel &amp;Y=&amp;vars /vif tol;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tods output ParameterEstimates = checkMultiCollin_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\tods select all;</div><div class=\"ql-code-block\" data-language=\"plain\">\tods results on;</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata checkMultiCollin_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset checkMultiCollin_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tif variable in: ('X');</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tkeep Variable VarianceInflation;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trename VarianceInflation = VIF;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div></div><p><br></p>","children":[{"idx":"MY2f55b051-9e04-4f32-8a9c-b7732caf0af2","name":"Indicate vars with high VIFs","custparents":[{"idx":"MY90bf15b5-0a52-4828-ae74-e3842eb77714"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*Indicate those with VIF &gt; &amp;VIFCutOff*/</div><div class=\"ql-code-block\" data-language=\"plain\">\tData checkMultiCollin_tmp3;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tset checkMultiCollin_tmp2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tif VIF &gt; &amp;VIFCutOff then MultiCollin=1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\telse MultiCollin=0;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvariable=tranwrd(variable, '_CatN', '');</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>","children":[{"idx":"MY46b3f58e-3bbd-4dea-aecb-f65d3c2fcf75","name":"Add original var names","custparents":[{"idx":"MY2f55b051-9e04-4f32-8a9c-b7732caf0af2"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt1=checkMultiCollin_tmp3,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tt2= &amp;VarsMapFile,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\ttarget=&amp;target,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tvars=%str(t1.*, t2.original),</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjtype=left,</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tjterm=%str(t1.variable = t2.renamed),</div><div class=\"ql-code-block\" data-language=\"plain\">\t\torderby =VIF desc</div><div class=\"ql-code-block\" data-language=\"plain\">\t);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>","children":[{"idx":"MY2ebc992c-4530-4e0e-9c9d-40059b30a19c","name":"Delete tmp files","custparents":[{"idx":"MY46b3f58e-3bbd-4dea-aecb-f65d3c2fcf75"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tdelete checkMultiCollin_tmp:;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div></div><p><br></p>"}]}]}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local data target Y Vars VarsMapFile;</div></div>"}]}}]},{"idx":"MY2d948c49-bac0-4c3a-a9a7-91b6885ca1b8","name":"Select Vars of Significant Effects","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*Select Vars, Univariate, excluding vars with a p &gt; .05*/</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\">\t\t\t\t\t/selection=forward slentry=.05 slstay= .05;</div><div class=\"ql-code-block\">\tods output ModelBuildingSummary=_XPilot6a ModelANOVA = _XPilot6b;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\">\t\t\t\t\t/selection=forward slentry=.05 slstay= .05;</div><div class=\"ql-code-block\">\tods output ModelBuildingSummary=_XPilot6c ModelANOVA = _XPilot6d;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\">\t\t\t\t\t/selection=stepwise slentry=.05 slstay= .05;</div><div class=\"ql-code-block\">\tods output ModelBuildingSummary=_XPilot6e ModelANOVA = _XPilot6f;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data teestT._xpilot6a;</div><div class=\"ql-code-block\">\tset _xpilot6a;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._xpilot6b;\tset _xpilot6b;run;</div><div class=\"ql-code-block\">data teestT._xpilot6c;\tset _xpilot6c;run;</div><div class=\"ql-code-block\">data teestT._xpilot6d;\tset _xpilot6d;run;</div><div class=\"ql-code-block\">data teestT._xpilot6e;\tset _xpilot6e;run;</div><div class=\"ql-code-block\">data teestT._xpilot6f;\tset _xpilot6f;run;</div></div>","children":[{"idx":"MYcc08604c-40cb-4f5f-8be7-f3d7ccd7198a","name":"Forward","custparents":[{"idx":"MY2d948c49-bac0-4c3a-a9a7-91b6885ca1b8"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">/*Select Vars, Univariate, excluding vars with a p &gt; .05*/</div><div class=\"ql-code-block\" data-language=\"plain\">ods results off;</div><div class=\"ql-code-block\" data-language=\"plain\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\" data-language=\"plain\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\" data-language=\"plain\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t\t\t/selection=forward slentry=.05 slstay= .05;</div><div class=\"ql-code-block\" data-language=\"plain\">\tods output ModelBuildingSummary=_XPilot6a ModelANOVA = _XPilot6b;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">ods results on;</div></div><p><br></p>"},{"idx":"MY075a3671-9ae9-4c53-8099-9c867ed13468","name":"Backward","custparents":[{"idx":"MY2d948c49-bac0-4c3a-a9a7-91b6885ca1b8"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">ods results off;</div><div class=\"ql-code-block\" data-language=\"plain\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\" data-language=\"plain\">\tclass &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\" data-language=\"plain\">\tModel Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t\t\t/selection=forward slentry=.05 slstay= .05;</div><div class=\"ql-code-block\" data-language=\"plain\">\tods output ModelBuildingSummary=_XPilot6c ModelANOVA = _XPilot6d;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">ods results on;</div></div><p><br></p>"},{"idx":"MYfefdbb8e-074e-461d-ba03-f63b2adb046b","name":"Stepwise","custparents":[{"idx":"MY2d948c49-bac0-4c3a-a9a7-91b6885ca1b8"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">ods results off;</div><div class=\"ql-code-block\" data-language=\"plain\">proc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\" data-language=\"plain\">class &amp;stdCatMainVar_CatN &amp;stdCatCoVars_CatN_nonMultiCollin;</div><div class=\"ql-code-block\" data-language=\"plain\">Model Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_CatN_nonMultiCollin &amp;stdNumCoVars_nonMultiCollin</div><div class=\"ql-code-block\" data-language=\"plain\">/selection=stepwise slentry=.05 slstay= .05;</div><div class=\"ql-code-block\" data-language=\"plain\">ods output ModelBuildingSummary=_XPilot6e ModelANOVA = _XPilot6f;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">ods results on;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot6a;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _xpilot6a;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot6b;\tset _xpilot6b;run;</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot6c;\tset _xpilot6c;run;</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot6d;\tset _xpilot6d;run;</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot6e;\tset _xpilot6e;run;</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot6f;\tset _xpilot6f;run;</div></div><p><br></p>","children":[{"idx":"MYf6274531-ebc5-47aa-a250-d51131891c0e","name":"Keep selected vars","custparents":[{"idx":"MYfefdbb8e-074e-461d-ba03-f63b2adb046b"},{"idx":"MYcc08604c-40cb-4f5f-8be7-f3d7ccd7198a"},{"idx":"MY075a3671-9ae9-4c53-8099-9c867ed13468"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*keep variables that appear in test5, test6B 6D and 6F</div><div class=\"ql-code-block\" data-language=\"plain\">These are vars that</div><div class=\"ql-code-block\" data-language=\"plain\">1. not having multicollinearity problem</div><div class=\"ql-code-block\" data-language=\"plain\">2. with an effect p &lt;.05 in the multivariable model</div><div class=\"ql-code-block\" data-language=\"plain\">*/</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">/*keep variables that appear in _XPilot5, _XPilot6B 6D and 6F</div><div class=\"ql-code-block\" data-language=\"plain\">\tThese are vars that </div><div class=\"ql-code-block\" data-language=\"plain\">\t1. not having multicollinearity problem</div><div class=\"ql-code-block\" data-language=\"plain\">\t2. with an effect p &lt;.05 in the multivariable model</div><div class=\"ql-code-block\" data-language=\"plain\">*/</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">PROC SQL;</div><div class=\"ql-code-block\" data-language=\"plain\">   CREATE TABLE _XPilot7a </div><div class=\"ql-code-block\" data-language=\"plain\">\tAS </div><div class=\"ql-code-block\" data-language=\"plain\">   SELECT t0.variable </div><div class=\"ql-code-block\" data-language=\"plain\">      FROM _XPilot5 t0, _XPilot6B t1, _XPilot6D t2, _XPilot6F t3</div><div class=\"ql-code-block\" data-language=\"plain\">      WHERE (</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tt0.variable = tranwrd(t1.Effect, '_CatN', '') </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tAND t0.variable =tranwrd(t2.Effect, '_CatN', '') </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tAND t0.variable =tranwrd(t3.Effect, '_CatN', '') </div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t)</div><div class=\"ql-code-block\" data-language=\"plain\">\torder by variable;</div><div class=\"ql-code-block\" data-language=\"plain\">QUIT;</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot7a;\tset _xpilot7a;run;</div><div class=\"ql-code-block\" data-language=\"plain\">/*in varsmap, indicate those selected in _XPilot7a*/</div><div class=\"ql-code-block\" data-language=\"plain\">%print(data=varsmap, obs=100); </div><div class=\"ql-code-block\" data-language=\"plain\">%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">\tt1=varsmap,</div><div class=\"ql-code-block\" data-language=\"plain\">\tt2=_XPilot7a,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttarget=_XPilot7,</div><div class=\"ql-code-block\" data-language=\"plain\">\tvars=%str(t1.*, ifn(t2.variable=\"\", 0, 1) as S7),</div><div class=\"ql-code-block\" data-language=\"plain\">\tjtype=left,</div><div class=\"ql-code-block\" data-language=\"plain\">\tjterm=%str(t1.renamed=t2.variable)</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._xpilot7;\tset _xpilot7;run;</div></div><p><br></p>","children":[{"idx":"MY955675cd-cfd3-46de-8f10-fe75bdcb1aad","name":"Add Vars that must be included","custparents":[{"idx":"MYf6274531-ebc5-47aa-a250-d51131891c0e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%let mustHaveCoVars=&amp;CatMainVar &amp;NumMainVar Sex_desc ResiType ;</div><div class=\"ql-code-block\" data-language=\"plain\">%put &gt;&gt;&gt; &amp;mustHaveCoVars;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>","children":[{"idx":"MY799661bb-2097-4f5e-a1a0-c4b52871ccda","name":"Save the var string into a table [StringToTable()]","custparents":[{"idx":"MY955675cd-cfd3-46de-8f10-fe75bdcb1aad"}],"children":[{"idx":"MY2e715885-ea7c-4813-833f-73a5c2c47fd9","name":"Make a table with selected Vars","custparents":[{"idx":"MY799661bb-2097-4f5e-a1a0-c4b52871ccda"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*in _XPilot7, indicate those selected in _XPilot8a*/</div><div class=\"ql-code-block\">%sqljoinv2(</div><div class=\"ql-code-block\">\tt1=_XPilot7,</div><div class=\"ql-code-block\">\tt2=_XPilot8a,</div><div class=\"ql-code-block\">\ttarget=_XPilot8b,</div><div class=\"ql-code-block\">\tvars=%str(t1.*, ifn(t2.original=\"\", 0, 1) as S8),</div><div class=\"ql-code-block\">\tjtype=left,</div><div class=\"ql-code-block\">\tjterm=%str(strip(upcase(t1.original))=strip(upcase(t2.original))),</div><div class=\"ql-code-block\">\torderby=t1.renamed</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._XPilot8b;\tset _XPilot8b;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data _XPilot8;</div><div class=\"ql-code-block\">\tset _XPilot8b;</div><div class=\"ql-code-block\">\ts8=sum(s8, s7);</div><div class=\"ql-code-block\">\tif S8 &gt; 1 then S8=1;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot8;\tset _XPilot8;run;</div></div>","children":[{"idx":"MYf03afa28-a15e-4d89-969a-6a88f79ac36a","name":"Make strings for continuous and categorical vars","custparents":[{"idx":"MY2e715885-ea7c-4813-833f-73a5c2c47fd9"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*make variable strings*/</div><div class=\"ql-code-block\">data _XPilot8_N _XPilot8_C;</div><div class=\"ql-code-block\">\tset _XPilot8;</div><div class=\"ql-code-block\">\twhere S8&gt;0;</div><div class=\"ql-code-block\">\tif renamed not in:('X01_') then do;</div><div class=\"ql-code-block\">\t\tif index(renamed, '_N') &gt; 0 then output _XPilot8_N;</div><div class=\"ql-code-block\">\t\telse output _XPilot8_C;</div><div class=\"ql-code-block\">\tend;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot8_C;\tset _XPilot8_C;run;</div><div class=\"ql-code-block\">data teestT._XPilot8_N;\tset _XPilot8_N;run;</div><div class=\"ql-code-block\">/*selected stdNumCoVars*/</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot8_N, theVar=renamed, theStrVarName=stdNumCoVars_S2, DLMT=);</div><div class=\"ql-code-block\">/*selected stdCatCoVars*/</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot8_C, \ttheVar=renamed, theStrVarName=stdCatCoVars_selected2, DLMT= );</div><div class=\"ql-code-block\">/*change categorical vars from X01_C to X01_C_CatN by adding the surfix _CatN*/</div><div class=\"ql-code-block\">%VarsAddPreSurfix(srcVars=&amp;stdCatCoVars_selected2, targetVarName=stdCatCoVars_SCatN2, prefix=, DLMT= , surfix=_CatN);</div><div class=\"ql-code-block\"><br></div></div>"}]},{"idx":"MY8147bdb7-6866-45ad-b971-b2fdab6bd2df","name":"substeps","custparents":[{"idx":"MY799661bb-2097-4f5e-a1a0-c4b52871ccda"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro StringToTable(theStr=, target=, varname=, dlmt=, debug=);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local theStr target debug workpath dlmt;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt)=0 %then %let dlmt =' ';</div><div class=\"ql-code-block\">\t%if %length(&amp;varname)=0 %then %let varname =variable;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*8. add must have vars (even if it was not selected in model selection)*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*lookup the musthaveCovars, and get the std var names (e.g., X02_C, X50_N)</div><div class=\"ql-code-block\">\t\tCheck if these vars are in the var string </div><div class=\"ql-code-block\">\t\t\t1) for categorical vars, in &amp;stdCatCoVars_SCatN2</div><div class=\"ql-code-block\">\t\t\t\tif not, add the vars into &amp;stdCatCoVars_SCatN2</div><div class=\"ql-code-block\">\t\t\t2) for numerical vars, in &amp;stdNumCoVars_S3</div><div class=\"ql-code-block\">\t\t\t\tif not, add the categorical type (_QuaN) into stdNumVars_CatN9</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*Input values in the string mustHaveCoVars into a data set</div><div class=\"ql-code-block\">\tNote: dateline does not work in SAS macros. </div><div class=\"ql-code-block\">\tFollowing is an alternative way:</div><div class=\"ql-code-block\">\tCreating temporary files:</div><div class=\"ql-code-block\">\thttps://documentation.sas.com/?docsetId=dispatch&amp;docsetTarget=sasintra.htm&amp;docsetVersion=9.4&amp;locale=en</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*Create a temp file in work path*/</div><div class=\"ql-code-block\">\t%let workpath = %sysfunc(pathname(work));</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; &amp;workpath;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*create a tmp txt file in the workpath, and give it a nickname*/</div><div class=\"ql-code-block\">\tfilename tmptxt \"&amp;workpath.\\_tmp.txt\";</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*write the values in &amp;theStr into the tmp txt file */</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tfile tmptxt;</div><div class=\"ql-code-block\">\t\tput \"&amp;theStr\";</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*input values from that temp file*/</div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tformat &amp;varName $30.;</div><div class=\"ql-code-block\">\t\tinfile tmptxt dlm=&amp;dlmt;</div><div class=\"ql-code-block\">\t\tinput &amp;varName @@;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*clear filename*/</div><div class=\"ql-code-block\">\tfilename tmptxt clear;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend StringToTable;</div></div>","children":[{"idx":"MY59b1b61c-2b68-433e-95f9-1022cc6e9e86","name":"set local vars","custparents":[{"idx":"MY8147bdb7-6866-45ad-b971-b2fdab6bd2df"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local theStr target debug workpath dlmt;</div></div>","children":[{"idx":"MY59b978d0-94be-430b-8c57-939e44b61071","name":"set default values","custparents":[{"idx":"MY59b1b61c-2b68-433e-95f9-1022cc6e9e86"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if %length(&amp;dlmt)=0 %then %let dlmt =' ';</div><div class=\"ql-code-block\">\t%if %length(&amp;varname)=0 %then %let varname =variable;</div></div>","children":[{"idx":"MY16f91dba-8532-4006-9fce-001adcc7f857","name":"Create a temp file in work path","custparents":[{"idx":"MY59b978d0-94be-430b-8c57-939e44b61071"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*Input values of &amp;str into a data set</div><div class=\"ql-code-block\">\tNote: dateline does not work in SAS macros. </div><div class=\"ql-code-block\">\tFollowing is an alternative way:</div><div class=\"ql-code-block\">\tCreating temporary files:</div><div class=\"ql-code-block\">\thttps://documentation.sas.com/?docsetId=dispatch&amp;docsetTarget=sasintra.htm&amp;docsetVersion=9.4&amp;locale=en</div><div class=\"ql-code-block\">\t*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*Create a temp file in work path*/</div><div class=\"ql-code-block\">\t%let workpath = %sysfunc(pathname(work));</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; &amp;workpath;</div></div>","children":[{"idx":"MY0685b373-7b40-4cfa-bbe1-7d8bee76392d","name":"Create a tmp txt file in the work path","custparents":[{"idx":"MY16f91dba-8532-4006-9fce-001adcc7f857"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*create a tmp txt file in the workpath, and give it a nickname*/</div><div class=\"ql-code-block\">\tfilename tmptxt \"&amp;workpath.\\_tmp.txt\";</div></div>","children":[{"idx":"MY7ba01fff-bcb8-4059-989c-43eb231ee148","name":"Put values of the src string into the temp txt file","custparents":[{"idx":"MY0685b373-7b40-4cfa-bbe1-7d8bee76392d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*create a tmp txt file in the workpath, and give it a nickname*/</div><div class=\"ql-code-block\">\tfilename tmptxt \"&amp;workpath.\\_tmp.txt\";</div></div>","children":[{"idx":"MY0becb7d3-507a-4d4e-a3df-66f668893a7d","name":"input the contents from the temp txt file to a dataset","custparents":[{"idx":"MY7ba01fff-bcb8-4059-989c-43eb231ee148"}]}]}]}]}]}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%StringToTable(theStr=&amp;mustHaveCoVars, target=_XPilot8a, varname=original, dlmt=, debug=);</div><div class=\"ql-code-block\">data teestT._XPilot8a;\tset _XPilot8a;run;</div></div>"}]}]}]}]},{"idx":"MYd1c093af-ce06-4096-aa13-a2e7e7ed5e83","name":"Check interaction with the main variable","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"children":[{"idx":"MY05088efa-c80f-471c-b969-d93729731384","name":"Run checkVarsIntInt()","custparents":[{"idx":"MYd1c093af-ce06-4096-aa13-a2e7e7ed5e83"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro checkVarsIntInt(data=, theVars=, theVarsMapFile=, stdCatMainVar_CatN=, stdNumMainVar=, debug=, target=);</div><div class=\"ql-code-block\">\t%local data theVars theVarsMapFile dlmt i theVar stdCatMainVar_CatN stdNumMainVar target debug ;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tformat renamed $30. original $100. intTerm $200. theVar $30.;</div><div class=\"ql-code-block\">\t\tdelete;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*For a given var (theVar), check if it has siginficant interaction with the main var.</div><div class=\"ql-code-block\">\t\t\tIf the ineraction is significant, return &amp;theVar into theIntVar (a global var) (like age, or Sex_desc, or resitype) </div><div class=\"ql-code-block\">\t\t\tif the interaction is not significant, return a null value in theIntVar</div><div class=\"ql-code-block\">\t\t*/</div><div class=\"ql-code-block\">\t\t%checkTheVarIntInt (</div><div class=\"ql-code-block\">\t\t\tdata=&amp;data,</div><div class=\"ql-code-block\">\t\t\ttheVar=&amp;theVar, </div><div class=\"ql-code-block\">\t\t\ttheVarsMapFile=VarsMap, </div><div class=\"ql-code-block\">\t\t\tstdCatMainVar_CatN=&amp;stdCatMainVar_CatN, </div><div class=\"ql-code-block\">\t\t\tstdNumMainVar=&amp;stdNumMainVar,</div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug,</div><div class=\"ql-code-block\">\t\t\ttarget=checkVarsIntInt_tmp1</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset &amp;target checkVarsIntInt_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\t\tdelete checkVarsIntInt_tmp1;</div><div class=\"ql-code-block\">\t\t\trun;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend checkVarsIntInt;</div></div>","children":[{"idx":"MY29d27f0e-0b43-4da1-b5a2-873146ed8d7a","name":"Keep interaction terms that are siginficant","custparents":[{"idx":"MY05088efa-c80f-471c-b969-d93729731384"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*if check all vars, then some do have interaction with the main effect. But these conditions are not major, and not really of interest ...*/</div><div class=\"ql-code-block\">data _XPilot9;</div><div class=\"ql-code-block\">\tset _XPilot9a;</div><div class=\"ql-code-block\">\tif pValue &lt; .05 ;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot9;\tset _XPilot9;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*keep interested interaction terms in the final model </div><div class=\"ql-code-block\">\thowever, the vars should be determined later (depending on whether to include the numeric value, </div><div class=\"ql-code-block\">\tor the categories of the numeric value)</div><div class=\"ql-code-block\">*/</div></div>"}],"_substeps":{"idx":"MY00581e00-673f-452f-b31c-f18fd8bc61e3","name":"substeps","custparents":[{"idx":"MY05088efa-c80f-471c-b969-d93729731384"}],"children":[{"idx":"MYa594c85b-70bc-4bfa-9ff0-de6d0668734c","name":"set local vars","custparents":[{"idx":"MY00581e00-673f-452f-b31c-f18fd8bc61e3"}],"children":[{"idx":"MYcbfbad55-6c42-44d9-ab01-df992173ac93","name":"Init target file","custparents":[{"idx":"MYa594c85b-70bc-4bfa-9ff0-de6d0668734c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tformat renamed $30. original $100. intTerm $200. theVar $30.;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdelete;</div><div class=\"ql-code-block\" data-language=\"plain\">\trun;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>","children":[{"idx":"MY26862bed-ad30-485c-84f1-43440a46e21f","name":"Loop for each var and check interaction with the main var","custparents":[{"idx":"MYcbfbad55-6c42-44d9-ab01-df992173ac93"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*For a given var (theVar), check if it has siginficant interaction with the main var.</div><div class=\"ql-code-block\">\t\t\tIf the ineraction is significant, return &amp;theVar into theIntVar (a global var) (like age, or Sex_desc, or resitype) </div><div class=\"ql-code-block\">\t\t\tif the interaction is not significant, return a null value in theIntVar</div><div class=\"ql-code-block\">\t\t*/</div><div class=\"ql-code-block\">\t\t%checkTheVarIntInt (</div><div class=\"ql-code-block\">\t\t\tdata=&amp;data,</div><div class=\"ql-code-block\">\t\t\ttheVar=&amp;theVar, </div><div class=\"ql-code-block\">\t\t\ttheVarsMapFile=VarsMap, </div><div class=\"ql-code-block\">\t\t\tstdCatMainVar_CatN=&amp;stdCatMainVar_CatN, </div><div class=\"ql-code-block\">\t\t\tstdNumMainVar=&amp;stdNumMainVar,</div><div class=\"ql-code-block\">\t\t\tdebug=&amp;debug,</div><div class=\"ql-code-block\">\t\t\ttarget=checkVarsIntInt_tmp1</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset &amp;target checkVarsIntInt_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\t\tdelete checkVarsIntInt_tmp1;</div><div class=\"ql-code-block\">\t\t\trun;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div></div>","children":[{"idx":"MY364a11d5-a8c3-4b48-accc-051445a6523f","name":"Run checkTheVarIntInt()","custparents":[{"idx":"MY26862bed-ad30-485c-84f1-43440a46e21f"}],"children":[{"idx":"MYd3522362-98cf-4007-b4a2-8505c9ce53cc","name":"Append results to the target file","custparents":[{"idx":"MY364a11d5-a8c3-4b48-accc-051445a6523f"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"true\">\t\tdata &amp;target;</div><div class=\"ql-code-block\" data-language=\"true\">\t\t\tset &amp;target checkVarsIntInt_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div></div>","children":[{"idx":"MYc3da241c-50ec-4794-96e4-5c5ba3e15b79","name":"Delete tmp files","custparents":[{"idx":"MYd3522362-98cf-4007-b4a2-8505c9ce53cc"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tproc datasets nolist;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t\tdelete checkVarsIntInt_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%end;</div></div><p><br></p>"}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*For a given var (theVar), check if it has siginficant interaction with the main var.</div><div class=\"ql-code-block\">\tIf the ineraction is significant, return &amp;theVar into theIntVar (a global var) (like age, or Sex_desc, or resitype) </div><div class=\"ql-code-block\">\tif the interaction is not significant, return a null value in theIntVar</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">%macro checkTheVarIntInt (data=, theVar=, theVarsMapFile=, stdCatMainVar_CatN=, stdNumMainVar=, target=, debug=);</div><div class=\"ql-code-block\">\t\t%local data theVar theStdVar theStdVarC theStdVarN theIntTerm stdCatMainVar_CatN stdNumMainVar target debug theIntVar ;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*lookup the varsmap and find the corresponding std var name*/</div><div class=\"ql-code-block\">\t\t%let theVar=%upcase(&amp;theVar);</div><div class=\"ql-code-block\">\t\tdata _null_;</div><div class=\"ql-code-block\">\t\t\tset &amp;theVarsMapFile;</div><div class=\"ql-code-block\">\t\t\twhere upcase(original) = \"&amp;theVar\";</div><div class=\"ql-code-block\">\t\t\tcall symput ('theStdVar', renamed);</div><div class=\"ql-code-block\">\t\t\tcall symput ('theIntVar', original);</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\t%let theStdVar=%sysfunc(strip(&amp;theStdVar));</div><div class=\"ql-code-block\">\t\t/*theIntVar differs from theVar in that theIntVar is exactly the var in the map file (e.g., Sex_Desc), while</div><div class=\"ql-code-block\">\t\t\t\ttheVar can be of different case (e.g., sex_desc)*/</div><div class=\"ql-code-block\">\t\t%let theIntVar=%sysfunc(strip(&amp;theIntVar));</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; theStdVar = &amp;theStdVar;</div><div class=\"ql-code-block\">\t\t/*determine the proper name for the stdVar (either save as a categorical var in theStdVarC, or a continuous var in theStdVarN*/</div><div class=\"ql-code-block\">\t\t%if %substr(&amp;theStdVar, %length(&amp;theStdVar), 1) = C %then %do;</div><div class=\"ql-code-block\">\t\t\t%let theStdVarC = %sysfunc(strip(&amp;theStdVar))_CatN;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\">\t\t%else %do;</div><div class=\"ql-code-block\">\t\t\t%let theStdVarN =&amp;theStdVar;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; theStdVarC=&amp;theStdVarC;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; theStdVarN=&amp;theStdVarN;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*determine the interaction between thestdVar, and  the main variable*/</div><div class=\"ql-code-block\">\t\t%if %length(&amp;stdCatMainVar_CatN) ne 0 %then %let theVarIntTerm = &amp;stdCatMainVar_CatN*&amp;theStdVarC&amp;theStdVarN;</div><div class=\"ql-code-block\">\t\t%else %let theVarIntTerm = &amp;stdNumMainVar*&amp;theStdVarC&amp;theStdVarN;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*if the theStdVarC is not in stdCatCoVars_SCatN2, add it into the latter*/</div><div class=\"ql-code-block\">\t\t%if %length(&amp;theStdVarC) ne 0 and %index(&amp;stdCatCoVars_SCatN2, &amp;theStdVarC) = 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t%let stdCatCoVars_SCatN2= &amp;stdCatCoVars_SCatN2 &amp;theStdVarC;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*if the theStdVarN is not in stdNumCoVars_S2, add it into the latter*/</div><div class=\"ql-code-block\">\t\t%if %length(&amp;theStdVarN) ne 0 and %index(&amp;stdNumCoVars_S2, &amp;theStdVarN) = 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t%let stdNumCoVars_S2= &amp;stdNumCoVars_S2 &amp;theStdVarN;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; stdCatCoVars_SCatN2=&amp;stdCatCoVars_SCatN2;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; stdNumCoVars_S2=&amp;stdNumCoVars_S2;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*\t\tods trace on;*/</div><div class=\"ql-code-block\">\t\tods results off;</div><div class=\"ql-code-block\">\t\t/*allow max length of the output var field =200 (e.g., </div><div class=\"ql-code-block\">\t\t\tin the type 3/ANOVA ods table, and in the column 'effect', the interaction term 'X01_C_CatN*X03_C_CatN'</div><div class=\"ql-code-block\">\t\t\tis of a length of 21. By default, the column 'effect' is of 20 in length, part of the interaction term name will be truncated. </div><div class=\"ql-code-block\">\t\t\twhen specifed as namelen=200, The length of column 'effect' will be extended to 21 (the max in all variable terms) </div><div class=\"ql-code-block\">\t\t*/</div><div class=\"ql-code-block\">\t\tproc logistic data=&amp;data namelen=200;</div><div class=\"ql-code-block\">\t\t\tclass &amp;stdCatMainVar_CatN   &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t\t model Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2 &amp;stdNumCoVars_S2  &amp;theVarIntTerm ; </div><div class=\"ql-code-block\">\t\t\t/*only check two way interactions*/</div><div class=\"ql-code-block\">\t\t\tods output ModelANOVA = checkTheVarIntInt_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\tods results on;</div><div class=\"ql-code-block\">/*\t\tods trace off;*/</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t/*save the interaction terms into the target set*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tformat renamed $30. original $100. effect $200. theVar $30. ;</div><div class=\"ql-code-block\">\t\t\tset checkTheVarIntInt_tmp1;</div><div class=\"ql-code-block\">\t\t\trenamed = \"&amp;theStdVar\";</div><div class=\"ql-code-block\">\t\t\toriginal=\"&amp;theIntVar\";</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;theStdVarC) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\ttheVar = \"&amp;theStdVarC\";</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\t%else %do;</div><div class=\"ql-code-block\">\t\t\t\ttheVar = \"&amp;theStdVarN\";</div><div class=\"ql-code-block\">\t\t\t%end;\t\t\t</div><div class=\"ql-code-block\">\t\t\trename  </div><div class=\"ql-code-block\">\t\t\t\teffect = intTerm</div><div class=\"ql-code-block\">\t\t\t\tProbChisq = pValue;</div><div class=\"ql-code-block\">\t\t\t\tif index(effect , '*') &gt;0  and (index(effect, \"&amp;theStdVarC\") &gt;0 or index(effect, \"&amp;theStdVarN\") &gt;0 ) ;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\t\tdelete checkTheVarIntInt_tmp:;</div><div class=\"ql-code-block\">\t\t\trun;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend checkTheVarIntInt;</div></div>","_substeps":{"idx":"MY01adb25a-a72a-4a72-990b-53d331b270dd","name":"substeps","custparents":[{"idx":"MY364a11d5-a8c3-4b48-accc-051445a6523f"}],"children":[{"idx":"MY033625c4-2600-47b3-a717-7215af6e0b9b","name":"set local vars","custparents":[{"idx":"MY01adb25a-a72a-4a72-990b-53d331b270dd"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%local data theVar theStdVar theStdVarC theStdVarN theIntTerm stdCatMainVar_CatN stdNumMainVar target debug theIntVar ;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>","children":[{"idx":"MYb0b54b22-a44a-491c-aa64-1719c2cd209e","name":"Lookup the std covariate names","custparents":[{"idx":"MY033625c4-2600-47b3-a717-7215af6e0b9b"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*lookup the varsmap and find the corresponding std var name*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVar=%upcase(&amp;theVar);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tdata _null_;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tset &amp;theVarsMapFile;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\twhere upcase(original) = \"&amp;theVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tcall symput ('theStdVar', renamed);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tcall symput ('theIntVar', original);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\trun;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theStdVar=%sysfunc(strip(&amp;theStdVar));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*theIntVar differs from theVar in that theIntVar is exactly the var in the map file (e.g., Sex_Desc), while</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t\ttheVar can be of different case (e.g., sex_desc)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theIntVar=%sysfunc(strip(&amp;theIntVar));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt; theStdVar = &amp;theStdVar;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*determine the proper name for the stdVar (either save as a categorical var in theStdVarC, or a continuous var in theStdVarN*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%if %substr(&amp;theStdVar, %length(&amp;theStdVar), 1) = C %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let theStdVarC = %sysfunc(strip(&amp;theStdVar))_CatN;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%else %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let theStdVarN =&amp;theStdVar;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt; theStdVarC=&amp;theStdVarC;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt; theStdVarN=&amp;theStdVarN;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>","children":[{"idx":"MY8925a99a-d785-4cf7-8292-ee4731266770","name":"Make interaction terms (covariates and the main var)","custparents":[{"idx":"MYb0b54b22-a44a-491c-aa64-1719c2cd209e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*determine the interaction between thestdVar, and  the main variable*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%if %length(&amp;stdCatMainVar_CatN) ne 0 %then %let theVarIntTerm = &amp;stdCatMainVar_CatN*&amp;theStdVarC&amp;theStdVarN;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%else %let theVarIntTerm = &amp;stdNumMainVar*&amp;theStdVarC&amp;theStdVarN;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*if the theStdVarC is not in stdCatCoVars_SCatN2, add it*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%if %length(&amp;theStdVarC) ne 0 and %index(&amp;stdCatCoVars_SCatN2, &amp;theStdVarC) = 0 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let stdCatCoVars_SCatN2= &amp;stdCatCoVars_SCatN2 &amp;theStdVarC;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*if the theStdVarN is not in stdNumCoVars_S2, add it */</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%if %length(&amp;theStdVarN) ne 0 and %index(&amp;stdNumCoVars_S2, &amp;theStdVarN) = 0 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\t%let stdNumCoVars_S2= &amp;stdNumCoVars_S2 &amp;theStdVarN;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%end;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt; stdCatCoVars_SCatN2=&amp;stdCatCoVars_SCatN2;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt; stdNumCoVars_S2=&amp;stdNumCoVars_S2;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">ods trace on;</div><div class=\"ql-code-block\" data-language=\"plain\">ods results off;</div><div class=\"ql-code-block\" data-language=\"plain\">/*allow max length of the output var field =200 (e.g.,</div><div class=\"ql-code-block\" data-language=\"plain\">in the type 3/ANOVA ods table, and in the column 'effect', the interaction term 'X01_C_CatN*X03_C_CatN'</div><div class=\"ql-code-block\" data-language=\"plain\">is of a length of 21. By default, the column 'effect' is of 20 in length, part of the interaction term name will be truncated.</div><div class=\"ql-code-block\" data-language=\"plain\">when specifed as namelen=200, The length of column 'effect' will be extended to 21 (the max in all variable terms)</div><div class=\"ql-code-block\" data-language=\"plain\">*/</div><div class=\"ql-code-block\" data-language=\"plain\">proc logistic data=&amp;data namelen=200;</div><div class=\"ql-code-block\" data-language=\"plain\">class &amp;stdCatMainVar_CatN &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\" data-language=\"plain\">model Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2 &amp;stdNumCoVars_S2 &amp;theVarIntTerm ;</div><div class=\"ql-code-block\" data-language=\"plain\">/*only check two way interactions*/</div><div class=\"ql-code-block\" data-language=\"plain\">ods output ModelANOVA = checkTheVarIntInt_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">ods results on;</div><div class=\"ql-code-block\" data-language=\"plain\">ods trace off;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">/*save the interaction terms into the target set*/</div><div class=\"ql-code-block\" data-language=\"plain\">data &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">format renamed $30. original $50. effect $200. ;</div><div class=\"ql-code-block\" data-language=\"plain\">set checkTheVarIntInt_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">renamed = \"&amp;theStdVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">original=\"&amp;theIntVar\";</div><div class=\"ql-code-block\" data-language=\"plain\">rename</div><div class=\"ql-code-block\" data-language=\"plain\">effect = intTerm</div><div class=\"ql-code-block\" data-language=\"plain\">ProbChisq = pValue;</div><div class=\"ql-code-block\" data-language=\"plain\">if index(effect , '*') &gt;0 and index(effect, \"&amp;theStdVar2\") &gt;0;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">proc datasets nolist;</div><div class=\"ql-code-block\" data-language=\"plain\">delete checkTheVarIntInt_tmp:;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">%</div></div><p><br></p>","children":[{"idx":"MYb84cdc51-c39a-445d-b0d6-7fcc46c6cecb","name":"Test the interaction in logistic models","custparents":[{"idx":"MY8925a99a-d785-4cf7-8292-ee4731266770"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*\t\tods trace on;*/</div><div class=\"ql-code-block\">\t\tods results off;</div><div class=\"ql-code-block\">\t\t/*allow max length of the output var field =200 (e.g., </div><div class=\"ql-code-block\">\t\t\tin the type 3/ANOVA ods table, and in the column 'effect', the interaction term 'X01_C_CatN*X03_C_CatN'</div><div class=\"ql-code-block\">\t\t\tis of a length of 21. By default, the column 'effect' is of 20 in length, part of the interaction term name will be truncated. </div><div class=\"ql-code-block\">\t\t\twhen specifed as namelen=200, The length of column 'effect' will be extended to 21 (the max in all variable terms) </div><div class=\"ql-code-block\">\t\t*/</div><div class=\"ql-code-block\">\t\tproc logistic data=&amp;data namelen=200;</div><div class=\"ql-code-block\">\t\t\tclass &amp;stdCatMainVar_CatN   &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t\t model Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2 &amp;stdNumCoVars_S2  &amp;theVarIntTerm ; </div><div class=\"ql-code-block\">\t\t\t/*only check two way interactions*/</div><div class=\"ql-code-block\">\t\t\tods output ModelANOVA = checkTheVarIntInt_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\tods results on;</div><div class=\"ql-code-block\">/*\t\tods trace off;*/</div></div>","children":[{"idx":"MY7528a4b5-5425-4ed3-bfbf-9e2050c6a20f","name":"Save interaction term effect","custparents":[{"idx":"MYb84cdc51-c39a-445d-b0d6-7fcc46c6cecb"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t/*save the interaction terms into the target set*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tformat renamed $30. original $100. effect $200. theVar $30. ;</div><div class=\"ql-code-block\">\t\t\tset checkTheVarIntInt_tmp1;</div><div class=\"ql-code-block\">\t\t\trenamed = \"&amp;theStdVar\";</div><div class=\"ql-code-block\">\t\t\toriginal=\"&amp;theIntVar\";</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;theStdVarC) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\ttheVar = \"&amp;theStdVarC\";</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\t%else %do;</div><div class=\"ql-code-block\">\t\t\t\ttheVar = \"&amp;theStdVarN\";</div><div class=\"ql-code-block\">\t\t\t%end;\t\t\t</div><div class=\"ql-code-block\">\t\t\trename  </div><div class=\"ql-code-block\">\t\t\t\teffect = intTerm</div><div class=\"ql-code-block\">\t\t\t\tProbChisq = pValue;</div><div class=\"ql-code-block\">\t\t\t\tif index(effect , '*') &gt;0  and (index(effect, \"&amp;theStdVarC\") &gt;0 or index(effect, \"&amp;theStdVarN\") &gt;0 ) ;</div><div class=\"ql-code-block\">\t\trun;</div></div>","children":[{"idx":"MYb4981d6f-ad6c-4c2a-90ab-f5db0aeb4408","name":"Delete tmp files","custparents":[{"idx":"MY7528a4b5-5425-4ed3-bfbf-9e2050c6a20f"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\t\tdelete checkTheVarIntInt_tmp:;</div><div class=\"ql-code-block\">\t\t\trun;</div><div class=\"ql-code-block\">\t\t%end;</div></div>"}]}]}]}]}]}]}}]}]}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%local data theVars theVarsMapFile dlmt i theVar stdCatMainVar_CatN stdNumMainVar target debug ;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"}]}}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*9. Given a list of interestd vars, check interaction with the main variable. </div><div class=\"ql-code-block\" data-language=\"plain\">\tThe result is a table containing interested vars, and the type 3 result of the interaction terms (each interested var * the main variable)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\te.g., resitype * X01_CatN</div><div class=\"ql-code-block\" data-language=\"plain\">*/</div><div class=\"ql-code-block\" data-language=\"plain\">%checkVarsIntInt(</div><div class=\"ql-code-block\" data-language=\"plain\">\tdata = _XPilot4,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttheVars= &amp;NumCoVars &amp;CatCoVars, </div><div class=\"ql-code-block\" data-language=\"plain\">\ttheVarsMapFile=VarsMap, </div><div class=\"ql-code-block\" data-language=\"plain\">\tstdCatMainVar_CatN=&amp;stdCatMainVar_CatN, </div><div class=\"ql-code-block\" data-language=\"plain\">\tstdNumMainVar=&amp;stdNumMainVar,</div><div class=\"ql-code-block\" data-language=\"plain\">\tdebug=,</div><div class=\"ql-code-block\" data-language=\"plain\">\ttarget =_XPilot9a</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._XPilot9a;\tset _XPilot9a;run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"},{"idx":"MYa5082dcd-24da-4561-a3ae-5574bd9209b8","name":"Determine the best var type (continuous or categorical)","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*Determine what type of var best fit the models, i.e., numeric value, or categories, </div><div class=\"ql-code-block\">\tcheck AIC and -2Log</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">%checkVarsNumCatFit(</div><div class=\"ql-code-block\">\tdata=_XPilot4, </div><div class=\"ql-code-block\">\tintintTable=_XPilot9, </div><div class=\"ql-code-block\">\ttheVars = &amp;stdNumCoVars_S2 , </div><div class=\"ql-code-block\">\tstdNumCoVars_S2=&amp;stdNumCoVars_S2,</div><div class=\"ql-code-block\">\tstdCatMainVar_CatN=&amp;stdCatMainVar_CatN, </div><div class=\"ql-code-block\">\tstdNumMainVar=&amp;stdNumMainVar, </div><div class=\"ql-code-block\">\tstdCatCoVars_SCatN2=&amp;stdCatCoVars_SCatN2, </div><div class=\"ql-code-block\">\ttarget=_XPilot10a, </div><div class=\"ql-code-block\">\tdebug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">data teestT._XPilot10a;\tset _XPilot10a;run;</div></div>","children":[{"idx":"MYc9d238cd-aa4b-419c-b781-07108eb2d4a2","name":"Make a table for selected vars","custparents":[{"idx":"MYa5082dcd-24da-4561-a3ae-5574bd9209b8"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*From above, make a distinct list of num var types that are best fit*/</div><div class=\"ql-code-block\">%distinct(data=_XPilot10a, target=_XPilot10b, vars=%str(renamed, ref_covar));</div><div class=\"ql-code-block\">data teestT._XPilot10b;\tset _XPilot10b;run;</div></div>","children":[{"idx":"MY3eed8311-c776-42bc-9f9b-70685dc25aa5","name":"Make strings of selected vars","custparents":[{"idx":"MYc9d238cd-aa4b-419c-b781-07108eb2d4a2"}],"children":[{"idx":"MYd9b644a0-b216-4acb-899f-da8720e8b056","name":"Make a string of categorical type of the original num vars","custparents":[{"idx":"MY3eed8311-c776-42bc-9f9b-70685dc25aa5"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*A string of</div><div class=\"ql-code-block\">\tthe categorical var names of the original continuous vars</div><div class=\"ql-code-block\">\t\t(e.g., X49_N =&gt; X49_N_QuiN ...)</div><div class=\"ql-code-block\">\tWhich is to be added in the class statement, and the model statement as well</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">/*From _XPilot10b, select rows that a ref_CoVar not equal to the numeric var</div><div class=\"ql-code-block\">\te.g., the numeric var (in the column 'renamed') = X49_N</div><div class=\"ql-code-block\">\twhile the ref_CoVar = X49_N_QuiN</div><div class=\"ql-code-block\">\tIn that case, X49_N_QuiN (age measured by categories) better fits the model than X49_N (the continuous measure)</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">data _XPilot10c;\t</div><div class=\"ql-code-block\">\tset _XPilot10b;</div><div class=\"ql-code-block\">\tif renamed ne ref_Covar;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot10c, \ttheVar=ref_CoVar, theStrVarName=stdNumVars_CatN10, DLMT= );</div><div class=\"ql-code-block\">%put stdNumVars_CatN10 = &amp;stdNumVars_CatN10;</div><div class=\"ql-code-block\">/*stdNumVars_CatN9 is like 'X49_N_QUIN X51_N_QUIN X52_N_QUIN X53_N_QUAN'*/</div><div class=\"ql-code-block\">data teestT._XPilot10c;\tset _XPilot10c;run;</div></div>"},{"idx":"MY37109a13-dd7a-4138-bf66-037cea91e9ea","name":"Make a string of num vars in original (continuous) type","custparents":[{"idx":"MY3eed8311-c776-42bc-9f9b-70685dc25aa5"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*A string of</div><div class=\"ql-code-block\">\tthe original continuous vars in continuouse type (e.g., X49_N)</div><div class=\"ql-code-block\">\t\twhich is to replace &amp;stdNumCoVars_S3 in the model statement </div><div class=\"ql-code-block\">\tIt would be the flip of the above (rows that the values are the same in the column 'renamed' and in 'ref_CoVar'</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">data _XPilot10d;</div><div class=\"ql-code-block\">\tset _XPilot10b;</div><div class=\"ql-code-block\">\tif renamed=ref_CoVar;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">data teestT._XPilot10d;\tset _XPilot10d;run;</div><div class=\"ql-code-block\">/*If _XPilot10d is empty, the result var stdNumVars9 will be empty*/</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot10d, \ttheVar=ref_CoVar, theStrVarName=stdNumVars10, DLMT= );</div><div class=\"ql-code-block\">%put &gt;&gt;&gt; stdNumVars10 = &amp;stdNumVars10;</div></div>"},{"idx":"MY32807d67-e07d-4152-9a09-0af60129e62a","name":"A string of interaction terms (numvars in cat or num type)","custparents":[{"idx":"MY3eed8311-c776-42bc-9f9b-70685dc25aa5"},{"idx":"MY3eed8311-c776-42bc-9f9b-70685dc25aa5"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/* A string of</div><div class=\"ql-code-block\" data-language=\"plain\">the interactions between the main var and the continuous vars either in the original continuous type, or</div><div class=\"ql-code-block\" data-language=\"plain\">in categorical type if the latter best fit the model</div><div class=\"ql-code-block\" data-language=\"plain\">(e.g., X49_N * X01_C_CatN =&gt; X49_N_QuiN * X01_C_CatN)</div><div class=\"ql-code-block\" data-language=\"plain\">which is to partially replace the &amp;theIntTerm in the model statement for those continuous vars that</div><div class=\"ql-code-block\" data-language=\"plain\">a categorical type better fits the models</div><div class=\"ql-code-block\" data-language=\"plain\">*/</div><div class=\"ql-code-block\" data-language=\"plain\">/*the interaction terms (with the main var) are in _XPilot8*/</div><div class=\"ql-code-block\" data-language=\"plain\">%sqljoinv2(</div><div class=\"ql-code-block\" data-language=\"plain\">t1=_XPilot9,</div><div class=\"ql-code-block\" data-language=\"plain\">t2=_XPilot10c,</div><div class=\"ql-code-block\" data-language=\"plain\">target=_XPilot10e1,</div><div class=\"ql-code-block\" data-language=\"plain\">vars=%str(t1.*, t2.ref_covar),</div><div class=\"ql-code-block\" data-language=\"plain\">jtype=left,</div><div class=\"ql-code-block\" data-language=\"plain\">jvars=renamed</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._XPilot10e1;\tset _XPilot10e1;run;</div><div class=\"ql-code-block\" data-language=\"plain\">/*In the following, the interaction term is partially change (only those continuous vars that a categorical type </div><div class=\"ql-code-block\" data-language=\"plain\">\t\tbetter fit the model will be replaced)</div><div class=\"ql-code-block\" data-language=\"plain\">\te.g. if there are three interaction variables:</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tX02_C_CatN * X01_C_CatN (1)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tX49_N * X01_C_CatN (2), while the categorical measure X49_N_QuiN fits the model better than X49_N</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tX50_N * X01_C_CatN (3), and X50_N fits the model better than (X50_QuiN)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t(1) will be remained unchange</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t(2) X49_N will be replaced by X49_N_QuiN</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t(3) will be remained unchanged</div><div class=\"ql-code-block\" data-language=\"plain\">*/</div><div class=\"ql-code-block\" data-language=\"plain\">data _XPilot10e;</div><div class=\"ql-code-block\" data-language=\"plain\">\tset _XPilot10e1;</div><div class=\"ql-code-block\" data-language=\"plain\">\tformat newIntTerm $100.;</div><div class=\"ql-code-block\" data-language=\"plain\">\tif ref_covar ne '' then do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*replace the var names (e.g., X49_N) with the names in ref_covar (e.g., X49_N_QuiN)*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tnewIntTerm = tranwrd(intTerm, strip(renamed), strip(Ref_CoVar));</div><div class=\"ql-code-block\" data-language=\"plain\">\tend;</div><div class=\"ql-code-block\" data-language=\"plain\">\telse do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tnewIntTerm= intTerm;</div><div class=\"ql-code-block\" data-language=\"plain\">\tend;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">%ValueToString(Data=_XPilot10e, \ttheVar=newIntTerm, theStrVarName=theIntTerm10, DLMT= );</div><div class=\"ql-code-block\" data-language=\"plain\">%put &gt;&gt;&gt; theIntTerm10 = &amp;theIntTerm10;</div><div class=\"ql-code-block\" data-language=\"plain\">data teestT._XPilot10e;\tset _XPilot10e;run;</div></div><p><br></p>"}]}]}]},{"idx":"MY21edba3a-e020-45b0-8e9f-4fa6f83cd594","name":"Determine the interaction terms to be adopted in models","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*decisions, what interaction terms to be retained?*/</div><div class=\"ql-code-block\">%let theIntTerm11=&amp;theIntTerm10;</div></div>"},{"idx":"MYfa40ad1c-16ae-4263-8ec4-797bfe18b54f","name":"Goodness of fit (Lackfit test)","custparents":[{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"},{"idx":"MY911b8084-0a91-4ab7-bd72-132fd62b6d35"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro testLackfit(data=, VarsInModel=);</div><div class=\"ql-code-block\">\t%local data VarsInModel;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*lackfit*/</div><div class=\"ql-code-block\">\t/*ods trace on;*/</div><div class=\"ql-code-block\">\tods results off;</div><div class=\"ql-code-block\">\tproc logistic data=&amp;data namelen=200;</div><div class=\"ql-code-block\">\t\tclass </div><div class=\"ql-code-block\">\t\t\t/*when measured by categories of numeric vars, the categories are added in the class statement */</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;stdNumVars_CatN10) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\t&amp;stdNumVars_CatN10</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\t&amp;stdCatMainVar_CatN  &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t model Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdCatCoVars_SCatN2 </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars_CatN10 </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars10</div><div class=\"ql-code-block\">\t\t\t\t\t&amp;theIntTerm11 /lackfit; </div><div class=\"ql-code-block\">\t\tods output ModelANOVA =_XPilot11a0 LackFitChiSq = _XPilot11a ;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tods results on;</div><div class=\"ql-code-block\">\t/*ods trace off;*/</div><div class=\"ql-code-block\">\tdata teestT._XPilot11a0;\tset _XPilot11a0;run;</div><div class=\"ql-code-block\">\tdata teestT._XPilot11a;\tset _XPilot11a;run;</div><div class=\"ql-code-block\">/**/</div><div class=\"ql-code-block\">/*\t%let VarsInModel = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2  &amp;stdNumVars_CatN10 &amp;stdNumVars10  &amp;theIntTerm11;*/</div><div class=\"ql-code-block\">/*\t%put VarsInModel = &amp;VarsInModel;*/</div><div class=\"ql-code-block\">\t/*store vars into a table*/</div><div class=\"ql-code-block\">\t%StringToTable(theStr=&amp;VarsInModel, target=_XPilot11b1, varname=variable, dlmt=, debug=);</div><div class=\"ql-code-block\">\tdata _XPilot11b2;</div><div class=\"ql-code-block\">\t\tset _XPilot11b1;</div><div class=\"ql-code-block\">\t\tformat renamed $30.;</div><div class=\"ql-code-block\">\t\tif index(variable, '*') = 0 then renamed=scan(variable, 1, '_') || '_' || scan(variable, 2, '_');</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t/*map the original names*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=_XPilot11b2,</div><div class=\"ql-code-block\">\t\tt2=VarsMap,</div><div class=\"ql-code-block\">\t\ttarget=_XPilot11b,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.original),</div><div class=\"ql-code-block\">\t\tjtype=left,</div><div class=\"ql-code-block\">\t\tjvars=renamed,</div><div class=\"ql-code-block\">\t\torderby=renamed</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\">\tdata teestt._XPilot11b;</div><div class=\"ql-code-block\">\t\tset _XPilot11b;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*optional, check all intereactions. Not recommended (takes a lot of time). Only run it when checkAllInteraction=1*/</div><div class=\"ql-code-block\">\t%macro checkAllInt;</div><div class=\"ql-code-block\">\t\t%let vars1= &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2  &amp;stdNumVars_CatN10 &amp;stdNumVars10;</div><div class=\"ql-code-block\">\t\t%AddDlmt(theStr=&amp;vars1, DLMT=|, preFix=);</div><div class=\"ql-code-block\">\t\t%let vars2=&amp;DLMTStr0824;</div><div class=\"ql-code-block\">\t\t%let DLMTStr0824=;</div><div class=\"ql-code-block\">\t\tproc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\t\t\tclass </div><div class=\"ql-code-block\">\t\t\t\t/*when measured by categories of numeric vars, the categories are added in the class statement */</div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars_CatN10</div><div class=\"ql-code-block\">\t\t\t\t&amp;stdCatMainVar_CatN  &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t\t model Y = &amp;vars2 @2 /lackfit; </div><div class=\"ql-code-block\">\t\t\tods output ModelANOVA =_XPilot12b0 LackFitChiSq = _XPilot12b ;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%mend checkAllInt;</div><div class=\"ql-code-block\">\t%if &amp;checkAllInteraction = 1 %then %do;</div><div class=\"ql-code-block\">\t\t\t%checkAllInt;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend testLackFit;</div><div class=\"ql-code-block\">%testLackFit(data=_XPilot4, VarsInModel = &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2  &amp;stdNumVars_CatN10 &amp;stdNumVars10  &amp;theIntTerm11);</div><div class=\"ql-code-block\"><br></div></div>","children":[],"_substeps":{"idx":"MY541afa9a-ed09-420c-8d86-33bdc20b8679","name":"substeps","custparents":[{"idx":"MYfa40ad1c-16ae-4263-8ec4-797bfe18b54f"}],"children":[{"idx":"MY844b96ef-c7e7-47c7-828e-c5ffd8b4304c","name":"set local vars","custparents":[{"idx":"MY541afa9a-ed09-420c-8d86-33bdc20b8679"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%local data VarsInModel;</div></div><p><br></p>","children":[{"idx":"MYdd098df8-1461-4cf3-999b-d4c9c090366c","name":"test lackfit","custparents":[{"idx":"MY844b96ef-c7e7-47c7-828e-c5ffd8b4304c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*lackfit*/</div><div class=\"ql-code-block\">\t/*ods trace on;*/</div><div class=\"ql-code-block\">\tods results off;</div><div class=\"ql-code-block\">\tproc logistic data=&amp;data namelen=200;</div><div class=\"ql-code-block\">\t\tclass </div><div class=\"ql-code-block\">\t\t\t/*when measured by categories of numeric vars, the categories are added in the class statement */</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;stdNumVars_CatN10) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\t&amp;stdNumVars_CatN10</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\t&amp;stdCatMainVar_CatN  &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t model Y = &amp;stdCatMainVar_CatN &amp;stdNumMainVar </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdCatCoVars_SCatN2 </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars_CatN10 </div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars10</div><div class=\"ql-code-block\">\t\t\t\t\t&amp;theIntTerm11 /lackfit; </div><div class=\"ql-code-block\">\t\tods output ModelANOVA =_XPilot11a0 LackFitChiSq = _XPilot11a ;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\tods results on;</div><div class=\"ql-code-block\">\t/*ods trace off;*/</div><div class=\"ql-code-block\">\tdata teestT._XPilot11a0;\tset _XPilot11a0;run;</div><div class=\"ql-code-block\">\tdata teestT._XPilot11a;\tset _XPilot11a;run;</div></div>","children":[{"idx":"MY4bec6ac0-8b36-4248-a891-3638f3c02c08","name":"Store results into a table","custparents":[{"idx":"MYdd098df8-1461-4cf3-999b-d4c9c090366c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*store vars into a table*/</div><div class=\"ql-code-block\">\t%StringToTable(theStr=&amp;VarsInModel, target=_XPilot11b1, varname=variable, dlmt=, debug=);</div><div class=\"ql-code-block\">\tdata _XPilot11b2;</div><div class=\"ql-code-block\">\t\tset _XPilot11b1;</div><div class=\"ql-code-block\">\t\tformat renamed $30.;</div><div class=\"ql-code-block\">\t\tif index(variable, '*') = 0 then renamed=scan(variable, 1, '_') || '_' || scan(variable, 2, '_');</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t/*map the original names*/</div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=_XPilot11b2,</div><div class=\"ql-code-block\">\t\tt2=VarsMap,</div><div class=\"ql-code-block\">\t\ttarget=_XPilot11b,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.original),</div><div class=\"ql-code-block\">\t\tjtype=left,</div><div class=\"ql-code-block\">\t\tjvars=renamed,</div><div class=\"ql-code-block\">\t\torderby=renamed</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\">\tdata teestt._XPilot11b;</div><div class=\"ql-code-block\">\t\tset _XPilot11b;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MYbd546e57-2a0b-4e58-9c49-9925b2f3ee09","name":"Check all 2-way interactions (optional)","custparents":[{"idx":"MY4bec6ac0-8b36-4248-a891-3638f3c02c08"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*optional, check all intereactions. Not recommended (takes a lot of time). Only run it when checkAllInteraction=1*/</div><div class=\"ql-code-block\">\t%macro checkAllInt;</div><div class=\"ql-code-block\">\t\t%let vars1= &amp;stdCatMainVar_CatN &amp;stdNumMainVar &amp;stdCatCoVars_SCatN2  &amp;stdNumVars_CatN10 &amp;stdNumVars10;</div><div class=\"ql-code-block\">\t\t%AddDlmt(theStr=&amp;vars1, DLMT=|, preFix=);</div><div class=\"ql-code-block\">\t\t%let vars2=&amp;DLMTStr0824;</div><div class=\"ql-code-block\">\t\t%let DLMTStr0824=;</div><div class=\"ql-code-block\">\t\tproc logistic data=_XPilot4 namelen=200;</div><div class=\"ql-code-block\">\t\t\tclass </div><div class=\"ql-code-block\">\t\t\t\t/*when measured by categories of numeric vars, the categories are added in the class statement */</div><div class=\"ql-code-block\">\t\t\t\t\t&amp;stdNumVars_CatN10</div><div class=\"ql-code-block\">\t\t\t\t&amp;stdCatMainVar_CatN  &amp;stdCatCoVars_SCatN2 ;</div><div class=\"ql-code-block\">\t\t\t model Y = &amp;vars2 @2 /lackfit; </div><div class=\"ql-code-block\">\t\t\tods output ModelANOVA =_XPilot12b0 LackFitChiSq = _XPilot12b ;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%mend checkAllInt;</div><div class=\"ql-code-block\">\t%if &amp;checkAllInteraction = 1 %then %do;</div><div class=\"ql-code-block\">\t\t\t%checkAllInt;</div><div class=\"ql-code-block\">\t%end;</div></div>"}]}]}]}]}}]}]},{"idx":"MYe04aea02-a2e8-492b-98e7-36f829426c7e","name":"Run final model","custparents":[{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"}],"children":[],"_substeps":{"idx":"MY5a9eda6b-d4f7-4a5a-9f59-2bad68db688d","name":"substeps","custparents":[{"idx":"MYe04aea02-a2e8-492b-98e7-36f829426c7e"}],"children":[{"idx":"MY12becbb7-8af8-403d-9344-8923be2b620f","name":"Define file path (libnames)","custparents":[{"idx":"MY5a9eda6b-d4f7-4a5a-9f59-2bad68db688d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*get var list from 3 main variables (each by UPCindex, &amp;CompVar, and Combined)*/</div><div class=\"ql-code-block\">%let theteestPath=Combined;</div><div class=\"ql-code-block\">%let teestTargetPath = &amp;localTargetPath.\\&amp;resultfolder.\\&amp;theteestPath;</div><div class=\"ql-code-block\">libname teestT1 \"&amp;teestTargetPath\";</div><div class=\"ql-code-block\">%let theteestPath=UPCIndex;</div><div class=\"ql-code-block\">%let teestTargetPath = &amp;localTargetPath.\\&amp;resultfolder.\\&amp;theteestPath;</div><div class=\"ql-code-block\">libname teestT2 \"&amp;teestTargetPath\";</div><div class=\"ql-code-block\">%let theteestPath=&amp;CompVar;</div><div class=\"ql-code-block\">%let teestTargetPath = &amp;localTargetPath.\\&amp;resultfolder.\\&amp;theteestPath;</div><div class=\"ql-code-block\">libname teestT3 \"&amp;teestTargetPath\";</div><div class=\"ql-code-block\"><br></div></div>"},{"idx":"MYf0285e41-09e5-4842-aa32-a165b8be0956","name":"Perform univariate analysis","custparents":[{"idx":"MY5a9eda6b-d4f7-4a5a-9f59-2bad68db688d"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*for univariate*/</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=teestt1._XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass X01_C_CatN  /descending  param=reference;</div><div class=\"ql-code-block\">\t model Y (Ref='0') =\tX01_C_CatN;  </div><div class=\"ql-code-block\">\t oddsratio X01_C_CatN ;</div><div class=\"ql-code-block\">\tods output </div><div class=\"ql-code-block\">\t\tOddsRatiosWald =teestt1._XPilot28a3 </div><div class=\"ql-code-block\">\t\tOddsRatios = teestt1._XPilot28a4 </div><div class=\"ql-code-block\">\t\tParameterEstimates= teestt1._XPilot28a5 </div><div class=\"ql-code-block\">\t\tClassLevelInfo=teestt1._XPilot28a7</div><div class=\"ql-code-block\">\t\tAssociation =teestt1._XPilot28a8;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=teestt2._XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass X01_C_CatN  /descending  param=reference;</div><div class=\"ql-code-block\">\t model Y (Ref='0') =\tX01_C_CatN;  </div><div class=\"ql-code-block\">\t oddsratio X01_C_CatN ;</div><div class=\"ql-code-block\">\tods output </div><div class=\"ql-code-block\">\t\tOddsRatiosWald =teestt2._XPilot28a3 </div><div class=\"ql-code-block\">\t\tOddsRatios = teestt2._XPilot28a4 </div><div class=\"ql-code-block\">\t\tParameterEstimates= teestt2._XPilot28a5 </div><div class=\"ql-code-block\">\t\tClassLevelInfo=teestt2._XPilot28a7</div><div class=\"ql-code-block\">\t\tAssociation =teestt2._XPilot28a8;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=teestt3._XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass X01_C_CatN  /descending  param=reference;</div><div class=\"ql-code-block\">\t model Y (Ref='0') =\tX01_C_CatN;  </div><div class=\"ql-code-block\">\t oddsratio X01_C_CatN ;</div><div class=\"ql-code-block\">\tods output </div><div class=\"ql-code-block\">\t\tOddsRatiosWald =teestt3._XPilot28a3 </div><div class=\"ql-code-block\">\t\tOddsRatios = teestt3._XPilot28a4 </div><div class=\"ql-code-block\">\t\tParameterEstimates= teestt3._XPilot28a5 </div><div class=\"ql-code-block\">\t\tClassLevelInfo=teestt3._XPilot28a7</div><div class=\"ql-code-block\">\t\tAssociation =teestt3._XPilot28a8;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div></div>"},{"idx":"MYe20342ad-e639-4164-a2da-9e69c41245ff","name":"Perform multivariable analysis","custparents":[{"idx":"MY5a9eda6b-d4f7-4a5a-9f59-2bad68db688d"}],"children":[{"idx":"MY67cf80b7-3087-456a-aab7-746b7556ba2e","name":"Obtain selected vars","custparents":[{"idx":"MYe20342ad-e639-4164-a2da-9e69c41245ff"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">libname varsPath \"P:\\Physician_Impact_Pro(SYao)_Bio14-143\\Output\\Result data\\ResultMainAnalysis\\Combined\";</div><div class=\"ql-code-block\">data _XPilot24;</div><div class=\"ql-code-block\">\tset varsPath._XPilot24;</div><div class=\"ql-code-block\">run;</div></div>","children":[{"idx":"MY12a12972-1381-4ad9-b1dc-c6af819b1a1e","name":"Get the categorical vars","custparents":[{"idx":"MY67cf80b7-3087-456a-aab7-746b7556ba2e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*get a list of categorical vars (including cateogical type of the original continuous vars like age)*/</div><div class=\"ql-code-block\">data _XPilot25a;</div><div class=\"ql-code-block\">\tset _XPilot24;</div><div class=\"ql-code-block\">\tif index(variable, '*')=0 and (index(variable, '_C_')&gt;0 or index(variable, '_N_')&gt;0 );</div><div class=\"ql-code-block\">\tby renamed;</div><div class=\"ql-code-block\">\tif first.renamed; /*the X01_C_CatN appears three times for different COC tests*/</div><div class=\"ql-code-block\">\tkeep variable;</div><div class=\"ql-code-block\">run;</div></div>","children":[{"idx":"MY79e5736b-c84a-44c7-bfe7-ecebee64741a","name":"Vars for class statement","custparents":[{"idx":"MY12a12972-1381-4ad9-b1dc-c6af819b1a1e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*the var list for the class statement*/</div><div class=\"ql-code-block\" data-language=\"plain\">%ValueToString(Data=_XPilot25a, theVar=variable, theStrVarName=theClassVars25, DLMT= );</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div></div><p><br></p>"},{"idx":"MYc364761d-e87a-4423-b081-a4a68516c031","name":"Vars for model statement","custparents":[{"idx":"MY12a12972-1381-4ad9-b1dc-c6af819b1a1e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*the vars for model statement*/</div><div class=\"ql-code-block\">%distinct(data=_XPilot24, vars=variable, target=_XPilot25b);</div><div class=\"ql-code-block\">%ValueToString(Data=_XPilot25b, theVar=variable, theStrVarName=theModelVars25, DLMT= );</div></div><p><br></p>","children":[{"idx":"MY66d891f8-ca7d-4e5e-86e4-a4d64f8ca22f","name":"Get results from multivariate models","custparents":[{"idx":"MYc364761d-e87a-4423-b081-a4a68516c031"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*for combined*/</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=teestt1._XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;theClassVars25 /descending param=reference;</div><div class=\"ql-code-block\">\t model Y (Ref='0') =\t&amp;theModelVars25\t/lackfit; </div><div class=\"ql-code-block\">\toddsratio X01_C_CatN ; </div><div class=\"ql-code-block\">\t\tods output </div><div class=\"ql-code-block\">\t\tModelANOVA =teestt1._XPilot25a1 </div><div class=\"ql-code-block\">\t\tLackFitChiSq = teestt1._XPilot25a2  </div><div class=\"ql-code-block\">\t\tOddsRatiosWald =teestt1._XPilot25a3 </div><div class=\"ql-code-block\">\t\tOddsRatios = teestt1._XPilot25a4 </div><div class=\"ql-code-block\">\t\tParameterEstimates= teestt1._XPilot25a5 </div><div class=\"ql-code-block\">\t\tFitStatistics = teestt1._XPilot25a6 </div><div class=\"ql-code-block\">\t\tClassLevelInfo=teestt1._XPilot25a7</div><div class=\"ql-code-block\">\t\tAssociation =teestt1._XPilot25a8;</div><div class=\"ql-code-block\">\toutput out=teestt1._XPilot25a9  (keep=key_hsn Y p) p=p;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*for upcindex*/</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=teestt2._XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;theClassVars25  /descending  param=reference;</div><div class=\"ql-code-block\">\t model Y (Ref='0') =\t&amp;theModelVars25\t/lackfit;</div><div class=\"ql-code-block\">\toddsratio X01_C_CatN ; </div><div class=\"ql-code-block\">\tods output </div><div class=\"ql-code-block\">\t\tModelANOVA =teestt2._XPilot25a1 </div><div class=\"ql-code-block\">\t\tLackFitChiSq = teestt2._XPilot25a2  </div><div class=\"ql-code-block\">\t\tOddsRatiosWald =teestt2._XPilot25a3 </div><div class=\"ql-code-block\">\t\tOddsRatios = teestt2._XPilot25a4 </div><div class=\"ql-code-block\">\t\tParameterEstimates= teestt2._XPilot25a5 </div><div class=\"ql-code-block\">\t\tFitStatistics = teestt2._XPilot25a6 </div><div class=\"ql-code-block\">\t\tClassLevelInfo=teestt2._XPilot25a7</div><div class=\"ql-code-block\">\t\tAssociation =teestt2._XPilot25a8;</div><div class=\"ql-code-block\">\toutput out=teestt2._XPilot25a9  (keep=key_hsn Y p) p=p;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">/*for &amp;CompVar*/</div><div class=\"ql-code-block\">ods results off;</div><div class=\"ql-code-block\">proc logistic data=teestt3._XPilot4 namelen=200;</div><div class=\"ql-code-block\">\tclass &amp;theClassVars25  /descending  param=reference;</div><div class=\"ql-code-block\">\t model Y (Ref='0') =\t&amp;theModelVars25\t/lackfit;  </div><div class=\"ql-code-block\">\t oddsratio X01_C_CatN ;</div><div class=\"ql-code-block\">\tods output </div><div class=\"ql-code-block\">\t\tModelANOVA =teestt3._XPilot25a1 </div><div class=\"ql-code-block\">\t\tLackFitChiSq = teestt3._XPilot25a2  </div><div class=\"ql-code-block\">\t\tOddsRatiosWald =teestt3._XPilot25a3 </div><div class=\"ql-code-block\">\t\tOddsRatios = teestt3._XPilot25a4 </div><div class=\"ql-code-block\">\t\tParameterEstimates= teestt3._XPilot25a5 </div><div class=\"ql-code-block\">\t\tFitStatistics = teestt3._XPilot25a6 </div><div class=\"ql-code-block\">\t\tClassLevelInfo=teestt3._XPilot25a7</div><div class=\"ql-code-block\">\t\tAssociation =teestt3._XPilot25a8;</div><div class=\"ql-code-block\">\toutput out=teestt3._XPilot25a9  (keep=key_hsn Y p) p=p;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods results on;</div></div>"}]}]}]}]}]}},{"idx":"MY9401326d-4de7-41ad-8399-e9cedd89d95b","name":"Contrast models (DeLong test)","custparents":[{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*VXT_FSDL1 DeLong test*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%sqljoinv2(</div><div class=\"ql-code-block\">\tt1=teestt2._XPilot25a9,</div><div class=\"ql-code-block\">\tt2=teestt3._XPilot25a9,</div><div class=\"ql-code-block\">\ttarget=_XPilot26a,</div><div class=\"ql-code-block\">\tvars=%str(t1.*, t2.p as p2),</div><div class=\"ql-code-block\">\tjtype=inner,</div><div class=\"ql-code-block\">\tjvars=key_hsn</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">%sqljoinv2(</div><div class=\"ql-code-block\">\tt1=_XPilot26a,</div><div class=\"ql-code-block\">\tt2=teestt1._XPilot25a9,</div><div class=\"ql-code-block\">\ttarget=_XPilot26b,</div><div class=\"ql-code-block\">\tvars=%str(t1.*, t2.p as p3),</div><div class=\"ql-code-block\">\tjtype=inner,</div><div class=\"ql-code-block\">\tjvars=key_hsn</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">ods graphics on;</div><div class=\"ql-code-block\">proc logistic data=_XPilot26b desc;</div><div class=\"ql-code-block\">\tmodel Y = ;</div><div class=\"ql-code-block\">\troc 'm3' pred=p3;</div><div class=\"ql-code-block\">\troc 'm2' pred=p2;</div><div class=\"ql-code-block\">\troc 'm1' pred=p;</div><div class=\"ql-code-block\">\troccontrast /estimate=allpairs;</div><div class=\"ql-code-block\">\tods output RocContrastEstimate = _XPilot26c;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">ods graphics off;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">data teestt1._XPilot26;</div><div class=\"ql-code-block\">\tset _XPilot26c;</div><div class=\"ql-code-block\">\t\tproject=&amp;_clientProjectName;</div><div class=\"ql-code-block\">\tprogram=&amp;_clientTaskLabel;</div><div class=\"ql-code-block\">\tcreateDate=date();</div><div class=\"ql-code-block\">\tformat createDate date9.;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\"><br></div></div>"},{"idx":"MY3af662ba-dedc-4008-8ad2-1f2a4e1f55ca","name":"Freq by var levels","custparents":[{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%getFreq(</div><div class=\"ql-code-block\">\tdata=teestt1._XPilot4, </div><div class=\"ql-code-block\">\ttheVars=&amp;theClassVars25, </div><div class=\"ql-code-block\">\tVarsMapFile=teestt1.varsmap,</div><div class=\"ql-code-block\">\tgroup=Y,  </div><div class=\"ql-code-block\">\ttarget=teestt1._XPilot27, </div><div class=\"ql-code-block\">\tdlmt=, debug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%getFreq(</div><div class=\"ql-code-block\">\tdata=teestt2._XPilot4, </div><div class=\"ql-code-block\">\ttheVars=&amp;theClassVars25, </div><div class=\"ql-code-block\">\tVarsMapFile=teestt2.varsmap,</div><div class=\"ql-code-block\">\tgroup=Y,  </div><div class=\"ql-code-block\">\ttarget=teestt2._XPilot27, </div><div class=\"ql-code-block\">\tdlmt=, debug=</div><div class=\"ql-code-block\">);</div><div class=\"ql-code-block\">%getFreq(</div><div class=\"ql-code-block\">\tdata=teestt3._XPilot4, </div><div class=\"ql-code-block\">\ttheVars=&amp;theClassVars25, </div><div class=\"ql-code-block\">\tVarsMapFile=teestt3.varsmap,</div><div class=\"ql-code-block\">\tgroup=Y,  </div><div class=\"ql-code-block\">\ttarget=teestt3._XPilot27, </div><div class=\"ql-code-block\">\tdlmt=, debug=</div><div class=\"ql-code-block\">);</div></div>","children":[{"idx":"MY607930ac-f544-473a-98b0-5a2e64079b5c","name":"Run getFreq()","custparents":[{"idx":"MY3af662ba-dedc-4008-8ad2-1f2a4e1f55ca"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*get the freq by group information*/</div><div class=\"ql-code-block\">%macro getFreq(theVars=, group=, data=, VarsMapFile=, target=, dlmt=, debug=);</div><div class=\"ql-code-block\">\t%local theVars theVar theVarC group target i dlmt debug VarsMapFile;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*get a distinct list of vars and levels from the source data set*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata getFreq_tmp1;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata getFreq_tmp4;</div><div class=\"ql-code-block\">\t\tformat groupvar $30. grpcat 4. variable $30. varlevelC $30. N_Patients 8.;</div><div class=\"ql-code-block\">\t\tdelete;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; theVars=&amp;theVars;</div><div class=\"ql-code-block\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%let theVar=%sysfunc(strip(&amp;theVar));</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; theVar = &amp;theVar;</div><div class=\"ql-code-block\">\t\t%let theVarC= %substr(&amp;theVar, 1, %eval(%length(&amp;theVar)-1));</div><div class=\"ql-code-block\">\t\t%let theVarC=&amp;theVarC.C;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; theVarC=&amp;theVarC;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\t\t\tt1=getFreq_tmp1,</div><div class=\"ql-code-block\">\t\t\t\tvars=%str(Y, &amp;theVar, &amp;theVarC,   count(key_hsn) as N_Patients),</div><div class=\"ql-code-block\">\t\t\t\ttarget=getFreq_tmp2,</div><div class=\"ql-code-block\">\t\t\t\tgroupby=%str(Y, &amp;theVar, &amp;theVarC),</div><div class=\"ql-code-block\">\t\t\t\torderby=%str(Y, &amp;theVar, &amp;theVarC)</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata getFreq_tmp3;</div><div class=\"ql-code-block\">\t\t\tset getFreq_tmp2;</div><div class=\"ql-code-block\">\t\t\tformat variable $30. varlevelC $30. ;</div><div class=\"ql-code-block\">\t\t\tvariable = symget('thevar');</div><div class=\"ql-code-block\">\t\t\trename &amp;theVar=varLevelN;</div><div class=\"ql-code-block\">\t\t\tvarlevelC=strip(put(&amp;thevarC, $30.));</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;group) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\tgroupvar=symget('group');</div><div class=\"ql-code-block\">\t\t\t\trename &amp;group = grpcat ;</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\tdrop &amp;thevarC;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata getFreq_tmp4;</div><div class=\"ql-code-block\">\t\t\tset getFreq_tmp4 getFreq_tmp3;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete getFreq_tmp3;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata getFreq_tmp5;</div><div class=\"ql-code-block\">\t\tset getFreq_tmp4;</div><div class=\"ql-code-block\">\t\tformat renamed $30.;</div><div class=\"ql-code-block\">\t\trenamed= scan(variable, 1, '_') || '_' || scan(variable, 2, '_');</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=getFreq_tmp5,</div><div class=\"ql-code-block\">\t\tt2=&amp;VarsMapFile,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.original),</div><div class=\"ql-code-block\">\t\ttarget=getFreq_tmp6,</div><div class=\"ql-code-block\">\t\tjtype=left,</div><div class=\"ql-code-block\">\t\tjvars=renamed,</div><div class=\"ql-code-block\">\t\torderby=%str(renamed, varLevelN)</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset getFreq_tmp6;</div><div class=\"ql-code-block\">\t\tproject=&amp;_clientProjectName;</div><div class=\"ql-code-block\">\t\tprogram=&amp;_clientTaskLabel;</div><div class=\"ql-code-block\">\t\tcreateDate=date();</div><div class=\"ql-code-block\">\t\tformat createDate date9.;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete getFreq_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend getFreq;</div></div>","children":[],"_substeps":{"idx":"MY6c3cb9e3-27ca-40ab-bdd5-96f2d5ec6d3f","name":"substeps","custparents":[{"idx":"MY607930ac-f544-473a-98b0-5a2e64079b5c"}],"children":[{"idx":"MY9b4601c2-203a-45a5-bbe6-c22a133dc8f0","name":"Define local vars","custparents":[{"idx":"MY6c3cb9e3-27ca-40ab-bdd5-96f2d5ec6d3f"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local theVars theVar theVarC group target i dlmt debug VarsMapFile;</div></div>","children":[{"idx":"MY87491d3b-8ae3-4b0e-ad70-18b397868c1e","name":"Save src data in work path","custparents":[{"idx":"MY9b4601c2-203a-45a5-bbe6-c22a133dc8f0"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*Save the src data into the work path (make it run faster in work path)*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata getFreq_tmp1;</div><div class=\"ql-code-block\">\t\tset &amp;data;</div><div class=\"ql-code-block\" data-language=\"true\">\trun;</div></div>","children":[{"idx":"MYa581deb8-df72-4667-93dc-9c075176ca75","name":"create an empty table to hold intermediate stats ","custparents":[{"idx":"MY87491d3b-8ae3-4b0e-ad70-18b397868c1e"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata getFreq_tmp4;</div><div class=\"ql-code-block\">\t\tformat groupvar $30. grpcat 4. variable $30. varlevelC $30. N_Patients 8.;</div><div class=\"ql-code-block\">\t\tdelete;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MY30314ee6-4bc9-4932-b0f2-016a11204e28","name":"Loop for each var to get freq stats","custparents":[{"idx":"MYa581deb8-df72-4667-93dc-9c075176ca75"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if %length(&amp;dlmt) ne 0 %then %let dlmt = , &amp;dlmt;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; theVars=&amp;theVars;</div><div class=\"ql-code-block\">\t/*making standard vars for categorical covariates */</div><div class=\"ql-code-block\">\t%let i=1;</div><div class=\"ql-code-block\">\t%do %until ( %eval(%length(%scan(&amp;theVars, &amp;i &amp;dlmt))=0) );</div><div class=\"ql-code-block\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\">\t\t%let theVar=%sysfunc(strip(&amp;theVar));</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; theVar = &amp;theVar;</div><div class=\"ql-code-block\">\t\t%let theVarC= %substr(&amp;theVar, 1, %eval(%length(&amp;theVar)-1));</div><div class=\"ql-code-block\">\t\t%let theVarC=&amp;theVarC.C;</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; theVarC=&amp;theVarC;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\t\t\tt1=getFreq_tmp1,</div><div class=\"ql-code-block\">\t\t\t\tvars=%str(Y, &amp;theVar, &amp;theVarC,   count(key_hsn) as N_Patients),</div><div class=\"ql-code-block\">\t\t\t\ttarget=getFreq_tmp2,</div><div class=\"ql-code-block\">\t\t\t\tgroupby=%str(Y, &amp;theVar, &amp;theVarC),</div><div class=\"ql-code-block\">\t\t\t\torderby=%str(Y, &amp;theVar, &amp;theVarC)</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata getFreq_tmp3;</div><div class=\"ql-code-block\">\t\t\tset getFreq_tmp2;</div><div class=\"ql-code-block\">\t\t\tformat variable $30. varlevelC $30. ;</div><div class=\"ql-code-block\">\t\t\tvariable = symget('thevar');</div><div class=\"ql-code-block\">\t\t\trename &amp;theVar=varLevelN;</div><div class=\"ql-code-block\">\t\t\tvarlevelC=strip(put(&amp;thevarC, $30.));</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;group) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\tgroupvar=symget('group');</div><div class=\"ql-code-block\">\t\t\t\trename &amp;group = grpcat ;</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\tdrop &amp;thevarC;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata getFreq_tmp4;</div><div class=\"ql-code-block\">\t\t\tset getFreq_tmp4 getFreq_tmp3;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete getFreq_tmp3;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let i = %eval(&amp;i + 1);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div></div>","children":[{"idx":"MY915c5b4e-0e9b-464d-9d88-57b7593b291c","name":"Add the std var names","custparents":[{"idx":"MY30314ee6-4bc9-4932-b0f2-016a11204e28"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata getFreq_tmp5;</div><div class=\"ql-code-block\">\t\tset getFreq_tmp4;</div><div class=\"ql-code-block\">\t\tformat renamed $30.;</div><div class=\"ql-code-block\">\t\trenamed= scan(variable, 1, '_') || '_' || scan(variable, 2, '_');</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MY8c0f230e-bdff-41e6-9e5f-02e8343f29da","name":"Get the original var names","custparents":[{"idx":"MY915c5b4e-0e9b-464d-9d88-57b7593b291c"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\tt1=getFreq_tmp5,</div><div class=\"ql-code-block\">\t\tt2=&amp;VarsMapFile,</div><div class=\"ql-code-block\">\t\tvars=%str(t1.*, t2.original),</div><div class=\"ql-code-block\">\t\ttarget=getFreq_tmp6,</div><div class=\"ql-code-block\">\t\tjtype=left,</div><div class=\"ql-code-block\">\t\tjvars=renamed,</div><div class=\"ql-code-block\">\t\torderby=%str(renamed, varLevelN)</div><div class=\"ql-code-block\">\t);</div><div class=\"ql-code-block\"><br></div></div>","children":[{"idx":"MY0c6f6f2f-5db8-4e6a-9761-7fee438290bb","name":"Save to the target table","custparents":[{"idx":"MY8c0f230e-bdff-41e6-9e5f-02e8343f29da"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset getFreq_tmp6;</div><div class=\"ql-code-block\">\t\tproject=&amp;_clientProjectName;</div><div class=\"ql-code-block\">\t\tprogram=&amp;_clientTaskLabel;</div><div class=\"ql-code-block\">\t\tcreateDate=date();</div><div class=\"ql-code-block\">\t\tformat createDate date9.;</div><div class=\"ql-code-block\">\trun;</div></div>","children":[{"idx":"MY4c508e0b-902a-4e34-904a-c9ae64a50b52","name":"Delete tmp files","custparents":[{"idx":"MY0c6f6f2f-5db8-4e6a-9761-7fee438290bb"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete getFreq_tmp:;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div></div>"}]}]}]},{"idx":"MY228efac9-bed0-4ab8-bff2-a010e477ca89","name":"substeps","custparents":[{"idx":"MY30314ee6-4bc9-4932-b0f2-016a11204e28"}],"children":[{"idx":"MY4e58016f-b7c3-43d2-9e8e-819860c2232a","name":"determine the current categorical vars","custparents":[{"idx":"MY228efac9-bed0-4ab8-bff2-a010e477ca89"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVar = %scan(&amp;theVars, &amp;i &amp;dlmt);</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVar=%sysfunc(strip(&amp;theVar));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt; theVar = &amp;theVar;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVarC= %substr(&amp;theVar, 1, %eval(%length(&amp;theVar)-1));</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%let theVarC=&amp;theVarC.C;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t%put &gt;&gt;&gt; theVarC=&amp;theVarC;</div></div><p><br></p>","children":[{"idx":"MYba6ec86e-81e2-4cb9-a41c-978fc07d474f","name":"Count freq by var levels","custparents":[{"idx":"MY4e58016f-b7c3-43d2-9e8e-819860c2232a"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%sqljoinv2(</div><div class=\"ql-code-block\">\t\t\t\tt1=getFreq_tmp1,</div><div class=\"ql-code-block\">\t\t\t\tvars=%str(Y, &amp;theVar, &amp;theVarC,   count(key_hsn) as N_Patients),</div><div class=\"ql-code-block\">\t\t\t\ttarget=getFreq_tmp2,</div><div class=\"ql-code-block\">\t\t\t\tgroupby=%str(Y, &amp;theVar, &amp;theVarC),</div><div class=\"ql-code-block\">\t\t\t\torderby=%str(Y, &amp;theVar, &amp;theVarC)</div><div class=\"ql-code-block\">\t\t);</div></div>","children":[{"idx":"MYdf6e9cd1-0f3a-4a1b-bd38-e3cdd9eb1ced","name":"change name and type of the vars","custparents":[{"idx":"MYba6ec86e-81e2-4cb9-a41c-978fc07d474f"}],"NodeDescription":"<div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tdata getFreq_tmp3;</div><div class=\"ql-code-block\">\t\t\tset getFreq_tmp2;</div><div class=\"ql-code-block\">\t\t\tformat variable $30. varlevelC $30. ;</div><div class=\"ql-code-block\">\t\t\tvariable = symget('thevar');</div><div class=\"ql-code-block\">\t\t\trename &amp;theVar=varLevelN;</div><div class=\"ql-code-block\">\t\t\tvarlevelC=strip(put(&amp;thevarC, $30.));</div><div class=\"ql-code-block\">\t\t\t%if %length(&amp;group) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\t\tgroupvar=symget('group');</div><div class=\"ql-code-block\">\t\t\t\trename &amp;group = grpcat ;</div><div class=\"ql-code-block\">\t\t\t%end;</div><div class=\"ql-code-block\">\t\t\tdrop &amp;thevarC;</div><div class=\"ql-code-block\">\t\trun;</div></div>"}]}]}]}]}]}]}]}]}}]}],"_substeps":{"idx":"MY396c8d8f-5a25-4b71-9281-d94d7fa4c06a","name":"substeps","custparents":[{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"},{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"},{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"},{"idx":"9a34e872-ed94-437d-a9ed-9805afc96ba0"}],"children":[{"idx":"MY91e8bf24-db7f-451f-9d54-76b903011e21","name":"Check Multicollinearity","custparents":[{"idx":"MY396c8d8f-5a25-4b71-9281-d94d7fa4c06a"}],"children":[{"idx":"MYb93f1a23-c7ea-48a9-8074-95fac52e1d3c","name":"If VIF > 2.5?","custparents":[{"idx":"MY91e8bf24-db7f-451f-9d54-76b903011e21"}]},{"idx":"MY99a96cae-3e39-486d-b9ee-9249b7844489","name":"Run CheckMultiCollin()","custparents":[{"idx":"MY91e8bf24-db7f-451f-9d54-76b903011e21"}]},{"idx":"MY89743d7c-a162-4fdd-9dc0-9d16895db3c8","name":"Check collection?","custparents":[{"idx":"MY91e8bf24-db7f-451f-9d54-76b903011e21"}]}]},{"idx":"MYc4c4af9f-fa3e-4d52-9392-98ca820f55e0","name":"Select Model vars","custparents":[{"idx":"MY396c8d8f-5a25-4b71-9281-d94d7fa4c06a"}],"children":[{"idx":"MYfa9ddef0-c053-4b63-999d-6de0d7d5e6c4","name":"forward, backward, stepwise","custparents":[{"idx":"MYc4c4af9f-fa3e-4d52-9392-98ca820f55e0"}]}]},{"idx":"MY8546d320-8145-4d05-ba4e-7bb3b3e13aaf","name":"Check confounding with main factor","custparents":[{"idx":"MY396c8d8f-5a25-4b71-9281-d94d7fa4c06a"}],"children":[]},{"idx":"MYca68ebf4-f4d8-48cf-83f5-d23d4bc36ebb","name":"Check interaction with main factor","custparents":[{"idx":"MY396c8d8f-5a25-4b71-9281-d94d7fa4c06a"}]},{"idx":"MYcdca382a-4b27-4240-875f-887444a1c6c0","name":"Goodness of fit","custparents":[{"idx":"MY396c8d8f-5a25-4b71-9281-d94d7fa4c06a"}],"NodeDescription":"<p>///t</p><p>t///</p><p>[_Q] where  is the residual....plot within 3 ???</p>"},{"idx":"MY246f33f4-79f1-4cd7-99ce-7d3921a28ce7","name":"Predicting power","custparents":[{"idx":"MY396c8d8f-5a25-4b71-9281-d94d7fa4c06a"}]}]}}