{"idx":"ProjectCollection-cmSbt48MqRzD7t79","name":"PhD_PhysicianImpactStatin_20191120","type":"PROJECT","children":[{"idx":"MY985829e8-14f7-4a67-86ac-167da3d62fa4","name":"Scientific protocol","custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"}],"children":[{"idx":"MYea8e5ad7-1600-4ff1-9184-dc7f1025a867","name":"Objective 1 Confounders Misclassification COC","custparents":[{"idx":"MY985829e8-14f7-4a67-86ac-167da3d62fa4"}],"children":[{"idx":"MY4a596869-1435-4e2c-87d9-d1c628f02362","name":"1a. Predictors of UPC index","custparents":[{"idx":"MYea8e5ad7-1600-4ff1-9184-dc7f1025a867"}]},{"idx":"MY06421742-59ab-4e25-b1f5-1ea26a53aada","name":"1b. Thresholds to identify COC","custparents":[{"idx":"MYea8e5ad7-1600-4ff1-9184-dc7f1025a867"}]}]},{"idx":"MY31f1b29d-5517-4f66-bf79-a5a129a0b8d1","name":"Objective 2 Distribution of Comp COC","custparents":[{"idx":"MY985829e8-14f7-4a67-86ac-167da3d62fa4"}]},{"idx":"MYefba38f3-3278-4541-8c7e-d7a558d757f1","name":"Objective 3 Measures of COC to Statin Adherence","custparents":[{"idx":"MY985829e8-14f7-4a67-86ac-167da3d62fa4"}]}]},{"idx":"MYea01f777-ef0e-4d2f-95f3-8a911b9f304f","name":"Analytical protocol","custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"}],"children":[{"idx":"MYac146db1-02ec-4142-a757-383d13223742","name":"1. Cohort","custparents":[{"idx":"MYea01f777-ef0e-4d2f-95f3-8a911b9f304f"}],"children":[{"idx":"MYf3e1b01b-5f17-4089-a9a5-9cf5fa1f1555","name":"Q_cohort","custparents":[{"idx":"MYac146db1-02ec-4142-a757-383d13223742"}],"NodeDescription":"<p>///t</p><p>[to do]</p><p>given that there will be different cohorts (PS unmatched for obj1 and obj2, matched for obj3):</p><ol><li>how to report the patient flow?</li><li>How to report the # of physicians? </li></ol><p>t///</p>"}]},{"idx":"MY490700c5-bc45-4590-9085-d5e3b8dda83f","name":"2. UPC Index","custparents":[{"idx":"MYea01f777-ef0e-4d2f-95f3-8a911b9f304f"}],"children":[{"idx":"MYe63cefbd-5486-4928-9056-74a469a3aa2a","name":"Determine Max UPC Index per patient","custparents":[{"idx":"MY490700c5-bc45-4590-9085-d5e3b8dda83f"}],"children":[{"idx":"MY02e00aec-ee2e-4506-91c1-2d005c191f7d","name":"substeps","custparents":[{"idx":"MYe63cefbd-5486-4928-9056-74a469a3aa2a"}],"children":[{"idx":"MY6db6cc3e-c075-4081-916d-38ee17e30a4a","name":"Patient encounters with GPs","custparents":[{"idx":"MY02e00aec-ee2e-4506-91c1-2d005c191f7d"}],"children":[{"idx":"MY1d42e51e-5a5a-4b4c-937d-705463079640","name":"UPC Index of Patient-GP pairs","custparents":[{"idx":"MY6db6cc3e-c075-4081-916d-38ee17e30a4a"}],"children":[{"idx":"MYab5edcdf-a5eb-4889-a018-2f782caa9174","name":"Max UPC Index per patient","custparents":[{"idx":"MY1d42e51e-5a5a-4b4c-937d-705463079640"}],"NodeDescription":"<p>///t</p><p>[to do]</p><p>t///</p>"}]}]}]}]},{"idx":"MY8781aabf-09eb-401b-ba8f-11e3a958d883","name":"Predictors of UPC Index per patient","custparents":[{"idx":"MY490700c5-bc45-4590-9085-d5e3b8dda83f"}],"children":[{"idx":"MY4841887f-aba4-468c-95b0-e74a7ef96211","name":"Poisson regression (UPCIndex Covariates)","custparents":[{"idx":"MY8781aabf-09eb-401b-ba8f-11e3a958d883"},{"idx":"MYe63cefbd-5486-4928-9056-74a469a3aa2a"},{"idx":"MY4a596869-1435-4e2c-87d9-d1c628f02362"}]}]}]},{"idx":"MY9dff0eee-dd1d-4ab3-8f26-8a25b12dea37","name":"3. GP as UCP CMEP USP CompCOC","custparents":[{"idx":"MYea01f777-ef0e-4d2f-95f3-8a911b9f304f"}],"children":[{"idx":"MY71ba1d61-e896-4a00-9dcd-c3e1b45137eb","name":"UPC and # encounter categories","custparents":[{"idx":"MY9dff0eee-dd1d-4ab3-8f26-8a25b12dea37"},{"idx":"MY06421742-59ab-4e25-b1f5-1ea26a53aada"}],"children":[{"idx":"MY0aeca86d-2f4a-46fe-81bd-8d43012e9282","name":"Question","custparents":[{"idx":"MY71ba1d61-e896-4a00-9dcd-c3e1b45137eb"}],"NodeDescription":"<p>///t</p><p>[to do]</p><p>Was there # of encounters for that top physician in the corresponding table?</p><p>t///</p>"}]},{"idx":"MY57b7aefa-727b-4af0-9bea-d29df0ddfb32","name":"UPC Index cat and Same doc as CMEP, USP, and CompCOC","custparents":[{"idx":"MY9dff0eee-dd1d-4ab3-8f26-8a25b12dea37"}],"children":[{"idx":"MY2f2b8f44-3947-4783-ac94-f9cf87808429","name":"Questions","custparents":[{"idx":"MY57b7aefa-727b-4af0-9bea-d29df0ddfb32"}],"NodeDescription":"<p>///t</p><p>[to do] How does the table look like? Does it have doc patterns?</p><p>t///</p>"}]}]},{"idx":"MY04800235-73cd-463c-b8d9-a8da1e496b0c","name":"4. GPs and panels","custparents":[{"idx":"MYea01f777-ef0e-4d2f-95f3-8a911b9f304f"}],"children":[{"idx":"MY2abdb541-220d-45fe-abe6-2b9df7fd0fdb","name":"Question1","custparents":[{"idx":"MY04800235-73cd-463c-b8d9-a8da1e496b0c"}],"NodeDescription":"<p>///t</p><p>[to do]</p><ol><li>who are these GPs? Limited to service providers of the Statin patients? Should be!</li><li>Cannot be USP, must be UP, as many of their patients are not statin users. Well if so, it is not quite strongly connect to the rest of the study here (the focus is on statin Rx, isn't it?)</li></ol><p>t///</p>"},{"idx":"MYade38f5f-ed3c-4986-ac53-7b26217d23d1","name":"Distribution on PCT as UCP, USP, CMEP, & COMPCOC","custparents":[{"idx":"MY04800235-73cd-463c-b8d9-a8da1e496b0c"},{"idx":"MY31f1b29d-5517-4f66-bf79-a5a129a0b8d1"}]}]},{"idx":"MY54622cd1-9528-4768-9d54-1817716cf038","name":"5. Adh by measures","custparents":[{"idx":"MYea01f777-ef0e-4d2f-95f3-8a911b9f304f"}],"children":[{"idx":"MYb219761d-297c-40a6-a0d6-83c31f5a71e6","name":"PS matching","custparents":[{"idx":"MY54622cd1-9528-4768-9d54-1817716cf038"}],"children":[{"idx":"MY1e9980ec-fc56-4af2-abeb-e2a33c16e39b","name":"Adh by UPCI Cat, compCOC, and combined","custparents":[{"idx":"MYb219761d-297c-40a6-a0d6-83c31f5a71e6"}]},{"idx":"MYe73a5faa-4b03-40bb-ae72-7496debcea36","name":"Predicting power of each model","custparents":[{"idx":"MYb219761d-297c-40a6-a0d6-83c31f5a71e6"}],"children":[]}]}]}]},{"idx":"MY043c6d28-3e77-4035-8f61-8ea6497d8f23","name":"Data flow","custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"}],"children":[{"idx":"MY63d897d4-dbac-42c0-8142-dba92ac64d79","name":"_Master_Cohort.zip","custparents":[{"idx":"MY043c6d28-3e77-4035-8f61-8ea6497d8f23"}],"children":[{"idx":"MY73d63553-9ddd-41e3-8377-88aa5f9f3ba2","name":"Prog VXA_Statin Users","custparents":[{"idx":"MY63d897d4-dbac-42c0-8142-dba92ac64d79"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VXA. Those receiving Statins between 2011 and 2015*/</p><p><br></p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localDataPath.\\master_cohort.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(master_cohort.sas7bdat)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;);</p><p>/*%print(data=master_cohort);*/</p><p>/*%nobs(data=master_cohort);*/</p><p>/*%minmax(data=master_cohort, var=dqdate, format=date9., target=test1, m=max);*/</p><p><br></p><p><br></p><p>/*applying inclusion and exclusion criteria*/</p><p><br></p><p>%print(data=master_cohort);</p><p><br></p><p>/*keep the relevant cols*/</p><p>data VXA;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set master_cohort;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn dqdate RHA sex_desc mari_stat_desc fam_no birth age fsa nh_name nh_number QAIPPE resitype;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rename dqdate = EntryDate;</p><p>run;</p><p>/*46492*/</p><p>%vbsZip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXa.zip, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXa.sas7bdat, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=</p><p>);</p><p>/*</p><p>The following exclusion has been applied during cohort creation</p><p>missing age sex</p><p>age &lt; 18 at entry</p><p>not continuously covered during washout (5 years) or 2 years follow up</p><p>(including those deceased)</p><p>Receiving statin within washout (5 years)</p><p>*/</p><p><br></p><p>/*Stay in long term care within lookback or follow up?</p><p>&nbsp;&nbsp;&nbsp;&nbsp;maybe not need to apply. Othewise think about get it in the cohort building period</p><p>*/</p><p><br></p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"MY0b18f71b-af70-4787-b2fd-22a88ea8d44a","name":"Q VXA","custparents":[{"idx":"MY73d63553-9ddd-41e3-8377-88aa5f9f3ba2"}],"NodeDescription":"<p>///t</p><p>[to do] excluding those ever stay in LTC during follow up</p><p>t///</p>"},{"idx":"MY1b73a2db-f7f3-4996-bdec-ff32b507d827","name":"_VXA.zip (cohort memeber)","custparents":[{"idx":"MY73d63553-9ddd-41e3-8377-88aa5f9f3ba2"},{"idx":"MY73d63553-9ddd-41e3-8377-88aa5f9f3ba2"},{"idx":"MYac146db1-02ec-4142-a757-383d13223742"}],"NodeDescription":"<p>///t</p><table><tbody><tr><td data-row=\"1\">Member</td><td data-row=\"1\">Variable</td><td data-row=\"1\">Type</td><td data-row=\"1\">Len</td><td data-row=\"1\">Format</td><td data-row=\"1\">Informat</td><td data-row=\"1\">Label</td></tr><tr><td data-row=\"2\">WORK.VXA</td><td data-row=\"2\">Age</td><td data-row=\"2\">Num</td><td data-row=\"2\" class=\"ql-align-right\">8</td><td data-row=\"2\"><br></td><td data-row=\"2\"><br></td><td data-row=\"2\"><br></td></tr><tr><td data-row=\"3\">WORK.VXA</td><td data-row=\"3\">Birth</td><td data-row=\"3\">Num</td><td data-row=\"3\" class=\"ql-align-right\">8</td><td data-row=\"3\">DATE9.</td><td data-row=\"3\"><br></td><td data-row=\"3\"><br></td></tr><tr><td data-row=\"4\">WORK.VXA</td><td data-row=\"4\">EntryDate</td><td data-row=\"4\">Num</td><td data-row=\"4\" class=\"ql-align-right\">8</td><td data-row=\"4\">DATE9.</td><td data-row=\"4\"><br></td><td data-row=\"4\"><br></td></tr><tr><td data-row=\"5\">WORK.VXA</td><td data-row=\"5\">FAM_NO</td><td data-row=\"5\">Num</td><td data-row=\"5\" class=\"ql-align-right\">8</td><td data-row=\"5\"><br></td><td data-row=\"5\"><br></td><td data-row=\"5\">FAM_NO</td></tr><tr><td data-row=\"6\">WORK.VXA</td><td data-row=\"6\">MARI_STAT_DESC</td><td data-row=\"6\">Char</td><td data-row=\"6\" class=\"ql-align-right\">50</td><td data-row=\"6\">$50.</td><td data-row=\"6\">$50.</td><td data-row=\"6\">MARI_STAT_DESC</td></tr><tr><td data-row=\"7\">WORK.VXA</td><td data-row=\"7\">NH_NAME</td><td data-row=\"7\">Char</td><td data-row=\"7\" class=\"ql-align-right\">40</td><td data-row=\"7\">$40.</td><td data-row=\"7\">$40.</td><td data-row=\"7\">NH_NAME</td></tr><tr><td data-row=\"8\">WORK.VXA</td><td data-row=\"8\">NH_NUMBER</td><td data-row=\"8\">Num</td><td data-row=\"8\" class=\"ql-align-right\">8</td><td data-row=\"8\">11.</td><td data-row=\"8\">11.</td><td data-row=\"8\">NH_NUMBER</td></tr><tr><td data-row=\"9\">WORK.VXA</td><td data-row=\"9\">QAIPPE</td><td data-row=\"9\">Num</td><td data-row=\"9\" class=\"ql-align-right\">8</td><td data-row=\"9\">11.</td><td data-row=\"9\">11.</td><td data-row=\"9\">QAIPPE</td></tr><tr><td data-row=\"10\">WORK.VXA</td><td data-row=\"10\">RHA</td><td data-row=\"10\">Num</td><td data-row=\"10\" class=\"ql-align-right\">8</td><td data-row=\"10\">11.</td><td data-row=\"10\">11.</td><td data-row=\"10\">RHA_A_NUMBER</td></tr><tr><td data-row=\"11\">WORK.VXA</td><td data-row=\"11\">SEX_DESC</td><td data-row=\"11\">Char</td><td data-row=\"11\" class=\"ql-align-right\">1</td><td data-row=\"11\">$1.</td><td data-row=\"11\">$1.</td><td data-row=\"11\">SEX_DESC</td></tr><tr><td data-row=\"12\">WORK.VXA</td><td data-row=\"12\">fsa</td><td data-row=\"12\">Char</td><td data-row=\"12\" class=\"ql-align-right\">6</td><td data-row=\"12\"><br></td><td data-row=\"12\"><br></td><td data-row=\"12\"><br></td></tr><tr><td data-row=\"13\">WORK.VXA</td><td data-row=\"13\">key_hsn</td><td data-row=\"13\">Char</td><td data-row=\"13\" class=\"ql-align-right\">11</td><td data-row=\"13\">$11.</td><td data-row=\"13\">$11.</td><td data-row=\"13\">KEY_HSN</td></tr><tr><td data-row=\"14\">WORK.VXA</td><td data-row=\"14\">resiType</td><td data-row=\"14\">Char</td><td data-row=\"14\" class=\"ql-align-right\">200</td><td data-row=\"14\"><br></td><td data-row=\"14\"><br></td><td data-row=\"14\"><br></td></tr></tbody></table><p><br></p><p><br></p><p>t///</p>"}]}]},{"idx":"MY29ccf959-2ee5-4d63-857a-917d41131396","name":"_Master_MSB.zip","custparents":[{"idx":"MY043c6d28-3e77-4035-8f61-8ea6497d8f23"}],"children":[{"idx":"MY2fa2873c-5571-48ac-902c-b8bcae4bc6b6","name":"Prog VXB Encounter Episodes","custparents":[{"idx":"MY29ccf959-2ee5-4d63-857a-917d41131396"},{"idx":"MY1b73a2db-f7f3-4996-bdec-ff32b507d827"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VXB, get all encounter episodes, indicated by whether or not being CME, and type of provider (PCP, SCP, OTH)*/</p><p>data _null_;run;</p><p>/*1. MSB claims of patients in the cohort*/</p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxa.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxa.sas7bdat)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;);</p><p><br></p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localDataPath.\\master_msb.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(master_msb.sas7bdat)</p><p>);</p><p><br></p><p>/*get msb claims within lookback and follow up (i.e. +/- 365 days around entryDate*/</p><p>%sqljoinv2(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t1=master_msb,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t2=vxa,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=vxb1,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.entryDate),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;filters=%str(t1.dos between t2.EntryDate-365 and t2.EntryDate +365-1)</p><p>);</p><p><br></p><p>/*from above, get eligible service claims (see appendix 2)*/</p><p>data vxb2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set vxb1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;where</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_srv ne 0</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LOS NOT in ('B','2','K','9')</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MODE ne 'Z'</p><p>&nbsp;&nbsp;&nbsp;&nbsp;;</p><p>run;</p><p><br></p><p>/*excluding claims without doc number, or by slush doc codes, anyway these claims are difficult to calculate encounter episodes*/</p><p>data vxb3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set vxb2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;where key_doc_num ne '' and DocSlushCode = 'N';</p><p>run;</p><p><br></p><p>/*get the number of encounter episode (a distinct patient-doc-dos is an episode)*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*1.get distinct patient doc dos and spec*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%distinct(data=vxb3, target=vxb4, vars=%str(key_hsn, entryDate, key_doc_num, dos, spec), orderby=%str(key_hsn,key_doc_num, dos, spec)); </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*996640*/</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*2. the above may have the same doc as diff SPEC onthe same day, in that case, choose the first record*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data VXB5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set VXB4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn key_doc_num dos spec;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if first.dos;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*996492*/</p><p><br></p><p>/*Vxb5 contains all encounters*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%print(data=vxb5);</p><p><br></p><p>/*determine whether the encounter episodes are with a PCP or SCP (appendix 3 and 4)*/</p><p>data VXB6;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set vxb5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if spec in:('B') then do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProviderType_DateSpecific = 'PCP'; /*Family physician or primary care provider*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if spec in ('CL','DL') then do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProviderType_DateSpecific = 'SCP'; /*Specialist*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else ProviderType_DateSpecific = 'OTH'; /*Other*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>run;</p><p>%freq(data=vxb6, table=ProviderType_DateSpecific);</p><p>/*vxb6 contains all encounters, the provider indicated as PCP, SCP, or OTH*/</p><p><br></p><p><br></p><p>/*indicate the CME providers, FSC code in Appendix 5*/</p><p>data vxb7;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set vxb3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if fsc in ('B003','B064','B052', 'B004');</p><p>run;</p><p>/*get encounter episodes of CME (i.e., distinct patient-provider-date)*/</p><p>%distinct(data=vxb7, target=vxb8, vars=%str(key_hsn, key_doc_num, dos));</p><p><br></p><p>/*all VXB8 should be in vxb5*/</p><p>%compAB(a=vxb5, b=vxb8, target=test, vars=%str(key_hsn key_doc_num dos));</p><p>/*Yes, all CME episodes can be found in vxb5*/</p><p><br></p><p>/*link vxb8 to vxb6 to indicate the CME episodes*/</p><p>%sqljoinv2(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t1=vxb6,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t2=vxb8,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=vxb,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, ifn(t2.key_hsn='', 0,1) as CME),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn dos key_doc_num</p><p>);</p><p>%freq(data=vxb, table=cme*ProviderType_DateSpecific);</p><p><br></p><p>/*!!! VXB contains all encounter episodes, indicated whether or not a CME, also indicated type of provider*/</p><p>/*however don't get confused!</p><p>&nbsp;&nbsp;&nbsp;&nbsp;A doctors can be both a CMEP, or not; can be a PCP, SCP, or OTH</p><p>&nbsp;&nbsp;&nbsp;&nbsp;These classifications are episode-specific (i.e., patient and service date specific) </p><p>*/</p><p><br></p><p>%vbsZip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXb.zip, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXb.sas7bdat, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=</p><p>);</p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"MY19a532ff-f72d-4d71-8f7c-3a93899ef85c","name":"_VXB.zip (encounters)","custparents":[{"idx":"MY2fa2873c-5571-48ac-902c-b8bcae4bc6b6"}],"NodeDescription":"<p>///t</p><table><tbody><tr><td data-row=\"1\">Member</td><td data-row=\"1\">Variable</td><td data-row=\"1\">Type</td><td data-row=\"1\">Len</td><td data-row=\"1\">Format</td><td data-row=\"1\">Informat</td><td data-row=\"1\">Label</td></tr><tr><td data-row=\"2\">WORK.VXB</td><td data-row=\"2\">CME</td><td data-row=\"2\">Num</td><td data-row=\"2\" class=\"ql-align-right\">8</td><td data-row=\"2\"><br></td><td data-row=\"2\"><br></td><td data-row=\"2\"><br></td></tr><tr><td data-row=\"3\">WORK.VXB</td><td data-row=\"3\">EntryDate</td><td data-row=\"3\">Num</td><td data-row=\"3\" class=\"ql-align-right\">8</td><td data-row=\"3\">DATE9.</td><td data-row=\"3\"><br></td><td data-row=\"3\"><br></td></tr><tr><td data-row=\"4\">WORK.VXB</td><td data-row=\"4\">KEY_DOC_NUM</td><td data-row=\"4\">Char</td><td data-row=\"4\" class=\"ql-align-right\">11</td><td data-row=\"4\">$11.</td><td data-row=\"4\">$11.</td><td data-row=\"4\">KEY_DOC_NUM</td></tr><tr><td data-row=\"5\">WORK.VXB</td><td data-row=\"5\">ProviderType_DateSpecific</td><td data-row=\"5\">Char</td><td data-row=\"5\" class=\"ql-align-right\">3</td><td data-row=\"5\"><br></td><td data-row=\"5\"><br></td><td data-row=\"5\"><br></td></tr><tr><td data-row=\"6\">WORK.VXB</td><td data-row=\"6\">SPEC</td><td data-row=\"6\">Char</td><td data-row=\"6\" class=\"ql-align-right\">2</td><td data-row=\"6\">$2.</td><td data-row=\"6\">$2.</td><td data-row=\"6\">SPEC</td></tr><tr><td data-row=\"7\">WORK.VXB</td><td data-row=\"7\">dos</td><td data-row=\"7\">Num</td><td data-row=\"7\" class=\"ql-align-right\">8</td><td data-row=\"7\">DATE9.</td><td data-row=\"7\"><br></td><td data-row=\"7\"><br></td></tr><tr><td data-row=\"8\">WORK.VXB</td><td data-row=\"8\">key_hsn</td><td data-row=\"8\">Char</td><td data-row=\"8\" class=\"ql-align-right\">11</td><td data-row=\"8\">$11.</td><td data-row=\"8\">$11.</td><td data-row=\"8\">KEY_HSN</td></tr></tbody></table><p><br></p><p>t///</p>"}]},{"idx":"CodeTask-JZFzNfMpOGC6Bx7D","name":"Prog VXCL_ProviderType Lookback","type":"TASK","NodeDescription":"<p>///t</p><p>///s</p><p>/*VXC_L determine the Adjusted Provider Type during look back*/</p><p>data _null_;run;</p><p><br></p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;);</p><p><br></p><p>/*the upc index has to been calculated separately for look-back and for follow up*/</p><p><br></p><p>/*UPC in look-back*/</p><p>/*From vxb, get claims with 365 days prior to the index(entryDate) */</p><p>data VXC_L1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate - 365 and entryDate -1;</p><p>run;</p><p><br></p><p>/*</p><p>&nbsp;&nbsp;&nbsp;&nbsp;As aforementioned in program vxb, the doc type is specific by dos, which means that</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a doc can be pcp, as well as scp during the look back</p><p>*/</p><p>/*in VXC_L1 (eposides in look back), how is the physician patterns? </p><p>&nbsp;&nbsp;&nbsp;&nbsp;as PCP, as SCP, as both PCP and SCP, as PCP, SCP, and OTH</p><p>&nbsp;&nbsp;&nbsp;&nbsp;To illustrate, let's transpose the data, make the PCP, SCP, and OTH in separate columns</p><p>*/</p><p>%print(data=VXC_L1);</p><p>/*count the ProviderType_DateSpecific*/</p><p>%sqljoinv2(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXC_L1,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=VXC_L2,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific, count(ProviderType_DateSpecific) as count),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;groupby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific)</p><p>);</p><p>%transpose(data = VXC_L2, target=VXC_L4, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn EntryDate Key_doc_num ,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;colhead=ProviderType_DateSpecific,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;contents=count</p><p>)</p><p>/*add a column to illustrate the # of provider types for a link of patient-physician*/</p><p>data VXC_L5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;countProviderType = sum(pcp/pcp,scp/scp,oth/oth); /*this sum function is smart :-)*/</p><p>run;</p><p><br></p><p>%freq(data=VXC_L5, table = countProviderType);</p><p>data test;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderType&gt;1;</p><p>run;</p><p>/*only a few cases are of multiple provider types in a link of patient-physician</p><p>&nbsp;&nbsp;&nbsp;&nbsp;most are that physicians acting as both PCP and OTH, the rest as a few SCP and OTH</p><p>&nbsp;&nbsp;&nbsp;&nbsp;there is no situation of PCP and SCP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;It sounds logic here to set the rule that:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if the physician used to be PCP during followup, make it PCP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else, if the physician used to be SCP, make it SCP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else make it OTH</p><p>*/</p><p>data VXC_L6;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if PCP ne . then ProviderType = 'PCP';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else if SCP ne . then ProviderType = 'SCP';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else ProviderType='OTH';</p><p>run;</p><p>data test;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L6;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderTYpe &gt;1;</p><p>run;</p><p>/*sounds make sense*/</p><p><br></p><p>/*why don't determine the adjusted ProviderType in VXB?</p><p>&nbsp;&nbsp;&nbsp;&nbsp;because such providerType is study period specific. Here is for lookback. Latter for followup it has to be determined again</p><p>*/</p><p><br></p><p><br></p><p>/*get a distinct list of patient-physician and providerTypeL (in lookback)*/</p><p>%distinct(data = VXC_L6, target=VXC_L, vars=%str(key_hsn, key_doc_num, ProviderType as ProviderTypeL));</p><p>/*Note that not all cohort members had doctors with defined ProviderTypeL, because some patients do not have</p><p>&nbsp;&nbsp;&nbsp;&nbsp;eligible encounters during look back</p><p>*/</p><p>%vbsZip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXC_L.zip, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXC_L.sas7bdat, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=</p><p>);</p><p><br></p><p><br></p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"MY2875e5ba-309a-4dbd-850f-756c86fbd7b0","name":"Q1_VXCL","custparents":[{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"},{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"}],"NodeDescription":"<p>///t</p><p>[to do]</p><p>What if a doc is both PCP (GP), and SP. # GP encounters=8, # of SP encounters=2, the 2 encounters of SP will be eliminated, right?</p><p><br></p><p><br></p><p>t///</p>"},{"idx":"MY8937bf9d-8c26-4e13-9858-9cc99240eb1f","name":"Q2_VXCL","custparents":[{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"}],"NodeDescription":"<p>///t</p><p>How to validate that SPEC='BB' are GPs</p><p>t///</p>","children":[{"idx":"CodeTask-qw5zY2AXDDUdP1Gk","name":"ZXD validate BB","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*ZXA<br/>&nbsp&nbsp&nbsp&nbspValidate that BB code represents family physicians (FP)<br/>&nbsp&nbsp&nbsp&nbsp<br/><br/>&nbsp&nbsp&nbsp&nbspThe idea is that both FP and SP will have the save service codes, but<br/>&nbsp&nbsp&nbsp&nbsp1). The charge of a subsequent service by SP is higher<br/><br/>&nbsp&nbsp&nbsp&nbspLet's just use the MSB services of the statin cohort as an example<br/><br/>*/<br/><br/>/*1. Get service claims of the patients in the statin cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/>%print(data=master_msb)&#59<br/>/*2. does the amount of charge (amt_app) the same for<br/>&nbsp&nbsp&nbsp&nbspdifferent<br/>&nbsp&nbsp&nbsp&nbspspec, fsc?<br/>*/<br/>%distinct(data=master_msb, target=ZXA1, <br/>vars=%str(fsc, amt_app, diag, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2), <br/>orderby=%str(fsc, amt_app, diag, SP))&#59<br/><br/>/*the result shows that even for same GP same FSC, the charge is different<br/>*/<br/>data ZXA2a1&#59<br/>&nbsp&nbsp&nbsp&nbspset master_msb&#59<br/>&nbsp&nbsp&nbsp&nbspCalendarYr= year(dos)&#59<br/>&nbsp&nbsp&nbsp&nbspif month(dos) < 4 then FiscalYr=year(dos)-1&#59<br/>&nbsp&nbsp&nbsp&nbspelse FiscalYr=year(dos)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat SPEC2 $2.&#59<br/>&nbsp&nbsp&nbsp&nbspif spec in: (\"B\") then SPEC2=\"GP\"&#59<br/>&nbsp&nbsp&nbsp&nbspelse SPEC2=\"SP\"&#59<br/>run&#59<br/>%beep&#59<br/><br/>data ZXA2a2&#59<br/>&nbsp&nbsp&nbsp&nbspset ZXA2a1&#59<br/>&nbsp&nbsp&nbsp&nbspif FSC=\"A073\"&#59<br/>run&#59<br/>/*is it true that by fiscal year the charge is the same for the same SPEC and the same FSC*/<br/>%distinct(data=ZXA2a2, target=ZXA2b1, <br/>vars=%str(fsc, amt_app, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2, FiscalYr), <br/>orderby=%str(fsc, amt_app, FiscalYr, SP))&#59<br/>/*Nope. e.g., in CY 2015, for GP, the charge for A037 could be 56.8 or 57.9*/<br/><br/>%distinct(data=ZXA2a2, target=ZXA2b2, <br/>vars=%str(fsc, amt_app, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2, CalendarYr), <br/>orderby=%str(fsc, amt_app, CalendarYr, SP))&#59<br/>/*Nope. e.g., again in FY 2015, for GP, the charge for A037 could be 56.8 or 57.9*/<br/><br/>/*get the claims by GP in FY or CY 2015*/<br/>data ZXA2b3&#59<br/>&nbsp&nbsp&nbsp&nbspset ZXA2a2&#59<br/>&nbsp&nbsp&nbsp&nbspif CalendarYr=2015 or FiscalYr=2015&#59<br/>run&#59<br/>/*it seems that the charge increased in FY 2015, but sometimes services in Apr (although in FY2015) were yet charged by the rate<br/>&nbsp&nbsp&nbsp&nbspof the previous year<br/>&nbsp&nbsp&nbsp&nbspHmm.... If that is true, then the services in the second half year should be of the same charge for GPs<br/>*/<br/>data ZXA2b4&#59<br/>&nbsp&nbsp&nbsp&nbspset ZXA2a1&#59<br/>&nbsp&nbsp&nbsp&nbspif spec in: (\"B\") and month(dos) > 5&#59<br/>run&#59<br/>%distinct(data=ZXA2b4, target=ZXA2b5, <br/>vars=%str(fsc, amt_app, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2, FiscalYr), <br/>orderby=%str(fsc, amt_app, FiscalYr, SP))&#59<br/>/*still have claims of different charges<br/>e.g.<br/>A056&nbsp&nbsp&nbsp&nbsp13.2 or 13.5 by&nbsp&nbsp&nbsp&nbspGP&nbsp&nbsp&nbsp&nbspin FY 2015<br/>but maybe it is good enough, as the deviation in the same year is not that big<br/>*/<br/><br/><br/>/*another way, <br/>what is the mean sd of charges by GP/SP by fsc fiscal years<br/>*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=ZXA2a1, <br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=amt_app,<br/>&nbsp&nbsp&nbsp&nbspgroupVars= fiscalyr fsc spec2,  <br/>&nbsp&nbsp&nbsp&nbsptheStats=mean sd, <br/>&nbsp&nbsp&nbsp&nbsptarget=ZXA3a, <br/>&nbsp&nbsp&nbsp&nbspdebug=1,<br/>&nbsp&nbsp&nbsp&nbsppersonID=<br/>)&#59<br/><br/>/*Just to hypothesis, could it be that <br/>&nbsp&nbsp&nbsp&nbspthe means of charge are sig dif between GP and SP<br/>&nbsp&nbsp&nbsp&nbsp(by fiscal year, by fsc)<br/>*/<br/>/*<br/>does it make sense to let charge predict SPEC?<br/>is that a conditional log model (paired by fsc)<br/>check the refereal fee code: 55B<br/>*/<br/>proc genmod data=ZXA2a1&#59<br/>&nbsp&nbsp&nbsp&nbspwhere fsc='A110'&#59<br/>&nbsp&nbsp&nbsp&nbspclass key_doc_num key_hsn <br/>&nbsp&nbsp&nbsp&nbsp fiscalyr (ref='2006') /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel SPEC2 (ref='GP') = amt_app fiscalyr&#59<br/>&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num ( key_hsn) /covb&#59<br/>run&#59<br/><br/>%distinct(data=ZXA2a1, target=test, vars=fsc)&#59<br/>%distinct(data=ZXA2a1, target=test2, vars=SPEC2, filters=%str(FSC= \"B005\" or FSC=\"B055\" ))&#59<br/>proc freq data=zxa2a1&#59<br/>&nbsp&nbsp&nbsp&nbspwhere FSC= \"B005\" or FSC=\"B055\"&#59<br/>&nbsp&nbsp&nbsp&nbsptable  spec * fsc /nocol norow nopct&#59<br/>run&#59<br/>/*Bingo! B055 is for GPs to record that they had referred the patient to a specialist<br/>&nbsp&nbsp&nbsp&nbsptheoretically it should only be claimed by GPs.<br/>&nbsp&nbsp&nbsp&nbspIn the above, all claims with 'B055' are from a SPEC starting with 'B'. <br/>&nbsp&nbsp&nbsp&nbspIt proves that spec starting with a 'B' are GPs. <br/>*/<br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"MY8937bf9d-8c26-4e13-9858-9cc99240eb1f"}]}]},{"idx":"MY9d03a24b-b8d8-4931-b7b1-628b86f3749a","name":"_VXCL.zip (encounters with Doc Type, lookback)","custparents":[{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"},{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"},{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"}],"children":[{"idx":"CodeTask-eMS7CaKemHLL3NE7","name":"Prog VXDL_UPCIndex GPL","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*VXD_L determine the upc index and UPCPL (for look back period)*/<br/>data _null_&#59run&#59<br/>/*Provider Type*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxc_L.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxc_L.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxb.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxb.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxa.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxa.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*the upc index has to been caculated separately for look-back and for follow up*/<br/><br/>/*UPC in look-back*/<br/>/*From vxb, get claims with 365 days prior to the index(entryDate) */<br/>data VXD_L1&#59<br/>&nbsp&nbsp&nbsp&nbspset vxb&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate - 365 and entryDate -1&#59<br/>run&#59<br/><br/>/*calculate the UPC index from encounter episodes in look back*/<br/>/*the macro getUPCIndex works for MSB claim data, and other data<br/>&nbsp&nbsp&nbsp&nbspfor MSB claim data, the LOS, MODE, SPEC, and NUM_SRV must be provided<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe excluding LOC, excluding MODE, and including SPEC must be provided<br/>&nbsp&nbsp&nbsp&nbspfor other data (like in this case, the episodes have been prepared, or like prescription data)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspspecify the claimType as others, and do not need to specify LOS,MODE exclusion, and SPEC<br/>&nbsp&nbsp&nbsp&nbspBy default, the target file contains the doc with the max UPCIndex<br/>&nbsp&nbsp&nbsp&nbspbut this is not what is wanted here. <br/>&nbsp&nbsp&nbsp&nbspFor this analysis, it is expected to keep all docs, from which those as PCP, and with Max UPC Index will be kept<br/>&nbsp&nbsp&nbsp&nbspso the interested data set is not the target, but the tmp5 file created by the macro&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>%getUPCIndex(<br/>&nbsp&nbsp&nbsp&nbspdata=VXD_L1, <br/>&nbsp&nbsp&nbsp&nbsptarget=vx2_notInterested,<br/>&nbsp&nbsp&nbsp&nbspclaimType=others,<br/>&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/>/*197502*/<br/><br/>/*Determine the UPCPL*/<br/>/*link the providerTYpe to getUPC_tmp5 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=getUPC_tmp5,<br/>&nbsp&nbsp&nbsp&nbspt2=VXC_L,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXD_L7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeL),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, upcIndex )<br/>)&#59<br/>/*197502*/<br/><br/>/*from above, keep only those of providerType = 'PCP'*/<br/>data VXD_L8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXD_L7&#59<br/>&nbsp&nbsp&nbsp&nbspif providerTypeL = 'PCP'&#59<br/>run&#59<br/><br/>/*for each patient, determine the highest UPC index*/<br/>data vxd_L9&#59<br/>&nbsp&nbsp&nbsp&nbspset vxd_L8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn UPCIndex&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn UPCIndex&#59<br/>run&#59<br/><br/>/*Link the highest upc index back to vxd_L8 to keep patient-doc links with the highest UPC index<br/>(there could be multiple physicians with tie index values for a single patient)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vxd_l8,<br/>&nbsp&nbsp&nbsp&nbspt2=vxd_L9,<br/>&nbsp&nbsp&nbsp&nbsptarget=vxd_l10,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars= key_hsn UPCIndex,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, key_doc_num) <br/>)&#59<br/><br/>/*determine the UPCPL. In case of tie, get UPCPL1, UPCPL2, ....<br/>&nbsp&nbsp&nbsp&nbsp in case of tie, there will be multiple UPCPLs<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each UPCPL <br/>&nbsp&nbsp&nbsp&nbspand we'll need these values for each UPCPL<br/><br/>&nbsp&nbsp&nbsp&nbspFollowing is a smart idea:<br/>&nbsp&nbsp&nbsp&nbsp1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \"&#59\"<br/>&nbsp&nbsp&nbsp&nbsp2) make a tag of UPCPL1, 2, etc<br/>*/<br/>data vxd_L11&#59<br/>&nbsp&nbsp&nbsp&nbspset vxd_L10&#59<br/>&nbsp&nbsp&nbsp&nbspformat UPCIndex 6.2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn &#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCPL='UPCPL' || strip(i)&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCPL='UPCPL' || strip(i)&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>&nbsp&nbsp&nbsp&nbsp/*combine the var values together*/<br/>&nbsp&nbsp&nbsp&nbsplength theStr $50.&#59 <br/>&nbsp&nbsp&nbsp&nbsptheStr = catx(':', key_doc_num, N_Visits, ProviderTypeL, put(UPCIndex, 6.2))&#59<br/>&nbsp&nbsp&nbsp&nbsprename T_visits=T_visitsL&#59<br/>run&#59<br/><br/>/*now we can transpose the string in theStr into columsn of UPCPL1, 2, ...<br/>&nbsp&nbsp&nbsp&nbspThe values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br/>&nbsp&nbsp&nbsp&nbsp(i.e., scan(UPCPL1, 1, \":\") is the key_doc_num of UPCPL1, scan(UPCPL1, 2, \"&#59\") is the n_visits of UPCPL1, etc<br/>*/<br/>%transpose(data = vxd_L11, target=vxd_L12, <br/>&nbsp&nbsp&nbsp&nbsprowhead =key_hsn T_VisitsL  ,<br/>&nbsp&nbsp&nbsp&nbspcolhead=UPCPL,<br/>&nbsp&nbsp&nbsp&nbspcontents= theStr<br/>)<br/>/*43411*/<br/><br/>/*example to get upcindex of upcpl1*/<br/>/*<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset vxd_L12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspUPCIndex_UPCPL1= scan(UPCPL1, 4, ':')&#59<br/>run&#59<br/>*/<br/><br/>/*The docs in VXD_L12 are UPCPLs, link them back to VXA (the cohort)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXA,<br/>&nbsp&nbsp&nbsp&nbspt2=VXD_L12,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXD_L13,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*There are patients not having UPCPL, because these patients do not have eligible encounter during look back<br/>&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br/>*/<br/><br/>data VXD_L&#59<br/>&nbsp&nbsp&nbsp&nbspset VXD_L13&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp{*} UPCPL:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i)='' then tmp(i)='na:.:na:.'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/>/*46492*/<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXD_L.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXD_L.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-xQgMcg6rimD4RdlQ","name":"Q_VXDL","type":"TASK","NodeDescription":"<p>///t</p><p>[To do]</p><p>/* further questions and thoughts</p><p>For UPCIndex, excluding those only have 1 encounter?</p><p>&nbsp;&nbsp;&nbsp;&nbsp;no, otherwise the only PCP won't be identified, even if the doc is there. This is unfair</p><p><br></p><p>Dealing with Referral, group practicing</p><p><br></p><p>Standardization of UPC</p><p>COC</p><p>SEquence... </p><p>*/</p><p>t///</p>","custparents":[{"idx":"CodeTask-eMS7CaKemHLL3NE7"}]},{"idx":"MY9d56e239-fe0e-4cee-9e4f-9d782bf39698","name":"_VXDL.zip (UPC index GP Lookback)","custparents":[{"idx":"CodeTask-eMS7CaKemHLL3NE7"}],"children":[{"idx":"CodeTask-WOlheZQueJ48Okz7","name":"Prog VXEL_CMEPL","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*CMEPL during look back*/<br/>data _null_&#59run&#59<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXD_F.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXD_F.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXC_L.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXC_L.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxb.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxb.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*from VXB, get encounter episodes indicated as CME during look back */<br/>data VXE_L1&#59<br/>&nbsp&nbsp&nbsp&nbspset vxb&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate - 365 and entryDate -1 and CME=1&#59<br/>run&#59<br/><br/>/*sort by days between service date entryDate, and determine the closest CME to EntryDate*/<br/>data VXE_L2&#59<br/>&nbsp&nbsp&nbsp&nbspset Vxe_l1&#59<br/>&nbsp&nbsp&nbsp&nbspCMEDaysToEntry = intck('day', dos, entrydate)&#59 /*date2 - date1*/<br/>&nbsp&nbsp&nbsp&nbsp/*in the above data, the provider type is date specific, which is not to be used...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(there could be a doc whose date specific provider type is OTH, but is defined as PCP for the whole look back,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin that case, it is more porper to use the provider type of the whole period (i.e., PCP))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe whole-period provider type is made in VXC_L, which will be linked later<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn key_doc_num EntryDate CMEDaysToEntry&#59<br/>run&#59 <br/><br/>/*Determine the CMEPL*/<br/>/*link the providerTYpe to VXE_L2 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXE_L2,<br/>&nbsp&nbsp&nbsp&nbspt2=VXC_L,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXE_L7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeL),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, key_doc_num, CMEDaysToEntry )<br/>)&#59<br/>/*21924*/<br/><br/>/*from above, keep only those of providerType = 'PCP'*/<br/>data VXE_L8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_L7&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn key_doc_num CMEDaysToEntry&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbspif providerTypeL = 'PCP'&#59<br/>run&#59<br/><br/>/*shall we keep only the CMEPL closer to the entry date? or any CMEPL during look back<br/>&nbsp&nbsp&nbsp&nbspIt seems that keeping any makes more sense<br/>*/<br/><br/>/*determine the CMEPL. In case of tie, get CMEPL1, CMEP2, ....<br/>&nbsp&nbsp&nbsp&nbsp in case of tie, there will be multiple CMEPLs<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each CMEPL <br/>&nbsp&nbsp&nbsp&nbspand we'll need these values for each CMEPL<br/><br/>&nbsp&nbsp&nbsp&nbspFollowing is a nice idea:<br/>&nbsp&nbsp&nbsp&nbsp1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \"&#59\"<br/>&nbsp&nbsp&nbsp&nbsp2) make a tag of CMEPL1, 2, etc<br/>*/<br/>data vxe_L11&#59<br/>&nbsp&nbsp&nbsp&nbspset vxe_L8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn &#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEPL='CMEPL' || strip(i)&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEPL='CMEPL' || strip(i)&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>&nbsp&nbsp&nbsp&nbsp/*combine the var values together*/<br/>&nbsp&nbsp&nbsp&nbsplength theStr $50.&#59 <br/>&nbsp&nbsp&nbsp&nbsptheStr = catx(':', key_doc_num, CMEDaysToEntry, ProviderTypeL)&#59<br/>run&#59<br/><br/>/*now we can transpose the string in theStr into columsn of CMEPL1, 2, ...<br/>&nbsp&nbsp&nbsp&nbspThe values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br/>&nbsp&nbsp&nbsp&nbsp(i.e., scan(CMEPL1, 1, \":\") is the key_doc_num of CMEPL1, scan(CMEPL1, 2, \"&#59\") is the n_visits of CMEPL1, etc<br/>*/<br/>%transpose(data = vxe_L11, target=vxe_L12, <br/>&nbsp&nbsp&nbsp&nbsprowhead =key_hsn EntryDate  ,<br/>&nbsp&nbsp&nbsp&nbspcolhead=CMEPL,<br/>&nbsp&nbsp&nbsp&nbspcontents= theStr<br/>)<br/>/*16832*/<br/><br/>/*example to get provider type of CMEPL1*/<br/>/*<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset vxe_L12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspProviderType_CMEPL1= scan(CMEPL1, 3, ':')&#59<br/>run&#59<br/>*/<br/><br/>/*The docs in VXE_L12 are CMEPLs, link them back to VXD_F (the cohort)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXD_F,<br/>&nbsp&nbsp&nbsp&nbspt2=VXE_L12,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXE_L13,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*There are patients not having CMEPL, because these patients do not have eligible encounter during look back<br/>&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br/>*/<br/><br/>data VXE_L&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_L13&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp{*} CMEPL:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i)='' then tmp(i)='na:.:na'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/>/*46492*/<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXE_L.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXE_L.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-UIUYgqAHhGdYhF96","name":"Q_VXEL","type":"TASK","NodeDescription":"<p>///t</p><p>///s</p><p>/*</p><p>[to do]</p><p>How to deal with multiple CME providers</p><p>Is it worthy to account for the # of CMEs</p><p><br></p><p>If doc A is a CME provider, but not of the closest CME, is it fine to ignore it?</p><p><br></p><p>All CME providers during the period are kept</p><p>*/</p><p>s///</p><p>t///</p>","custparents":[{"idx":"CodeTask-WOlheZQueJ48Okz7"}]},{"idx":"MYf5d50ead-c2f4-40c7-813c-dd2a903551b3","name":"_VXEL.zip UPC Index GP Lookbk CMEP tag","custparents":[{"idx":"CodeTask-WOlheZQueJ48Okz7"}]}],"custparents":[{"idx":"MY9d56e239-fe0e-4cee-9e4f-9d782bf39698"},{"idx":"MY92a7b749-58d9-40c9-8d07-e1d8ae5f3b39"}]}]}],"custparents":[{"idx":"MY9d03a24b-b8d8-4931-b7b1-628b86f3749a"},{"idx":"MY2fa2873c-5571-48ac-902c-b8bcae4bc6b6"},{"idx":"MY73d63553-9ddd-41e3-8377-88aa5f9f3ba2"}]}]}],"custparents":[{"idx":"CodeTask-rXaW7KfQgzQfcx1V"},{"idx":"CodeTask-gbhiLx1DedOwRO4o"},{"idx":"MY29ccf959-2ee5-4d63-857a-917d41131396"},{"idx":"MY19a532ff-f72d-4d71-8f7c-3a93899ef85c"}]},{"idx":"CodeTask-fTiJ1wEyUDGKYnqu","name":"Prog VXCF_ProviderType Followup","type":"TASK","NodeDescription":"<p>///t</p><p>///s</p><p>/*VXC_F determine the Adjusted Provider Type during Follow up*/</p><p>data _null_;run;</p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;);</p><p><br></p><p>/*From vxb, get claims with 365 days since the index(entryDate) */</p><p>data VXC_F1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate and entryDate +365 -1;</p><p>run;</p><p><br></p><p>/*</p><p>&nbsp;&nbsp;&nbsp;&nbsp;As aforementioned in program vxb, the doc type is specific by dos, which means that</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a doc can be pcp, as well as scp during the Follow up</p><p>*/</p><p>/*in VXC_F1 (eposides in Follow up), how is the physician patterns? </p><p>&nbsp;&nbsp;&nbsp;&nbsp;as PCP, as SCP, as both PCP and SCP, as PCP, SCP, and OTH</p><p>&nbsp;&nbsp;&nbsp;&nbsp;To illustrate, let's transpose the data, make the PCP, SCP, and OTH in separate columns</p><p>*/</p><p>%print(data=VXC_F1);</p><p>/*count the ProviderType_DateSpecific*/</p><p>%sqljoinv2(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXC_F1,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=VXC_F2,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific, count(ProviderType_DateSpecific) as count),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;groupby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific)</p><p>);</p><p>%transpose(data = VXC_F2, target=VXC_F4, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn EntryDate Key_doc_num ,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;colhead=ProviderType_DateSpecific,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;contents=count</p><p>)</p><p>/*add a column to illustrate the # of provider types for a link of patient-physician*/</p><p>data VXC_F5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;countProviderType = sum(pcp/pcp,scp/scp,oth/oth); /*this sum function is smart :-)*/</p><p>run;</p><p><br></p><p>%freq(data=VXC_F5, table = countProviderType);</p><p>data test;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderType&gt;1;</p><p>run;</p><p>/*only a few cases are of multiple provider types in a link of patient-physician</p><p>&nbsp;&nbsp;&nbsp;&nbsp;most are that physicians acting as both PCP and OTH, the rest as a few SCP and OTH</p><p>&nbsp;&nbsp;&nbsp;&nbsp;there is no situation of PCP and SCP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;It sounds logic here to set the rule that:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if the physician used to be PCP during followup, make it PCP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else, if the physician used to be SCP, make it SCP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else make it OTH</p><p>*/</p><p>data VXC_F6;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if PCP ne . then ProviderType = 'PCP';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else if SCP ne . then ProviderType = 'SCP';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else ProviderType='OTH';</p><p>run;</p><p>data test;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F6;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderTYpe &gt;1;</p><p>run;</p><p>/*sounds make sense*/</p><p><br></p><p>/*why don't determine the adjusted ProviderType in VXB?</p><p>&nbsp;&nbsp;&nbsp;&nbsp;because such providerType is study period specific. Here is for lookback. Latter for followup it has to be determined again</p><p>*/</p><p><br></p><p><br></p><p>/*get a distinct list of patient-physician and providerTypeR (in follow up)*/</p><p>%distinct(data = VXC_F6, target=VXC_F, vars=%str(key_hsn, key_doc_num, ProviderType as ProviderTypeF));</p><p>/*Note that not all cohort members had doctors with defined ProviderTypeF, because some patients do not have</p><p>&nbsp;&nbsp;&nbsp;&nbsp;eligible encounters during follow up</p><p>*/</p><p>%vbsZip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXC_F.zip, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXC_F.sas7bdat, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=</p><p>);</p><p><br></p><p><br></p><p>s///</p><p>t///</p>","custparents":[{"idx":"MY29ccf959-2ee5-4d63-857a-917d41131396"},{"idx":"MY19a532ff-f72d-4d71-8f7c-3a93899ef85c"},{"idx":"MY29ccf959-2ee5-4d63-857a-917d41131396"}],"children":[{"idx":"MYd53e3de7-8bc1-4b0c-b5e5-9c1ab84c6bcd","name":"_VXCF.zip (Encounters with Doc type, followup)","custparents":[{"idx":"CodeTask-fTiJ1wEyUDGKYnqu"}],"children":[{"idx":"CodeTask-jZobJlVFsLEwSeaJ","name":"Prog VXDF_UPCIndex UCP_Followup","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*VXD_F determine the upc index and UPCPF (for Follow-up period)*/<br/><br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXC_F.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXC_F.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxb.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxb.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXD_L.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXD_L.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*UPC in follow up*/<br/>/*From vxb, get claims with 365 days since to the index(entryDate) */<br/>data VXD_F1&#59<br/>&nbsp&nbsp&nbsp&nbspset vxb&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate  and entryDate +365 -1&#59<br/>run&#59<br/><br/>/*calculate the UPC index from encounter episodes in follow up*/<br/>/*the macro getUPCIndex works for MSB claim data, and other data<br/>&nbsp&nbsp&nbsp&nbspfor MSB claim data, the LOS, MODE, SPEC, and NUM_SRV must be provided<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe excluding LOC, excluding MODE, and including SPEC must be provided<br/>&nbsp&nbsp&nbsp&nbspfor other data (like in this case, the episodes have been prepared, or like prescription data)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspspecify the claimType as others, and do not need to specify LOS,MODE exclusion, and SPEC<br/>&nbsp&nbsp&nbsp&nbspBy default, the target file contains the doc with the max UPCIndex<br/>&nbsp&nbsp&nbsp&nbspbut this is not what is wanted here. <br/>&nbsp&nbsp&nbsp&nbspFor this analysis, it is expected to keep all docs, from which those as PCP, and with Max UPC Index will be kept<br/>&nbsp&nbsp&nbsp&nbspso the interested data set is not the target, but the tmp5 file created by the macro&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>%getUPCIndex(<br/>&nbsp&nbsp&nbsp&nbspdata=VXD_F1, <br/>&nbsp&nbsp&nbsp&nbsptarget=vx2_notInterested,<br/>&nbsp&nbsp&nbsp&nbspclaimType=others,<br/>&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/>/*210785*/<br/><br/>/*why don't determine the adjusted ProviderType in VXB?<br/>&nbsp&nbsp&nbsp&nbspbecause such providerType is study period specific. Here is for follow up. Latter for followup it has to be determined again<br/>*/<br/><br/>/*Now we can determine the UPCPF*/<br/>/*link the providerTYpe_adj to getUPC_tmp5 */<br/>/*%Print(data=getUPC_tmp5)&#59*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=getUPC_tmp5,<br/>&nbsp&nbsp&nbsp&nbspt2=VXC_F,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXD_F7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, upcIndex )<br/>)&#59<br/>/*210785*/<br/><br/>/*from above, keep only those of providerTypeF = 'PCP'*/<br/>data VXD_F8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXD_F7&#59<br/>&nbsp&nbsp&nbsp&nbspif providerTypeF = 'PCP'&#59<br/>run&#59<br/><br/><br/>/*for each patient, determine the highest UPC index*/<br/>data vxd_F9&#59<br/>&nbsp&nbsp&nbsp&nbspset vxd_F8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn UPCIndex&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn UPCIndex&#59<br/>run&#59<br/><br/>/*Link the highest upc index back to vxd_F8 to keep patient-doc links with the highest UPC index<br/>(there could be multiple physicians with tie index values for a single patient)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vxd_F8,<br/>&nbsp&nbsp&nbsp&nbspt2=vxd_F9,<br/>&nbsp&nbsp&nbsp&nbsptarget=vxd_F10,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars= key_hsn UPCIndex,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, key_doc_num) <br/>)&#59<br/><br/>/*determine the UPCPF. In case of tie, get UPCPF1, UPCPF2, ....<br/>&nbsp&nbsp&nbsp&nbsp in case of tie, there will be multiple UPCPFs<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each UPCPF <br/>&nbsp&nbsp&nbsp&nbspand we'll need these values for each UPCPF<br/><br/>&nbsp&nbsp&nbsp&nbspFollowing is a smart idea:<br/>&nbsp&nbsp&nbsp&nbsp1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \"&#59\"<br/>&nbsp&nbsp&nbsp&nbsp2) make a tag of UPCPF1, 2, etc<br/>*/<br/>data vxd_F11&#59<br/>&nbsp&nbsp&nbsp&nbspset vxd_F10&#59<br/>&nbsp&nbsp&nbsp&nbspformat UPCIndex 6.2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn &#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCPF='UPCPF' || strip(i)&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCPF='UPCPF' || strip(i)&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>&nbsp&nbsp&nbsp&nbsp/*combine the var values together*/<br/>&nbsp&nbsp&nbsp&nbsplength theStr $50.&#59 <br/>&nbsp&nbsp&nbsp&nbsptheStr = catx(':', key_doc_num, N_Visits, ProviderTypeF, put(UPCIndex, 6.2))&#59<br/>&nbsp&nbsp&nbsp&nbsprename T_visits=T_visitsF&#59<br/>run&#59<br/><br/>/*now we can transpose the string in theStr into columsn of UPCPF1, 2, ...<br/>&nbsp&nbsp&nbsp&nbspThe values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br/>&nbsp&nbsp&nbsp&nbsp(i.e., scan(UPCPF1, 1, \":\") is the key_doc_num of UPCPF1, scan(UPCPF1, 2, \"&#59\") is the n_visits of UPCPF1, etc<br/>*/<br/>%transpose(data = vxd_F11, target=vxd_F12, <br/>&nbsp&nbsp&nbsp&nbsprowhead =key_hsn T_VisitsF  ,<br/>&nbsp&nbsp&nbsp&nbspcolhead=UPCPF,<br/>&nbsp&nbsp&nbsp&nbspcontents= theStr<br/>)<br/>/*44610*/<br/>/*a patient can have as many as 16 tied UPCPF1*/<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset vxd_f12&#59<br/>&nbsp&nbsp&nbsp&nbspif upcPF16 ne ''&#59<br/>run&#59<br/><br/>/*example to get upcindex of UPCPF1*/<br/>/*<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset vxd_F12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspUPCIndex_UPCPF1= scan(UPCPF1, 4, ':')&#59<br/>run&#59<br/>*/<br/><br/>/*The docs in VXD_F12 are UPCPFs, link them back to VXD_L (the cohort)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXD_L,<br/>&nbsp&nbsp&nbsp&nbspt2=VXD_F12,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXD_F13,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*There are patients not having UPCPF, because these patients do not have eligible encounter during look back<br/>&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br/>*/<br/><br/>data VXD_F&#59<br/>&nbsp&nbsp&nbsp&nbspset VXD_F13&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp{*} UPCPF:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i)='' then tmp(i)='na:.:na:.'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/>/*46492*/<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXD_F.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXD_F.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>/*determine whether there is a tie in UPC Index*/<br/>data VXD_F9&#59<br/>&nbsp&nbsp&nbsp&nbspset VXD_F8&#59<br/>&nbsp&nbsp&nbsp&nbsplagUpcIndex = lag(UpcIndex)&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn UpcIndex&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptie =0&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagUpcIndex=.&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif lagUpcIndex ne UPCIndex then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptie=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse tie=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lagUpcIndex&#59<br/>run&#59<br/><br/><br/>/*From above, keep the PCP with the highest UPCIndex*/<br/>data VXD_F10&#59<br/>&nbsp&nbsp&nbsp&nbspset VXD_F9&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn  upcIndex&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspif tie=1 then key_doc_num='tie'&#59<br/>run&#59<br/>/*44610*/<br/><br/>/*The docs in VXD_F10 are UPCPFs, link them back to VXC_L (the cohort)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXD_L,<br/>&nbsp&nbsp&nbsp&nbspt2=VXD_F10,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXD_F11,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.key_doc_num as UPCPF, t2.UPCIndex as UPCIndex_F),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/><br/>/*There are patients not having UPCPF, because these patients do not have eligible encounter during follow up<br/>&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br/>*/<br/>data VXD_F&#59<br/>&nbsp&nbsp&nbsp&nbspset VXD_F11&#59<br/>&nbsp&nbsp&nbsp&nbsplength UPCPF $11.&#59<br/>&nbsp&nbsp&nbsp&nbspif UPCPF='' then UPCPF='none'&#59<br/>run&#59<br/>/*46492*/<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXD_F.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXD_F.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"MY92a7b749-58d9-40c9-8d07-e1d8ae5f3b39","name":"_VXDF.zip (UPC index UCP Followup)","custparents":[{"idx":"CodeTask-jZobJlVFsLEwSeaJ"}],"children":[{"idx":"CodeTask-1SpxtlXR8T5jchis","name":"Prog VXEF_CMEPF","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*CMEPF during follow up*/<br/>data _null_&#59run&#59<br/><br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXE_L.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXE_L.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXC_F.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXC_F.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxb.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxb.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*from VXB, get encounter episodes indicated as CME during follow up */<br/>data VXE_F1&#59<br/>&nbsp&nbsp&nbsp&nbspset vxb&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate and entryDate  +365 -1 and CME=1&#59<br/>run&#59<br/><br/>/*sort by days between service date entryDate, and determine the closest CME to EntryDate*/<br/>data VXE_F2&#59<br/>&nbsp&nbsp&nbsp&nbspset Vxe_F1&#59<br/>&nbsp&nbsp&nbsp&nbspCMEDaysToEntry = intck('day',  entrydate, dos)&#59 /*date2 - date1*/<br/>&nbsp&nbsp&nbsp&nbsp/*in the above data, the provider type is date specific, which is not to be used...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(there could be a doc whose date specific provider type is OTH, but is defined as PCP for the whole follow up,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin that case, it is more porper to use the provider type of the whole period (i.e., PCP))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe whole-period provider type is made in VXC_F, which will be linked later<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn key_doc_num EntryDate CMEDaysToEntry&#59<br/>run&#59 <br/><br/>/*Determine the CMEPF*/<br/>/*link the providerTYpe to VXE_F2 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXE_F2,<br/>&nbsp&nbsp&nbsp&nbspt2=VXC_F,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXE_F7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, key_doc_num, CMEDaysToEntry )<br/>)&#59<br/>/*30045*/<br/><br/>/*from above, keep only those of providerType = 'PCP'*/<br/>data VXE_F8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F7&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn key_doc_num CMEDaysToEntry&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbspif providerTypeF = 'PCP'&#59<br/>run&#59<br/><br/>/*shall we keep only the CMEPF closer to the entry date? or any CMEPF during follow up<br/>&nbsp&nbsp&nbsp&nbspIt seems that keeping any makes more sense<br/>*/<br/><br/>/*determine the CMEPF. In case of tie, get CMEPF1, CMEP2, ....<br/>&nbsp&nbsp&nbsp&nbsp in case of tie, there will be multiple CMEPFs<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each CMEPF <br/>&nbsp&nbsp&nbsp&nbspand we'll need these values for each CMEPF<br/><br/>&nbsp&nbsp&nbsp&nbspFollowing is a nice idea:<br/>&nbsp&nbsp&nbsp&nbsp1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \"&#59\"<br/>&nbsp&nbsp&nbsp&nbsp2) make a tag of CMEPF1, 2, etc<br/>*/<br/>data VXE_F11&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn &#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEPF='CMEPF' || strip(i)&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEPF='CMEPF' || strip(i)&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>&nbsp&nbsp&nbsp&nbsp/*combine the var values together*/<br/>&nbsp&nbsp&nbsp&nbsplength theStr $50.&#59 <br/>&nbsp&nbsp&nbsp&nbsptheStr = catx(':', key_doc_num, CMEDaysToEntry, ProviderTypeF)&#59<br/>run&#59<br/><br/>/*now we can transpose the string in theStr into columsn of CMEPF1, 2, ...<br/>&nbsp&nbsp&nbsp&nbspThe values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br/>&nbsp&nbsp&nbsp&nbsp(i.e., scan(CMEPF1, 1, \":\") is the key_doc_num of CMEPF1, scan(CMEPF1, 2, \"&#59\") is the n_visits of CMEPF1, etc<br/>*/<br/>%transpose(data = VXE_F11, target=VXE_F12, <br/>&nbsp&nbsp&nbsp&nbsprowhead =key_hsn EntryDate  ,<br/>&nbsp&nbsp&nbsp&nbspcolhead=CMEPF,<br/>&nbsp&nbsp&nbsp&nbspcontents= theStr<br/>)<br/>/*30044*/<br/><br/>/*example to get provider type of CMEPF1*/<br/>/*<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspProviderType_CMEPF1= scan(CMEPF1, 3, ':')&#59<br/>run&#59<br/>*/<br/><br/>/*The docs in VXE_F12 are CMEPFs, link them back to VXE_L (the cohort)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXE_L,<br/>&nbsp&nbsp&nbsp&nbspt2=VXE_F12,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXE_F13,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*There are patients not having CMEPF, because these patients do not have eligible encounter during follow up<br/>&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br/>*/<br/><br/>data VXE_F&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F13&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp{*} CMEPF:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i)='' then tmp(i)='na:.:na'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/>/*46492*/<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXE_F.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXE_F.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>/*sort by days betweeo service date entryDate, and determine the closest CME to EntryDate*/<br/>data VXE_F2&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F1&#59<br/>&nbsp&nbsp&nbsp&nbspCMEDaysToEntry = intck('day', dos, entrydate)&#59 /*date2 - date1*/<br/>run&#59 <br/>%sort(data=VXE_F2, sorter=key_hsn descending CMEDaysToEntry)&#59 /*smaller CMEDaysToEntry is closer to EntryDate*/<br/><br/>/*determine whether there is a tie in UPC Index*/<br/>data VXE_F3&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F2&#59<br/>&nbsp&nbsp&nbsp&nbspLagCMEDaysToEntry = lag(CMEDaysToEntry)&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn descending CMEDaysToEntry&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptie =0&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagCMEDaysToEntry=.&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LagCMEDaysToEntry ne CMEDaysToEntry then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptie=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse tie=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop LagCMEDaysToEntry&#59<br/>run&#59<br/>%freq(data=VXE_F3, table=tie)&#59<br/><br/>/*From above, keep the CMEP with the lowest CMEDaysToEntry*/<br/>data VXE_F4&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F3&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn descending CMEDaysToEntry&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspif tie=1 then key_doc_num='tie'&#59<br/>run&#59<br/>/*16832*/<br/><br/>/*Link to the cohort (VXE_F) to indicate the Last CME date and CMEP during follow up*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXE_F,<br/>&nbsp&nbsp&nbsp&nbspt2=VXE_F4,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXE_F5,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.key_doc_num as CMEPF, t2.dos as CMEDateF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/><br/>/*There are patients not having CMEPF, because these patients do not have eligible encounter during follow up<br/>&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br/>*/<br/>data VXE_F&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F5&#59<br/>&nbsp&nbsp&nbsp&nbsplength CMEPF $11.&#59<br/>&nbsp&nbsp&nbsp&nbspif CMEPF='' then CMEPF='none'&#59<br/>run&#59<br/>/*46492*/<br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset VXE_F&#59<br/>&nbsp&nbsp&nbsp&nbspif CMEPF = 'tie'&#59<br/>run&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXE_F.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXE_F.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"MY92a7b749-58d9-40c9-8d07-e1d8ae5f3b39"},{"idx":"MY92a7b749-58d9-40c9-8d07-e1d8ae5f3b39"},{"idx":"MYf5d50ead-c2f4-40c7-813c-dd2a903551b3"},{"idx":"MYd53e3de7-8bc1-4b0c-b5e5-9c1ab84c6bcd"}],"children":[{"idx":"MY6114b56f-5272-42b8-b4bf-71d94346fe86","name":"_VXEF.zip UPC Index GP Followup CMEP tag","custparents":[{"idx":"CodeTask-1SpxtlXR8T5jchis"}]}]}]}],"custparents":[{"idx":"CodeTask-fTiJ1wEyUDGKYnqu"},{"idx":"MYd53e3de7-8bc1-4b0c-b5e5-9c1ab84c6bcd"},{"idx":"MY9d03a24b-b8d8-4931-b7b1-628b86f3749a"},{"idx":"MY9d56e239-fe0e-4cee-9e4f-9d782bf39698"}]}]}]}]},{"idx":"MY663bccde-9197-4b2e-b349-c136f9aec5e1","name":"_Master_DP _Benefit.zip","custparents":[{"idx":"MY043c6d28-3e77-4035-8f61-8ea6497d8f23"}]},{"idx":"MYf7dbf2a3-7c4e-474f-ade1-6b83bb5d4bc2","name":"_Master_DP _NonBenefit.zip","custparents":[{"idx":"MY043c6d28-3e77-4035-8f61-8ea6497d8f23"}],"children":[{"idx":"CodeTask-qfcAXJSXk3TTi6Wu","name":"Prog VXF_StatinClaims","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*VXF. the statin Rx of these patients within 1 years since index date*/<br/>data _null_&#59run&#59<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localdataPath.\\master_dp_benefit.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_benefit.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxa.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxa.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localdataPath.\\master_dp_nonbenefit.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_nonbenefit.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>/*Have statin claims of the patients in a with 365 days since EntryDate.*/<br/>/*VXF1. benefit statin claims */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit, <br/>&nbsp&nbsp&nbsp&nbspt2=locald.A6_DINDX,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXF1a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXF1a, <br/>&nbsp&nbsp&nbsp&nbspt2=vxa,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXF1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.EntryDate), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.Key_hsn = t2.key_hsn and t1.rx_ddddd between t2.EntryDate and t2.EntryDate +365-1)<br/>)&#59<br/>/*Have statin claims of the patients in a with 365 days since EntryDate.*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit, <br/>&nbsp&nbsp&nbsp&nbspt2=locald.A6_DINDX,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXF2a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXF2a, <br/>&nbsp&nbsp&nbsp&nbspt2=vxa,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXF2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.EntryDate), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.Key_hsn = t2.key_hsn and t1.rx_ddddd between t2.EntryDate and t2.EntryDate +365-1)<br/>)&#59<br/><br/>/*combined to have claims from both sources, indicate those anonymous or slushcode doctors as unknown<br/>&nbsp&nbsp&nbsp&nbspthese docs are kept here as we'll still need the corresponding claims to identify the first prescriber<br/>*/<br/>data VXF&#59<br/>&nbsp&nbsp&nbsp&nbspset VXF1 VXF2&#59<br/>&nbsp&nbsp&nbsp&nbspif docslushcode ='Y' or key_prscr_num = '' or key_prscr_num = 'UNKNOWN0000' then <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_prscr_num='unknown'&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>%sort(data=VXF, sorter=%str(key_hsn rx_ddddd key_prscr_num))&#59<br/>/*VXF contains statin claims within 365 days since the EntryDate<br/>&nbsp&nbsp&nbsp&nbspit includes those prescribed by slushcode docs or docs unknown (blank)<br/>&nbsp&nbsp&nbsp&nbspFor adherence calculation, these claims should not be excluded<br/>*/<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(&localTargetPath), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=VXF.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=VXF.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"MYc1e8dd88-4880-426a-b9e6-8f1053d1ccd5","name":"_VXF.zip (Statin claims of cohort followup)","custparents":[{"idx":"CodeTask-qfcAXJSXk3TTi6Wu"}],"children":[{"idx":"CodeTask-SFfBPWO2kVud9Lvh","name":"prog VXG_FP","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*VXG first prescriber*/<br/>data _null_&#59run&#59<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXc_F.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXc_F.sas7bdat)<br/>)&#59<br/>/*get statin claims*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXF.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXF.sas7bdat)<br/>)&#59<br/>/*get the cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXE_F.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXE_F.sas7bdat)<br/>)&#59<br/><br/>/*to Identify the first prescriber of statin, get prescribers on the EntryDate*/<br/>%distinct(data = vxf, target=vxg1, vars=%str(key_hsn, key_prscr_num as key_doc_num, entryDate), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(rx_ddddd = entryDate), orderby=%str(key_hsn, key_prscr_num))&#59<br/>/*Note that in the above, without the filters, the data set has duplicated records, why??? Is there a bug in the macro distinct???*/<br/>/*46497*/<br/><br/><br/><br/>/*Determine the FP*/<br/>/*link the providerTYpe to vxg1 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vxg1,<br/>&nbsp&nbsp&nbsp&nbspt2=VXC_F,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXG7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn)<br/>)&#59<br/>/*46497*/<br/><br/>/*from above, unlike for PCPs, we'll keep all types, not only those of providerTypeF = 'PCP'<br/>&nbsp&nbsp&nbsp&nbspotherwise it'll be biased*/<br/>data VXG8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXG7&#59<br/>&nbsp&nbsp&nbsp&nbspif providerTypeF = '' then providerTypeF='na'&#59<br/>run&#59<br/>/*those 'na' yet can be family doctors (PCP for other patients), it is just that they did not provide any service to the patient during follow up*/<br/><br/>/*shall we keep only the FP closer to the entry date? or any FP during follow up<br/>&nbsp&nbsp&nbsp&nbspIt seems that keeping any makes more sense<br/>*/<br/><br/>/*determine the FP. In case of tie, get FP1, FP2, ....<br/>&nbsp&nbsp&nbsp&nbsp in case of tie, there will be multiple FPs<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each FP <br/>&nbsp&nbsp&nbsp&nbspand we'll need these values for each FP<br/><br/>&nbsp&nbsp&nbsp&nbspFollowing is a nice idea:<br/>&nbsp&nbsp&nbsp&nbsp1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \"&#59\"<br/>&nbsp&nbsp&nbsp&nbsp2) make a tag of FP1, 2, etc<br/>*/<br/>data VXG11&#59<br/>&nbsp&nbsp&nbsp&nbspset VXG8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn &#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFP='FP' || strip(i)&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFP='FP' || strip(i)&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>&nbsp&nbsp&nbsp&nbsp/*combine the var values together*/<br/>&nbsp&nbsp&nbsp&nbsplength theStr $20.&#59 <br/>&nbsp&nbsp&nbsp&nbsptheStr = catx(':', key_doc_num, ProviderTypeF)&#59<br/>run&#59<br/><br/>/*now we can transpose the string in theStr into columsn of FP1, 2, ...<br/>&nbsp&nbsp&nbsp&nbspThe values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br/>&nbsp&nbsp&nbsp&nbsp(i.e., scan(FP1, 1, \":\") is the key_doc_num of FP1, scan(FP1, 2, \"&#59\") is the n_visits of FP1, etc<br/>*/<br/>%transpose(data = VXG11, target=VXG12, <br/>&nbsp&nbsp&nbsp&nbsprowhead =key_hsn EntryDate  ,<br/>&nbsp&nbsp&nbsp&nbspcolhead=FP,<br/>&nbsp&nbsp&nbsp&nbspcontents= theStr<br/>)<br/>/*30853*/<br/><br/>/*example to get provider type of FP1*/<br/>/*<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset VXG12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspProviderType_FP1= scan(FP1, 2, ':')&#59<br/>run&#59<br/>*/<br/><br/>/*The docs in VXG12 are FPs, link them back to VXE_F (the cohort)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXE_F,<br/>&nbsp&nbsp&nbsp&nbspt2=VXG12,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXG13,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*There are patients not having FP, because these patients do not have eligible encounter during follow up<br/>&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br/>*/<br/><br/>data VXG&#59<br/>&nbsp&nbsp&nbsp&nbspset VXG13&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp{*} FP:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i)='' then tmp(i)='na:na'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/>/*46492*/<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXG.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXG.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"MY71048491-96f8-471e-b678-983f4449e08d","name":"_VXG.zip (First Prescriber)","custparents":[{"idx":"CodeTask-SFfBPWO2kVud9Lvh"}],"children":[]}],"custparents":[{"idx":"MYc1e8dd88-4880-426a-b9e6-8f1053d1ccd5"},{"idx":"MY6114b56f-5272-42b8-b4bf-71d94346fe86"},{"idx":"MYd53e3de7-8bc1-4b0c-b5e5-9c1ab84c6bcd"}]},{"idx":"CodeTask-j6dtk9XKc4xrGUMh","name":"prog VXH_USP","type":"TASK","NodeDescription":"<p>///t</p><p>///s</p><p>/*USP Usual prescriber of statin*/</p><p>data _null_;run;</p><p>/*the cohort*/</p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXG.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXG.sas7bdat)</p><p>);</p><p>/*get statin claims*/</p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXF.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXF.sas7bdat)</p><p>);</p><p>/*the type of provider during follow up*/</p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXC_F.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXC_F.sas7bdat)</p><p>);</p><p><br></p><p><br></p><p><br></p><p>/*calculate the Rx Freq from statin drug claims in follow up*/</p><p>/*the macro getUPCIndex works for MSB claim data, and other data</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for MSB claim data, the LOS, MODE, SPEC, and NUM_SRV must be provided</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the excluding LOC, excluding MODE, and including SPEC must be provided</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for other data (like in this case, the episodes have been prepared, or like prescription data)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify the claimType as others, and do not need to specify LOS,MODE exclusion, and SPEC</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;unlike UPC in MSB, here it is fine even if the combination of same patient-doc-rx_ddddd repeat</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;By default, the target file contains the doc with the max rx Freq</p><p>&nbsp;&nbsp;&nbsp;&nbsp;but this is not what is wanted here. </p><p>&nbsp;&nbsp;&nbsp;&nbsp;For this analysis, it is expected to keep all docs, from which those as PCP, and with Max rx Freq will be kept</p><p>&nbsp;&nbsp;&nbsp;&nbsp;so the interested data set is not the target, but the tmp5 file created by the macro&nbsp;&nbsp;&nbsp;&nbsp;</p><p><br></p><p>*/</p><p>/*Use the macro UPC to identify the most freq prescriber of Statin during follow up, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;unlike UPC in MSB, here it is fine even if the combination of same patient-doc-rx_ddddd repeat</p><p>*/</p><p>%getUPCIndex(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data=VXF, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=VXH1,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;InPatientLOS = , </p><p>&nbsp;&nbsp;&nbsp;&nbsp;outProvMode = ,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;InterestedSPEC =,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;docIDCol = key_prscr_num,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;doscol=rx_ddddd,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;claimType=dp,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;debug=1</p><p>);</p><p>/*70619*/</p><p><br></p><p>/*why don't determine the ProviderType in VXB?</p><p>&nbsp;&nbsp;&nbsp;&nbsp;because such providerType is study period specific. Here is for follow up. Latter for followup it has to be determined again</p><p>*/</p><p><br></p><p>data VXH1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set getUPC_tmp5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rename </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_prscr_num = key_doc_num;</p><p>run;</p><p><br></p><p>/*Now we can determine the UP*/</p><p>/*link the providerTYpe to getUPC_tmp5 */</p><p>/*%Print(data=getUPC_tmp5);*/</p><p><br></p><p>/*in the following, despite that it is called UPC, nvisits, tvisits, it is actually for Usual prescriber index, nRx an tRx*/</p><p>%sqljoinv2(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXH1,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXC_F,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=VXH_F7,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.providerTypeF),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn key_doc_num,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, upcIndex )</p><p>);</p><p>/*70619*/</p><p><br></p><p>/*from above, unlike for PCPs, we'll keep all types, not only those of providerTypeF = 'PCP'</p><p>&nbsp;&nbsp;&nbsp;&nbsp;otherwise it'll be biased</p><p>*/</p><p>data VXH_F8;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXH_F7;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if providerTypeF = '' then providerTypeF='na';</p><p>run;</p><p>/*those 'na' yet can be family doctors (PCP for other patients), it is just that they did not provide any service to the patient during follow up*/</p><p><br></p><p><br></p><p>/*for each patient, determine the highest UPC index (i.e., the highest Rx Freq)*/</p><p>data VXH_F9;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXH_F8;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn UPCIndex;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if last.key_hsn;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn UPCIndex;</p><p>run;</p><p><br></p><p>/*Link the highest upc index back to VXH_F8 to keep patient-doc links with the highest UPC index</p><p>(there could be multiple physicians with tie index values for a single patient)*/</p><p>%sqljoinv2(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXH_F8,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXH_F9,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=VXH_F10,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jvars= key_hsn UPCIndex,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, key_doc_num) </p><p>);</p><p><br></p><p>/*determine the UP. In case of tie, get UP1, UP2, ....</p><p>&nbsp;&nbsp;&nbsp;&nbsp;in case of tie, there will be multiple UPs</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each UP </p><p>&nbsp;&nbsp;&nbsp;&nbsp;and we'll need these values for each UP</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;Following is a smart idea:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \";\"</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2) make a tag of UP1, 2, etc</p><p>*/</p><p>data VXH_F11;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXH_F10;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;format UPCIndex 6.2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_hsn then do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i =1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UPR='UPR' || strip(i);&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i+1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UPR='UPR' || strip(i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;drop i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*combine the var values together*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;length theStr $50.; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;theStr = catx(':', key_doc_num, N_Visits, ProviderTypeF, put(UPCIndex, 6.2));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rename T_visits=T_Rx;</p><p>run;</p><p><br></p><p>/*now we can transpose the string in theStr into columsn of UP1, 2, ...</p><p>&nbsp;&nbsp;&nbsp;&nbsp;The values will stay there. Later we can use scan(var, # of word, dlmt) to get the values</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(i.e., scan(UPR1, 1, \":\") is the key_doc_num of UPR1, scan(UPR1, 2, \";\") is the n_visits of UPR1, etc</p><p>*/</p><p>%transpose(data = VXH_F11, target=VXH_F12, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn T_Rx ,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;colhead=UPR,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;contents= theStr</p><p>)</p><p>/*46492*/</p><p>/*a patient can have as many as 6 tied UPR1*/</p><p>data test;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXH_F12;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if UPR6 ne '';</p><p>run;</p><p><br></p><p>/*example to get upcindex of UPR1*/</p><p>/*</p><p>data test;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXH_F12 (obs=1);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;UPCIndex_UPR1= scan(UPR1, 4, ':');</p><p>run;</p><p>*/</p><p><br></p><p>/*The docs in VXH_F12 are UPRs, link them back to VXG (the cohort)*/</p><p>%sqljoinv2(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXG,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXH_F12,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;target=VXH_F13,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;vars=*,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn</p><p>);</p><p>/*There are patients not having UP, because these patients do not have eligible encounter during look back</p><p>&nbsp;&nbsp;&nbsp;&nbsp;In that case, indicate as 'none'</p><p>*/</p><p><br></p><p>data VXH;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VXH_F13;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;array tmp{*} UPR:;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;do i = 1 to dim(tmp);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if tmp(i)='' then tmp(i)='na:.:na:.';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;drop i&nbsp;&nbsp;&nbsp;&nbsp;;</p><p>run;</p><p>/*46492*/</p><p><br></p><p>%vbsZip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXH.zip, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXH.sas7bdat, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=</p><p>);</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"MY743f7b37-cb10-402c-89fe-87ac0642a4f9","name":"_VXH.zip (USPs)","custparents":[{"idx":"CodeTask-j6dtk9XKc4xrGUMh"}],"children":[{"idx":"CodeTask-V9nhbWJ4RhmiMaZJ","name":"prog VXI_LinkPattern By Doc Role","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*VXI, Link Pattern of all distinct doctors*/<br/>data _null_&#59run&#59<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXH.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXH.sas7bdat)<br/>)&#59<br/><br/>/*now we are going to determine an algorithm to deal with the link pattern.<br/>&nbsp&nbsp&nbsp&nbspWe need to determine, for each role (UPCPL, UPCPF, etc), which doctor to select in case of tie<br/>&nbsp&nbsp&nbsp&nbspFirst, we need to see how the tie patterns looks like&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspIn the following we'll try to map out all the tie patterns. For example:<br/>&nbsp&nbsp&nbsp&nbspfor UPCPL, if there are two docs, it'll be AB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen for UPCPF, if there are two docs again, in which one is the same doc A as in UPCPL, but the other is a new one, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptherefore the pattern for UPCPF will be AC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand we'll line them up to be like: AB,AC.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWe'll repeat the same method for other role of docs (CMEPL, CMEPF, FP, and UP), like AB,AC,BC,.....<br/>&nbsp&nbsp&nbsp&nbspThat way we can see how does physicians repeatedly appear in different roles<br/>&nbsp&nbsp&nbsp&nbspbyte values for A =65, a=97<br/>*/<br/><br/>data VXi1&#59<br/>&nbsp&nbsp&nbsp&nbspset vxh&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp1 {*} UPCPL:&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp2 {*} UPCPF:&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp3 {*} CMEPL:&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp4 {*} CMEPF:&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsparray tmp5 {*} FP:&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp6 {*} UPR:&#59<br/>&nbsp&nbsp&nbsp&nbsp/*get the max # of doctors */<br/>/*&nbsp&nbsp&nbsp&nbspdimAll = sum(dim(tmp1),dim(tmp2),dim(tmp3),dim(tmp4),dim(tmp5),dim(tmp6) )&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*set the length of the docIDs*/<br/>&nbsp&nbsp&nbsp&nbsplength docIDs $1500.&#59<br/>/*&nbsp&nbsp&nbsp&nbsparray tmpAll {dimAll}&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspconcatecate all docs together, between different roles, split by &#59, within roles, split by ,*/<br/>&nbsp&nbsp&nbsp&nbspDo i = 1 to dim(tmp1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID = scan(tmp1(i), 1, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theID not in:('na') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocIDs = strip(docIDs) || \",\"  || theID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdocIDs=strip(docIDs) || \"&#59\"&#59<br/><br/>&nbsp&nbsp&nbsp&nbspDo i = 1 to dim(tmp2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID = scan(tmp2(i), 1, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theID not in:('na') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocIDs = strip(docIDs) || \",\"  || theID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdocIDs=strip(docIDs) || \"&#59\"&#59<br/><br/>&nbsp&nbsp&nbsp&nbspDo i = 1 to dim(tmp3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID = scan(tmp3(i), 1, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theID not in:('na') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocIDs = strip(docIDs) || \",\"  || theID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdocIDs=strip(docIDs) || \"&#59\"&#59<br/><br/>&nbsp&nbsp&nbsp&nbspDo i = 1 to dim(tmp4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID = scan(tmp4(i), 1, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theID not in:('na') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocIDs = strip(docIDs) || \",\"  || theID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdocIDs=strip(docIDs) || \"&#59\"&#59<br/><br/>&nbsp&nbsp&nbsp&nbspDo i = 1 to dim(tmp5)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID = scan(tmp5(i), 1, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theID not in:('na') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocIDs = strip(docIDs) || \",\"  || theID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdocIDs=strip(docIDs) || \"&#59\"&#59<br/>&nbsp&nbsp&nbsp&nbspDo i = 1 to dim(tmp6)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID = scan(tmp6(i), 1, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theID not in:('na') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocIDs = strip(docIDs) || \",\"  || theID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdocIDs=strip(docIDs) || \"&#59\"&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspdocIDs = tranwrd(docIDs, \"&#59,\", \"&#59\")&#59<br/>&nbsp&nbsp&nbsp&nbspif substr(docIDs, 1,1) =\",\" then docIDs = substr(docIDs, 2, length(docIDs) -1)&#59<br/>&nbsp&nbsp&nbsp&nbspif substr(docIDs, length(DocIDs), 1) =\"&#59\" then docIDs = substr(docIDs, 1, length(docIDs) -1)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn docIDs&#59<br/>run&#59<br/><br/><br/>/*scan for each docid and check the repeat situation*/<br/>data VXi2&#59<br/>&nbsp&nbsp&nbsp&nbspset VXi1  &#59<br/>&nbsp&nbsp&nbsp&nbspNTotalIDs=countw(docIDs)&#59 /*get the total # of IDs*/<br/>&nbsp&nbsp&nbsp&nbspdocIDs2=tranwrd(docIDs, 'unknown', '')&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID=scan(docIDs2, 1, \",&#59\")&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspdocIDs2=tranwrd(docIDs2, strip(theID), 'a')&#59*/<br/>&nbsp&nbsp&nbsp&nbspletterCNT=0&#59<br/>&nbsp&nbsp&nbsp&nbspdo NIDs = 1 to NTotalIDs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheID=scan(docIDs2, NIDs, \",&#59\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theID in: ('0','1','2','3','4','5','6','7','8','9','0') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspletterCNT+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIDCount=count(docIDs2, strip(theID))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif IDCount > 1 then byteBase=64&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse byteBase=96&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocIDs2=tranwrd(docIDs2, strip(theID), byte(letterCNT+byteBase))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn DocIDs2&#59<br/>&nbsp&nbsp&nbsp&nbsprename DocIDs2 = RolesPatternAllDoc&#59 <br/>run&#59<br/>/*46492*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXH,<br/>&nbsp&nbsp&nbsp&nbspt2=vxi2,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXI3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.RolesPatternAllDoc='', 'na', t2.RolesPatternAllDoc) as RolesPatternAllDoc),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*46492*/<br/><br/>/*scan function will skip consecutive delimits like '&#59&#59'. This is not what we want<br/>&nbsp&nbsp&nbsp&nbspan underscoure is added so that there is always something between two semicolons*/<br/>data VXI&#59<br/>&nbsp&nbsp&nbsp&nbspset VXI3&#59<br/>&nbsp&nbsp&nbsp&nbspRolesPatternAllDoc=tranwrd(RolesPatternAllDoc, '&#59', '&#59_')&#59<br/>&nbsp&nbsp&nbsp&nbspRolesPatternAllDoc=\"_\" || RolesPatternAllDoc&#59<br/>&nbsp&nbsp&nbsp&nbspRolesPatternAllDoc=compress(RolesPatternAllDoc, ' ')&#59<br/>run&#59<br/>/*data test&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspset VXI  (firstobs=138 obs=138)&#59*/<br/>/*run&#59*/<br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXI.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXI.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"MYbd7eed4b-8cb0-4b78-9207-5e67c1eeaac5","name":"_VXI Doc Role.zip","custparents":[{"idx":"CodeTask-V9nhbWJ4RhmiMaZJ"}],"children":[{"idx":"CodeTask-ae8PL8lWWCu1z3jG","name":"prog VXJ SwitchPattern","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*VXJ, Switch Patterns*/<br/>data _null_&#59run&#59<br/><br/>/*why there are patterns like &#59&#59&#59&#59&#59&#59 (none of the roles identified), these could be 'unknown' prescribers (e.g., slushcode, etc)*/<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXI.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXI.sas7bdat)<br/>)&#59<br/>/*%print(data=VXI)&#59*/<br/><br/>/*the patterns are:<br/>&nbsp&nbsp&nbsp&nbspUCPL (look back)&#59 UCPF (followup)&#59 CMEL&#59 CMEF&#59 FP (first statin prescriber)&#59 UPR (freq prescriber)<br/>*/<br/><br/>/*1. Never Changed<br/><br/>&nbsp&nbsp&nbsp&nbspit can be like 'A,b&#59A&#59A&#59A&#59A&#59A' but there must be six 'A's<br/>&nbsp&nbsp&nbsp&nbspbut it can also be like 'a,B&#59B&#59B&#59B&#59B&#59B', <br/>&nbsp&nbsp&nbsp&nbspor 'a,b,C&#59C&#59C&#59C&#59C&#59C'<br/>*/<br/>data VXJ1&#59<br/>&nbsp&nbsp&nbsp&nbspset VXI &#59<br/>&nbsp&nbsp&nbsp&nbspNever_Changed=0&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed&#59<br/>&nbsp&nbsp&nbsp&nbspif RolesPatternAllDoc='_&#59_&#59_&#59_&#59_&#59_' then Never_Changed=9&#59 <br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 26&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif count(RolesPatternAllDoc, byte(i+63)) =6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNever_Changed=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>/*%freq(data=VXJ1 , table = Never_Changed)&#59*/<br/><br/>/*2. UPCP_changed<br/>&nbsp&nbsp&nbsp&nbspUPCP_unchanged like: UPCPL = 'A,b&#59' UPCPF = 'A,d' (i.e., there is at least one letter is the same)<br/>*/<br/><br/>data VXJ2&#59<br/>&nbsp&nbsp&nbsp&nbspset VXJ1 &#59<br/>&nbsp&nbsp&nbsp&nbspUPCP_changed=1&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPLs=scan(RolesPatternAllDoc, 1, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPFs=scan(RolesPatternAllDoc, 2, '&#59')&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif strip(UPCPLs)='_' and strip(UPCPFs)='_' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_changed=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UPCPLs='_'  or UPCPFs='_'  then goto skip1&#59 /*if UPCPLs does not contain any doctors*/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPLs = tranwrd(UPCPLs, '_', '') &#59<br/><br/>&nbsp&nbsp&nbsp&nbspUPCPFs = tranwrd(UPCPFs, '_', '')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each UPCPL*/<br/>&nbsp&nbsp&nbsp&nbspNUPCPLs = countw(UPCPLs)+1&#59/*for strings like '&#59B', the countw returns 1 ('&#59' is treated as a delimiter).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, '&#59') ='', scan(str,2,'&#59') ='B'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br/>&nbsp&nbsp&nbsp&nbspNUPCPFs = countw(UPCPFs)+1&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to NUPCPLs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheUPCPL = scan(UPCPLs, i, ',')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each UPCPF*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NUPCPFs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheUPCPF = scan(UPCPFs, j, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(theUPCPL)) = strip(upcase(theUPCPF)) and strip(upcase(theUPCPL)) ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_changed=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>skip1:<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed&#59<br/>run&#59<br/><br/>/*3. CMEP_changed<br/>&nbsp&nbsp&nbsp&nbspCMEP_unchanged like: CMEPL = 'A,b&#59' CMEPF = 'A,d' (i.e., there is at least one letter is the same)<br/>*/<br/>data VXJ3&#59<br/>&nbsp&nbsp&nbsp&nbspset VXJ2 &#59<br/>&nbsp&nbsp&nbsp&nbspCMEP_changed=1&#59<br/>&nbsp&nbsp&nbsp&nbspCMEPLs=scan(RolesPatternAllDoc, 3, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspCMEPFs=scan(RolesPatternAllDoc, 4, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspif strip(CMEPLs)='_' and strip(CMEPFs)='_' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_changed=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif CMEPLs='_'  or CMEPFs='_'  then goto skip1&#59 /*if CMEPLs does not contain any doctors*/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspCMEPLs = tranwrd(CMEPLs, '_', '')&#59<br/>&nbsp&nbsp&nbsp&nbspCMEPFs = tranwrd(CMEPFs, '_', '')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each CMEPL*/<br/>&nbsp&nbsp&nbsp&nbspNCMEPLs = countw(CMEPLs)+1&#59<br/>&nbsp&nbsp&nbsp&nbspNCMEPFs = countw(CMEPFs)+1&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to NCMEPLs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCMEPL = scan(CMEPLs, i, ',')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each CMEPF*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NCMEPFs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCMEPF = scan(CMEPFs, j, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(theCMEPL)) = strip(upcase(theCMEPF)) and strip(upcase(theCMEPL)) ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_changed=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>skip1:<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed&#59<br/>run&#59<br/><br/>/*4. PR_changed<br/>&nbsp&nbsp&nbsp&nbspPR_unchanged like: FP = 'A,b&#59' UPR = 'A,d' (i.e., there is at least one letter is the same)<br/>*/<br/>data VXJ4&#59<br/>&nbsp&nbsp&nbsp&nbspset VXJ3 &#59<br/>&nbsp&nbsp&nbsp&nbspPR_changed=1&#59<br/>&nbsp&nbsp&nbsp&nbspFPs=scan(RolesPatternAllDoc, 5, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspUPRs=scan(RolesPatternAllDoc, 6, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspif strip(FPs)='_' and strip(UPRs)='_' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPR_changed=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif FPs='_'  or UPRs='_'  then goto skip1&#59 /*if FPs does not contain any doctors*/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspFPs = tranwrd(FPs, '_', '')&#59<br/>&nbsp&nbsp&nbsp&nbspUPRs = tranwrd(UPRs, '_', '')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br/>&nbsp&nbsp&nbsp&nbspNFPs = countw(FPs) +1&#59<br/>&nbsp&nbsp&nbsp&nbspNUPRs = countw(UPRs) +1&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to NFPs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheFP = scan(FPs, i, ',')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NUPRs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheUPR = scan(UPRs, j, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(theFP)) = strip(upcase(theUPR))  and strip(upcase(theFP))  ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPR_changed=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>skip1:<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed&#59<br/>run&#59<br/><br/><br/>/*5. UPCP not CMEP<br/>&nbsp&nbsp&nbsp&nbspUPCP is CMEP like: UPCPL/F = 'A,b&#59c,d' CMEP = 'e,f&#59g, A' (i.e., there is at least one letter is the same)<br/>*/<br/>data VXJ5&#59<br/>&nbsp&nbsp&nbsp&nbspset VXJ4 &#59<br/>&nbsp&nbsp&nbsp&nbspUPCP_Not_CMEP=1&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPs=scan(RolesPatternAllDoc, 1, '&#59') || '&#59' || scan(RolesPatternAllDoc, 2, '&#59') &#59<br/>&nbsp&nbsp&nbsp&nbspCMEPs=scan(RolesPatternAllDoc, 3, '&#59') || '&#59' || scan(RolesPatternAllDoc, 4, '&#59') &#59<br/>&nbsp&nbsp&nbsp&nbspif strip(UPCPs)='_&#59_' and strip(CMEPs)='_&#59_' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_CMEP=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UPCPs='_&#59_'  or CMEPs='_&#59_'  then goto skip1&#59 /*if UPCPs/CMEPs does not contain any doctors*/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPs = tranwrd(UPCPs, '_', '')&#59<br/>&nbsp&nbsp&nbsp&nbspCMEPs = tranwrd(CMEPs, '_', '')&#59<br/><br/>&nbsp&nbsp&nbsp&nbspNPCPs = countw(UPCPs)+1&#59 /*for strings like '&#59B', the countw returns 1 ('&#59' is treated as a delimiter).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, '&#59') ='', scan(str,2,'&#59') ='B'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br/>&nbsp&nbsp&nbsp&nbspNCMEPs = countw(CMEPs)+1&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to NPCPs&#59<br/>/*&nbsp&nbsp&nbsp&nbspdo i = 2 to 2&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePCP = scan(UPCPs, i, ',&#59')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NCMEPs&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 2 to 2&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCMEP = scan(CMEPs, j, ',&#59')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(thePCP)) = strip(upcase(theCMEP)) and strip(upcase(thePCP)) ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_CMEP=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>skip1:<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed UPCP_Not_CMEP&#59<br/>run&#59<br/><br/><br/><br/>/*UPCP not PR<br/>&nbsp&nbsp&nbsp&nbsp'UPCP is PR' like: UPCPL/F = 'A,b&#59c,d' FP/UPR = 'e,f&#59g, A' (i.e., there is at least one letter is the same)<br/>*/<br/>data VXJ6&#59<br/>&nbsp&nbsp&nbsp&nbspset VXJ5&#59<br/>&nbsp&nbsp&nbsp&nbspUPCP_Not_PR=1&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPs=scan(RolesPatternAllDoc, 1, '&#59') || '&#59' || scan(RolesPatternAllDoc, 2, '&#59') &#59<br/>&nbsp&nbsp&nbsp&nbspPRs=scan(RolesPatternAllDoc, 5, '&#59') || '&#59' || scan(RolesPatternAllDoc, 6, '&#59') &#59<br/>&nbsp&nbsp&nbsp&nbspif strip(UPCPs)='_&#59_' and strip(PRs)='_&#59_' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_PR=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UPCPs='_&#59_'  or PRs='_&#59_'  then goto skip1&#59 /*if UPCPs/PRs does not contain any doctors*/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPs = tranwrd(UPCPs, '_', '')&#59<br/>&nbsp&nbsp&nbsp&nbspPRs = tranwrd(PRs, '_', '')&#59<br/><br/>&nbsp&nbsp&nbsp&nbspNPCPs = countw(UPCPs)+1&#59 /*for strings like '&#59B', the countw returns 1 ('&#59' is treated as a delimiter).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, '&#59') ='', scan(str,2,'&#59') ='B'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br/>&nbsp&nbsp&nbsp&nbspNPRs = countw(PRs)+1&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to NPCPs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePCP = scan(UPCPs, i, ',&#59')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NPRs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePR = scan(PRs, j, ',&#59')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(thePCP)) = strip(upcase(thePR)) and strip(upcase(thePCP)) ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_PR=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>skip1:<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed UPCP_Not_CMEP UPCP_Not_PR&#59<br/>run&#59<br/><br/><br/><br/>/*CMEP not PR<br/>&nbsp&nbsp&nbsp&nbsp'CMEP is PR' like: CMEPL/F = 'A,b&#59c,d' FP/UPR = 'e,f&#59g, A' (i.e., there is at least one letter is the same)<br/>*/<br/>data VXJ7&#59<br/>&nbsp&nbsp&nbsp&nbspset VXJ6 &#59<br/>&nbsp&nbsp&nbsp&nbspCMEP_Not_PR=1&#59<br/>&nbsp&nbsp&nbsp&nbspCMEPs=scan(RolesPatternAllDoc, 3, '&#59') || '&#59' || scan(RolesPatternAllDoc, 4, '&#59') &#59<br/>&nbsp&nbsp&nbsp&nbspPRs=scan(RolesPatternAllDoc, 5, '&#59') || '&#59' || scan(RolesPatternAllDoc, 6, '&#59') &#59<br/>&nbsp&nbsp&nbsp&nbspif strip(CMEPs)='_&#59_' and strip(PRs)='_&#59_' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_Not_PR=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif CMEPs='_&#59_'  or PRs='_&#59_'  then goto skip1&#59 /*if CMEPs/PRs does not contain any doctors*/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspCMEPs = tranwrd(CMEPs, '_', '')&#59<br/>&nbsp&nbsp&nbsp&nbspPRs = tranwrd(PRs, '_', '')&#59<br/><br/>&nbsp&nbsp&nbsp&nbspNPCPs = countw(CMEPs)+1&#59 /*for strings like '&#59B', the countw returns 1 ('&#59' is treated as a delimiter).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, '&#59') ='', scan(str,2,'&#59') ='B'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br/>&nbsp&nbsp&nbsp&nbspNPRs = countw(PRs)+1&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to NPCPs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePCP = scan(CMEPs, i, ',&#59')&#59<br/>/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NPRs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePR = scan(PRs, j, ',&#59')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(thePCP)) = strip(upcase(thePR)) and strip(upcase(thePCP)) ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_Not_PR=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>skip1:<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed UPCP_Not_CMEP UPCP_Not_PR CMEP_Not_PR&#59<br/>run&#59<br/><br/>/*8. is this right?<br/>UPCP not CMEP not PR<br/>&nbsp&nbsp&nbsp&nbspshould be that <br/>&nbsp&nbsp&nbsp&nbspUPCP not CMEP =1 and UPCP not PR =1 and CMEP not PR 1<br/>*/<br/>data VXJ8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXJ7&#59<br/>&nbsp&nbsp&nbsp&nbspUPCP_not_CMEP_not_PR = UPCP_not_CMEP * CMEP_not_PR * UPCP_not_PR&#59<br/>run&#59<br/><br/>/*link back to the cohort VXI*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXI,<br/>&nbsp&nbsp&nbsp&nbspt2=VXJ8,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXJ,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspvars=*<br/>)&#59<br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXJ.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXJ.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/>s///<br/>t///","custparents":[{"idx":"MYbd7eed4b-8cb0-4b78-9207-5e67c1eeaac5"}],"children":[{"idx":"MY5dccd496-bf0f-42ca-b8ed-0700fdc069da","name":"_VXJ.zip (Switch Pattern)","custparents":[{"idx":"CodeTask-ae8PL8lWWCu1z3jG"}],"children":[{"idx":"CodeTask-crrSCccxKOORYiq3","name":"prog VXK Prescriber pattern","type":"TASK","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>/*VXK, Prescriber pattern*/<br/>/*the cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXj.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXj.sas7bdat)<br/>)&#59<br/>/*get statin claims*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXF.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXF.sas7bdat)<br/>)&#59<br/><br/><br/>data VXK1 &#59<br/>&nbsp&nbsp&nbsp&nbspretain key_hsn rx_ddddd key_prscr_num docs&#59<br/>&nbsp&nbsp&nbsp&nbspformat docs $1000.&#59<br/>&nbsp&nbsp&nbsp&nbspset VXF&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn rx_ddddd key_prscr_num&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(key_prscr_num)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif index(docs, strip(key_prscr_num)) = 0 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(docs) || ',' || strip(key_prscr_num)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=index(docs, strip(key_prscr_num))&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspDocIndex = int((index-1)/ 12)+1&#59<br/>&nbsp&nbsp&nbsp&nbspDocIndexC = byte(DocIndex + 64)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn rx_ddddd key_prscr_num docs  DocIndex DocIndexC&#59<br/>run&#59<br/><br/>/*%minmax(data=VXK1, var=DocIndex, format=, target=test1, m=max)&#59*/<br/><br/>Data VXK2&#59<br/>&nbsp&nbsp&nbsp&nbspset VXK1 &#59<br/>&nbsp&nbsp&nbsp&nbsplagDocIndexC=lag(docindexC)&#59<br/>&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain N_Unchange&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif docindexC = lagDocIndexC then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange='-'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>data VXK3&#59<br/>&nbsp&nbsp&nbsp&nbspset VXK2&#59<br/>&nbsp&nbsp&nbsp&nbsplagDocChange=lag(DocChange)&#59<br/>&nbsp&nbsp&nbsp&nbspformat PrscrPattern $20.&#59<br/>&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPrscrPattern = DocChange&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain PrscrPattern&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif DocChange ne '-' then PrscrPattern= strip(PrscrPattern) || strip(DocChange)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif substr(PrscrPattern, length(PrscrPattern), 1) ne '-' then PrscrPattern= strip(PrscrPattern) || \"-\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>data VXK4&#59<br/>&nbsp&nbsp&nbsp&nbspset VXK3&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn rx_ddddd key_prscr_num&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn PrscrPattern&#59<br/>run&#59<br/><br/>/*link back to the cohort VXI*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXJ,<br/>&nbsp&nbsp&nbsp&nbspt2=VXK4,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXK,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspvars=*<br/>)&#59<br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXK.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXK.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"MY5dccd496-bf0f-42ca-b8ed-0700fdc069da"}],"children":[{"idx":"MY56afa18c-d0ab-493f-8048-5fc8787c4aff","name":"_VXK.zip (prescriber pattern)","custparents":[{"idx":"CodeTask-crrSCccxKOORYiq3"}],"children":[{"idx":"CodeTask-vIplCgMSR6XiN8jq","name":"prog VXL_L GP Lookback pattern ","type":"TASK","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>/*VXL_L, PCP patterns in look back*/<br/>/*the cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXK.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXK.sas7bdat)<br/>)&#59<br/>/*get encounters*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXB.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXB.sas7bdat)<br/>)&#59<br/>/*provider type*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxc_L.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxc_L.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*UPC in look-back*/<br/>/*From vxb, get claims with 365 days prior to the index(entryDate) */<br/>data VXL_L1&#59<br/>&nbsp&nbsp&nbsp&nbspset vxb&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate - 365 and entryDate -1&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num&#59<br/>run&#59<br/>/*439886*/<br/><br/>/*link the providerTYpe to VXL_L1 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXL_L1,<br/>&nbsp&nbsp&nbsp&nbspt2=VXC_L,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXL_L7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeL),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dos, key_doc_num )<br/>)&#59<br/>/*439886*/<br/><br/>/*from above, keep only those of providerType = 'PCP'*/<br/>data VXL_L8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_L7&#59<br/>&nbsp&nbsp&nbsp&nbspif providerTypeL = 'PCP'&#59<br/>run&#59<br/><br/>data VXL_L9 &#59<br/>&nbsp&nbsp&nbsp&nbspretain key_hsn dos key_doc_num docs&#59<br/>&nbsp&nbsp&nbsp&nbspformat docs $1000.&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_L8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(key_doc_num)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif index(docs, strip(key_doc_num)) = 0 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(docs) || ',' || strip(key_doc_num)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=index(docs, strip(key_doc_num))&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspDocIndex = int((index-1)/ 12)+1&#59<br/>&nbsp&nbsp&nbsp&nbspDocIndexC = byte(DocIndex + 64)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num docs  DocIndex DocIndexC&#59<br/>run&#59<br/><br/>/*%minmax(data=VXL_L9, var=DocIndex, format=, target=test1, m=max)&#59*/<br/><br/>Data VXL_L10&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_L9 &#59<br/>&nbsp&nbsp&nbsp&nbsplagDocIndexC=lag(docindexC)&#59<br/>&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain N_Unchange&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif docindexC = lagDocIndexC then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange='-'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>data VXL_L11&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_L10&#59<br/>&nbsp&nbsp&nbsp&nbsplagDocChange=lag(DocChange)&#59<br/>&nbsp&nbsp&nbsp&nbspformat PCPPatternL $20.&#59<br/>&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPCPPatternL = DocChange&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain PCPPatternL&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif DocChange ne '-' then PCPPatternL= strip(PCPPatternL) || strip(DocChange)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif substr(PCPPatternL, length(PCPPatternL), 1) ne '-' then PCPPatternL= strip(PCPPatternL) || \"-\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>data VXL_L12&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_L11&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn PCPPatternL&#59<br/>run&#59<br/><br/>/*link back to the cohort VXK*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXK,<br/>&nbsp&nbsp&nbsp&nbspt2=VXL_L12,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXL_L,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PCPPatternL='', 'na', t2.PCPPatternL) as PCPPatternL)<br/>)&#59<br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXL_L.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXL_L.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-gbhiLx1DedOwRO4o"},{"idx":"MY56afa18c-d0ab-493f-8048-5fc8787c4aff"},{"idx":"MY19a532ff-f72d-4d71-8f7c-3a93899ef85c"},{"idx":"MY9d03a24b-b8d8-4931-b7b1-628b86f3749a"}],"children":[{"idx":"MY0e1b7ac0-9c87-4059-ac4a-6fb7935d2de3","name":"_VXL_L.zip (lookback pattern)","custparents":[{"idx":"CodeTask-vIplCgMSR6XiN8jq"}],"children":[]}]},{"idx":"CodeTask-bk2fcAnE7kxDxYMD","name":"Prog VXL_F GPF pattern","type":"TASK","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/><br/>/*VXL_F, PCP patterns in follow up*/<br/>/*the cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXL_L.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXL_L.sas7bdat)<br/>)&#59<br/>/*get encounters*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXB.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXB.sas7bdat)<br/>)&#59<br/>/*provider type*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXC_F.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXC_F.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*UPC in look-back*/<br/>/*From vxb, get claims with 365 days prior to the index(entryDate) */<br/>data VXL_F1&#59<br/>&nbsp&nbsp&nbsp&nbspset vxb&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate and entryDate + 365  -1&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num&#59<br/>run&#59<br/>/*556606*/<br/><br/>/*link the providerTYpe to VXL_F1 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXL_F1,<br/>&nbsp&nbsp&nbsp&nbspt2=VXC_F,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXL_F7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ProviderTypeF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dos, key_doc_num )<br/>)&#59<br/>/*556606*/<br/><br/>/*from above, keep only those of providerType = 'PCP'*/<br/>data VXL_F8&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_F7&#59<br/>&nbsp&nbsp&nbsp&nbspif ProviderTypeF = 'PCP'&#59<br/>run&#59<br/><br/>data VXL_F9 &#59<br/>&nbsp&nbsp&nbsp&nbspretain key_hsn dos key_doc_num docs&#59<br/>&nbsp&nbsp&nbsp&nbspformat docs $1000.&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_F8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(key_doc_num)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif index(docs, strip(key_doc_num)) = 0 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(docs) || ',' || strip(key_doc_num)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=index(docs, strip(key_doc_num))&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspDocIndex = int((index-1)/ 12)+1&#59<br/>&nbsp&nbsp&nbsp&nbspDocIndexC = byte(DocIndex + 64)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num docs  DocIndex DocIndexC&#59<br/>run&#59<br/><br/>/*%minmax(data=VXL_F9, var=DocIndex, format=, target=test1, m=max)&#59*/<br/><br/>Data VXL_F10&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_F9 &#59<br/>&nbsp&nbsp&nbsp&nbsplagDocIndexC=lag(docindexC)&#59<br/>&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain N_Unchange&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif docindexC = lagDocIndexC then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange='-'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange+1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>data VXL_F11&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_F10&#59<br/>&nbsp&nbsp&nbsp&nbsplagDocChange=lag(DocChange)&#59<br/>&nbsp&nbsp&nbsp&nbspformat PCPPatternF $20.&#59<br/>&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPCPPatternF = DocChange&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain PCPPatternF&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif DocChange ne '-' then PCPPatternF= strip(PCPPatternF) || strip(DocChange)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif substr(PCPPatternF, length(PCPPatternF), 1) ne '-' then PCPPatternF= strip(PCPPatternF) || \"-\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>data VXL_F12&#59<br/>&nbsp&nbsp&nbsp&nbspset VXL_F11&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn PCPPatternF&#59<br/>run&#59<br/><br/>/*link back to the cohort VXL_L*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXL_L,<br/>&nbsp&nbsp&nbsp&nbspt2=VXL_F12,<br/>&nbsp&nbsp&nbsp&nbsptarget=VXL_F,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PCPPatternF='', 'na', t2.PCPPatternF) as PCPPatternF)<br/>)&#59<br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VXL_F.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VXL_F.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"MY08ef479c-aeb1-490b-b1c4-1968ff490949","name":"_VXL_F.zip GP F pattern","custparents":[{"idx":"CodeTask-bk2fcAnE7kxDxYMD"}],"children":[{"idx":"CodeTask-mqQWr8kGTH7TzB2R","name":"Prog VZA_Adherence","type":"TASK","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>/*VZA, Adherence by PDC*/<br/>/*the cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXL_F.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXL_F.sas7bdat)<br/>)&#59<br/>/*get statin claims*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXF.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXF.sas7bdat)<br/>)&#59<br/><br/><br/>%let MPR80 =.8&#59<br/>%let supplyDayCol=supplyDays&#59<br/><br/><br/>data VZA1&#59<br/>&nbsp&nbsp&nbsp&nbspset VXF&#59<br/>&nbsp&nbsp&nbsp&nbspsupplyDays=34&#59<br/>&nbsp&nbsp&nbsp&nbspdrugclass='STATIN'&#59<br/>run&#59<br/><br/><br/>%getAdherence(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VZA1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZA2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspOptAdhCutOff =&MPR80, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLenInterval =%eval(365), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Intervals=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass =DrugClass, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfollowStart =EntryDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsupCol =&supplyDayCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAllowedGap=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptakeStartCol =, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptakeEndCol =, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspintervalCol =, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspintervalStartCol =, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspintervalEndCol =, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=<br/>)&#59<br/>/*46492*/<br/><br/>/*link back to the cohort VXL_L*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VXL_F,<br/>&nbsp&nbsp&nbsp&nbspt2=VZA2,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZA,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.DaysOnMed, t2.Adherence)<br/>)&#59<br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VZA.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VZA.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-6w9bmuI84SbSRadS","name":"Q_VZA","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*<br/>Adherence yet to account for days in Hospital, LTC<br/>*/<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-mqQWr8kGTH7TzB2R"}]},{"idx":"MYd72297d9-41da-4722-b4bf-717d1f73af6a","name":"_VZA.zip (Adh added)","custparents":[{"idx":"CodeTask-mqQWr8kGTH7TzB2R"}],"children":[{"idx":"CodeTask-cn4xkuAyEOFAppY5","name":"Prog VZC_Patient Covariates","type":"TASK","NodeDescription":"///t<br/>///s<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZA.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZA.sas7bdat)<br/>)&#59<br/><br/>%print(data=vza)&#59<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_benefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_benefit.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_nonbenefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_nonbenefit.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_ed_a2012.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_ed_a2012.sas7bdat)<br/>)&#59<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_verif_mort.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_verif_mort.sas7bdat)<br/>)&#59<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_phrs_cov.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_phrs_cov.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_mds_ltc.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_mds_ltc.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&theChronicConditionDataPath.\\&theChronicConditionData..zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theChronicConditionData..sas7bdat)<br/>)&#59<br/><br/><br/><br/><br/><br/>/*# med (excluding the study medication)*/<br/>/***5* # DINs within 365 days prior to entry***************************************/<br/>&nbsp&nbsp&nbsp&nbsp/*from benefit file*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'be' as src),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate-1 and t2.entryDate -365)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*from nonbenefit file*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'nb' as src),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate-1 and t2.entryDate -365)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*put the above together*/<br/>&nbsp&nbsp&nbsp&nbspdata VZC5c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC5a VZC5b&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*remove those DINs as statin*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC5c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(DIN not in (select DIN from locald.StatinDINs))<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*get distinct DINs by key_hsn from both the benefit file and the nonbenefit file*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC5d, target=VZC5e, vars=%str(key_hsn, DIN))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*count DINs by Key_hsn*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC5e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5f,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, count(DIN) as NDINS_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Link backto VZA*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC5f,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinction=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.NDINS_Pre365 = ., 0, t2.NDINS_Pre365) as NDINS_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59&nbsp&nbsp&nbsp&nbsp<br/><br/>/***6* # DINs within 365 days since entry***************************************/<br/>&nbsp&nbsp&nbsp&nbsp/*from benefit file*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'be' as src),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate and t2.entryDate +365-1)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*from nonbenefit file*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'nb' as src),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate and t2.entryDate +365-1)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*put the above together*/<br/>&nbsp&nbsp&nbsp&nbspdata VZC6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC6a VZC6b&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*remove those DINs as statin*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC6c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(DIN not in (select DIN from locald.StatinDINs))<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*get distinct DINs by key_hsn from both the benefit file and the nonbenefit file*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC6d, target=VZC6e, vars=%str(key_hsn, DIN))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*count DINs by Key_hsn*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC6e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6f,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, count(DIN) as NDINS_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Link backto VZC5*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC6f,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinction=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.NDINS_Post365 = ., 0, t2.NDINS_Post365) as NDINS_Post365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59&nbsp&nbsp&nbsp&nbsp<br/><br/><br/>/*VZC7 #  hospitalizations within 365 days prior to entry*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.adm_date, t1.dschg_date, t2.entrydate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_IP='IP'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.adm_date ne .  and t1.dschg_date ne . )<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate -1 and t2.entryDate - 365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate -1 and t2.entryDate - 365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate-365 and t1.dschg_date > t2.entryDate -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*count # of hosp visits per patient*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC7b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(adm_date) as NHosp_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*Link to VZC6*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC7b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NHosp_Pre365=., 0, t2.NHosp_Pre365) as NHosp_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*VZC8 #  hospitalizations within 365 days prior to entry*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC8a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.adm_date, t1.dschg_date, t2.entrydate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_IP='IP'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.adm_date ne .  and t1.dschg_date ne . )<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate  and t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate  and t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate and t1.dschg_date > t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*count # of hosp visits per patient*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC8a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC8b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(adm_date) as NHosp_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*Link to VZC7*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC8b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NHosp_Post365=., 0, t2.NHosp_Post365) as NHosp_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*VZC 9, # days/nights in hospital within 365 days prior to entry*/<br/>&nbsp&nbsp&nbsp&nbsp%getHDay_Nights(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHospFile=master_hosp, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPtFile=VZC8, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdStart=&dataStartdate&#59, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdEnd=&dataEnddate&#59, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMaxGap=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldHN=0, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=EntryDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=VZC9a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspperiodStart=EntryDate - 365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPeriodEnd=EntryDate - 1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstep=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata VZC9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename PtHNights = HNights_Pre365 PtHDays = HDays_Pre365&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*VZC10, # days/nights in hospital within 365 days since entry*/<br/>&nbsp&nbsp&nbsp&nbsp%getHDay_Nights(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHospFile=master_hosp, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPtFile=VZC9, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdStart=&dataStartdate&#59, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdEnd=&dataEnddate&#59, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMaxGap=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldHN=0, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=EntryDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=VZC10a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspperiodStart=EntryDate , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPeriodEnd=EntryDate + 365 - 1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstep=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata VZC10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC10a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename PtHNights = HNights_Post365 PtHDays = HDays_Post365&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>/*11. Doc (GP/SP) visits within 1 years prior to entry*/<br/>&nbsp&nbsp&nbsp&nbsp/*from msb file, distinct visits (same date, same doc)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.dos, t1.key_doc_num, t1.spec),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate-1 and t2.entryDate - 365)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get gp visits*/<br/>&nbsp&nbsp&nbsp&nbspdata VZC11b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC11a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec in: ('B')&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC11b1, target=VZC11c1, vars=%str(key_hsn, dos, key_doc_num))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11c1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11d1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_GP_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get SP visits*/<br/>&nbsp&nbsp&nbsp&nbspdata VZC11b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC11a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec not in: ('B') and spec not in: ('W')&#59 /*W are nurses or pharmacists*/<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC11b2, target=VZC11c2, vars=%str(key_hsn, dos, key_doc_num))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11c2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11d2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_SP_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*Link to VZC10*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC11d1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_GP_Pre365=., 0, t2.NVisits_GP_Pre365) as NVisits_GP_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC11d2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_SP_Pre365=., 0, t2.NVisits_SP_Pre365) as NVisits_SP_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*12. Doc (GP/SP) visits within 1 years since entry*/<br/>&nbsp&nbsp&nbsp&nbsp/*from msb file, distinct visits (same date, same doc)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.dos, t1.key_doc_num, t1.spec),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate and t2.entryDate + 365-1)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get gp visits*/<br/>&nbsp&nbsp&nbsp&nbspdata VZC12b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC12a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec in: ('B')&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC12b1, target=VZC12c1, vars=%str(key_hsn, dos, key_doc_num))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12c1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12d1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_GP_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get SP visits*/<br/>&nbsp&nbsp&nbsp&nbspdata VZC12b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC12a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec not in: ('B') and spec not in: ('W')&#59 /*W are nurses or pharmacists*/<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC12b2, target=VZC12c2, vars=%str(key_hsn, dos, key_doc_num))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12c2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12d2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_SP_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*Link to VZC11*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC12d1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_GP_Post365=., 0, t2.NVisits_GP_Post365) as NVisits_GP_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC12d2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_SP_Post365=., 0, t2.NVisits_SP_Post365) as NVisits_SP_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*13. ER visits within a year prior to entry*/<br/>&nbsp&nbsp&nbsp&nbsp/*from ER file*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC13a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.inst_num, t1.reg_date, t1.disp_date, t2.entrydate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.reg_date ne .  and t1.disp_date ne . )<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date between t2.entryDate -1 and t2.entryDate - 365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.disp_date between t2.entryDate -1 and t2.entryDate - 365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date < t2.entryDate-365 and t1.disp_date > t2.entryDate -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*count # of ER visits per patient*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC13a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC13b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(inst_num) as NVisits_ER_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link to VZC12*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC13b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_ER_Pre365=., 0, t2.NVisits_ER_Pre365) as NVisits_ER_Pre365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*14. ER visits within a year since entry*/<br/>&nbsp&nbsp&nbsp&nbsp/*from ER file*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC14a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.inst_num, t1.reg_date, t1.disp_date, t2.entrydate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.reg_date ne .  and t1.disp_date ne . )<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date between t2.entryDate  and t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.disp_date between t2.entryDate  and t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date < t2.entryDate and t1.disp_date > t2.entryDate+365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*count # of ER visits per patient*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC14a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC14b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(inst_num) as NVisits_ER_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link to VZC13*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC14b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC14,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_ER_Post365=., 0, t2.NVisits_ER_Post365) as NVisits_ER_Post365),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*VZC15 the % paid by patient or 3rd party insurer of all drugs within 365 days prior to entry<br/>&nbsp&nbsp&nbsp&nbsp1. get all drug claims for patients in the cohort<br/>&nbsp&nbsp&nbsp&nbsp2. keep the claims within 365 prior to entry<br/>&nbsp&nbsp&nbsp&nbsp3. For the claim from step 2, estimate the % paid by patient or 3rd party insurer<br/>*/<br/>/*VZC15a, get drug claims within 365*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC14,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC15a1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn,  t1.Rx_ddddd, t1.rx_qty_amt, t1.total_apprv,t1.amnt_pay_drug_plan, t2.entryDate), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate - 365 and t2.entryDate -1)<br/>)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC14,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC15a2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.rx_qty_amt, t1.total_cost as total_apprv,0 as amnt_pay_drug_plan, t2.entryDate), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate - 365 and t2.entryDate -1)<br/>)&#59<br/><br/>data VZC15a&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC15a1 VZC15a2&#59<br/>run&#59<br/><br/>/*Sum to have total drug cost and the proportion paid by public drug plan*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC15a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC15b,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, EntryDate, sum(total_apprv) as total_Cost, sum(total_apprv) - sum(amnt_pay_drug_plan) as ThirdPartyPay),<br/>&nbsp&nbsp&nbsp&nbspgroupby = %str(key_hsn, EntryDate)<br/>)&#59<br/><br/>data VZC15c&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC15b&#59<br/>&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT = ThirdPartyPay / total_Cost&#59<br/>&nbsp&nbsp&nbsp&nbspformat ThirdPartyPayCAT $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif ThirdPartyPayPCT < .50 then ThirdPartyPayCAT =\"<50%\"&#59<br/>&nbsp&nbsp&nbsp&nbspelse ThirdPartyPayCAT =\">=50%\"&#59<br/>&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT2=round(ThirdPartyPayPCT*100, 1)&#59<br/>run&#59<br/>/*%freq(data=VZC15c, table=ThirdPartyPayCAT)&#59*/<br/>%MakeCategories(<br/>    Data=VZC15c, <br/>    theVar=ThirdPartyPayPCT2,<br/>    theTargetVar=ThirdPartyPayPCT2_CAT,<br/>    theCutOffs=0 10 20 30 40 50 60 70 80 90 100, <br/>    dlmt=, <br/>    debug=, <br/>    closeSide=left,<br/>    target=VZC15d<br/>)&#59<br/>/*%freq(data=VZC15D, table=ThirdPartyPayPCT2_CAT)&#59<br/>&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VZC15D,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=ThirdPartyPayPCT2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC15Tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspproc univariate data =  vzc15d normal&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar ThirdPartyPayPCT2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphistogram /normal&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>*/<br/><br/>/*Link the 3rd party pay variables to VZC14 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC14,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC15D,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC15,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ThirdPartyPay as ThirdPartyPay_Pre365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT as ThirdPartyPayPCT_Pre365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayCAT as ThirdPartyPayCAT_Pre365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT2_CAT as ThirdPartyPayLevel_Pre365), <br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/><br/>/*VZC16 the % paid by patient or 3rd party insurer of all drugs within 365 days since entry<br/>&nbsp&nbsp&nbsp&nbsp1. get all drug claims for patients in the cohort<br/>&nbsp&nbsp&nbsp&nbsp2. keep the claims within 365 since entry<br/>&nbsp&nbsp&nbsp&nbsp3. For the claim from step 2, estimate the % paid by patient or 3rd party insurer<br/>*/<br/>/*VZC16a, get drug claims within 365 days since entry*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC15,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC16a1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn,  t1.Rx_ddddd, t1.rx_qty_amt, t1.total_apprv,t1.amnt_pay_drug_plan, t2.entryDate), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate  and t2.entryDate +365 -1)<br/>)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC15,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC16a2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.rx_qty_amt, t1.total_cost as total_apprv,0 as amnt_pay_drug_plan, t2.entryDate), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate  and t2.entryDate +365 -1)<br/>)&#59<br/><br/>data VZC16a&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC16a1 VZC16a2&#59<br/>run&#59<br/><br/>/*Sum to have total drug cost and the proportion paid by public drug plan*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC16a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC16b,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, EntryDate, sum(total_apprv) as total_Cost, sum(total_apprv) - sum(amnt_pay_drug_plan) as ThirdPartyPay),<br/>&nbsp&nbsp&nbsp&nbspgroupby = %str(key_hsn, EntryDate)<br/>)&#59<br/><br/>data VZC16c&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC16b&#59<br/>&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT = ThirdPartyPay / total_Cost&#59<br/>&nbsp&nbsp&nbsp&nbspformat ThirdPartyPayCAT $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif ThirdPartyPayPCT < .50 then ThirdPartyPayCAT =\"<50%\"&#59<br/>&nbsp&nbsp&nbsp&nbspelse ThirdPartyPayCAT =\">=50%\"&#59<br/>&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT2=round(ThirdPartyPayPCT*100, 1)&#59<br/>run&#59<br/>/*%freq(data=VZC16c, table=ThirdPartyPayCAT)&#59*/<br/>%MakeCategories(<br/>    Data=VZC16c, <br/>    theVar=ThirdPartyPayPCT2,<br/>    theTargetVar=ThirdPartyPayPCT2_CAT,<br/>    theCutOffs=0 10 20 30 40 50 60 70 80 90 100, <br/>    dlmt=, <br/>    debug=, <br/>    closeSide=left,<br/>    target=VZC16d<br/>)&#59<br/>/*%freq(data=VZC16D, table=ThirdPartyPayPCT2_CAT)&#59<br/>&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VZC16D,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=ThirdPartyPayPCT2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC16Tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspproc univariate data =  VZC16d normal&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar ThirdPartyPayPCT2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphistogram /normal&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>*/<br/><br/>/*Link the 3rd party pay variables to VZC15 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC15,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC16D,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC16,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ThirdPartyPay as ThirdPartyPay_Post365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT as ThirdPartyPayPCT_Post365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayCAT as ThirdPartyPayCAT_Post365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT2_CAT as ThirdPartyPayLevel_Post365), <br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/><br/>/*VZC 17, receiving PIM drugs within 365 days prior (exclusive) to the entry<br/>&nbsp&nbsp&nbsp&nbspthese drugs including, Anticholinergics, antipsychotics, antidepressants, Benzodiazpines<br/>&nbsp&nbsp&nbsp&nbspDINs were provided by Laura in the dropbox, also copied to P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS<br/>&nbsp&nbsp&nbsp&nbspDINS were imported by the program makePIMs<br/>*/<br/><br/>/* 1. get drug claims<br/>&nbsp&nbsp&nbsp&nbsp2. For patients in VZC16, determine whether or not the patient received 1+ dispensation of the PIM DINs within 30 days <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprior (exclusive) to entry<br/>&nbsp&nbsp&nbsp&nbsp3. Indicate those received the interested PIMs&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>/*VZC17a, get drug claims of ChEIs*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC17a1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC17a2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din<br/>)&#59<br/><br/>data VZC17a&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC17a1 VZC17a2&#59<br/>run&#59<br/><br/><br/>/*VZC17b, keep the last drug specific claim closest to entryDate*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC16,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC17a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC17B,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.Class), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn ,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(entryDate -365 <= rx_ddddd < entryDate)<br/>)&#59<br/><br/>/*transpose VZC17B, so as to have indicates for each class*/<br/>%transpose(data=VZC17B, target=VZC17c, rowhead=key_hsn, colhead=class, contents=class)&#59<br/><br/><br/>/*Link the PIM indicatorsto VZC16 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC16,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC17c,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC17,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.BENZO ne '', 1, 0) as BENZO_Pre365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.PSYCHO ne '', 1, 0) as PSYCHO_Pre365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiDep ne '', 1, 0) as ANTIDEP_Pre365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiCHO ne '', 1, 0) as ANTICHO_Pre365), <br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/><br/><br/>/*VZC 18, receiving PIM drugs within 365 days since (inclusive) to the entry<br/>&nbsp&nbsp&nbsp&nbspthese drugs including, Anticholinergics, antipsychotics, antidepressants, Benzodiazpines<br/>&nbsp&nbsp&nbsp&nbspDINs were provided by Laura in the dropbox, also copied to P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS<br/>&nbsp&nbsp&nbsp&nbspDINS were imported by the program makePIMs<br/>*/<br/><br/>/* 1. get drug claims<br/>&nbsp&nbsp&nbsp&nbsp2. For patients in VZC17, determine whether or not the patient received 1+ dispensation of the PIM DINs within 30 days <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprior (exclusive) to entry<br/>&nbsp&nbsp&nbsp&nbsp3. Indicate those received the interested PIMs&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>/*VZC18a, get drug claims of ChEIs*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC18a1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC18a2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din<br/>)&#59<br/><br/>data VZC18a&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC18a1 VZC18a2&#59<br/>run&#59<br/><br/><br/>/*VZC18b, keep the last drug specific claim closest to entryDate*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC17,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC18a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC18B,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.Class), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn ,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(entryDate  <= rx_ddddd < entryDate +365)<br/>)&#59<br/><br/>/*transpose VZC18B, so as to have indicates for each class*/<br/>%transpose(data=VZC18B, target=VZC18c, rowhead=key_hsn, colhead=class, contents=class)&#59<br/><br/><br/>/*Link the PIM indicatorsto VZC16 */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC17,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC18c,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC18,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.BENZO ne '', 1, 0) as BENZO_Post365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.PSYCHO ne '', 1, 0) as PSYCHO_Post365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiDep ne '', 1, 0) as ANTIDEP_Post365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiCHO ne '', 1, 0) as ANTICHO_Post365), <br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*19. CAMH*/<br/>%get_CAMH( Data_Hosp=master_hosp, Data_msb=master_msb, Data_ed=master_ed_a2012, <br/>&nbsp&nbsp&nbsp&nbspstartDate=&dataStartDate, endDate=&DataEndDate, debug=1, dxDateCol=, target=VZC19a<br/>) &#59<br/>%print(data=VZC19a)&#59<br/>/*from the above, transpose and put the type of CAMH in one row for each patient*/<br/>%transpose(data=VZC19a, target=VZC19b, rowhead=key_hsn, colhead=camh_cat, contents=dxdate)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC18,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC19b,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC19c,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.npd as CAMH_NPD_Date, t2.SA as CAMH_SA_Date,t2.PSY as CAMH_PSY_Date), <br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>data VZC19&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC19c&#59<br/>&nbsp&nbsp&nbsp&nbsparray cAMHdates{3} CAMH_NPD_Date CAMH_SA_Date CAMH_PSY_Date&#59<br/>&nbsp&nbsp&nbsp&nbsparray CAMHPre_{3} &#59<br/>&nbsp&nbsp&nbsp&nbsparray camhPost_{3} &#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is no camh date, both pre and post are negative*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cAMHdates(i) =. then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the camh date is before the entrydate, both pre and post are positive*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cAMHdates(i) < entryDate then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) = 1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the camh date is within the follow up period, the pre is negative, the post positive*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif entryDate <= cAMHdates(i) < entryDate + 365 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the camh date is after the follow up period, both are negative*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) =0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsprename <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_1 = CAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_2 = CAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_3 = CAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_1 = CAMH_NPD_Post365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_2 = CAMH_SA_Post365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_3 = CAMH_PSY_Post365<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>/*20 Charlson score*/<br/>%Charlson_Elixhauser_Score_local(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcharlson=Y, <br/>                 elixhauser=N, <br/>                 msb_xtrc_start_dt=,<br/>                 msb_xtrc_end_dt=,<br/>                 hosp_file=master_hosp, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp msb_file=master_msb, <br/>                 hsn_file=VZC19, <br/>                 ref_date_var=EntryDate, <br/>                 charlson_var_out=, <br/>                 elix_postfix=elix_,<br/>                 additionalByVar=, <br/>                 ds_out=VZC20,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp days_lookback=,<br/>                 debug=N<br/>)&#59<br/><br/>/*mortality*/<br/>%print(data=master_verif_mort)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC20,<br/>&nbsp&nbsp&nbsp&nbspt2=master_verif_mort,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC21a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ddt_novit as MortDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>data VZC21&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC21a&#59<br/>&nbsp&nbsp&nbsp&nbspDeath_Pre365 =0&#59Death_Post365 =0&#59<br/>&nbsp&nbsp&nbsp&nbspif MortDate ne . and MortDate < EntryDate then Death_Pre365=1&#59<br/>&nbsp&nbsp&nbsp&nbspif MortDate ne . and EntryDate <= MortDate < EntryDate + 365 then Death_Post365=1&#59<br/>Run&#59<br/>%freq(data=VZC21, table = Death_Pre365)&#59<br/>%freq(data=VZC21, table = Death_Post365)&#59<br/><br/>/*22. lost of coverage during follow up */<br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=master_phrs_cov, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=VZC21, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=EntryDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= %str(EntryDate+365-1), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC22a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/>/*from above, get those with coverage gaps*/<br/>data VZC22b&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC22a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn EntryDate start<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverstart<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdays<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverPCT<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgaps<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgapPCT<br/>&#59<br/>&nbsp&nbsp&nbsp&nbspif gaps ne . and gaps > 0&#59<br/>run&#59<br/>/*make a distinct list from above*/<br/>%sort(data=VZC22b, sorter = key_hsn entryDate coverstart coverend)&#59<br/>data VZC22c&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC22b&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn entryDate coverstart coverend&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>run&#59<br/><br/>/*link back to VZC21, if the patient appears in VZC22C, indicate as lost of coverage in post365*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC21,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC22C,<br/>&nbsp&nbsp&nbsp&nbspTarget=VZC22,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn = \"\", 0,1) as LostCov_Post365, t2.coverstart as Date_LostCov ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*23. LTC stay*/<br/>/*from the mds_ltc file, get ltc stay records*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC22,<br/>&nbsp&nbsp&nbsp&nbspt2=master_mds_ltc,<br/>&nbsp&nbsp&nbsp&nbsptarget= VZC23a,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.entryDate, t2.key_hsn, t2.mds_ab1 as adm_date, t2.mds_r4 as dschg_date ),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*concatenate the overlaping periods*/<br/>%cleanHospital(<br/>&nbsp&nbsp&nbsp&nbspdata=VZC23a, <br/>&nbsp&nbsp&nbsp&nbsptarget=VZC23b, <br/>&nbsp&nbsp&nbsp&nbspdxCol=,<br/>&nbsp&nbsp&nbsp&nbspmdxCol=, <br/>&nbsp&nbsp&nbsp&nbspintvnCol=, <br/>&nbsp&nbsp&nbsp&nbspstartD=,<br/>&nbsp&nbsp&nbsp&nbspendD=,<br/>&nbsp&nbsp&nbsp&nbspinst_num=,<br/>&nbsp&nbsp&nbsp&nbspMaxGap=1, <br/>&nbsp&nbsp&nbsp&nbspincldHN=0, <br/>&nbsp&nbsp&nbsp&nbspkeep=EntryDate,<br/>&nbsp&nbsp&nbsp&nbspmaxLenD=,<br/>&nbsp&nbsp&nbsp&nbspmaxLenM=,<br/>&nbsp&nbsp&nbsp&nbspmaxLenI=,<br/>&nbsp&nbsp&nbsp&nbspkeepTmp=1<br/>)&#59<br/><br/>%distinct(data=VZC23b, target=VZC23c, vars=%str(key_hsn), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(adm_date between entryDate and entryDate +365-1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor dschg_date between entryDate and entryDate +365-1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor adm_date < entryDate and dschg_date > entryDate +365-1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp))&#59<br/><br/>/*Link to VSZ22, indicate those having LTC stay*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC22,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC23c,<br/>&nbsp&nbsp&nbsp&nbsptarget= VZC23,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn ne \"\", 0, 1) as LTCStay_Post365 ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*24. Chronic Conditions (CCSDD definition) within 365 days prior to entry. The data has been prepared. file name and path <br/>&nbsp&nbsp&nbsp&nbspdefined in Local Settings<br/>*/<br/>%print(data=&theChronicConditionData)&#59<br/><br/>/*from the conditions, get a list of distinct key_hsn - chronic conditions for patients in VZC23*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC23,<br/>&nbsp&nbsp&nbsp&nbspt2=&theChronicConditionData,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC24a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t2.disease as ChronicD),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str( t2.dzStartDate between t1.EntryDate -365 and t1.EntryDate -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp t2.dzEndDate between t1.EntryDate -365 and t1.EntryDate -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp or<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  t2.dzStartDate < t1.EntryDate -365 and t2.dzEndDate > t1.EntryDate -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>data VZC24b&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC24a&#59<br/>&nbsp&nbsp&nbsp&nbsplength ChronicD $50.&#59<br/>&nbsp&nbsp&nbsp&nbspChronicD2='CC_Pre365_' || strip(ChronicD) &#59<br/>&nbsp&nbsp&nbsp&nbspChronicD3=1&#59<br/>run&#59<br/><br/>%transpose(data=VZC24b, target=VZC24c, rowhead=key_hsn, colhead=ChronicD2, contents=ChronicD3)&#59<br/><br/>/*link the above back to VZC23*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC23,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC24c,<br/>&nbsp&nbsp&nbsp&nbsptarget= VZC24d,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>data VZC24&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC24d&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp {*} cc_pre365_:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i) =. then tmp(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>/*25. Chronic Conditions (CCSDD definition) within 365 days prior to entry. The data has been prepared. file name and path <br/>&nbsp&nbsp&nbsp&nbspdefined in Local Settings<br/>*/<br/>/*from the conditions, get a list of distinct key_hsn - chronic conditions for patients in VZC23*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC24,<br/>&nbsp&nbsp&nbsp&nbspt2=&theChronicConditionData,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC25a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t2.disease as ChronicD),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str( t2.dzStartDate between t1.EntryDate and t1.EntryDate +365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp t2.dzEndDate between t1.EntryDate  and t1.EntryDate +365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp or<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  t2.dzStartDate < t1.EntryDate and t2.dzEndDate > t1.EntryDate +365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>data VZC25b&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC25a&#59<br/>&nbsp&nbsp&nbsp&nbsplength ChronicD $50.&#59<br/>&nbsp&nbsp&nbsp&nbspChronicD2='CC_Post365_' || strip(ChronicD) &#59<br/>&nbsp&nbsp&nbsp&nbspChronicD3=1&#59<br/>run&#59<br/><br/>%transpose(data=VZC25b, target=VZC25c, rowhead=key_hsn, colhead=ChronicD2, contents=ChronicD3)&#59<br/><br/>/*link the above back to VZC24*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC24,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC25c,<br/>&nbsp&nbsp&nbsp&nbsptarget= VZC25d,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>data VZC25&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC25d&#59<br/>&nbsp&nbsp&nbsp&nbsparray tmp {*} cc_post365_:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i) =. then tmp(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>/*26. pregnancy<br/>pregnancy (UltraSound Project, too complicated. eventually using the CCDSS case definition, which is used for exclusion in definition of CCDSS chronic conditions)<br/>the code of pregancy was from the file A12_CoMorb_ICDDX in the ChronicPop's remoteS folder<br/><br/>('641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '671', '672', '673', '674', '675', '676', 'V27', 'O10', 'O11', 'O12', 'O13', 'O14', 'O15', 'O16', 'O17', 'O18', 'O19', 'O21', 'O22', 'O23', 'O24', 'O25', 'O26', 'O27', 'O28', 'O29', 'O30', 'O31', 'O32', 'O33', 'O34', 'O35', 'O36', 'O37', 'O38', 'O39', 'O40', 'O41', 'O42', 'O43', 'O44', 'O45', 'O46', 'O47', 'O48', 'O49', 'O50', 'O51', 'O52', 'O53', 'O54', 'O55', 'O56', 'O57', 'O58', 'O59', 'O60', 'O61', 'O62', 'O63', 'O64', 'O65', 'O66', 'O67', 'O68', 'O69', 'O70', 'O71', 'O72', 'O73', 'O74', 'O75', 'O76', 'O77', 'O78', 'O79', 'O80', 'O81', 'O82', 'O83', 'O84', 'O85', 'O86', 'O87', 'O88', 'O89', 'O90', 'O91', 'O92', 'O93', 'O94', 'O95', 'O98', 'O99', 'Z37')<br/>*/<br/><br/>%let pregCodes=%str('641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', <br/>'655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '671', '672', <br/>'673', '674', '675', '676', 'V27', 'O10', 'O11', 'O12', 'O13', 'O14', 'O15', 'O16', 'O17', 'O18', 'O19', 'O21', 'O22', 'O23', <br/>'O24', 'O25', 'O26', 'O27', 'O28', 'O29', 'O30', 'O31', 'O32', 'O33', 'O34', 'O35', 'O36', 'O37', 'O38', 'O39', 'O40', <br/>'O41', 'O42', 'O43', 'O44', 'O45', 'O46', 'O47', 'O48', 'O49', 'O50', 'O51', 'O52', 'O53', 'O54', 'O55', 'O56', 'O57', <br/>'O58', 'O59', 'O60', 'O61', 'O62', 'O63', 'O64', 'O65', 'O66', 'O67', 'O68', 'O69', 'O70', 'O71', 'O72', 'O73', 'O74', 'O75', <br/>'O76', 'O77', 'O78', 'O79', 'O80', 'O81', 'O82', 'O83', 'O84', 'O85', 'O86', 'O87', 'O88', 'O89', 'O90', 'O91', 'O92', 'O93', <br/>'O94', 'O95', 'O98', 'O99', 'Z37')&#59<br/><br/>/*hospital*/<br/>data VZC26a&#59<br/>&nbsp&nbsp&nbsp&nbspset master_hosp&#59<br/>&nbsp&nbsp&nbsp&nbspsrc='hp'&#59<br/>&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbspformat type $5.&#59<br/>&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&pregCodes) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&pregCodes)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn adm_date dschg_date src&#59<br/>run&#59<br/><br/>data VZC26b&#59<br/>&nbsp&nbsp&nbsp&nbspset master_msb&#59<br/>&nbsp&nbsp&nbsp&nbspsrc='mb'&#59<br/>&nbsp&nbsp&nbsp&nbspif diag in:(&pregCodes) then output&#59<br/>&nbsp&nbsp&nbsp&nbspadm_date=dos&#59<br/>&nbsp&nbsp&nbsp&nbspdschg_date=dos&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn adm_date dschg_date src&#59<br/>run&#59<br/><br/>data VZC26c&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC26a VZC26b&#59<br/>run&#59<br/><br/>/*link to VZC25, indicate those having preg during pre365*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC26c,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC25,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC26d,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, 1 as preg_pre365),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate -1 and t2.entryDate - 365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate -1 and t2.entryDate - 365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate-365 and t1.dschg_date > t2.entryDate -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>/*link to VZC25, indicate those having preg during post365*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC26c,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC25,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC26e,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, 1 as preg_post365),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate  and t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate  and t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate and t1.dschg_date > t2.entryDate + 365 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>/*link back to VZC25*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC25,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC26d,<br/>&nbsp&nbsp&nbsp&nbspTarget=VZC26f,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn = \"\", 0,1) as preg_pre365 ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC26f,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC26e,<br/>&nbsp&nbsp&nbsp&nbspTarget=VZC26,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn = \"\", 0,1) as preg_post365 ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>%freq(data=VZC26, table=preg_pre365*preg_post365)&#59<br/><br/><br/>/*VZC27<br/>to count # of prescribers<br/>of AHTN OH Statin medications<br/>1) within 1 year prior to entryDate<br/>2) within 1 year during follow up<br/>*/<br/><br/>/*claims of STATIN*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=locald.statindins,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27a1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=locald.statindins,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27a2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br/>)&#59<br/><br/>/*claims of antiHTN*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=locald.ahtndins,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27a3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=locald.ahtndins,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27a4,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br/>)&#59<br/><br/>/*claims of oh*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=locald.ohdins,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27a5,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=locald.ohdins,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27a6,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br/>)&#59<br/><br/>/*distinct records of statins*/<br/>data VZC27b1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC27a1 VZC27a2&#59<br/>&nbsp&nbsp&nbsp&nbsptheMedClass='statin'&#59<br/>run&#59<br/>%distinct(data=VZC27b1, target=VZC27b2, vars=*)&#59<br/><br/>data VZC27b3&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC27a3 VZC27a4&#59<br/>&nbsp&nbsp&nbsp&nbsptheMedClass='ahtn'&#59<br/>run&#59<br/>%distinct(data=VZC27b3, target=VZC27b4, vars=*)&#59<br/><br/>data VZC27b5&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC27a5 VZC27a6&#59<br/>&nbsp&nbsp&nbsp&nbsptheMedClass='oh'&#59<br/>run&#59<br/>%distinct(data=VZC27b5, target=VZC27b6, vars=*)&#59<br/><br/>/*put all records together*/<br/>data VZC27C&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC27b2 VZC27B4 VZC27B6&#59<br/>run&#59<br/><br/>/*link to VZC26 to select records within look back*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27C,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC26,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27D1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.key_prscr_num, t1.theMedClass, 'pre365' as thePeriod),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate -365 and t2.entryDate -1)<br/>)&#59<br/><br/>/*link to VZC26 to select records within follow up*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27C,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC26,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27D2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.key_prscr_num, t1.theMedClass, 'follow' as thePeriod),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate and t2.entryDate+364)<br/>)&#59<br/><br/>/*For each patient, # of distinct prescriber of statin ahtn oh in pre365 days*/<br/>%distinct(data=VZC27D1, target=VZC27E1a, vars=%str(key_hsn, key_prscr_num))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27E1a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27E1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(key_prscr_num) as Pre365_Prscr_statinAHTNOH),<br/>&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>)&#59<br/>/*For each patient, # of distinct category of statin ahtn oh (1 to 3 categories) in pre365 days*/<br/>%distinct(data=VZC27D1, target=VZC27E2a, vars=%str(key_hsn, theMedClass))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27E2a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27E2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(theMedClass) as Pre365_MedClass_statinAHTNOH),<br/>&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>)&#59<br/><br/>/*For each patient, # of distinct prescriber of statin ahtn oh in follow up*/<br/>%distinct(data=VZC27D2, target=VZC27E3a, vars=%str(key_hsn, key_prscr_num))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27E3a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27E3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(key_prscr_num) as Followup_Prscr_statinAHTNOH),<br/>&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>)&#59<br/>/*For each patient, # of distinct category of statin ahtn oh (1 to 3 categories) in pre365 days*/<br/>%distinct(data=VZC27D2, target=VZC27E4a, vars=%str(key_hsn, theMedClass))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27E4a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27E4,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(theMedClass) as Followup_MedClass_statinAHTNOH),<br/>&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br/>)&#59<br/><br/>/*link to VZC26 to have the vars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC26,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC27E1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27F1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Pre365_Prscr_statinAHTNOH=., 0, Pre365_Prscr_statinAHTNOH) as Pre365_Prscr_statinAHTNOH ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27f1,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC27E2,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27F2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Pre365_MedClass_statinAHTNOH=., 0, Pre365_MedClass_statinAHTNOH) as Pre365_MedClass_statinAHTNOH ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27f2,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC27E3,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC27F3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Followup_Prscr_statinAHTNOH=., 0, Followup_Prscr_statinAHTNOH) as Followup_Prscr_statinAHTNOH ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VZC27f3,<br/>&nbsp&nbsp&nbsp&nbspt2=VZC27E4,<br/>&nbsp&nbsp&nbsp&nbsptarget=VZC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Followup_MedClass_statinAHTNOH=., 0, Followup_MedClass_statinAHTNOH) as Followup_MedClass_statinAHTNOH ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VZC.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VZC.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/>%beep&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-H18D5hE1Pg4kKc4R","name":"Q_VZC_Covariates","type":"TASK","NodeDescription":"<p>///t</p><p>///s</p><p>/*</p><p>[to do]</p><p>hosp and LTC stay should be accounted when estimating PDC</p><p>the LTC stay, and hospital stay should be taken out from the calculation of PDC,</p><p><br></p><p><br></p><p>!!! those deceased, pregnant, lost coverage should be removed from the cohort (after the covariates are done)</p><p><br></p><p><br></p><p><br></p><p>adherence in PDC, %getAdherence done</p><p>adherence in discontinuation, %getDisc done</p><p><br></p><p><br></p><p><br></p><p>Covariates</p><p><br></p><p>age, %getPhRsinfo</p><p>sex, %getPhRsinfo</p><p>marital, %getPhRsinfo</p><p>health coverage, %getCoverGAPs</p><p><br></p><p># meds (DINs), VE in Frailty 0128, part 4 and 5 (pre365, post365), done, VZC5 and 6</p><p># hosps, VE in Fraity 0128, part 19 (pre365, post365), done, VZC7 and 8</p><p># los hosps, VE in Fraity 0128, part 19 (pre365, post365), done, VZC9 and 10</p><p># msb visits, VE in Frailty 0128, part 17 (pre365, post365), done, VZC11 and 12</p><p># spec visits,VE in Frailty 0128, part 17 (pre365, post365), done, VZC11 and 12</p><p># Emergency visits, VE in Fraity 0128, part 18 (pre365, post365), done, VZC13 and 14</p><p>total med cost, VE in Fraity 0128, part 22 (pre365, post365), done, VZC13 and 14</p><p>third party pay of med cost, VE in Fraity 0128, part 22 (pre365, post365), done, VZC15 and 16</p><p>Use of PIMs (Benzo, Psycho, ANtidep, Anticho), VE in Fraity 0128 part 21 (pre365, post365), done, VZC17 and 18</p><p># CAMH disease, %get_CAMH (pre365, post365), done, VZC19</p><p>Manitoba Charlson Score (UltraSound Project), not found, eventually use the HQC one, VZC20.</p><p><br></p><p><br></p><p>income, %GEO_INCQTL_assign, done</p><p>rurality, %getResiType, done</p><p>Charlson's index, %Charlson_Elixhauser_Score_local, done</p><p><br></p><p>mortality, IB in new cohort creation, done VZC21</p><p>lost of coverage during follow up, %getCoverGAPs, done, VZC22</p><p>LTC stay, the indicator LTCStay during follow up (yes, no) is done in VZC23</p><p><br></p><p># chronic diseases (CCDSS), as the study data is not complete in time, do not use the cohort data to calculate the chronic conditions, instead, use the existing chronic condition database. Done VZC24 and VZC25 (for pre and post)</p><p><br></p><p>pregnancy (UltraSound Project, too complicated. eventually using the CCDSS case definition, which is used for exclusion in definition of CCDSS chronic conditions)</p><p>Done VZC26 (for pre and post)</p><p>the code of pregancy was from the file A12_CoMorb_ICDDX in the ChronicPop's remoteS folder</p><p><br></p><p>('641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '671', '672', '673', '674', '675', '676', 'V27', 'O10', 'O11', 'O12', 'O13', 'O14', 'O15', 'O16', 'O17', 'O18', 'O19', 'O21', 'O22', 'O23', 'O24', 'O25', 'O26', 'O27', 'O28', 'O29', 'O30', 'O31', 'O32', 'O33', 'O34', 'O35', 'O36', 'O37', 'O38', 'O39', 'O40', 'O41', 'O42', 'O43', 'O44', 'O45', 'O46', 'O47', 'O48', 'O49', 'O50', 'O51', 'O52', 'O53', 'O54', 'O55', 'O56', 'O57', 'O58', 'O59', 'O60', 'O61', 'O62', 'O63', 'O64', 'O65', 'O66', 'O67', 'O68', 'O69', 'O70', 'O71', 'O72', 'O73', 'O74', 'O75', 'O76', 'O77', 'O78', 'O79', 'O80', 'O81', 'O82', 'O83', 'O84', 'O85', 'O86', 'O87', 'O88', 'O89', 'O90', 'O91', 'O92', 'O93', 'O94', 'O95', 'O98', 'O99', 'Z37')</p><p><br></p><p>propensity score, %Q_PSScore, not generalized yet</p><p>other conditions:</p><p>AK CK DB HP BB</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CV PV CD CO</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LV CA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LC</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NS AP GP</p><p><br></p><p>Doctor sex, VRC in Frailty 0128</p><p>Doctor age, VRC in Frailty 0128</p><p>Doctor years since graduation, VRC in Frailty 0128</p><p>Doctor domestic/foreign training, VRC in Frailty 0128</p><p><br></p><p>Doctor panel size</p><p>Doctor workload</p><p><br></p><p>Fee for service or NFFS</p><p>Spec</p><p><br></p><p>same age/sex</p><p><br></p><p>*/</p><p>s///</p><p>t///</p>","custparents":[{"idx":"CodeTask-cn4xkuAyEOFAppY5"}]},{"idx":"MYa5760aa8-99c2-4339-ab56-242bc2f2b815","name":"_VZC.zip covariates added","custparents":[{"idx":"CodeTask-cn4xkuAyEOFAppY5"},{"idx":"CodeTask-cn4xkuAyEOFAppY5"},{"idx":"CodeTask-cn4xkuAyEOFAppY5"}],"children":[{"idx":"MYb3cad90c-933c-4601-85b2-16fe6413173d","name":"ProgVZZA Obj1","custparents":[{"idx":"MYa5760aa8-99c2-4339-ab56-242bc2f2b815"}],"children":[{"idx":"MY524c45b8-3fc8-4fef-b60d-a108980a7a9d","name":"ProgVZZAA Obj1a (Poisson Regression)","custparents":[{"idx":"MYb3cad90c-933c-4601-85b2-16fe6413173d"}],"children":[{"idx":"MYd4a9edae-45ce-4989-9472-7e9f637d43a6","name":"_VZZAA Reports","custparents":[{"idx":"MYd7080f38-af86-4dc5-80cd-6172bddb903d"},{"idx":"MY524c45b8-3fc8-4fef-b60d-a108980a7a9d"},{"idx":"MY4841887f-aba4-468c-95b0-e74a7ef96211"}]}]},{"idx":"MY1f1beb8b-f49e-4cb1-91b7-d8ec5984211a","name":"Prog VZZAB Obj1b (Cross Table)","custparents":[{"idx":"MYb3cad90c-933c-4601-85b2-16fe6413173d"}],"children":[{"idx":"MY82898c6d-4e6e-42b5-830c-47b434ac82d2","name":"_VZZAB Reports","custparents":[{"idx":"MY1f1beb8b-f49e-4cb1-91b7-d8ec5984211a"},{"idx":"MY71ba1d61-e896-4a00-9dcd-c3e1b45137eb"},{"idx":"MY57b7aefa-727b-4af0-9bea-d29df0ddfb32"}]}]}]},{"idx":"MY5e97dfa3-325f-46ab-994d-caa23614c4f0","name":"Prog VZZB Obj2","custparents":[{"idx":"MYa5760aa8-99c2-4339-ab56-242bc2f2b815"}],"children":[{"idx":"MY4098a9c6-4e11-400b-97d3-70bafde4e5e4","name":"Q VZZB","custparents":[{"idx":"MY5e97dfa3-325f-46ab-994d-caa23614c4f0"}],"NodeDescription":"<p>///t</p><p>[to do]</p><p>Need all MSB Claims to determine patient panel of the physician</p><p>t///</p>"},{"idx":"MYbdd3013f-bb9e-4b5c-a0dd-caac6198753d","name":"_VZZB Reports","custparents":[{"idx":"MY5e97dfa3-325f-46ab-994d-caa23614c4f0"},{"idx":"MY5e97dfa3-325f-46ab-994d-caa23614c4f0"},{"idx":"MYade38f5f-ed3c-4986-ac53-7b26217d23d1"}]}]},{"idx":"CodeTask-dfOUDauemdaGeNIW","name":"Prog VZD_PropensityScoreMatching","type":"TASK","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>/*the cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br/>)&#59<br/><br/><br/>/*VZD, propensity score matching*/<br/>data VZD1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59<br/>&nbsp&nbsp&nbsp&nbspif CMEPL1 ='' or cmepl1='na:.:na' then var_CMEPL = 0&#59 else var_CMEPL=1&#59<br/>&nbsp&nbsp&nbsp&nbspif CMEPF1 ='' or cmepF1='na:.:na' then var_CMEPF = 0&#59 else var_CMEPF=1&#59<br/>&nbsp&nbsp&nbsp&nbspvar_CMEPLF=strip(var_CMEPL) || strip (var_CMEPF)&#59<br/>&nbsp&nbsp&nbsp&nbspif var_CMEPLF='00' then var_CMEPLF='0'&#59<br/>&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1&#59else Northern=0&#59<br/>run&#59<br/><br/>%MatchByPS(<br/>&nbsp&nbsp&nbsp&nbspdata=VZD1,<br/>&nbsp&nbsp&nbsp&nbsptheExposureVar=var_CMEPF,<br/>&nbsp&nbsp&nbsp&nbsptrimPCT=5,<br/><br/>&nbsp&nbsp&nbsp&nbspmatchN=5,<br/>&nbsp&nbsp&nbsp&nbspcapliper=0.2,<br/>&nbsp&nbsp&nbsp&nbspkeepVarsForPart2 = key_hsn var_CMEPF age sex_desc logit_ps entrydate,<br/>&nbsp&nbsp&nbsp&nbspexposeCondition=%quote(var_CMEPF  = 1),<br/>&nbsp&nbsp&nbsp&nbspControlCondition=%quote(var_CMEPF  = 0),<br/>&nbsp&nbsp&nbsp&nbspConditionsForPart2 =%quote(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspabs(t1.age-t2.age) <=1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp|<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.sex_desc = t2.sex_desc<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp|<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspabs(t1.EntryDate-t2.EntryDate) <=365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp|<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspabs(t1.logit_ps - t2.logit_ps) <= 0.2),<br/>&nbsp&nbsp&nbsp&nbsppsdiff=psdiff,<br/>&nbsp&nbsp&nbsp&nbsppsdiffTermForPart2=%quote(,abs(t1.logit_ps-t2.logit_ps) as psDiff),<br/>&nbsp&nbsp&nbsp&nbspnoreplaceForPart2=1,<br/><br/>&nbsp&nbsp&nbsp&nbsptarget=VZD2,<br/>&nbsp&nbsp&nbsp&nbspdebug=,<br/>&nbsp&nbsp&nbsp&nbspthePSVars= <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365 CC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IB_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_UB_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_LB_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OB_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AK_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RF_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_CA_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_CK_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_WF_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AP_PS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NS_PS<br/>)&#59<br/>data VZD&#59<br/>&nbsp&nbsp&nbsp&nbspset VZD2_data&#59<br/>run&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VZD.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VZD.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/>%beep&#59<br/><br/>s///<br/>t///","children":[{"idx":"MYb18bd944-13e2-4eab-9e62-d398597b80b4","name":"_VZD.zip ps matched","custparents":[{"idx":"CodeTask-dfOUDauemdaGeNIW"}],"children":[{"idx":"MYc559aba0-1316-4ee3-8e76-48135ed81e4a","name":"Prog VZZC Obj3","custparents":[{"idx":"MYb18bd944-13e2-4eab-9e62-d398597b80b4"}],"children":[{"idx":"MY80742d70-8ed2-4db2-bcc2-43a689a604dd","name":"Stage1","custparents":[{"idx":"MYc559aba0-1316-4ee3-8e76-48135ed81e4a"}],"children":[{"idx":"CodeTask-86dWsNku3mZVaC19","name":"logistic matched and unmatched","type":"TASK","NodeDescription":"///t<br/>///s<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZd.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZd.sas7bdat)<br/>)&#59<br/><br/>%macro test1d (data=, theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theVar where data&#59<br/>&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern (ref='0')&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern  &theVar*northern age sex_desc  qaippe /*resitype   &theVar * resitype*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrata match_num&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test1d&#59<br/>data test1&#59<br/>&nbsp&nbsp&nbsp&nbspset vzd&#59<br/>&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1&#59else Northern=0&#59<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0&#59 else any_changed=1&#59<br/>run&#59<br/>/*macro test1d is for ps matched analysis, using the matched cohort (VZD)*/<br/>%freq(data=test1, table=rha*Northern)&#59<br/>%freq(data=test1, table=Northern*any_changed)&#59<br/>%freq(data=test1, table=Northern*adherence)&#59<br/>%test1d(data=test1, theVar=any_changed )&#59<br/><br/>/*macro test1e is for not matched,using the not matched cohort (VZC)*/<br/>%macro test1e (data=, theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data theVar where&#59<br/>&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern(ref='0') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO (ref='1')<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO(ref='1')*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern &theVar *northern<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe resitype &theVar * resitype <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365_Medclass_statinAHTNOH<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowup_Medclass_statinAHTNOH*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1/exp&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test1e&#59<br/><br/>data test2&#59<br/>&nbsp&nbsp&nbsp&nbspset vzc&#59<br/>&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1&#59else Northern=0&#59<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0&#59 else any_changed=1&#59<br/>&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO = Pre365_Prscr_statinAHTNOH&#59<br/>&nbsp&nbsp&nbsp&nbspif Pre365NRxDocSAO> 4 then Pre365NRxDocSAO=5&#59<br/>&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO=Followup_Prscr_statinAHTNOH&#59<br/>&nbsp&nbsp&nbsp&nbspif FollowUpNRXDocSAO> 4 then FollowUpNRXDocSAO=4&#59<br/>run&#59<br/>%test1e(data=test2, theVar=any_changed )&#59<br/>%beep&#59<br/>/*If it is compared to prescriber =1 within look back, it is not sig diff if there are 2, 3, 4... for statin AHTN OH<br/>&nbsp&nbsp&nbsp&nbspFor followup it is diff. it is always significant, as it is simontaneously biased, or confounded?<br/>*/<br/><br/>%freq(data=test2, table=FollowUpNRXDocSAO)&#59 /*how comes that there are 0 prescribers during follow up?*/<br/><br/>proc reg data=test2&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence = Followup_Prscr_statinAHTNOH  Followup_Medclass_statinAHTNOH /VIF&#59<br/>run&#59<br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"MY80742d70-8ed2-4db2-bcc2-43a689a604dd"}]},{"idx":"CodeTask-PTnsFKR281boiYv2","name":"Prog Multivariate model","type":"TASK","NodeDescription":"<p>///t</p><p>///s</p><p>/*logistic regression models*/</p><p><br></p><p>data _null_;run;</p><p>/*the cohort*/</p><p>%VbsUnzip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VZC.zip),</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VZC.sas7bdat)</p><p>);</p><p><br></p><p>/*adherence, never changed*/</p><p>data VZC1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VZC;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if Never_Changed=1 then any_changed=0; else any_changed=1;</p><p>run;</p><p><br></p><p>/*1. consistency of doc as diff roles*/</p><p>%macro test1a (theVar=, where=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local theVar where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select parameterEstimates Estimates;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Title \"&amp;theVar\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc genmod data= VZC1 desc;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where &amp;where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class &amp;theVar (ref='0') /param=reference;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model adherence (ref='0') = &amp;theVar /type3 dist=bin link=logit; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 1 vs 0\" &amp;theVar 1 0 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 9 vs 0\" &amp;theVar 0 1 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select all;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;title;</p><p>%mend test1a;</p><p>%test1a(theVar=any_changed);</p><p>%test1a(theVar=UPCP_Changed);</p><p>%test1a(theVar=CMEP_Changed);</p><p>%test1a(theVar=PR_Changed, where=T_Rx &gt;1);</p><p>%test1a(theVar=UPCP_NOT_CMEP);</p><p>%test1a(theVar=CMEP_NOT_PR);</p><p>%test1a(theVar=UPCP_NOT_PR);</p><p>%test1a(theVar=UPCP_NOT_CMEP_NOT_PR);</p><p>%print(data=VZC);</p><p><br></p><p>/*1b. adjusted by age...*/</p><p>%macro test1b (theVar=, where=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local theVar where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select parameterEstimates Estimates type3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Title \"&amp;theVar\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc genmod data= VZC1 desc;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where &amp;where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class &amp;theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') /param=reference;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model adherence (ref='0') = &amp;theVar age sex_desc qaippe resitype &amp;theVar * resitype /type3 dist=bin link=logit; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 1 vs 0\" &amp;theVar 1 0 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 9 vs 0\" &amp;theVar 0 1 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select all;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;title;</p><p>%mend test1b;</p><p>%test1b(theVar=any_changed);</p><p>%test1b(theVar=UPCP_Changed);</p><p>%test1b(theVar=CMEP_Changed);</p><p>%test1b(theVar=PR_Changed, where=T_Rx &gt;1);</p><p>%test1b(theVar=UPCP_NOT_CMEP);</p><p>%test1b(theVar=CMEP_NOT_PR);</p><p>%test1b(theVar=UPCP_NOT_PR);</p><p>%test1b(theVar=UPCP_NOT_CMEP_NOT_PR);</p><p><br></p><p><br></p><p>/*1b. adjusted by all covariates...*/</p><p>%macro test1c (theVar=, where=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local theVar where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select parameterEstimates Estimates type3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Title \"&amp;theVar\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc genmod data= VZC1 desc;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where &amp;where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class &amp;theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') </p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/param=reference;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model adherence (ref='0') = &amp;theVar age sex_desc qaippe resitype &amp;theVar * resitype </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NDINS_Pre365 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NHosp_Pre365 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NVisits_SP_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NVisits_ER_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThirdPartyPay_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BENZO_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PSYCHO_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTIDEP_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTICHO_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_NPD_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_SA_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_PSY_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Charlson_Index</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_ANXIETY_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_DIABETES</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_HTN</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOOD_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_ASTHMA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_COPD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_HF</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OMH</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SUBABUSE_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_AMI</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_IHD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_STROKE_1POP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_1POP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOODANX</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOODANXP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_AD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_NONRA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_2DRUG</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_STROKE_2HOSP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_EPAD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_RA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SCHIZO</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SCHIZO_EVER</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SUICIDE_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_PD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MS</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_EPJR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/type3 dist=bin link=logit; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 1 vs 0\" &amp;theVar 1 0 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 9 vs 0\" &amp;theVar 0 1 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select all;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;title;</p><p>%mend test1b;</p><p>%test1c(theVar=any_changed);</p><p>%test1c(theVar=UPCP_Changed);</p><p>%test1c(theVar=CMEP_Changed);</p><p>%test1c(theVar=PR_Changed, where=T_Rx &gt;1);</p><p>%test1c(theVar=UPCP_NOT_CMEP);</p><p>%test1c(theVar=CMEP_NOT_PR);</p><p>%test1c(theVar=UPCP_NOT_PR);</p><p>%test1c(theVar=UPCP_NOT_CMEP_NOT_PR);</p><p><br></p><p><br></p><p><br></p><p><br></p><p>data VZC2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VZC1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if PCPPatternL='A-' then PCPChangeL=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else PCPChangeL=1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if PCPPatternF='A-' then PCPChangeF=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else PCPChangeF=1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if PrscrPattern='A-' then PrscrChangeF=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;else PrscrChangeF=1;</p><p>run;</p><p><br></p><p>/*1. PCPL pattern*/</p><p>%macro test2a (theVar=, where=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local theVar where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select parameterEstimates Estimates;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Title \"&amp;theVar\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc genmod data= VZC2 desc;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where &amp;where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class &amp;theVar (ref='0') /param=reference;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model adherence (ref='0') = &amp;theVar /type3 dist=bin link=logit;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 1 vs 0\" &amp;theVar 1 0 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select all;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;title;</p><p>%mend test2a;</p><p>%test2a(theVar=PCPChangeL, where= T_VisitsL &gt; 1);</p><p>%test2a(theVar=PCPChangeF, where= T_VisitsF &gt; 1);</p><p>%test2a(theVar=PrscrChangeF, where= T_Rx &gt; 1);</p><p><br></p><p>data VZC3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;set VZC2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if CMEPL1 ='' or cmepl1='na:.:na' then var_CMEPL = 0; else var_CMEPL=1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if CMEPF1 ='' or cmepF1='na:.:na' then var_CMEPF = 0; else var_CMEPF=1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;var_CMEPLF=strip(var_CMEPL) || strip (var_CMEPF);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if var_CMEPLF='00' then var_CMEPLF='0';</p><p>run;</p><p><br></p><p>%macro test1d (theVar=, where=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local theVar where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select parameterEstimates Estimates type3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Title \"&amp;theVar\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc genmod data= VZC3 desc;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where &amp;where;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class &amp;theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') </p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/param=reference;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model adherence (ref='0') = &amp;theVar age sex_desc qaippe resitype &amp;theVar * resitype </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NDINS_Pre365 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NHosp_Pre365 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NVisits_SP_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NVisits_ER_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThirdPartyPay_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BENZO_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PSYCHO_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTIDEP_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTICHO_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_NPD_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_SA_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_PSY_Pre365</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Charlson_Index</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_ANXIETY_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_DIABETES</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_HTN</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOOD_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_ASTHMA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_COPD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_HF</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OMH</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SUBABUSE_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_AMI</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_IHD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_STROKE_1POP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_1POP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOODANX</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOODANXP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_AD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_NONRA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_2DRUG</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_STROKE_2HOSP</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_EPAD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_RA</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SCHIZO</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SCHIZO_EVER</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SUICIDE_OLD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_PD</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MS</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_EPJR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/type3 dist=bin link=logit; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 01 vs 00\" &amp;theVar 1 0 0/exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 10 vs 00\" &amp;theVar 0 1 0 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;estimate \"&amp;theVar 11 vs 00\" &amp;theVar 0 0 1 /exp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ods select all;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;title;</p><p>%mend test1d;</p><p><br></p><p>%test1d(theVar=var_CMEPLF);</p><p>data x;a=1;run;</p><p>%let thevar=var_CMEPLF;</p><p>proc glm data=test4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class &amp;theVar sex_desc qaippe resitype ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model adherence = </p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;theVar age sex_desc */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rr cf </p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NDINS_Pre365 */</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NHosp_Pre365 */</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NVisits_SP_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NVisits_ER_Pre365*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThirdPartyPay_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BENZO_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PSYCHO_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTIDEP_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTICHO_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_NPD_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_SA_Pre365*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CAMH_PSY_Pre365*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Charlson_Index*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_ANXIETY_OLD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_DIABETES*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_HTN*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOOD_OLD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_ASTHMA*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_COPD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_HF*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OMH*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SUBABUSE_OLD*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_AMI*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_IHD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OA*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_STROKE_1POP*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_1POP*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_OLD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOODANX*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MOODANXP*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_AD*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_NONRA*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_OSTEO_2DRUG*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_STROKE_2HOSP*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_EPAD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_RA*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SCHIZO*/</p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SCHIZO_EVER*/</p><p><br></p><p><br></p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_SUICIDE_OLD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_PD*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_MS*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CC_Pre365_EPJR&nbsp;&nbsp;&nbsp;&nbsp;*/</p><p><br></p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/tolerance; </p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;data test4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set VZC3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if resitype='RURAL' then rr=1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if resitype='URBAN' then rr=0;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else rr=9;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when (var_CMEPLF='00') cf=1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when (var_CMEPLF='01') cf=2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when (var_CMEPLF='10') cf=3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when (var_CMEPLF='11') cf=4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;otherwise cf=5;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc reg data=test4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model adherence=rr cf /vif tol;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p>s///</p><p>t///</p>","custparents":[{"idx":"MY80742d70-8ed2-4db2-bcc2-43a689a604dd"}],"children":[]},{"idx":"CodeTask-X3qh5qNEkgbTc2aV","name":"VZB_LogisticModels","type":"TASK","NodeDescription":"///t<br/>///s<br/><br/>/*logistic regression models*/<br/><br/>data _null_&#59run&#59<br/>/*the cohort*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZA.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZA.sas7bdat)<br/>)&#59<br/><br/><br/>/*adherence, never changed*/<br/>data VZB1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZA&#59<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0&#59 else any_changed=1&#59<br/>run&#59<br/><br/>/*1. consistency of doc as diff roles*/<br/>%macro test1a (theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theVar where&#59<br/>&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= vzb1 desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0')  /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 9 vs 0\" &theVar 0 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test1a&#59<br/>%test1a(theVar=any_changed)&#59<br/>%test1a(theVar=UPCP_Changed)&#59<br/>%test1a(theVar=CMEP_Changed)&#59<br/>%test1a(theVar=PR_Changed, where=T_Rx >1)&#59<br/>%test1a(theVar=UPCP_NOT_CMEP)&#59<br/>%test1a(theVar=CMEP_NOT_PR)&#59<br/>%test1a(theVar=UPCP_NOT_PR)&#59<br/>%test1a(theVar=UPCP_NOT_CMEP_NOT_PR)&#59<br/>%print(data=vza)&#59<br/><br/>/*1b. adjusted by age...*/<br/>%macro test1b (theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theVar where&#59<br/>&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= vzb1 desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar age sex_desc  qaippe resitype &theVar * resitype /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 9 vs 0\" &theVar 0 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test1b&#59<br/>%test1b(theVar=any_changed)&#59<br/>%test1b(theVar=UPCP_Changed)&#59<br/>%test1b(theVar=CMEP_Changed)&#59<br/>%test1b(theVar=PR_Changed, where=T_Rx >1)&#59<br/>%test1b(theVar=UPCP_NOT_CMEP)&#59<br/>%test1b(theVar=CMEP_NOT_PR)&#59<br/>%test1b(theVar=UPCP_NOT_PR)&#59<br/>%test1b(theVar=UPCP_NOT_CMEP_NOT_PR)&#59<br/><br/><br/><br/><br/>data VZB2&#59<br/>&nbsp&nbsp&nbsp&nbspset VZB1&#59<br/>&nbsp&nbsp&nbsp&nbspif PCPPatternL='A-' then PCPChangeL=0&#59<br/>&nbsp&nbsp&nbsp&nbspelse PCPChangeL=1&#59<br/>&nbsp&nbsp&nbsp&nbspif PCPPatternF='A-' then PCPChangeF=0&#59<br/>&nbsp&nbsp&nbsp&nbspelse PCPChangeF=1&#59<br/>&nbsp&nbsp&nbsp&nbspif PrscrPattern='A-' then PrscrChangeF=0&#59<br/>&nbsp&nbsp&nbsp&nbspelse PrscrChangeF=1&#59<br/>run&#59<br/><br/>/*1. PCPL pattern*/<br/>%macro test2a (theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theVar where&#59<br/>&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= VZB2 desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0')  /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar /type3 dist=bin link=logit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test2a&#59<br/>%test2a(theVar=PCPChangeL, where= T_VisitsL > 1)&#59<br/>%test2a(theVar=PCPChangeF, where= T_VisitsF > 1)&#59<br/>%test2a(theVar=PrscrChangeF, where= T_Rx > 1)&#59<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>%macro notrun&#59<br/><br/><br/>%print(data=localt.g)&#59<br/>%print(data=localt.d)&#59<br/>proc logistic data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365 t_visits_fw365 upcIndex_fw365 upRindex_fw365&#59 <br/>run&#59<br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_Pre365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_Pre365&#59<br/>run&#59<br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand doc_fw365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365&#59<br/>run&#59<br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand LastPEDoc_Pre365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') LastPEDoc_Pre365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=LastPEDoc_Pre365&#59<br/>run&#59<br/><br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 t_statinRx_fw365 /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365&#59<br/>run&#59<br/>%print(data=localt.g)&#59<br/>%freq(data=localt.g, filters=%str(docPatterns='AAAA' and N_visits_fw365 > 1 and N_visits_pre365 > 1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand N_Statinrx_fw365 >1 and StatinDoc_FW365 ne ''), table=adherence)&#59<br/><br/>data L11&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.g&#59<br/>&nbsp&nbsp&nbsp&nbspif docPatterns = 'AACD' and adherence=0&#59<br/>run&#59<br/><br/>%freq(data=L11, table=PrscrPattern)&#59<br/><br/><br/>data L12&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.g&#59<br/>&nbsp&nbsp&nbsp&nbspif docPatterns = 'ABAA' and adherence=0&#59<br/>run&#59<br/><br/>%freq(data=L12, table=PrscrPattern)&#59<br/><br/>/*Poisson model*/<br/>data L20&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.G&#59<br/>&nbsp&nbsp&nbsp&nbsplogTime = log(daysOnmed + daysOffmed)&#59<br/>run&#59<br/>proc genmod data=L20 desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_Statinrx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 doc_fw365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel daysOnMed (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /*t_statinRx_fw365*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=negbin offset=logTime  &#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365  &#59<br/>run&#59<br/><br/>/*What predicts the pattern 'AAAA'*/<br/>data L31&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.G&#59<br/>&nbsp&nbsp&nbsp&nbspif DocPatterns = 'AAAA' then PatternOutcome = 1&#59 else PatternOutcome=0&#59<br/>&nbsp&nbsp&nbsp&nbspage = int(yrdif(birth, dqdate, \"AGE\"))&#59<br/>run&#59<br/>%print(data=L31)&#59<br/>proc genmod data=L31 desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 sex_desc (ref='M') qaippe (ref='1')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel PatternOutcome (ref='0') =  age sex_desc qaippe resitype /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365&#59<br/>run&#59<br/><br/>proc genmod data=L31 desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 sex_desc (ref='M') qaippe (ref='1')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')<br/>/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc qaippe resitype&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365&#59<br/>run&#59<br/><br/><br/>%mend notrun&#59<br/><br/>s///<br/>t///","children":[],"custparents":[{"idx":"MY80742d70-8ed2-4db2-bcc2-43a689a604dd"}]},{"idx":"CodeTask-YT3KsR6hTqWnAgpr","name":"VZE_compare UPI_AAA 1","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*<br/>Compare the measures of AAA and upci<br/><br/>*/<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br/>)&#59<br/><br/>/*test the var FPUPIT (UP index )*/<br/>data VZE1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59<br/>&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2)&#59 <br/>&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT='0'&#59/*missing*/<br/>&nbsp&nbsp&nbsp&nbspif 0< FPUPI <= 66.67  then FPUPIT='L'&#59/*low*/<br/>&nbsp&nbsp&nbsp&nbspif 66.67< FPUPI <= 88.99  then FPUPIT='M'&#59/*medium*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPI >88.99  then FPUPIT='H'&#59/*high*/<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0&#59 else any_changed=1&#59<br/>run&#59<br/>%print(data=VZE1)&#59<br/>%freq(data=VZE1, table = FPUPIT * any_changed)&#59 <br/><br/>/*macro test1e is for not matched,using the not matched cohort (VZC)*/<br/>%macro test1f (data=, theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data theVar where&#59<br/>&nbsp&nbsp&nbsp&nbsp%*ods select parameterEstimates Estimates type3&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='L1') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='H1') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test1f&#59<br/>data VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspset VZE1&#59<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT ne '0'&#59<br/>&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT = 'M' or FPUPIT='H' then FPUPIT2 = 'H'&#59 else FPUPIT2='H'&#59<br/>&nbsp&nbsp&nbsp&nbsptheExpo2=strip(FPUPIT2) || strip(any_changed)&#59<br/>run&#59<br/>%freq(data=vze2, table=adherence * theExpo)&#59<br/>%freq(data=vze2, table=adherence * theExpo2)&#59<br/>%test1f(data=VZE2, theVar=theExpo )&#59<br/>%test1f(data=VZE2, theVar=theExpo2 )&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-3hkmQbNfuztlkN1V","name":"VZE2_compare UPI_AAA 2","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*<br/>Compare the measures of AAA and UPC score<br/><br/>*/<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br/>)&#59<br/>/*check the upc score*/<br/>%print(data=VZC)&#59<br/><br/>/*get the max UPC score for each patient (FPUPI), make UPC index categories (FPUPIT)*/<br/>data VZE1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59<br/>&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2)&#59 <br/>&nbsp&nbsp&nbsp&nbspDocID = scan(upcpf1, 0, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT='0'&#59/*missing*/<br/>&nbsp&nbsp&nbsp&nbspif 0< FPUPI <= 66.67  then FPUPIT='L'&#59/*low*/<br/>&nbsp&nbsp&nbsp&nbspif 66.67< FPUPI <= 88.99  then FPUPIT='M'&#59/*medium*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPI >88.99  then FPUPIT='H'&#59/*high*/<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0&#59 else any_changed=1&#59<br/>run&#59<br/>%print(data=VZE1)&#59<br/>%freq(data=VZE1, table = FPUPIT * any_changed)&#59 <br/><br/>/*check the correlation between FPUPI score, and the variable any_changed (perfect continuity)*/<br/>proc glm data=VZE1&#59<br/>&nbsp&nbsp&nbsp&nbspclass any_changed FPUPIT&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT any_changed /tolerance&#59<br/>run&#59quit&#59<br/><br/><br/><br/>/*macro test1e is for not matched,using the not matched cohort (VZC)*/<br/>%macro test1f (data=, theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data theVar where&#59<br/>&nbsp&nbsp&nbsp&nbsp%*ods select parameterEstimates Estimates type3&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='L1') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') any_changed(ref='1') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do&#59 /*L1, or H1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') any_changed(ref='1') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59 /*when using UPI index as main effect*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass  sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') any_changed(ref='0') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test1f&#59<br/>data VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspset VZE1&#59<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT ne '0'&#59<br/>&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT = 'M' or FPUPIT='H' then FPUPIT2 = 'H'&#59 else FPUPIT2='L'&#59<br/>&nbsp&nbsp&nbsp&nbsptheExpo2=strip(FPUPIT2) || strip(any_changed)&#59<br/>run&#59<br/>%freq(data=vze2, table=adherence * theExpo)&#59<br/>%freq(data=vze2, table=adherence * theExpo2)&#59<br/>%test1f(data=VZE2, theVar=theExpo2 )&#59<br/>%test1f(data=VZE2, theVar=any_changes )&#59<br/><br/>%test1f(data=VZE1, theVar=FPUPI )&#59<br/>%test1f(data=VZE1, theVar=any_changed)&#59<br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-YT3KsR6hTqWnAgpr"}]},{"idx":"CodeTask-hNhbmTUgmNjqsbwQ","name":"VZE3_compare UPI_AAA 3","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*<br/>Compare the measures of AAAAAA and UPC score<br/>Never changed during lookback/followup and First Statin prescriber<br/><br/>*/<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br/>)&#59<br/>/*check the upc score*/<br/>%print(data=VZC)&#59<br/><br/><br/><br/>/*get the max UPC score for each patient (FPUPI), make UPC index categories (FPUPIT)<br/>Never_Changed_F (during follow up) or Never_Changed<br/>*/<br/>data VZE1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59<br/>&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2)&#59 <br/>&nbsp&nbsp&nbsp&nbspDocID = scan(upcpf1, 0, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT=9&#59/*missing*/<br/>&nbsp&nbsp&nbsp&nbspprefectCOC=0&#59<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then prefectCOC=1&#59<br/>run&#59<br/><br/>proc means data=VZe1 mean median qrange q1 q3&#59<br/>&nbsp&nbsp&nbsp&nbspvar FPUPI&#59<br/>run&#59<br/>/*as the Q1 is 40, 57, 75, used to test*/<br/><br/>data VZE1a&#59<br/>&nbsp&nbsp&nbsp&nbspset VZe1&#59<br/>&nbsp&nbsp&nbsp&nbspif 0<= FPUPI <= 57.14  then FPUPIT=0&#59/*low*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPI > 57.14  then FPUPIT=1&#59/*high*/<br/>run&#59<br/><br/>%freq(data=VZE1a, table = FPUPIT * prefectCOC)&#59 <br/><br/>data VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspset VZE1a&#59<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT ne 9&#59<br/>/*&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT = 1 then FPUPIT2 = 'H'&#59 else FPUPIT2='L'&#59<br/>&nbsp&nbsp&nbsp&nbspUPCI_PerfCOC=strip(FPUPIT2) || strip(prefectCOC)&#59<br/>run&#59<br/><br/>/*check the correlation between FPUPI score, and the variable prefectCOC (perfect continuity)*/<br/>proc glm data=VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspclass prefectCOC FPUPIT2&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT2 prefectCOC /tolerance&#59<br/>run&#59quit&#59<br/>proc reg data=VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT prefectCOC / vif tol&#59<br/>run&#59quit&#59<br/>/*VIF is 1.0 < 2.5, and tol = .98 > .4 so no multilinearity concer!*/<br/><br/><br/>%freq(data=VZE2, table=UPCI_PerfCOC)&#59<br/><br/>%let covariates = &nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&#59<br/><br/>/*Contrast between 3 scenarios*/<br/>proc logistic data=VZE2 descending&#59<br/>&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbsp/*H0=1 0 0, H1=0 1 0, L1=0 0 1 */<br/>&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI, Perfect vs non prefect COC, L1 vs L0\" UPCI_PerfCOC 0 0 1/exp cl&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"High UPCI, Perfect vs non prefect COC, H1 vs H0\" UPCI_PerfCOC -1 1 0 /exp cl&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI but prefect COC vs High UPCI but non-Perfect , L1 vs H0\" UPCI_PerfCOC -1 0 1 /exp cl&#59<br/>run&#59<br/><br/><br/>ods graphics on&#59<br/>ods select ROCAssociation&#59<br/>proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint)&#59<br/>&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI_PerfCOC + covariates' UPCI_PerfCOC &covariates&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates&#59<br/>run&#59<br/>ods select all&#59<br/>ods graphics off&#59<br/><br/>/*.6382 when UPCI cut off = .4 (q1)*/<br/>/*.6390 when UPCI cut off = .57 (median)*/<br/>/*.6374 when UPCI cut off = .667*/<br/>/*.6368 when UPCI cut off = .75*/<br/><br/>ods graphics on&#59<br/>ods select ROCAssociation&#59<br/>proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint)&#59<br/>&nbsp&nbsp&nbsp&nbspclass prefectCOC (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = prefectCOC &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M1: prefectCOC + covariates' prefectCOC &covariates&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates&#59<br/>run&#59<br/>ods select all&#59<br/>ods graphics off&#59<br/><br/>/*.6358 when UPCI cut off = .4*/<br/>/*.6358 when UPCI cut off = .57 (median)*/<br/>/*c=.6358 when UPCI cut off = .667*/<br/>/*.6358 when UPCI cut off = .75*/<br/><br/>ods graphics on&#59<br/>ods select ROCAssociation&#59<br/>proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint)&#59<br/>&nbsp&nbsp&nbsp&nbspclass FPUPIT2 (ref='L') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = FPUPIT2 &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI + covariates' FPUPIT2 &covariates&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates&#59<br/>run&#59<br/>ods select all&#59<br/>ods graphics off&#59<br/><br/>/*.6361 when UPCI cut off = .4 (Q1)*/<br/>/*.6368 when UPCI cut off = .57 (median)*/<br/>/*.6352 when UPCI cut off = .667*/<br/>/*.6345 when UPCI cut off = .75 (Q3)*/<br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-YT3KsR6hTqWnAgpr"}]},{"idx":"CodeTask-BTjzZbCAmJhftivv","name":"VZE4_compare UPI_AAA","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*<br/>Compare the measures of AAA and UPC score during follow up<br/><br/>*/<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br/>)&#59<br/>/*check the upc score*/<br/>%print(data=VZC)&#59<br/><br/>/*in VZC the Never_Change is for never change in both look back and follow up preriod<br/>&nbsp&nbsp&nbsp&nbspthe following is to make a variable for perfect COC during follow up (ie. the same UCP, CMEP, and UPR)<br/>&nbsp&nbsp&nbsp&nbspthe orginal pattern RolesPatternAllDoc has 6 segments (delimited by &#59), each for UCPL (lookback) UCPF (followup)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEPL, CMEPF, FP (First prescriber), and UPRsF (usual statin prescriber during follow up)<br/>UPCPFs=scan(RolesPatternAllDoc, 2, '&#59')&#59<br/>*/<br/>data VZE0a&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC &#59<br/>&nbsp&nbsp&nbsp&nbsplength UPCPFs $100. UCMEPFs $100. USPRFs $100. RolesFollowAlldoc $100.&#59<br/>&nbsp&nbsp&nbsp&nbspNever_Changed_F=0&#59<br/>&nbsp&nbsp&nbsp&nbspUPCPFs=scan(RolesPatternAllDoc, 2, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspUCMEPFs=scan(RolesPatternAllDoc, 4, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspUSPRFs = scan(RolesPatternAllDoc, 6, '&#59')&#59<br/>&nbsp&nbsp&nbsp&nbspRolesFollowAlldoc=strip(UPCPFs) || '&#59' || Strip(UCMEPFs) || '&#59' || strip(USPRFs)&#59<br/>&nbsp&nbsp&nbsp&nbspif RolesFollowAlldoc='_&#59_&#59_&#59' then Never_Changed_f=9&#59 <br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 26&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif count(RolesFollowAlldoc, byte(i+63)) =3 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNever_Changed_F=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/>%freq(data=VZE0a, table =Never_Changed * Never_Changed_F)&#59<br/><br/><br/><br/>/*get the max UPC score for each patient (FPUPI), make UPC index categories (FPUPIT)<br/>Never_Changed_F (during follow up) or Never_Changed<br/>*/<br/>data VZE1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZE0a&#59<br/>&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2)&#59 <br/>&nbsp&nbsp&nbsp&nbspDocID = scan(upcpf1, 0, \":\")&#59<br/>&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT=9&#59/*missing*/<br/>&nbsp&nbsp&nbsp&nbspprefectCOC=0&#59<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed_F=1 then prefectCOC=1&#59<br/>run&#59<br/><br/>proc means data=VZe1 mean median qrange q1 q3&#59<br/>&nbsp&nbsp&nbsp&nbspvar FPUPI&#59<br/>run&#59<br/>/*as the Q1 is 40, 57, 75, used to test*/<br/><br/>data VZE1a&#59<br/>&nbsp&nbsp&nbsp&nbspset VZe1&#59<br/>&nbsp&nbsp&nbsp&nbspif 0<= FPUPI <= 75  then FPUPIT=0&#59/*low*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPI > 75  then FPUPIT=1&#59/*high*/<br/>run&#59<br/><br/>%freq(data=VZE1a, table = FPUPIT * prefectCOC)&#59 <br/><br/>data VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspset VZE1a&#59<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT ne 9&#59<br/>/*&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br/>&nbsp&nbsp&nbsp&nbspif FPUPIT = 1 then FPUPIT2 = 'H'&#59 else FPUPIT2='L'&#59<br/>&nbsp&nbsp&nbsp&nbspUPCI_PerfCOC=strip(FPUPIT2) || strip(prefectCOC)&#59<br/>run&#59<br/><br/>/*check the correlation between FPUPI score, and the variable prefectCOC (perfect continuity)*/<br/>proc glm data=VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspclass prefectCOC FPUPIT2&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT2 prefectCOC /tolerance&#59<br/>run&#59quit&#59<br/>proc reg data=VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT prefectCOC / vif tol&#59<br/>run&#59quit&#59<br/>/*VIF is 1.0 < 2.5, and tol = .98 > .4 so no multilinearity concer!*/<br/><br/>/*to test % of patients with >1 UPC, and > 1 UPR*/<br/>%print(data=VZE2)&#59<br/>%freq(data=VZE2, table=prefectCOC)&#59<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset VZE2&#59<br/>&nbsp&nbsp&nbsp&nbspuniquedoc=0&#59<br/>&nbsp&nbsp&nbsp&nbspif upcpf2 = 'na:.:na:.' and upr2='na:.:na:.' then uniquedoc=1&#59<br/>run&#59<br/>%freq(data=test, table=prefectCOC*uniquedoc)&#59<br/>/*<br/>only 5% of the patients having multiple usual PCPs or UPRs in follow up<br/>back to Qais's point, he is wrong. Tt is really not worthy to lower the criteria by allowing multiple PCPs or UPRs<br/>*/<br/><br/><br/>%freq(data=VZE2, table=UPCI_PerfCOC)&#59<br/><br/>%let covariates = &nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&#59<br/><br/>/*Contrast between 3 scenarios*/<br/>proc logistic data=VZE2 descending&#59<br/>&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbsp/*H0=1 0 0, H1=0 1 0, L1=0 0 1 */<br/>&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI, Perfect vs non prefect COC, L1 vs L0\" UPCI_PerfCOC 0 0 1/exp cl&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"High UPCI, Perfect vs non prefect COC, H1 vs H0\" UPCI_PerfCOC -1 1 0 /exp cl&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI but prefect COC vs High UPCI but non-Perfect , L1 vs H0\" UPCI_PerfCOC -1 0 1 /exp cl&#59<br/>run&#59<br/><br/><br/>ods graphics on&#59<br/>ods select ROCAssociation&#59<br/>proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint)&#59<br/>&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI_PerfCOC + covariates' UPCI_PerfCOC &covariates&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates&#59<br/>run&#59<br/>ods select all&#59<br/>ods graphics off&#59<br/><br/>/*.6443 when UPCI cut off = .4 (q1)*/<br/>/*.6450 when UPCI cut off = .57 (median)*/<br/>/*.6436 when UPCI cut off = .75*/<br/><br/>ods graphics on&#59<br/>ods select ROCAssociation&#59<br/>proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint)&#59<br/>&nbsp&nbsp&nbsp&nbspclass prefectCOC (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = prefectCOC &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M1: prefectCOC + covariates' prefectCOC &covariates&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates&#59<br/>run&#59<br/>ods select all&#59<br/>ods graphics off&#59<br/><br/>/*.6429 when UPCI cut off = .4*/<br/>/*.6429 when UPCI cut off = .57 (median)*/<br/>/*.6429 when UPCI cut off = .75*/<br/><br/>ods graphics on&#59<br/>ods select ROCAssociation&#59<br/>proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint)&#59<br/>&nbsp&nbsp&nbsp&nbspclass FPUPIT2 (ref='L') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = FPUPIT2 &covariates /scale=none aggregate&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI + covariates' FPUPIT2 &covariates&#59<br/>&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates&#59<br/>run&#59<br/>ods select all&#59<br/>ods graphics off&#59<br/><br/>/*.6361 when UPCI cut off = .4 (Q1)*/<br/>/*.6368 when UPCI cut off = .57 (median)*/<br/>/*.6345 when UPCI cut off = .75 (Q3)*/<br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-YT3KsR6hTqWnAgpr"}]}],"custparents":[{"idx":"MY80742d70-8ed2-4db2-bcc2-43a689a604dd"}]}]},{"idx":"MY857801ef-fdd2-4b25-91e6-a3963be19a70","name":"Stage2","custparents":[{"idx":"MYc559aba0-1316-4ee3-8e76-48135ed81e4a"}],"children":[{"idx":"MYc63ddcc2-2952-48fd-80cf-ad48cb97eb9b","name":"C-Statistics ROC","custparents":[{"idx":"MY857801ef-fdd2-4b25-91e6-a3963be19a70"},{"idx":"MY1e9980ec-fc56-4af2-abeb-e2a33c16e39b"}],"children":[{"idx":"MYfd35b8e9-f04c-4d9d-84e5-e18718f9cb2f","name":"Question","custparents":[{"idx":"MYc63ddcc2-2952-48fd-80cf-ad48cb97eb9b"}],"NodeDescription":"<p>///t</p><p>[to do]</p><p>What if the covariates should not be in the model after ps matching?</p><p>t///</p>"}]},{"idx":"MYc6aa7bc2-fcb9-4fa6-b85e-e56008e9c9a6","name":"NRI","custparents":[{"idx":"MY857801ef-fdd2-4b25-91e6-a3963be19a70"},{"idx":"MYe73a5faa-4b03-40bb-ae72-7496debcea36"}],"children":[{"idx":"MY20f64d44-95ab-40e9-b033-95bccc9aed04","name":"Qustions","custparents":[{"idx":"MYc6aa7bc2-fcb9-4fa6-b85e-e56008e9c9a6"}],"NodeDescription":"<p>///t</p><p>[to do]</p><p>SAS code? Links</p><p>t///</p>"}]}]}]}]}],"custparents":[{"idx":"MYa5760aa8-99c2-4339-ab56-242bc2f2b815"},{"idx":"MYa5760aa8-99c2-4339-ab56-242bc2f2b815"}]}]}],"custparents":[{"idx":"MYd72297d9-41da-4722-b4bf-717d1f73af6a"}]}]}],"custparents":[{"idx":"MY08ef479c-aeb1-490b-b1c4-1968ff490949"},{"idx":"MYc1e8dd88-4880-426a-b9e6-8f1053d1ccd5"}]}]}],"custparents":[{"idx":"CodeTask-gbhiLx1DedOwRO4o"},{"idx":"MY43199211-8a06-4868-8ea4-2ec2224296f9"},{"idx":"MY56afa18c-d0ab-493f-8048-5fc8787c4aff"}]}]}]}]}]}]}],"custparents":[{"idx":"MY743f7b37-cb10-402c-89fe-87ac0642a4f9"}]}]}],"custparents":[{"idx":"MY71048491-96f8-471e-b678-983f4449e08d"},{"idx":"MYc1e8dd88-4880-426a-b9e6-8f1053d1ccd5"}]}]}],"custparents":[{"idx":"CodeTask-rXaW7KfQgzQfcx1V"},{"idx":"MYf7dbf2a3-7c4e-474f-ade1-6b83bb5d4bc2"},{"idx":"MY663bccde-9197-4b2e-b349-c136f9aec5e1"},{"idx":"MY97a9e608-e756-4de1-8e4c-18f1e868c43f"},{"idx":"MY1b73a2db-f7f3-4996-bdec-ff32b507d827"}]}]},{"idx":"MY97a9e608-e756-4de1-8e4c-18f1e868c43f","name":"_A6_DINDX","custparents":[{"idx":"MY043c6d28-3e77-4035-8f61-8ea6497d8f23"}]}]},{"idx":"MY84805d1e-a9a8-4034-ad9d-bb995777ec44","name":"Existing analyses","custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"}],"children":[{"idx":"CodeTask-pzOsKgUBMFRexTrx","name":"ZZA NFFS Anlayses","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*ZZA<br/>*/<br/><br/>/*All statin new users*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxa.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxa.sas7bdat)<br/>)&#59<br/><br/>/*zza1 patient-entrydate*/<br/>%distinct(data=vxa, target=zza1, vars=%str(key_hsn, entryDate))&#59<br/><br/>/*ZZA2. For statin new users (zza1), find statin prescribers within the followup period (365 days since the entryDate)*/<br/>/*ZZA2a. Get all statin claims within follow up*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxf.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxf.sas7bdat)<br/>)&#59<br/>/*%print(data=vxf)&#59*/<br/>/*ZZA2b. get a list of entryDate specific doc ID, excluding those of unknown ids or slush numbers*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vxf,<br/>&nbsp&nbsp&nbsp&nbspt2=zza1, <br/>&nbsp&nbsp&nbsp&nbsptarget=zza2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_prscr_num as key_doc_num, t2.entryDate), <br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(rx_ddddd between t2.Entrydate and t2.EntryDate +364 and docSlushCode = 'N')<br/>)&#59<br/><br/>/*ZZA3. For statin new users (zza1), find physician service providers within the followup period (365 days since the entryDate)*/<br/>/*ZZA3a. Get all service claims of the new statin users within follow up*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=zza1, <br/>&nbsp&nbsp&nbsp&nbsptarget=zza3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t2.entryDate), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(dos between t2.Entrydate and t2.EntryDate +364 and docSlushCode = 'N')<br/>)&#59<br/><br/>/*ZZA4. combine ZZA2 and ZZA3 (docs as prescribers/care providers during follow up , specified by entry date)*/<br/>data ZZA4a&#59<br/>&nbsp&nbsp&nbsp&nbspset zza2 &#59<br/>&nbsp&nbsp&nbsp&nbspRole = 'prescriber'&#59 <br/>run&#59<br/>data ZZA4b&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZa3&#59<br/>&nbsp&nbsp&nbsp&nbspRole='careprovider'&#59<br/>run&#59<br/>data ZZA4&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZA4a ZZA4b&#59<br/>&nbsp&nbsp&nbsp&nbspcnt=1&#59<br/>run&#59<br/>%DISTINCT(data=ZZA4, target=ZZA5, vars=%str(key_doc_num, entrydate, Role, cnt))&#59<br/>%transpose(data=ZZA5, target=ZZA6, rowhead=key_doc_num entrydate, colhead=role, contents=cnt)&#59<br/>data localt.ZZA&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZA6&#59<br/>&nbsp&nbsp&nbsp&nbspformat Role $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif prescriber=1 and careprovid=1 then Role='both'&#59<br/>&nbsp&nbsp&nbsp&nbspif prescriber=1 and careprovid=. then Role='prescriber'&#59<br/>&nbsp&nbsp&nbsp&nbspif prescriber=. and careprovid=1 then Role='careprovider'&#59<br/>&nbsp&nbsp&nbsp&nbspif prescriber=. and careprovid=. then Role='none'&#59<br/>&nbsp&nbsp&nbsp&nbspdrop prescriber careprovid&#59<br/>run&#59<br/>%freq(data=localt.zza, table=Role)&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-xSZTFg8HW5n1nVcn","name":"H_FFS Doc","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*H For the most freq prescriber, how many are fee-for-service(ffs), how many non-ffs*/<br/>/*Those does not have service claims within the follow up*/<br/><br/>/*%VbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localdataPath.\\master_msb.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)*/<br/>/*)&#59*/<br/><br/>/*Get the prescriber by index date*/<br/>%print(data=localt.g)&#59<br/>%distinct(data=localt.G, target=h1, vars=%str(StatinDoc_FW365, dqdate, monotonic() as ID), filters=%str(statinDoc_Fw365 ne \"\"))&#59<br/><br/>/*for each doc-index, get the MSB claims of the same doc between 1 year before and after the index*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=h1,<br/>&nbsp&nbsp&nbsp&nbspt2=master_msb,<br/>&nbsp&nbsp&nbsp&nbsptarget=h2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(*),<br/>&nbsp&nbsp&nbsp&nbspjtype=left, <br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.StatinDoc_Fw365 = t2.key_doc_num),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.dos between t1.dqdate -365 and t1.dqdate +364)<br/>)&#59<br/><br/>/*%vbsZip(*/<br/>/*&nbsp&nbsp&nbsp&nbsptgtDir=%str(&localTargetPath), */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=h2.zip, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=h2.sas7bdat, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=*/<br/>/*)&#59*/<br/><br/>/*%VbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\h2.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(h2.sas7bdat)*/<br/>/*)&#59*/<br/><br/>/*count the number of claims for each specific doc-index case (# of claims within 2 years around index)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=H2,<br/>&nbsp&nbsp&nbsp&nbsptarget=h3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, count(t1.StatinDoc_Fw365) as N_DocVisits),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate)<br/>)&#59<br/><br/>/*distribution of N_DocVisits by each doc-index case*/<br/>proc univariate data=h3&#59<br/>&nbsp&nbsp&nbsp&nbsphistogram N_DocVisits /normal&#59<br/>run&#59<br/><br/>data h4&#59<br/>&nbsp&nbsp&nbsp&nbspset h3&#59<br/>&nbsp&nbsp&nbsp&nbsprename StatinDoc_Fw365=key_hsn&#59<br/>run&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=h4,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=N_DocVisits,<br/>&nbsp&nbsp&nbsp&nbsptheStats=min max mean std median p25 p50 p75 qrange,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*From H2, get the number of doc visits by mode (1 a FFS, others as NFFS)<br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=H2,<br/>&nbsp&nbsp&nbsp&nbsptarget=h3a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, t1.Mode, count(t1.StatinDoc_Fw365) as N_DocClaims),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, t1.Mode),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, t1.Mode)<br/>)&#59<br/><br/>/*from above, recode the Modes, mode =1 as FFS, others as NFFS*/<br/>data H3b&#59<br/>&nbsp&nbsp&nbsp&nbspset H3a&#59<br/>&nbsp&nbsp&nbsp&nbspif Mode = \"1\" then FFS='FFS1'&#59 else FFS='FFS0'&#59<br/>run&#59<br/><br/>/*sum the doc claims by FFS*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=H3b,<br/>&nbsp&nbsp&nbsp&nbsptarget=h3c,<br/>&nbsp&nbsp&nbsp&nbspvars=%str( t1.StatinDoc_Fw365, t1.FFS, sum(t1.N_DocClaims) as N_DocClaims, count(ID) as Cases),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str( t1.StatinDoc_Fw365,t1.FFS),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str( t1.StatinDoc_Fw365, t1.FFS)<br/>)&#59<br/>/*N_DocClaims / Cases to have mean docClaims */<br/>data H3d&#59<br/>&nbsp&nbsp&nbsp&nbspset h3c&#59<br/>&nbsp&nbsp&nbsp&nbspMean_DocClaims = int(N_DocClaims / Cases)&#59<br/>&nbsp&nbsp&nbsp&nbspdrop N_DocClaims Cases&#59<br/>run&#59<br/>/*transpose to put FFS 1 and 0 at the same row*/<br/>%transpose(data=h3d, target=h3e, RowHead=StatinDoc_Fw365, ColHead=ffs, Contents=Mean_DocClaims, keepAllCol=)&#59<br/>data h3f&#59<br/>&nbsp&nbsp&nbsp&nbspset h3e&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs0=. then ffs0=0&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs1=. then ffs1=0&#59<br/>&nbsp&nbsp&nbsp&nbspFFSPCT = int (FFS1/sum(FFS0, FFS1) *100)&#59<br/>run&#59<br/>/*have a histogram of % FFS for each doc*/<br/>proc univariate data=h3f&#59<br/>&nbsp&nbsp&nbsp&nbsphistogram FFSPCT /normal&#59<br/>&nbsp&nbsp&nbsp&nbspods output histogramBins = H3g&#59<br/>run&#59<br/>/*seems that 60% having 99% of their services as FFS. 27% having 3% or less services as FFS. Others are in between<br/>&nbsp&nbsp&nbsp&nbspSeems a good way to identify the FFS physicians<br/>*/<br/><br/><br/>/*# docs and pct of 'AAAA' (the fw365 doc)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.g,<br/>&nbsp&nbsp&nbsp&nbsptarget=h15a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(doc_fw365, count(Key_hsn) as NPt ),<br/>&nbsp&nbsp&nbsp&nbspgroupby=doc_fw365,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(doc_fw365 ne \"\" and docPatterns='AAAA')<br/>)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.g,<br/>&nbsp&nbsp&nbsp&nbsptarget=h15b,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(doc_fw365, count(Key_hsn) as NPt ),<br/>&nbsp&nbsp&nbsp&nbspgroupby=doc_fw365,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(doc_fw365 ne \"\" and adherence=1)<br/>)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.g,<br/>&nbsp&nbsp&nbsp&nbsptarget=h16,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(doc_fw365, count(key_hsn) as TPt ),<br/>&nbsp&nbsp&nbsp&nbspgroupby=doc_fw365,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(doc_fw365 ne \"\"  )<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=h15a,<br/>&nbsp&nbsp&nbsp&nbspt2=h16,<br/>&nbsp&nbsp&nbsp&nbsptarget=h17,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.doc_fw365, t1.Npt, t2.TPt,  t1.Npt / t2.TPt *100 format 8.2 as AAAAPCT ),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=doc_fw365<br/>)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=h17,<br/>&nbsp&nbsp&nbsp&nbspt2=h15b,<br/>&nbsp&nbsp&nbsp&nbsptarget=h18,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.Npt as Npt_adh,  t2.Npt / t1.TPt *100 format 8.2 as AdhPCT ),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=doc_fw365<br/>)&#59<br/><br/><br/><br/>proc univariate data=h18&#59<br/>&nbsp&nbsp&nbsp&nbsphistogram AdhPCT AAAAPCT/normal&#59<br/>run&#59<br/>proc univariate data=h17&#59<br/>&nbsp&nbsp&nbsp&nbsphistogram AdhPCT /normal&#59<br/>run&#59<br/><br/>/*the % of AAAA patients are quite skewed (there are a bunch of Drs having higher than average % of AAAA patients)*/<br/>/*poisson? what predicts AAAA patients among doctors?*/<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-pzOsKgUBMFRexTrx"}]},{"idx":"EGTask-mNdzSqhm2Bn1Jy5q","name":"Copy Statin Prscr to Remote","type":"TASK","children":[{"idx":"CodeTask-Aci5BDMMgR9LhbzQ","name":"ZZB MSB Claims Remote","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*<br/>ZZB MSB claims of docs in ZZA<br/>*/<br/>data _null_&#59run&#59<br/>%nobs(data=remotes.zza)&#59<br/>%distinct(data=remotes.zza, target=zzb1, vars=key_doc_num)&#59<br/><br/>/*create an empty dataset*/<br/><br/>%macro getMSB(theYear=, theStart=, theEnd=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local theYear theStart theEnd debug&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%Extract_MSB(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_MSB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=getMSB_tmp1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file= , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdiagcode=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdostart=&theStart, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdosend=&theEnd, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfscode=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getMSB_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zzb1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(getMSB_tmp2 (rename =(dos_1 = DOS))), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theYear = 2009 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata msbzzb&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getMSB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata msbzzb&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset msbzzb getMSB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getMSB_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getMSB&#59<br/>%getMSB(theYear=2009, theStart='01jan2009'd, theEnd='31dec2017'd, debug=1)&#59<br/><br/>%UnixZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbspdata=msbzzb, <br/>&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsptarget=msbzzb.zip, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-SF7U4hFBpxtTrllt","name":"Copy MSBZips from Remote","type":"TASK","children":[{"idx":"CodeTask-kpvpcTvUPzprxvZV","name":"ZZC GPs","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*ZZC*/<br/><br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\msbzzb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(msbzzb.sas7bdat)<br/>)&#59<br/>/*%print(data=msbzzb)&#59*/<br/><br/>/*ZZC1, get a unique list of entrydate specific docs by SPEC from the MSB claims<br/>&nbsp&nbsp&nbsp&nbspwithin 2 year before and 1 year after the entryDate*/<br/>/*the following is very inefficient, so prepare a compact data set first*/<br/>%distinct(data=msbzzb, target=ZZC0, vars=%str(key_doc_num, dos, SPEC))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*how many doctors acting as GP, NGP, missing on the same date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzc0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat Doctype $3.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC in: (\"B\") then DocType = \"GP\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC =\"\" then DocType = \"NN\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC not in:(\"B\") and SPEC ne \"\" then DocType=\"NGP\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcnt=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=test1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.dos, sum(Doctype=\"GP\") as GP, sum(Doctype=\"NN\") as NN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(Doctype=\"NGP\") as NGP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, dos)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*check the patterns*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset test2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif GP =0 then p1=\"\"&#59else P1=\"G\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NGP=0 then p2=\"\"&#59else p2=\"N\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NN=0 then p3=\"\"&#59else p3=\"_\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocPattern=cats(p1,p2,p3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop p1 p2 p3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test3, table=docPattern)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*it is quite rare that a doc was acting as both GP and NGP on the same date*/<br/><br/><br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzc0,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.ZZA,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzc1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t2.entryDate, SPEC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsubstr(strip(SPEC), 1,1)=\"B\", 1, 2   <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp) as order<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num,entryDate, order),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate - 365*2 and t2.entryDate+365-1)<br/>)&#59<br/>/*%freq(data=zzc1, table=spec)&#59*/<br/>/*Note: there are records missing SPEC values*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Aummarized by specific study periods (2 years before and 1 year after entryDate), how is the doc pattern?<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzc1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat Doctype $3.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC in: (\"B\") then DocType = \"GP\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC =\"\" then DocType = \"NN\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC not in:(\"B\") and SPEC ne \"\" then DocType=\"NGP\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcnt=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=test1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, sum(Doctype=\"GP\") as GP, sum(Doctype=\"NN\") as NN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(Doctype=\"NGP\") as NGP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, entryDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*check the patterns*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset test2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif GP =0 then p1=\"\"&#59else P1=\"G\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NGP=0 then p2=\"\"&#59else p2=\"N\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NN=0 then p3=\"\"&#59else p3=\"_\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocPattern=cats(p1,p2,p3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop p1 p2 p3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test3, table=docPattern)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Again, it is quite rare that a doc was acting as both GP and NGP on the same date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/><br/>/*It seems OK to be more restrict, as there is not a lot of hybrid docs to lose.<br/>The decision is to indicate docs as NGP if there is at lease 1 claim as NGP<br/>That way, the remaining docs only have GP claims. These docs are pure GPs.<br/>*/<br/><br/>/*<br/>ZZC2<br/>The goal is to identify GPs from docs in zzc1<br/>*/<br/>/*zzc2a. for entryDate-specific Docs in localt.ZZA, if  they are in ZZC1 as missing SPEC, or NGPs,  they are determined as NGPs<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.ZZA,<br/>&nbsp&nbsp&nbsp&nbspt2=ZZC1, <br/>&nbsp&nbsp&nbsp&nbsptarget=ZZC2a,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'ngp'  as docType length=3, 'msb' as docSRC), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num EntryDate,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsubstr(strip(t2.spec), 1,1) ne \"B\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor strip(t2.SPEC) = \"\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>/*zzc2b. entryDate-specific Docs from localt.ZZA, in ZZC1 as GPs, and not in ZZC2a are GPs.<br/>&nbsp&nbsp&nbsp&nbsp[_Note] These docs only have pure GP claims in the database within the study period<br/>cat() similar to ||<br/>catt() removing the trailing spaces<br/>cats() removing both heading and trailing spaces<br/>catx() insert a delimiter between concatenated values<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.ZZA,<br/>&nbsp&nbsp&nbsp&nbspt2=ZZC1, <br/>&nbsp&nbsp&nbsp&nbsptarget=ZZC2b,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'gp'  as docType length=3, 'msb' as docSRC), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num EntryDate,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsubstr(strip(t2.spec), 1,1) = \"B\" <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcatx(\",\", t1.key_doc_num, t1.EntryDate) not in (select catx(\",\", key_doc_num, EntryDate) from ZZC2a)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The docs in ZZC2b should only act as GPs within the interested period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Test*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zzc1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zzc2b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test31,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t2.key_doc_num, t2.entryDate, t1.SPEC),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test31, table=spec)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for these docs, there should be no claims as NGPs within the study period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zzc0,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zzc2b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test32,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, SPEC),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate - 365*2 and t2.entryDate+365-1)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test32, table=spec)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*confirmed*/<br/><br/><br/>/*zzc3. next is to check doctors not appeared in the MSB claims<br/>... but it is not very useful. <br/>Althout there are docs not having msb claims, but are indeed GPs, how to estimate their missing claims? no clue.<br/>It is valuable to check the proportion of doctors identified/not identified though<br/>*/<br/>data _null_&#59run&#59<br/>/*ZZA contains all docs as statin prescribers, or service providers to the cohort member within the follow up period*/<br/>%print(data=localt.zza)&#59<br/>/*From ZZA, those identified as GPs*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.zza,<br/>&nbsp&nbsp&nbsp&nbspt2=ZZC2b,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZC3a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'GP' as DocType length=3),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br/>)&#59<br/>/*From ZZA, those identified as NGPs*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.zza,<br/>&nbsp&nbsp&nbsp&nbspt2=ZZC2a,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZC3b,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'NGP'  as DocType length=3),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br/>)&#59<br/>/*From ZZA, those docs can be found in MSB claims (ZZC0), but does not have MSB claims within 2 years before, <br/>and 1 year after the entryDate*/<br/>/*From ZZA, docs in ZZC0*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzc0,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zza,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzc3c1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzc3c1,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zza,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzc3c2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t2.key_doc_num, t2.entryDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br/>)&#59<br/>%beep&#59<br/>/*from above, those not in ZZC3a, nor in ZZC3b (not identified as a GP/NGP within the period, i.e., not having any claims <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwithin the period)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzc3c2,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzc3c3,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate), <br/>&nbsp&nbsp&nbsp&nbspfilters=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcatx(\",\", t1.key_doc_num, t1.EntryDate) not in (select catx(\",\", key_doc_num, EntryDate) from ZZC3a)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzc3c3,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzc3c,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'NO' as DocType), <br/>&nbsp&nbsp&nbsp&nbspfilters=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcatx(\",\", t1.key_doc_num, t1.EntryDate) not in (select catx(\",\", key_doc_num, EntryDate) from ZZC3b)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>/*The above three (ZZC3a, 3b, 3c) are docs that can be found in MSB claims. 3a and 3b are GP/NGPs, 3c are those<br/>&nbsp&nbsp&nbsp&nbsphaving physician service claims out of the specified period(2 years before and 1 year after the entryDate), but not having<br/>&nbsp&nbsp&nbsp&nbspphysician service claims within the specific period*/<br/>/*The rest in ZZA are those not have any physician service claims*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.zza,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzc3d,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, '__' as DocType length=3), <br/>&nbsp&nbsp&nbsp&nbspfilters=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_doc_num not in (select key_doc_num from ZZC0)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>/*ZZC4, assembly ZZC3a-d. by doc type*/<br/>data ZZC4&#59<br/>&nbsp&nbsp&nbsp&nbspformat DocType $3.&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZC3a ZZC3b ZZC3c ZZC3d&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=ZZC4,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zza,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=localT.ZZC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.Role),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br/>)&#59<br/>%freq(data=localt.ZZC, table=Role* doctype)&#59<br/>%nobs(data=localt.ZZA)&#59<br/><br/>/*the table shows that it is very rare to have doc-entryDate cases who did not have any msb claims within the specified period<br/>Conclusion: the current method is good to include most of the docs (either a statin prescriber, or a service provider of for  <br/>&nbsp&nbsp&nbsp&nbspcohort members during follow up<br/>*/<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-ViasKREJ44R4uJVe","name":"ZZD FFS NFFS","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*ZZD. For msbzzb, get MSB claims of GPs in ZZC, count % of claims as FFS/NFFS in the specified period (2 years prior and 1 year after the EntryDate */<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\msbzzb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(msbzzb.sas7bdat)<br/>)&#59<br/>/*note: do not use such as format $4. as paymode. Won't work. will have a length of 200!*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=msbzzb,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZD0,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, key_doc_num, dos,  ifc(t1.mode='1', 'FFS', 'NFFS' ) as PayMode length=4),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(num_srv ne 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLOS NOT in ('B','2','K','9')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMODE ne 'Z'<br/>&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*Note, the FFS/NFFS is based all doc's services to ALL patients, not only to the cohort members. <br/>&nbsp&nbsp&nbsp&nbspIf it were to the cohort members, many will have 0 visits, and FFS/NFFS cannot be determined.<br/>&nbsp&nbsp&nbsp&nbspIt is more appropriate to count visits to ALL patients, but within the 2 year period around the entry dates. <br/>&nbsp&nbsp&nbsp&nbspe.g., the entry date is 2002-1-1, then the doc's pay type is determined by the % of FFS of this doc to all his patients<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspbetween 2001-1-1 and 2003-12-31.<br/>*/<br/>/*ZZD1a, unique GPs from ZZC*/<br/>%distinct(data=localt.zzc, target=zzd1a, vars=key_doc_num, filters=%str(DocType=\"GP\"))&#59<br/><br/>/*zzd1b, from ZZD0, encounters of gps in ZZD1a*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzd0,<br/>&nbsp&nbsp&nbsp&nbspt2=zzd1a,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzd1b,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br/>)&#59<br/><br/>%sort(data=zzd1b, sorter=key_hsn dos key_doc_num PayMode)&#59<br/><br/>/*ZZD1c, the above may have same visits with diff pay type. The following is to keep the last one, which gives priority to NFFS service*/<br/>Data ZZd1c&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZD1b&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num PayMode&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_doc_num&#59<br/>run&#59<br/><br/><br/>/*ZZD1d From above, select claims between entrydate -365 and entrydate +364*/<br/>/*zzd1d, statin users and entrydate*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxa.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxa.sas7bdat)<br/>)&#59<br/>%distinct(data=vxa, target=zzd1d, vars=entryDate)&#59<br/><br/>/*zzd2, MSB visits within 1 year before and 1 year after entryDate<br/>&nbsp&nbsp&nbsp&nbspi.e., to have visits in each specific period defined by entrydate and doc<br/>*/<br/><br/>/*%distinct(data=zzd1c, target=test, vars=%str(year(dos) as year))&#59 */<br/>/*2009-2017*/<br/>%macro makeZZD2a&#59<br/>&nbsp&nbsp&nbsp&nbsp%local i j k&#59<br/>&nbsp&nbsp&nbsp&nbsp%let k=0&#59<br/>/*&nbsp&nbsp&nbsp&nbsp%do i = 2012 %to 2012&#59 */<br/>&nbsp&nbsp&nbsp&nbsp%do i = 2010 %to 2017&#59 <br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 0 %to 0 %by 3&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 0 %to 9 %by 3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makeZZD2a_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzd1c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere year(dos) = &i and<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmonth(dos) between %eval(&j +1) and %eval(&j + 3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59 <br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makeZZD2a_tmp2&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzd1d&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif %eval(&i-1) le year(EntryDate) le %eval(&i+1)&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=makeZZD2a_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zzd1d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=makeZZD2a_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t2.entryDate, t1.key_doc_num, t1.PayMode,t1.dos),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=cross,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dos between t2.entrydate -365 and t2.entryDate +365-1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=makeZZD2a_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=makeZZD2a_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(entryDate, key_doc_num, PayMode, count(t1.dos) as N_Visits),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(entryDate, key_doc_num, PayMode)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &k=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ZZD2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset makeZZD2a_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ZZD2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ZZD2a makeZZD2a_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let k=%eval(&k+1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend&#59<br/>%makeZZD2a&#59<br/><br/>/* the ZZD2a need to be further grouped and summed. Same EntryDate-doc-paymode may appear multiple times*/<br/>/*as the msb records were obtained by 3-months.  */<br/>data ZZD2a2&#59set ZZD2a&#59run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=ZZD2a2,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZD2a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(entryDate, key_doc_num, PayMode, sum(N_Visits) as N_Visits),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(entryDate, key_doc_num, PayMode)<br/>)&#59<br/><br/>/*the following will overwirte the existing zip! be careful*/<br/>/*%vbsZip(*/<br/>/*&nbsp&nbsp&nbsp&nbsptgtDir=%str(&localTargetPath), */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=zzd2a.zip, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=zzd2a.sas7bdat, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=*/<br/>/*)&#59*/<br/><br/><br/><br/>/*%print(data=ZZd2)&#59*/<br/><br/>/*transpose and have N_visits by NFFS and FFS payment type in columns*/<br/>%transpose(data=zzd2a, target=zzd2b, rowhead=key_doc_num entryDate, colhead=PayMode, contents=n_visits)&#59<br/><br/>/*<br/>&nbsp&nbsp&nbsp&nbspif the GP in ZZC has an FFS_CAT of (0-2), make it NFFS<br/>&nbsp&nbsp&nbsp&nbspif the GP in ZZC has an FFS_CAT of 8-10, make it FFS<br/>&nbsp&nbsp&nbsp&nbspif the gp in zzc has an FFS_CAT of 3-7, make it unk(unknown)<br/>*/<br/>data ZZD2&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZD2b&#59<br/>&nbsp&nbsp&nbsp&nbspif NFFS=. then NFFS=0&#59<br/>&nbsp&nbsp&nbsp&nbspif FFS=. then FFS=0&#59<br/>&nbsp&nbsp&nbsp&nbspFFSPCT=INT(FFS / sum(NFFS, FFS)*100 )&#59<br/>&nbsp&nbsp&nbsp&nbspFFS_CAT=int(FFSPCT / 10)&#59<br/>&nbsp&nbsp&nbsp&nbspformat PayType $4.&#59<br/>&nbsp&nbsp&nbsp&nbspif FFS_CAT LE 2 then PayType='NFFS'&#59<br/>&nbsp&nbsp&nbsp&nbspif FFS_CAT GE 8 then PayType='FFS'&#59<br/>&nbsp&nbsp&nbsp&nbspif 2 lt FFS_CAT LT 8 then PayType='UNKW'&#59<br/>run&#59<br/><br/>/*%freq(data=zzd2, table=FFS_CAT*PayType)&#59<br/>It shows that only a small proportion of patients whose doc is of UNKW type*/<br/><br/>/*ZZD3 link pay type to ZZC*/<br/>/*link to zzc*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.ZZC,<br/>&nbsp&nbsp&nbsp&nbspt2=ZZD2,<br/>&nbsp&nbsp&nbsp&nbsptarget=localt.ZZD,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PayType=\"\", \"NMSB\", t2.PayType) as PayType length=4, T2.FFS_CAT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.DocType=\"GP\")<br/>)&#59<br/>%freq(data=localt.zzd, table=paytype*role)&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-kpt49up7VUF9xXPg","name":"ZZE Missing MSB Claims for RX","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*ZZE This program is to determine the missing service claims.<br/>&nbsp&nbsp&nbsp&nbspQuestion: why using the MSBZZb file (claims of all doc's patients, not only those to cohort patients)<br/>&nbsp&nbsp&nbsp&nbspwhy not using the master_msb file (claims of the cohort patients, which is way smaller)<br/>*/<br/><br/>data _null_&#59run&#59<br/><br/>/*ZZE1. Get all statin claims of prescribers in ZZD to cohort members within the follow up period*/<br/>/*ZZE1a. Get distinct statin dispensation dates within follow up*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxf.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxf.sas7bdat)<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vxf,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZE1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t2.key_doc_num, t1.rx_ddddd),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_prscr_num = t2.key_doc_num),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t1.entrydate and t1.entrydate + 364)<br/>)&#59<br/><br/>/*ZZE2. Determin whether there is a visit claim within 30 days prior to the RxDate*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/><br/>/*from zzd, get a distinct list of docs*/<br/>%distinct(data=localt.zzd, target=zzE2a1, vars=key_doc_num)&#59<br/>/*zze2a, get distinct visits for patients in zzd*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=zzE2a1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZE2a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.key_doc_num, t1.dos),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br/>)&#59<br/>/*zze2b, join zze1 and zze2a,  determine whether there is a visit claim within 30 60 90 180 days prior to the Date of statin dispensation*/<br/>%macro analysisZZE&#59<br/>&nbsp&nbsp&nbsp&nbsp%local lookbackClaims&#59<br/>&nbsp&nbsp&nbsp&nbsp%do lookbackClaims = 30 %to 180 %by 30&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &lookbackClaims = 120 or &lookbackClaims = 150 %then %goto SkipToNext&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ZZE1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zze2a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=zze2b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t1.key_doc_num, t1.rx_ddddd, ifc(t2.key_hsn=\"\", '_1', '_0') as MissVisitClaim),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t1.key_doc_num = t2.key_doc_num and t2.dos between t1.rx_ddddd -&lookbackClaims and t1.rx_ddddd)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=zze2b, table=MissVisitClaim)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%print(data = localt.zzd)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*link the hasvisitclaim records (ZZE2b) with entryDate-specific doc paytype (ZZD)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso as to have the prescriber's pay type on the claim date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif the specific entrydate-doc combination in zze2b cannot be found in zzd, indicate the PayType is 'UNKW' (unknown)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in ZZE2, there are docs who cannot be identified for PayTYpe on the specific entryDate (i.e., there were no <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspphysician service claims within 1 year before and 1 year after the entryDate). These could be NFFS doctors,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBut these could also be FFS doctors, who knows. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zze2b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=zze2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifc(t2.Role=\"\", \"prescriber\", t2.role) as Role length=20 , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifc(t2.PayType=\"\", \"UNKW\", t2.PayType) as PayType length=20, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.FFS_CAT),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=entrydate key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'NMSB')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=zze2, table=Role * PayType)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data =zze2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=zze2b)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=zze2)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*To this step, a logistic model can be applied to estimate the impact of paytype to the outcome of missing visit claims.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs the records are repeated by patient and doc, the two vars can be used for repeat terms in GEE models<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(patient nested in doc, 2 levels)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"GEE, binary of missing service claim, repeated by doc nested patient levels\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=zze2 desc &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass PayType(ref='FFS') key_doc_num key_hsn /param=reference &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel MissVisitClaim = PayType /type3 dist=bin link=logit covb&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" PayType 1 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"UNKW vs FFS\" PayType 0 1/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num ( key_hsn) /type=exch printmle ecovb&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*repeated or strata? levels or paired?*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrata key_doc_num key_hsn / missing&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Next, the missing cases are summerized by doctor. */<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*zze3, summary # of Rx, by doc, PayType, HasVisitClaim */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zze2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=zze3a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payType, t1.MissVisitClaim, count(Rx_ddddd) as NRx),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.key_doc_num, t1.payType,  t1.MissVisitClaim)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%transpose(data=zze3a, target=zze3b, rowhead = key_doc_num paytype , colhead = MissVisitClaim, contents=NRX)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro GEE_1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local MissingPCTCutOff&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do MissingPCTCutOff=1 %to 10&#59 /*missing xx% of claims*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata zze3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zze3b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif _1=. then _1=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif _0=. then _0=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptotal = sum(_1, _0)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMiss_PCT= int(_1/total*100)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMiss_CAT = int(Miss_PCT/10)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Miss_CAT ge &MissingPCTCutOff then Miss_Bin = 1&#59 else  Miss_Bin=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*proc freq data=zze3&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsptable Miss_Bin * paytype /chisq norow nocol nopct&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*run&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The following model is to estimate the OR of Missing 80% of the service claims of a patient <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby a doc of NFFS type vs FFS type<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"Binary of doc missing y% service claims , MissingPCTCutOff=&MissingPCTCutOff\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=zze3 desc &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass PayType(ref='FFS') key_doc_num  /param=ref &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Miss_Bin = PayType /type3 dist=bin link=logit covb&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" PayType 1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"UNKW vs FFS\" PayType  0 1/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num /type=exch printmle&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*It seems that the OR is not stable. It ranges fro 3 to 0.5 when the missing PCT cut off changes from 10% to 100%. */<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &MissingPCTCutOff=10 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*alternatively, a poisson model to estimate the rate of missing service claims<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe rate is estimated as # of missing claims out of the total claims<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ZZe4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zze3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_total = log(total)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*proc univariate data=zze4&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsphistogram Miss_PCT&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*run&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptitle \"Poisson model,MissingPCTCutOff=&MissingPCTCutOff \"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=zze4  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass PayType (ref='FFS') key_doc_num  /param=ref  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel _1 = PayType /type3 dist=negbin  offset=log_total&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" PayType 1 0/exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"UNKW vs FFS\" PayType 0 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num /type=exch modelse printmle&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend GEE_1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GEE_1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*If checking the rate of missing claims at doc level (summarizing all missing phycisian service cases out of all statin Rx), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRate of missing service claim are 1.5 times higher among NFFS vs FFS &nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>%SkipToNext:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*end of loop for lookbackclaim days*/<br/>%mend analysisZZE&#59<br/>%analysisZZE&#59<br/>/*alternatively, at patient level, check the rate of missing service claims by patient. <br/>&nbsp&nbsp&nbsp&nbspSee whether it can be determined by tpe of patient's usual prescriber(s): i.e., FFS/NFFS/UNKW/Mixed<br/>&nbsp&nbsp&nbsp&nbspBut... what is the point of doing that?<br/>*/<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-47QaLlwY1h7Q44wY","name":"ZZF OR of being UPCPF FFS vs NFFS","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*ZZF, <br/> &nbsp&nbsp&nbsp&nbspThis progam is to test the hypothesis:<br/>&nbsp&nbsp&nbsp&nbspNFFS doctors are less likely to be the cohort member's usual CARE PROVIDER during follow up.  &nbsp&nbsp&nbsp&nbsp<br/>*/<br/><br/>/*msb claim docs of the cohort members during follow up*/<br/>/*msb claims*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/><br/>/*cohort memebers*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)<br/>)&#59<br/><br/>/*distinct docs of msb claims of cohort memebers within follow up<br/>&nbsp&nbsp&nbsp&nbspthese claims including doctors identified in zzb (as GPs by FFS/NFFS type)<br/>&nbsp&nbsp&nbsp&nbspalso include doctors not identified in zzb <br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=vzc,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzf1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.entryDate, t1.key_doc_num),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn, <br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entrydate and t2.entrydate +364)<br/>)&#59<br/>/*%print(data=vzc)&#59*/<br/>/*%print(data=localt.zzd)&#59*/<br/>/*From above, determine whether a FFS/NFFS doc is identified*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzf1,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzf2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t1.key_doc_num, t2.paytype),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br/>)&#59<br/><br/>/*patients and their UGPFs (usual GP during follow up)*/<br/>data ZZF3&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59format upcpfdocid $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPF=1&#59<br/>&nbsp&nbsp&nbsp&nbsparray upcpfs upcpf:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(upcpfs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspupcpfdocid= scan(upcpfs(i),1,\":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif upcpfdocid ne 'na' then output&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn entrydate upcpfdocid UGPF&#59<br/>run&#59<br/><br/><br/>/*link zzf3 to zzf2, check if the very doc in zzf2 is identified as the usual provider*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzf2,<br/>&nbsp&nbsp&nbsp&nbspt2=zzf3,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzf4,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.ugpf=., 0, 1) as UGPF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t2.upcpfdocid = t1.key_doc_num)<br/>)&#59<br/><br/>/*what is this? there is a cross over here<br/>&nbsp&nbsp&nbsp&nbsppatient a may see doc 1 and 2<br/>&nbsp&nbsp&nbsp&nbsppatient b may also see doc 1 and 2<br/>&nbsp&nbsp&nbsp&nbsp...<br/>*/<br/>proc genmod data=zzf4 desc&#59<br/>&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') key_doc_num  key_hsn /param=reference &#59<br/>&nbsp&nbsp&nbsp&nbspmodel UGPF = paytype  /link=logit dist=bin type3&#59<br/>&nbsp&nbsp&nbsp&nbsprepeated subject= key_doc_num (key_hsn)  /type=exch&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp &#59<br/>run&#59<br/><br/>/*It makes more sense to count the number of patients by doc<br/>&nbsp&nbsp&nbsp&nbspfor number of patients being UGPF, and for total number of patients<br/>*/<br/>/*%print(data=zzf4)&#59*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzf4,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzf5,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payType,  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(UGPF) as N_UGPF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, payType),<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num, payType)<br/>)&#59<br/>/*for docs acting both as a FFS and a NFFS for diff time periods, */<br/>%transpose(data=ZZF5, target=ZZF6a, rowhead=key_doc_num, colhead=paytype, contents=total)&#59<br/>data ZZF7a&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZF6a&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_'&#59<br/>&nbsp&nbsp&nbsp&nbspTotal =sum(nffs, ffs)&#59<br/>run&#59<br/>%freq(data=zzf7a, table=PayClass)&#59<br/>%transpose(data=ZZF5, target=ZZF6b, rowhead=key_doc_num, colhead=paytype, contents=N_UGPF)&#59<br/>data ZZF7b&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZF6b&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_'&#59<br/>&nbsp&nbsp&nbsp&nbspN_UGPF =sum(nffs, ffs)&#59<br/>run&#59<br/>%freq(data=zzf7b, table=PayClass)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzf7a,<br/>&nbsp&nbsp&nbsp&nbspt2=zzf7b,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzf7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payclass, t2.N_UGPF, t1.Total),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num payclass<br/>)&#59<br/><br/>/*A poisson model to est rate ratio of being UGPF*/<br/>data ZZF8&#59<br/>&nbsp&nbsp&nbsp&nbspset zzF7&#59<br/>&nbsp&nbsp&nbsp&nbsplog_total = log(total)&#59<br/>&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10)&#59<br/>run&#59<br/><br/>%freq(data=zzf8, table=pct_ugpf *payClass)&#59<br/><br/>title \"Poisson model \"&#59<br/><br/>proc genmod data=zzf8  &#59<br/>&nbsp&nbsp&nbsp&nbspclass payClass (ref='0f') key_doc_num  /param=effect desc &#59<br/>&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payClass /type3 dist=negbin  offset=log_total&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payClass 0 1 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"Both vs FFS\" payClass 1 0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS + Both vs FFS\" payClass 1 1 -2 /exp&#59<br/>run&#59<br/><br/><br/>/*What about those docs both act as FFS and NFFS?*/<br/>data ZZF9&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZF8&#59<br/>&nbsp&nbsp&nbsp&nbspif payClass='2b'&#59<br/>run&#59<br/>/*get the payType specfic data*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzf4,<br/>&nbsp&nbsp&nbsp&nbspt2=zzf9,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzf10,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, year(entryDate) as year),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_doc_num,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_doc_num, paytype, year, key_hsn)<br/>)&#59<br/>/*dose this make sense? It is a GEE binary analysis<br/>&nbsp&nbsp&nbsp&nbspon whether or not being Usual GP<br/>&nbsp&nbsp&nbsp&nbspby paytype<br/>&nbsp&nbsp&nbsp&nbsprepeated by patient<br/>&nbsp&nbsp&nbsp&nbspstratified by key_doc_num (being both NFFS, FFS),<br/>&nbsp&nbsp&nbsp&nbspnot a lot of cases though<br/>*/<br/>proc genmod data=zzf10 desc&#59<br/>&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') key_doc_num  key_hsn /param=reference desc&#59<br/>&nbsp&nbsp&nbsp&nbspmodel UGPF = paytype  /link=logit dist=bin type3&#59<br/>&nbsp&nbsp&nbsp&nbsprepeated subject= key_hsn  /type=exch ecovb&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp &#59<br/>&nbsp&nbsp&nbsp&nbspstrata key_doc_num &#59<br/>run&#59<br/>/*the result is really weird and difficult to explain, the OR >1*/<br/><br/><br/>/*Poisson? for these cross over group?*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzf10,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzf11,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payType,  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(UGPF) as N_UGPF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, payType),<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num, payType)<br/>)&#59<br/>data ZZF12&#59<br/>&nbsp&nbsp&nbsp&nbspset zzF11&#59<br/>&nbsp&nbsp&nbsp&nbsplog_total = log(total)&#59<br/>&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10)&#59<br/>run&#59<br/><br/>%freq(data=zzf12, table=pct_ugpf *payClass)&#59<br/><br/>title \"Poisson model \"&#59<br/><br/>proc genmod data=zzf12  &#59<br/>&nbsp&nbsp&nbsp&nbspclass payType (ref='FFS') key_doc_num  /param=ref desc &#59<br/>&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payType /type3 dist=negbin  offset=log_total&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payType 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbspstrata key_doc_num&#59<br/>run&#59<br/>/*even stranger. it is kind of before-after analysis. Those turned to NFFS are more likely to be UGPF!*/<br/>s///<br/>t///","children":[{"idx":"CodeTask-xeAw1hpjIYgwn1R4","name":"ZZG UPR being UPCPF FFS vs NFFS","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Usual prescribers, UPRs of FFS/NFFS type, and likelihood of being a UGPF (UPCPF)*/<br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)<br/>)&#59<br/>%print(data=vzc)&#59<br/><br/>/*1. get all UPRs of cohort memebers. Some patients had multiple UPRs*/<br/>data ZZG1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59<br/>&nbsp&nbsp&nbsp&nbspformat UGPPRDocID $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPR=1&#59<br/>&nbsp&nbsp&nbsp&nbsparray UPRs UPR1 - UPR6&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(UPRs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPRDocID= scan(UPRs(i),1,\":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UGPPRDocID ne 'na' and UGPPRDocID ne 'unknown'  then output&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn entryDate UGPPRDocID UGPPR&#59<br/>&nbsp&nbsp&nbsp&nbsp/*if strip(UGPPRDocID) ne 'unknown'&#59 why those unknow is not deleted if the condition is put here, instead of in the 2 lines above*/<br/>run&#59<br/><br/>/*The UPRs in 1) may have missing claims. And because of that, they may not be identified as UPCPs. <br/>&nbsp&nbsp&nbsp&nbspAmong them, some are of paytype FFS, some of NFFS. <br/>&nbsp&nbsp&nbsp&nbspThe question is:<br/>&nbsp&nbsp&nbsp&nbspIs it true that being an NFFS prescriber is more likely not to be identified as an UPCPF?<br/>*/<br/><br/>/*<br/>&nbsp&nbsp&nbsp&nbspTo answer this question. the next step is to indicate the paytype for UPRs identified in 1)<br/>2. */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=ZZG1,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZG2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.paytype),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.UGPPRDocID = t2.key_doc_num and t1.entryDate = t2.entryDate),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br/>)&#59<br/><br/>/*3. from vzc, get UPCPFs of the cohort patients*/<br/>data ZZg3&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59format upcpfdocid $11.&#59<br/>&nbsp&nbsp&nbsp&nbspIsUPCPF=1&#59<br/>&nbsp&nbsp&nbsp&nbsparray upcpfs upcpf:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(upcpfs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspupcpfdocid= scan(upcpfs(i),1,\":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif upcpfdocid ne 'na' and upcpfdocid ne 'unknown' then output&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn upcpfdocid IsUPCPF&#59<br/>run&#59<br/><br/>/*4. link 2 and 3,for each UPR in 2), determine whether or not the UPR is identified as UPCPF*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzg2,<br/>&nbsp&nbsp&nbsp&nbspt2=zzg3,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzg4,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.IsUPCPF=., 0, 1) as IsUPCPF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t1.UGPPRDocID = t2.upcpfdocid)<br/>)&#59<br/><br/><br/><br/>/*what is this? there is a cross over here<br/>&nbsp&nbsp&nbsp&nbsppatient a may see doc 1 and 2<br/>&nbsp&nbsp&nbsp&nbsppatient b may also see doc 1 and 2<br/>&nbsp&nbsp&nbsp&nbsp...<br/>*/<br/>proc genmod data=zzg4 desc&#59<br/>&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') UGPPRDocID  key_hsn /param=reference &#59<br/>&nbsp&nbsp&nbsp&nbspmodel IsUPCPF = paytype  /link=logit dist=bin type3&#59<br/>&nbsp&nbsp&nbsp&nbsprepeated subject= UGPPRDocID (key_hsn)  /type=exch&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp &#59<br/>&nbsp&nbsp&nbsp&nbspstrata UGPPRDocID key_hsn&#59<br/>run&#59<br/><br/>/*It makes more sense to count the number of patients by doc<br/>&nbsp&nbsp&nbsp&nbspfor number of patients being UGPF, and for total number of patients<br/>*/<br/>%print(data=zzg4)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzg4,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzg5,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.UGPPRDocID, t1.payType,  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(IsUPCPF) as N_UGPF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(UGPPRDocID, payType),<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(UGPPRDocID, payType)<br/>)&#59<br/>/*for docs acting both as a FFS and a NFFS for diff time periods, */<br/>%transpose(data=ZZG5, target=ZZG6a, rowhead=UGPPRDocID, colhead=paytype, contents=total)&#59<br/>data ZZG7a&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZG6a&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_'&#59<br/>&nbsp&nbsp&nbsp&nbspTotal =sum(nffs, ffs)&#59<br/>run&#59<br/>%freq(data=zzG7a, table=PayClass)&#59<br/>%transpose(data=ZZG5, target=ZZG6b, rowhead=UGPPRDocID, colhead=paytype, contents=N_UGPF)&#59<br/>data ZZG7b&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZG6b&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b'&#59<br/>&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_'&#59<br/>&nbsp&nbsp&nbsp&nbspN_UGPF =sum(nffs, ffs)&#59<br/>run&#59<br/>%freq(data=zzg7b, table=PayClass)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzg7a,<br/>&nbsp&nbsp&nbsp&nbspt2=zzg7b,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzg7,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.UGPPRDocID, t1.payclass, t2.N_UGPF, t1.Total),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=UGPPRDocID payclass<br/>)&#59<br/><br/>/*A poisson model to est rate ratio of being UGPF*/<br/>data ZZg8&#59<br/>&nbsp&nbsp&nbsp&nbspset zzg7&#59<br/>&nbsp&nbsp&nbsp&nbsplog_total = log(total)&#59<br/>&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10)&#59<br/>run&#59<br/><br/>%freq(data=zzg8, table=pct_ugpf *payClass)&#59<br/><br/>title \"Poisson model \"&#59<br/><br/>proc genmod data=zzg8  &#59<br/>&nbsp&nbsp&nbsp&nbspclass payClass (ref='0f') UGPPRDocID  /param=effect desc &#59<br/>&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payClass /type3 dist=negbin  offset=log_total&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payClass 0 1 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"Both vs FFS\" payClass 1 0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS + Both vs FFS\" payClass 1 1 -2 /exp&#59<br/>run&#59<br/><br/><br/>/*What about those docs both act as FFS and NFFS?*/<br/>data ZZg9&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZg8&#59<br/>&nbsp&nbsp&nbsp&nbspif payClass='2b'&#59<br/>run&#59<br/>/*get the payType specfic data*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzg4,<br/>&nbsp&nbsp&nbsp&nbspt2=zzg9,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzg10,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, year(entryDate) as year),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=UGPPRDocID,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(UGPPRDocID, paytype, year, key_hsn)<br/>)&#59<br/>/*dose this make sense? It is a GEE binary analysis<br/>&nbsp&nbsp&nbsp&nbspon whether or not being Usual GP<br/>&nbsp&nbsp&nbsp&nbspby paytype<br/>&nbsp&nbsp&nbsp&nbsprepeated by patient<br/>&nbsp&nbsp&nbsp&nbspstratified by key_doc_num (being both NFFS, FFS),<br/>&nbsp&nbsp&nbsp&nbspnot a lot of cases though<br/>*/<br/>proc genmod data=zzg10 desc&#59<br/>&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') UGPPRDocID  key_hsn /param=reference desc&#59<br/>&nbsp&nbsp&nbsp&nbspmodel IsUPCPF = paytype  /link=logit dist=bin type3&#59<br/>&nbsp&nbsp&nbsp&nbsprepeated subject= key_hsn  /type=exch ecovb&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp &#59<br/>&nbsp&nbsp&nbsp&nbspstrata UGPPRDocID &#59<br/>run&#59<br/>/*the result is interesting. Being a ususal prescriber of NFFS is way unlikely to be a usual care provider<br/>&nbsp&nbsp&nbsp&nbspsuggesting that many claims are missing....<br/>*/<br/><br/><br/>/*Poisson? for these cross over group?*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zzg10,<br/>&nbsp&nbsp&nbsp&nbsptarget=zzg11,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.UGPPRDocID, t1.payType,  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(IsUPCPF) as N_UGPF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(UGPPRDocID, payType),<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(UGPPRDocID, payType)<br/>)&#59<br/>data ZZG12&#59<br/>&nbsp&nbsp&nbsp&nbspset zzG11&#59<br/>&nbsp&nbsp&nbsp&nbsplog_total = log(total)&#59<br/>&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10)&#59<br/>run&#59<br/><br/>%freq(data=zzg12, table=pct_ugpf *payType)&#59<br/><br/>title \"Poisson model \"&#59<br/><br/>proc genmod data=zzg12  &#59<br/>&nbsp&nbsp&nbsp&nbspclass payType (ref='FFS') UGPPRDocID  /param=ref desc &#59<br/>&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payType /type3 dist=negbin  offset=log_total&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payType 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbspstrata UGPPRDocID /missing&#59<br/>run&#59<br/>/*Prescribers of NFFS type are way less likely to be UGPF!*/<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-glcbbQCJxljMInFi","name":"ZZH Usual prescriber's PayType to ADH","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*does prescriber's pay type NFFS/FFS predict nonadherence?*/<br/><br/>%VbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)<br/>)&#59<br/><br/><br/><br/>/*1. get all UPRs of cohort memebers. Some patients had multiple UPRs*/<br/>data ZZH1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59<br/>&nbsp&nbsp&nbsp&nbspformat UGPPRDocID $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPR=1&#59<br/>&nbsp&nbsp&nbsp&nbsparray UPRs UPR1 - UPR6&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(UPRs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPRDocID= scan(UPRs(i),1,\":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UGPPRDocID ne 'na'  then output&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn entrydate UGPPRDocID UGPPR&#59<br/>&nbsp&nbsp&nbsp&nbsp/*if strip(UGPPRDocID) ne 'unknown'&#59 why those unknow is not deleted if the condition is put here, instead of in the 2 lines above*/<br/>run&#59<br/><br/>/*<br/>2. the next step is to indicate the paytype for UPRs identified in 1)<br/> */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=ZZH1,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZH2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.paytype),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.UGPPRDocID = t2.key_doc_num and t1.entryDate = t2.entryDate),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br/>)&#59<br/><br/>/*3. from 2. get a distinct list of patients by whether or not having FFS NFFS docs (can be both)*/<br/>%distinct(data=ZZH2, target =ZZH3, vars=%str(key_hsn, PayType, UGPPR))&#59<br/>%transpose(data=zzh3, target=zzh4, rowhead=key_hsn, colhead=PayType, contents=UGPPR)&#59<br/>data ZZH5&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZH4&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs =1 and nffs=. then PayClass = 'f'&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=1 then payclass='n'&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs=1 and nffs=1 then PayClass = 'b'&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=. then PayClass ='_'&#59<br/>run&#59<br/>%freq(data=zzh5, table=Payclass)&#59<br/><br/>/*link back to cohort*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vzc,<br/>&nbsp&nbsp&nbsp&nbspt2=ZZH5,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZH,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PayClass=\"\", \"u\", t2.PayClass) as PayClass_UPR),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>data test2&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZH&#59<br/>&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1&#59else Northern=0&#59<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0&#59 else any_changed=1&#59<br/>&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO = Pre365_Prscr_statinAHTNOH&#59<br/>&nbsp&nbsp&nbsp&nbspif Pre365NRxDocSAO> 4 then Pre365NRxDocSAO=5&#59<br/>&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO=Followup_Prscr_statinAHTNOH&#59<br/>&nbsp&nbsp&nbsp&nbspif FollowUpNRXDocSAO> 4 then FollowUpNRXDocSAO=4&#59<br/>run&#59<br/><br/>proc genmod data=test2 desc&#59<br/>&nbsp&nbsp&nbsp&nbspclass PayClass_UPR (ref='f')  key_hsn /param=reference &#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence =PayClass_UPR/link=logit dist=bin&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"both vs ffs \" PayClass_UPR 1 0 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"nffs vs ffs \" PayClass_UPR 0 1 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"unknown vs ffs \" PayClass_UPR  0 0 1 /exp &#59<br/>run&#59<br/><br/>/*macro test_ZZH is for not matched,using the not matched cohort (VZC)*/<br/>%macro test_ZZH (data=, theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data theVar where&#59<br/>&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern(ref='0') PayClass_UPR(ref='f')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO (ref='1')<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO(ref='1')*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern &theVar *northern<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe resitype &theVar * resitype <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365_Medclass_statinAHTNOH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPayClass_UPR<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowup_Medclass_statinAHTNOH*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1/exp&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test_ZZH&#59<br/><br/><br/>%test_ZZH(data=test2, theVar=any_changed )&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-B7bSZ43FyDvRf1Kd","name":"ZZI UPCPF's  pay type to adh","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*ZZI PayTYpe to adherence */<br/>/*does prescriber's pay type NFFS/FFS predict nonadherence?*/<br/><br/>/*%VbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)*/<br/>/*)&#59*/<br/><br/>%print(data=vzc)&#59<br/><br/>/*1. get all UPRs of cohort memebers. Some patients had multiple UPRs*/<br/>data ZZI1&#59<br/>&nbsp&nbsp&nbsp&nbspset VZC&#59<br/>&nbsp&nbsp&nbsp&nbspformat UGPFDocID $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPF=1&#59<br/>&nbsp&nbsp&nbsp&nbsparray UGPS UPCPF:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(UGPS)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPFDocID= scan(UGPS(i),1,\":\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UGPFDocID ne 'na' and strip(UGPFDocID) ne 'unknown' then output&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn entryDate UGPFDocID UGPF&#59<br/>&nbsp&nbsp&nbsp&nbsp/*if strip(UGPFDocID) ne 'unknown'&#59 why those unknow is not deleted if the condition is put here, instead of in the 2 lines above*/<br/>run&#59<br/><br/>/*<br/>2. the next step is to indicate the paytype for UGPs identified in 1)<br/> */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=ZZI1,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZI2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.paytype),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.UGPFDocID = t2.key_doc_num and t1.entryDate = t2.entryDate),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br/>)&#59<br/><br/>/*3. from 2. get a distinct list of patients by whether or not having FFS NFFS docs (can be both)*/<br/>%distinct(data=ZZI2, target =ZZI3, vars=%str(key_hsn, PayType, UGPF))&#59<br/>%transpose(data=zzI3, target=zzI4, rowhead=key_hsn, colhead=PayType, contents=UGPF)&#59<br/>data ZZI5&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZI4&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs =1 and nffs=. then PayClass_UGPF = 'f'&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=1 then PayClass_UGPF='n'&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs=1 and nffs=1 then PayClass_UGPF = 'b'&#59<br/>&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=. then PayClass_UGPF ='_'&#59<br/>run&#59<br/>%freq(data=zzI5, table=PayClass_UGPF)&#59<br/><br/>/*link back to cohort*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vzc,<br/>&nbsp&nbsp&nbsp&nbspt2=ZZI5,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZI,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PayClass_UGPF=\"\", \"u\", t2.PayClass_UGPF) as PayClass_UGPF),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>data test2&#59<br/>&nbsp&nbsp&nbsp&nbspset ZZI&#59<br/>&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1&#59else Northern=0&#59<br/>&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0&#59 else any_changed=1&#59<br/>&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO = Pre365_Prscr_statinAHTNOH&#59<br/>&nbsp&nbsp&nbsp&nbspif Pre365NRxDocSAO> 4 then Pre365NRxDocSAO=5&#59<br/>&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO=Followup_Prscr_statinAHTNOH&#59<br/>&nbsp&nbsp&nbsp&nbspif FollowUpNRXDocSAO> 4 then FollowUpNRXDocSAO=4&#59<br/>run&#59<br/>%freq(data=test2, table=PayClass_UGPF * adherence)&#59<br/>proc genmod data=test2 desc&#59<br/>&nbsp&nbsp&nbsp&nbspclass PayClass_UGPF (ref='f')  key_hsn /param=reference &#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence =PayClass_UGPF/link=logit dist=bin&#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"both vs ffs \" PayClass_UGPF 1 0 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"nffs vs ffs \" PayClass_UGPF 0 1 0 /exp &#59<br/>&nbsp&nbsp&nbsp&nbspestimate \"unknown vs ffs \" PayClass_UGPF  0 0 1 /exp &#59<br/>run&#59<br/><br/>/*macro test_ZZI is for not matched,using the not matched cohort (VZC)*/<br/>%macro test_ZZI (data=, theVar=, where=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data theVar where&#59<br/>&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3&#59<br/>&nbsp&nbsp&nbsp&nbspTitle \"&theVar\"&#59<br/>&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern(ref='0') PayClass_UGPF(ref='f')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO (ref='1')<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO(ref='1')*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern &theVar *northern<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe resitype &theVar * resitype <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365_Medclass_statinAHTNOH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPayClass_UGPF<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowup_Medclass_statinAHTNOH*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1/exp&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspods select all&#59<br/>&nbsp&nbsp&nbsp&nbsptitle&#59<br/>%mend test_ZZI&#59<br/><br/><br/>%test_ZZI(data=test2, theVar=any_changed )&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-glcbbQCJxljMInFi"}]}],"custparents":[{"idx":"CodeTask-xeAw1hpjIYgwn1R4"}]}],"custparents":[{"idx":"CodeTask-47QaLlwY1h7Q44wY"}]}],"custparents":[{"idx":"CodeTask-kpt49up7VUF9xXPg"}]}],"custparents":[{"idx":"CodeTask-ViasKREJ44R4uJVe"}]}],"custparents":[{"idx":"CodeTask-kpvpcTvUPzprxvZV"}]}],"custparents":[{"idx":"EGTask-SF7U4hFBpxtTrllt"}]}],"custparents":[{"idx":"CodeTask-Aci5BDMMgR9LhbzQ"}]}],"custparents":[{"idx":"EGTask-mNdzSqhm2Bn1Jy5q"}]}],"custparents":[{"idx":"CodeTask-pzOsKgUBMFRexTrx"}]}],"custparents":[{"idx":"MY84805d1e-a9a8-4034-ad9d-bb995777ec44"},{"idx":"MY84805d1e-a9a8-4034-ad9d-bb995777ec44"}]},{"idx":"CodeTask-4YLbT4wXqqOCfBYD","name":"To be classified","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Other analyses, to be classified*/<br/>s///<br/>t///","children":[{"idx":"CodeTask-tJhKkouTVvdrtAk4","name":"E_MSB UPC claims","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Attach physicians to patients*/<br/>data _null_ &#59run&#59<br/>/*%VbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localdataPath.\\master_msb.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)*/<br/>/*)&#59*/<br/><br/>/*1. MSB claims of patients in the cohort*/<br/>/*%VbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_cohort.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_cohort.sas7bdat)*/<br/>/*&nbsp&nbsp&nbsp&nbsp)&#59*/<br/>/*%print(data=master_cohort)&#59*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=master_cohort,<br/>&nbsp&nbsp&nbsp&nbsptarget=E1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dqdate, t2.birth, t2.Qaippe, t2.resitype, t2.sex_desc),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*2. from above, get claims not missing doc number, and not from a slush code*/<br/>data E2&#59<br/>&nbsp&nbsp&nbsp&nbspset E1&#59<br/>&nbsp&nbsp&nbsp&nbspwhere key_doc_num ne '' and DocSlushCode ne \"Y\"&#59<br/>run&#59<br/><br/>/*test. check data, is the any slush codes<br/>&nbsp&nbsp&nbsp&nbspthe following has been tested, using the slushdoc from the physicina panel project<br/>&nbsp&nbsp&nbsp&nbspnone of the slush code were included in E2<br/>*/<br/>/*<br/>%let slushdoc='76925314678', '36825374671', '52825354677', '66925324672', '38825384673', '52825354672', <br/>'35925334677', '00825374673', '32825384674', '79825354677', '42925314672', '14925324671', '74825384673', <br/>'95825354670', '86825364672', '95925344676', '03925304670', '59925304677', '96925314677', '36925314674', <br/>'96925314672', '62825364671', '28925304679', '82825394672', '43925314674', '13825364672', '31925324677', <br/>'48925314670', '05825364678', '17825354674', '13925304670', '82825384679', '27825354670', '19825374671', <br/>'45925304670', '07925304677', '05925344673', '64925344674', '25925304675', '95925314671', '05825354679', <br/>'64925304678', '26925334671', '80925334670', '87925304678', '53825394678', '17825344678', '52925304678', <br/>'61825384670', '17825374676', '31825374679', '29825354679', '41925304676', '01825374674', '24825364678', <br/>'11345384672', '91925324677', '87825394671', '81925304678', '74925304674', '78925334671', '01825354674', <br/>'58825374670', '83925324670', '34825364677', '58925324670', '53825384670', '27825344678', '48925314676', <br/>'37825364674', '31925324675', '56925304672', '95925344670', '02825384671', '81825354676', '22925304670', <br/>'51825394672', '95925304677', '84825354674', '74925314673', '06825384675', '39825344678', '99825374677', <br/>'35925304676', '73825364675', '14925304678', '14825354671', '14925314673', '76825364676', '88925314677', <br/>'76825374677', '23825374672', '74825384670', '07925334671', '71825364676', '24925304677', '11925324678', <br/>'49925334678', '31925324674', '80925314677', '91825364675', '11825374679', '55925324679', '99925304678', <br/>'35825374676', '10925314671', '22825394677', '93825394679', '26925314679', '59825344671', '27825384672', <br/>'12925304677', '42925304671', '16825364671', '24925304679', '82925314676', '17925314671', '04825394674', <br/>'16825344676', '33925344675', '01825394671', '28925314674', '18825354679', '25925344671', '01825354670', <br/>'93925304677', '47925334678', '37925334676', '01825364673', '75925324675', '85925314673', '35925334678', <br/>'24825364679', '90925304671', '73925324677', '76825374671', '83825354675', '74825374672', '77925314672', <br/>'50925324674', '05925324670', '20925304670', '06825354674', '42825364678', '88825354673', '81825364678', <br/>'23925314673', '24925334677', '99825394677', '94825374674', '08825374674', '87925324675', '06925304678', <br/>'84825384672', '19825344672', '28825394679', '53925334671', '05925334676', '81925314671', '64825354676', <br/>'28825394673', '22925314674', '38825394679', '57925324671', '46925334672', '92925334678'&#59<br/>*/<br/>/*<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset E2&#59<br/>&nbsp&nbsp&nbsp&nbspwhere key_doc_num in (&slushdoc) and DocSlushCode = 'N&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn key_doc_num&#59<br/>run&#59<br/>*/<br/><br/>/*3a. From above, get claims with 365 days prior to the index(dqdate) */<br/>data E3a&#59<br/>&nbsp&nbsp&nbsp&nbspset E2&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between dqdate - 365 and dqdate -1&#59<br/>run&#59<br/><br/>/*3b. calculate the UPC index*/<br/>%getUPCIndex(<br/>&nbsp&nbsp&nbsp&nbspdata=E3a, <br/>&nbsp&nbsp&nbsp&nbsptarget=E3,<br/>&nbsp&nbsp&nbsp&nbspInPatientLOS = %str('B', '2', 'K', '9'), <br/>&nbsp&nbsp&nbsp&nbspoutProvMode = %str('Z'),<br/>&nbsp&nbsp&nbsp&nbspInterestedSPEC = %str('B', 'CL', 'WB')<br/>)&#59<br/><br/>/*4a. From above, get claims with 365 days since the index(dqdate) */<br/>data E4a&#59<br/>&nbsp&nbsp&nbsp&nbspset E2&#59<br/>&nbsp&nbsp&nbsp&nbspwhere DOS between dqdate  and dqdate + 365&#59<br/>run&#59<br/><br/>/*4b. calculate the UPC index*/<br/>%getUPCIndex(<br/>&nbsp&nbsp&nbsp&nbspdata=E4a, <br/>&nbsp&nbsp&nbsp&nbsptarget=E4,<br/>&nbsp&nbsp&nbsp&nbspInPatientLOS = %str('B', '2', 'K', '9'), <br/>&nbsp&nbsp&nbsp&nbspoutProvMode = %str('Z'),<br/>&nbsp&nbsp&nbsp&nbspInterestedSPEC = %str('B', 'CL', 'WB')<br/>)&#59<br/><br/>/*5. combine E3 and E4*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=E3,<br/>&nbsp&nbsp&nbsp&nbspt2=E4,<br/>&nbsp&nbsp&nbsp&nbsptarget=localt.E,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dqdate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_doc_num as doc_pre365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.spec as spec_pre365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.N_visits as N_visits_pre365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.T_visits as T_Visits_pre365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.UpcIndex as UPCIndex_pre365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.key_doc_num as doc_fw365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.spec as spec_fw365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.N_visits as N_visits_fw365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.T_visits as T_Visits_fw365,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.UpcIndex as UPCIndex_fw365, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t1.key_doc_num = t2.key_doc_num, 1,0) as sameDocPreFw<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn&nbsp&nbsp&nbsp&nbsp<br/>)&#59<br/>%freq(data=localt.E, table=sameDocPreFw)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-WFWjsbb3S4nUSJrU","name":"F_MSB_PE_Provider","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*F. the annual physician examination provider<br/>&nbsp&nbsp&nbsp&nbspthe FSC codes for annual physician examination are<br/>&nbsp&nbsp&nbsp&nbsp'B003' 'B064' 'B052' 'B004'<br/>*/<br/>%let PEFeeCodes =&nbsp&nbsp&nbsp&nbsp'B003' 'B064' 'B052' 'B004'&#59<br/><br/>/*%VbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localdataPath.\\master_msb.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)*/<br/>/*)&#59*/<br/><br/>/*1. MSB claims of patients in the cohort*/<br/>/*%VbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_cohort.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_cohort.sas7bdat)*/<br/>/*&nbsp&nbsp&nbsp&nbsp)&#59*/<br/>/*%print(data=master_cohort)&#59*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=master_cohort,<br/>&nbsp&nbsp&nbsp&nbsptarget=F1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dqdate),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(key_doc_num ne '' and DocSlushCode ne \"Y\")<br/>)&#59<br/><br/>/*From above, select claims before the index date (DQdate). These are MSB claims <br/>&nbsp&nbsp&nbsp&nbspwithin 1 years prior to the index*/<br/>data F2&#59<br/>&nbsp&nbsp&nbsp&nbspset F1&#59<br/>&nbsp&nbsp&nbsp&nbspif dqdate -365 le dos < dqdate&#59<br/>run&#59<br/><br/>/*From above select claims for annual physical check up*/<br/>data F3&#59<br/>&nbsp&nbsp&nbsp&nbspset F2&#59<br/>&nbsp&nbsp&nbsp&nbspif FSC in (&PEFeeCodes)&#59<br/>run&#59<br/><br/>/*sort by DOS and keep the physician who submitted the last PE check up for the cohort patient*/<br/>%sort(data=F3, sorter=key_hsn descending dos)&#59<br/>data F4a&#59<br/>&nbsp&nbsp&nbsp&nbspset F3&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn descending dos&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then PEOrder=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse PEOrder +1&#59<br/>run&#59<br/>data F4&#59<br/>&nbsp&nbsp&nbsp&nbspset F4a&#59<br/>&nbsp&nbsp&nbsp&nbspif PEOrder=1&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn key_doc_num dos&#59<br/>&nbsp&nbsp&nbsp&nbsprename key_doc_num = LastPEDoc_Pre365 dos=lastPEDate_prior&#59<br/>run&#59<br/><br/>/*link to localT.E, to add the last PE doc <br/>&nbsp&nbsp&nbsp&nbspthe target set contains the most frequently visited doc prior to the index, during follow up, and the last PE<br/>*/<br/>%print(data=localt.E)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localT.E,<br/>&nbsp&nbsp&nbsp&nbspt2=F4,<br/>&nbsp&nbsp&nbsp&nbsptarget=F5,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.LastPEDoc_Pre365, t2.LastPEDate_Prior),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn <br/>)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=F5,<br/>&nbsp&nbsp&nbsp&nbspt2=master_cohort,<br/>&nbsp&nbsp&nbsp&nbsptarget=F6,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dqdate, t2.birth, t2.Qaippe, t2.resitype, t2.sex_desc),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn <br/>)&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbspindicate the most freq visited docs in prior365, during follow up, and the last PE provider*/<br/>data localt.F&#59<br/>&nbsp&nbsp&nbsp&nbspset F6&#59<br/>&nbsp&nbsp&nbsp&nbspif doc_pre365 =\"\" then Doc1=\"_\"&#59<br/>&nbsp&nbsp&nbsp&nbspelse Doc1=\"A\"&#59<br/>&nbsp&nbsp&nbsp&nbspif doc_fw365 = \"\" then Doc2=\"_\"&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif doc_fw365 = doc_pre365 then Doc2=\"A\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse Doc2=\"B\"&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>if LastPEDoc_Pre365=\"\" then Doc3=\"_\"&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LastPEDoc_Pre365 = doc_pre365 then Doc3=\"A\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LastPEDoc_Pre365 = doc_fw365 then Doc3=\"B\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse Doc3=\"C\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspDocPatterns = strip(Doc1) || Strip(Doc2) || Strip(Doc3)&#59<br/>&nbsp&nbsp&nbsp&nbspdrop doc1 doc2 doc3&#59<br/>run&#59<br/>%freq(data = localt.F, table=DocPatterns)&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-IhdPqAjfbHPMkPbn","name":"L_LogisticModels - Copy","type":"TASK","NodeDescription":"///t<br/>///s<br/>%print(data=localt.g)&#59<br/>%print(data=localt.d)&#59<br/>proc logistic data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365 t_visits_fw365 upcIndex_fw365 upRindex_fw365&#59 <br/>run&#59<br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_Pre365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_Pre365&#59<br/>run&#59<br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand doc_fw365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365&#59<br/>run&#59<br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand LastPEDoc_Pre365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') LastPEDoc_Pre365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=LastPEDoc_Pre365&#59<br/>run&#59<br/><br/><br/>proc genmod data=localt.G desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 t_statinRx_fw365 /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365&#59<br/>run&#59<br/>%print(data=localt.g)&#59<br/>%freq(data=localt.g, filters=%str(docPatterns='AAAA' and N_visits_fw365 > 1 and N_visits_pre365 > 1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand N_Statinrx_fw365 >1 and StatinDoc_FW365 ne ''), table=adherence)&#59<br/><br/>data L11&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.g&#59<br/>&nbsp&nbsp&nbsp&nbspif docPatterns = 'AACD' and adherence=0&#59<br/>run&#59<br/><br/>%freq(data=L11, table=PrscrPattern)&#59<br/><br/><br/>data L12&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.g&#59<br/>&nbsp&nbsp&nbsp&nbspif docPatterns = 'ABAA' and adherence=0&#59<br/>run&#59<br/><br/>%freq(data=L12, table=PrscrPattern)&#59<br/><br/>/*Poisson model*/<br/>data L20&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.G&#59<br/>&nbsp&nbsp&nbsp&nbsplogTime = log(daysOnmed + daysOffmed)&#59<br/>run&#59<br/>proc genmod data=L20 desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_Statinrx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 doc_fw365 /param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel daysOnMed (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /*t_statinRx_fw365*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=negbin offset=logTime  &#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365  &#59<br/>run&#59<br/><br/>/*What predicts the pattern 'AAAA'*/<br/>data L31&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.G&#59<br/>&nbsp&nbsp&nbsp&nbspif DocPatterns = 'AAAA' then PatternOutcome = 1&#59 else PatternOutcome=0&#59<br/>&nbsp&nbsp&nbsp&nbspage = int(yrdif(birth, dqdate, \"AGE\"))&#59<br/>run&#59<br/>%print(data=L31)&#59<br/>proc genmod data=L31 desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 sex_desc (ref='M') qaippe (ref='1')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel PatternOutcome (ref='0') =  age sex_desc qaippe resitype /type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365&#59<br/>run&#59<br/><br/>proc genmod data=L31 desc&#59<br/>&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 sex_desc (ref='M') qaippe (ref='1')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')<br/>/param=reference&#59<br/>&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc qaippe resitype&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit&#59 <br/>&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365&#59<br/>run&#59<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-WFWjsbb3S4nUSJrU"}]}],"custparents":[{"idx":"CodeTask-tJhKkouTVvdrtAk4"}]}],"custparents":[{"idx":"CodeTask-4YLbT4wXqqOCfBYD"}]}],"custparents":[{"idx":"MY84805d1e-a9a8-4034-ad9d-bb995777ec44"},{"idx":"MY84805d1e-a9a8-4034-ad9d-bb995777ec44"}]},{"idx":"CodeTask-CljcMilWauaTBrim","name":"Tools and Preparation","type":"TASK","NodeDescription":"///t<br/>///s<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-bcqKjfzgshVbRL4v","name":"studyOHDINs","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Making Study DINS*/<br/>data _null_&#59 run&#59<br/>/*Oral Hyperglycermics (OH) (AHFS 68:20:20, and with statin in the generic names)*/<br/><br/>/*get all DINs from the cleanned allDIN file*/<br/>/*the problem is that in both of the following file, there is no AHFS class (maybe because AHFS class is not unique <br/>&nbsp&nbsp&nbsp&nbspand will cause dup of DINs)*/<br/>/*%print(data = clean18.alldin_4_jas18_15oct2018)&#59*/<br/>/*%print(data = hqc.dp_drug)&#59*/<br/>/*%print(data=hqc.dp_claim)&#59*/<br/><br/>/*get the dins from dp_claim, if with AHFS of 68:20:20*/<br/>%distinct(source=hqc.dp_claim, target=_tmp1, vars=DIN, filters=%str(mjr_clss = '068' and mnr_clss='20' and sub_clss='20'))&#59<br/>/*get the dins from dp_claim_non_ben, if with AHFS of 68:20:20*/<br/>%distinct(source=hqc.dp_claim_non_ben, target=_tmp2, vars=DIN, filters=%str(mjr_clss = '068' and mnr_clss='20' and sub_clss='20'))&#59<br/>/*merge the above two to have a distince DIN list*/<br/>data _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp1 _tmp2&#59<br/>run&#59<br/>%distinct(data=_tmp3, target=_tmp4, vars=DIN)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= clean18.alldin_4_jas18_15oct2018,<br/>&nbsp&nbsp&nbsp&nbspt2=_tmp4,<br/>&nbsp&nbsp&nbsp&nbsptarget=remoteT.ohdins,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner<br/>)&#59<br/>/*167*/<br/><br/>/*double check to ensure that there is no dup dins in remotetT.AHTNDINs*/<br/>%distinct(data=remoteT.ohdins, target=_tmp5, vars=DIN)&#59<br/>%freq(data=remoteT.ohdins, table=gen_name)&#59<br/>/*n=167, there is no dup DINs*/<br/><br/>s///<br/>t///","children":[{"idx":"EGTask-OC42bAXMm7V8rMsY","name":"CopyDINS_ohdins","type":"TASK","custparents":[{"idx":"CodeTask-bcqKjfzgshVbRL4v"}]}],"custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-cb1xaxfzL97QcEcF","name":"StudyAHTNDINs","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Making Study DINS, the blood pressure lowering agents<br/>&nbsp&nbsp&nbsp&nbspin the AEC-I, and ARB class<br/>*/<br/>data _null_&#59run&#59<br/><br/>/*AEC-I and ARBs (AHFS 24:08:00, and with 'pril' 'sartan' in the generic names)*/<br/><br/>/*get all DINs from the cleanned allDIN file*/<br/>/*the problem is that in both of the following file, there is no AHFS class (maybe because AHFS class is not unique <br/>&nbsp&nbsp&nbsp&nbspand will cause dup of DINs)*/<br/>/*%print(data = clean18.alldin_4_jas18_15oct2018)&#59*/<br/>/*%print(data = hqc.dp_drug)&#59*/<br/>/*%print(data=hqc.dp_claim)&#59*/<br/><br/>/*get the dins from dp_claim, if with AHFS of 24:08*/<br/>%distinct(source=hqc.dp_claim, target=AHTNDINs_tmp1, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='08'))&#59<br/>/*get the dins from dp_claim_non_ben, if with AHFS of 24:08*/<br/>%distinct(source=hqc.dp_claim_non_ben, target=AHTNDINs_tmp2, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='08'))&#59<br/>/*merge the above two to have a distince DIN list*/<br/>data AHTNDINs_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspset AHTNDINs_tmp1 AHTNDINs_tmp2&#59<br/>run&#59<br/>%distinct(data=AHTNDINs_tmp3, target=AHTNDINs_tmp4, vars=DIN)&#59<br/><br/><br/>/*the above DINS are of AHFS 24:08, but not all are ACEI/ARB, those ARCE/ARB <br/>&nbsp&nbsp&nbsp&nbspmust have a genetic name containing 'pril' or 'sartan'*/<br/>/*get the DINs if the generic name contains statin*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= clean18.alldin_4_jas18_15oct2018,<br/>&nbsp&nbsp&nbsp&nbspt2=AHTNDINs_tmp4,<br/>&nbsp&nbsp&nbsp&nbsptarget=remoteT.AHTNDINs,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(index(upcase(gen_name), \"PRIL\") ne 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex(upcase(gen_name), \"SARTAN\") ne 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/>/*n=723*/<br/>/*double check to ensure that there is no dup dins in remotetT.AHTNDINs*/<br/>%distinct(data=remoteT.AHTNDINs, target=AHTNDINs_tmp5, vars=DIN)&#59<br/>%freq(data=remoteT.AHTNDINs, table=gen_name)&#59<br/>/*n=723, there is no dup DINs*/<br/>s///<br/>t///","children":[{"idx":"EGTask-rdbuB2eZxzMerMhF","name":"CopyDINS_AHTNs","type":"TASK","custparents":[{"idx":"CodeTask-cb1xaxfzL97QcEcF"}]}],"custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-7bnUtUXU7R2nqpvh","name":"make PIMs","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Make PIM DINs*/<br/>/*&nbsp&nbsp&nbsp&nbspthese drugs including, Anticholinergics, antipsychotics, antidepressants, Benzodiazpines<br/>&nbsp&nbsp&nbsp&nbspDINs were provided by Laura in the dropbox, also copied to P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS<br/>&nbsp&nbsp&nbsp&nbspDINS were imported by the program makePIMs&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>data _null_&#59run&#59<br/><br/>/*Antidepressants*/<br/>%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\DIN List Antidepressants.xlsx)&#59<br/>data PIMs1&#59<br/>&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&thePIMxlsFile\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=PIMs1 (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"Drugs\"&#59<br/>run&#59<br/>%print (data=PIMs1)&#59<br/><br/>/*BENZO*/<br/>%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\PIM drugs in dementia - Beers 2015 for Sask.xlsx)&#59<br/>data PIMs2&#59<br/>&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&thePIMxlsFile\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=PIMs2 (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"BENZO\"&#59<br/>run&#59<br/>%print (data=PIMs2)&#59<br/><br/>/*PSYCHO*/<br/>%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\PIM drugs in dementia - Beers 2015 for Sask.xlsx)&#59<br/>data PIMs3&#59<br/>&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&thePIMxlsFile\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=PIMs3 (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"PSYCHO\"&#59<br/>run&#59<br/>%print (data=PIMs3)&#59<br/><br/>/*ANTICHO*/<br/>%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\PIM drugs in dementia - Beers 2015 for Sask.xlsx)&#59<br/>data PIMs4&#59<br/>&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&thePIMxlsFile\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=PIMs4(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"ANTICHO\"&#59<br/>run&#59<br/>%print (data=PIMs4)&#59<br/><br/>data PIMS_all&#59<br/>&nbsp&nbsp&nbsp&nbspset PIMs1  PIMs2 PIMs3 PIMs4&#59<br/>run&#59<br/><br/>/*sort and remove the dup DINS per class*/<br/>%sort(data=PIMS_all, sorter=class DIN)&#59<br/>data localt.PIMs&#59<br/>&nbsp&nbsp&nbsp&nbspset PIMS_all&#59<br/>&nbsp&nbsp&nbsp&nbspby class DIN&#59<br/>&nbsp&nbsp&nbsp&nbspif first.DIN&#59<br/>run&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-fugAN6WsoMWNgKfZ","name":"StudyDINs","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Making Study DINS*/<br/>data _null_&#59 run&#59<br/>/*Statin (AHFS 24:06:00, and with statin in the generic names)*/<br/><br/>/*get all DINs from the cleanned allDIN file*/<br/>/*the problem is that in both of the following file, there is no AHFS class (maybe because AHFS class is not unique <br/>&nbsp&nbsp&nbsp&nbspand will cause dup of DINs)*/<br/>/*%print(data = clean18.alldin_4_jas18_15oct2018)&#59*/<br/>/*%print(data = hqc.dp_drug)&#59*/<br/>/*%print(data=hqc.dp_claim)&#59*/<br/><br/>/*get the dins from dp_claim, if with AHFS of 24:06*/<br/>%distinct(source=hqc.dp_claim, target=_tmp1, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='06'))&#59<br/>/*get the dins from dp_claim_non_ben, if with AHFS of 24:06*/<br/>%distinct(source=hqc.dp_claim_non_ben, target=_tmp2, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='06'))&#59<br/>/*merge the above two to have a distince DIN list*/<br/>data _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp1 _tmp2&#59<br/>run&#59<br/>%distinct(data=_tmp3, target=_tmp4, vars=DIN)&#59<br/><br/><br/>/*the above DINS are of AHFS 24:06, but not all are Statins, those statins must have a genetic name containing 'statin'*/<br/>/*get the DINs if the generic name contains statin*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= clean18.alldin_4_jas18_15oct2018,<br/>&nbsp&nbsp&nbsp&nbspt2=_tmp4,<br/>&nbsp&nbsp&nbsp&nbsptarget=remoteT.StatinDINs,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(index(upcase(gen_name), \"STATIN\") ne 0)<br/>)&#59<br/>/*n=301 as of 20191120*/<br/>/*double check to ensure that there is no dup dins in remotetT.StatinDINs*/<br/>%distinct(data=remoteT.StatinDINs, target=_tmp5, vars=DIN)&#59<br/>/*n=301, there is no dup DINs*/<br/>s///<br/>t///","children":[{"idx":"EGTask-CV6ZbaPGihGVgjE1","name":"CopyDINS to Local","type":"TASK","custparents":[{"idx":"CodeTask-fugAN6WsoMWNgKfZ"}]}],"custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-lm45gKn6MFkGPZo4","name":"Local Settings","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*include macro tools in drive S<br/>&nbsp&nbsp&nbsp&nbsp/LRECL to allow the length of a statement line to be 32767 bytes instead of the default 256<br/>*/<br/>%include \"S:\\Collaborative_researchers\\Shenzhen\\My Project\\Projects\\DoNotDelete Common Macros\\MyMacros.sas\" /LRECL=32767&#59<br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD9_E_CH_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD9_E_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD10_CH_dxtype.sas' /LRECL=32767&#59 <br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD10_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE 'R:\\Macros\\Util\\ExpandLst.sas' /LRECL=32767&#59<br/>%include 'R:\\Macros\\Util\\VarExist.sas' /LRECL=32767&#59<br/>%include 'R:\\Macros\\Util\\IsEmptyDS.sas' /LRECL=32767&#59<br/><br/><br/>%global settingsXls h_Infoxls AnalyticalReport DataReport dicXls&#59<br/><br/>/*assign the address for the exchange folder between local and remote*/<br/>%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote&#59<br/>libname transLib \"&exchangeDir\"&#59 <br/><br/>/*the xlsx file with import information*/<br/>%let settingsXls =Z:\\My Project\\Projects\\PhD Thesis\\StatinCohort\\Input\\Forms\\InputForm_StatinCohortPhD.xlsm&#59<br/>%let h_Infoxls = %str(R:\\Data Warehouse\\Data Manuals\\Hospital %(CIHI DAD%)\\cihi_hosps_master_file.xlsx)&#59<br/><br/>/*the target files in local drive S<br/>&nbsp&nbsp&nbsp&nbspsee A_import_settings<br/>&nbsp&nbsp&nbsp&nbspthe local data, target, reports path are input from the xls file<br/>*/<br/><br/>/*the target files in local drive S*/<br/>/*%let localTargetPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Target&#59*/<br/>/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data&#59 /*the folder to save requested raw data files*/*/<br/>/*libname localT \"&localTargetPath\"&#59*/<br/><br/>/*the report in local drive S*/<br/>%let localReportPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Reports&#59<br/>/*libname localR \"&localReportPath\"&#59*/<br/>%let AnalyticalReport=Analytical_Report_StatinCohortPhD.xlsx&#59<br/>%let DataReport=DataSum_Report_StatinCohortPhD.xlsx&#59<br/><br/>/*The following steps are to import file and var description in the data dictionary *******/<br/>%let dicXls = S:\\Reference\\Data Warehouse\\Data Manuals\\General Information\\HQC_MOH_DW_data_dictionary.xlsx&#59<br/><br/>%put >>> the local work directory is at %sysfunc(pathname(work))&#59<br/><br/>%let theChronicConditionDataPath=P:\\Chronics_SKPop(YaoS)_142\\Output\\Result data&#59<br/>%let theChronicConditionData = popdata_allepi_26mar19&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-oyLU9215za4Elsgd","name":"Copy Macro file to Remote Server","type":"TASK","children":[{"idx":"CodeTask-8XQczBciSUyozSiJ","name":"Remote settings","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*what is the diff between msb_doctor, and msb_doctor_mobility*/<br/><br/><br/>%include \"/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/DoNotDelete Common Macros/MyMacros.sas\" /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_CH_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_CH_dxtype.sas' /LRECL=32767&#59 <br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/ExpandLst.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/VarExist.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/IsEmptyDS.sas' /LRECL=32767&#59<br/><br/>libname Clean \"/sasdata/hisc/shared_data/HQC_share/Clean\"&#59<br/><br/>libname Clean17 \"/sasdata/hisc/shared_data/HQC_share/Clean/2017 Data/Clean files\"&#59<br/>libname Clean18 \"/sasdata/hisc/shared_data/HQC_share/Clean/2018 Data/Clean files\"&#59<br/><br/>/*do not use the folder 'exchange'. That one is quite confusing*/<br/><br/>/*assign the address for the exchange folder between local and remote<br/>&nbsp&nbsp&nbsp&nbsptheexChangeDir is the LOCAL exchange folder<br/>*/<br/>%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote&#59<br/>libname transLib \"&exchangeDir\"&#59 <br/><br/>%let Rexchange =  /sasdata/hisc/shared_data/HQC_share/Shenzhen/FileExchangeBetweenLocalAndRemote&#59<br/>libname RexLib \"&RExchange\"&#59<br/><br/>/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data&#59*/ /* the folder to save requested raw data files*/<br/><br/>/*set raw file names*/<br/>%global<br/>&nbsp&nbsp&nbsp&nbspexchangeDir Rexchange  dp_benefitFile dp_nonbenefitFile dp_specFile ed_a2012File ed_b2012File<br/>&nbsp&nbsp&nbsp&nbsphospitalFile MSBFile MSB_DFile MSB_DocInfoFile PHRS_InfoFile PHRS_CovFile PHRS_RSDCFile PHRS_ArrvFile<br/>&nbsp&nbsp&nbsp&nbspPHRS_ResiFile PHRS_Resi_cleanFile PHRS_retrFile VerfMortFile MDS_LTC_File AnalyticalReport DataReport alldinfile<br/>&#59<br/><br/>%let dp_benefitFile=hqc.dp_claim&#59<br/>%let dp_nonbenefitFile=hqc.dp_claim_non_ben&#59<br/>%let dp_specFile = hqc.dp_drug&#59<br/><br/>%let ed_a2012File=hqc.ED_F_2012&#59<br/>%let ed_b2012File=hqc.nacrs&#59<br/><br/>%let hospitalFile=clean18.cihi_eoc_3_jfm18_01aug2018&#59<br/><br/>%let MSBFile=hqc.MSB_BILLING&#59<br/>%let MSB_DFile=hqc.MSB_Doctor&#59<br/>%let MSB_DocInfoFile=hqc.MSB_DOCTOR_MOBILITY&#59<br/><br/>%let PHRS_InfoFile = hqc.PHRS_PERS_INFO&#59<br/>%let PHRS_CovFile = hqc.PHRS_PERS_PROG&#59<br/>%let PHRS_RSDCFile=hqc.phrs_pers_rsdc&#59<br/>%let PHRS_ArrvFile = HQC.phrs_pers_arrv&#59<br/>%let PHRS_ResiFile = HQC.phrs_pers_resc&#59<br/>%let PHRS_Resi_cleanFile=clean17.PHRS_PERS_RESC_3_AMJ17_02NOV2017&#59 /*this is the last file with income quintile, AMJ = Apr May Jun*/<br/>%let PHRS_retrFile = HQC.PHRS.PERS_RETR&#59<br/>%let VerfMortFile = clean18.phrs_dths_3_jfm18_15aug2018&#59<br/>%let MDS_LTC_File = hqc.MDS_ASSESSMENT_F_2015&#59<br/><br/>%let AnalyticalReport=Analytical_Report_StatinCohortPhD.xlsx&#59<br/>%let DataReport=DataSum_Report_StatinCohortPhD.xlsx&#59<br/><br/>/*see B_remote setting, the folder is defined in and input from the input xls file*/<br/><br/>/*the source files on remote server*/<br/>/*%let remoteSourcePath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Source&#59*/<br/>/*libname remoteS \"&remoteSourcePath\"&#59*/<br/>/*the target files on remote server*/<br/>/*%let remoteTargetPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Target&#59*/<br/>/*libname remoteT \"&remoteTargetPath\"&#59*/<br/><br/>/*the report on remote server*/<br/>/*%let remoteReportPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Reports&#59*/<br/>/*libname remoteR \"&remoteReportPath\"&#59*/<br/><br/>/*include the raw file extracing macros*/<br/>%let alldinfile=clean17.alldin_4_jas17_03oct2017&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_CIHI.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/Addquotes.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/reformat_datevars.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_share/Xinya/Macros/GEO_INCQTL_assign.sas' /LRECL=32767&#59<br/><br/>/*the following is for calculating the Charlson-elixer score*/<br/>%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_CH_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_CH_dxtype.sas' /LRECL=32767&#59 <br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/ExpandLst.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/VarExist.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/IsEmptyDS.sas' /LRECL=32767&#59<br/><br/>%put >>> the remote work directory is at %sysfunc(pathname(work))&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-kdXNatjk26MJ53wd","name":"A_import settings","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Import settings from the setting xls file (&settingXls)*/<br/>data _null_&#59run&#59<br/><br/>%global  localParentFolder localDataFolder localReportFolder localTargetPath localDataPath localReportPath<br/>RemoteParentFolder RemoteSourcePath DataStartDate DataEndDate&#59<br/><br/>Filename setXls \"&settingsXls\"&#59<br/><br/>/*create a folder dedicated for the project (by rem id?)*/<br/>/*copy a back up of the setting xls file in the log directory*/<br/>/*add a file for log (create date, etc)*/<br/><br/>/*1.Import the dates*/<br/>/*always create an empty data set first<br/>&nbsp&nbsp&nbsp&nbspotherwise, when the source excel table contains 0 records, the import proc won't run,<br/>&nbsp&nbsp&nbsp&nbspthe setting file won't be created<br/>&nbsp&nbsp&nbsp&nbsplater, no files were copied to the remote site to overwrite the old files<br/>&nbsp&nbsp&nbsp&nbspAs such, the old setting files will be used in getting data, which is wrong <br/>*/<br/>data translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspformat Items $100. Values $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a1_MasterInput<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"MasterInput\"&#59<br/>run&#59<br/>%print(data=translib.a1_MasterInput)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*Determine the local data/target/reports folder*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value)&#59<br/>run&#59<br/><br/>%let localParentFolder=%sysfunc(strip(&localParentFolder))&#59<br/>%let localTargetPath=&localParentFolder.\\Output\\Result data&#59<br/>%put >>> &localTargetPath&#59<br/>%let localDataPath=&localParentFolder.\\Data&#59 /*the folder to save requested raw data files*/<br/>libname localT \"&localTargetPath\"&#59<br/>libname localD \"&localDataPath\"&#59<br/>%put >>> &localDataPath&#59<br/>/*the report in local drive S*/<br/>%let localReportPath=&localParentFolder.\\Output\\Reports&#59<br/>%put >>> &localReportPath&#59<br/>libname localR \"&localReportPath\"&#59<br/><br/><br/><br/>/*2.Import the sourcefiles and fields*/<br/>data translib.A2_CohortDataVars&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. VarName_in_Raw_File $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.A2_CohortDataVars (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=(Final_status=1) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= final_status file_nick_name VarName_in_Raw_File<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"StudyFields\"&#59<br/>run&#59<br/><br/><br/>/*3 import the case def ICD code list*/<br/>data translib.a3_ICDDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a3_ICDDx (where=(code ne \"\") keep= Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"ICD_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a3_ICDDx)&#59<br/><br/>/*4 import the case def procedure code list*/<br/>data translib.a4_IntvnDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a4_IntvnDx (where=(code ne \"\") keep=Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"Procedure_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a4_IntvnDx)&#59<br/><br/>/*5 import the case def SK fee for service code list*/<br/>data translib.a5_FSC&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a5_FSC (where=(code ne \"\") keep=Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"SK_fee_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a5_FSC)&#59<br/><br/>/*6 import the case def DINPIN list*/<br/>data translib.a6_DINDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Therapeutic_Class $100. Generic_Name $100. DIN $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a6_DINDx (where=(DIN ne \"\") keep=Therapeutic_Class Generic_Name DIN Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"DINs\"&#59<br/>run&#59<br/>%print(data=translib.a6_DINDx)&#59<br/><br/>/*7 import the list of source files for case definition*/<br/>data translib.a7_DxFiles&#59<br/>&nbsp&nbsp&nbsp&nbspformat DxFiles $100. Inclusion 8.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a7_DxFiles (where=(Inclusion =1) )<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"DxFiles\"&#59<br/>run&#59<br/>%print(data=translib.a7_DxFiles)&#59<br/><br/>/*8 import the list of additional request*/<br/>data translib.a8_AddRequest&#59<br/>&nbsp&nbsp&nbsp&nbspformat Class $100. Description $100. SourceData $100. Syntax $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a8_AddRequest  (where=(syntax ne '') )<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"Additional request\"&#59<br/>run&#59<br/>%print(data=translib.a8_AddRequest)&#59<br/><br/>/*9 import cohort exclusion criteria*/<br/>data translib.a9_CohortExclusion&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source $100. Criteria $100. Syntax $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a9_CohortExclusion<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"cohort_exclusion\"&#59<br/>run&#59<br/>%print(data=translib.a9_CohortExclusion)&#59<br/><br/>%put >>> &h_Infoxls&#59<br/><br/>/*<br/>&nbsp&nbsp&nbsp&nbspif the source xls file is open by other users, the import program may report error<br/>&nbsp&nbsp&nbsp&nbspin that case, open the Excel application (do not have to open the source xls file, just the Excel App), <br/>&nbsp&nbsp&nbsp&nbspthen run the following import program<br/>*/<br/>/*10 import hospital info*/<br/>proc import datafile=\"&h_Infoxls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a10_hospInfo<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"facilities\"&#59<br/>run&#59<br/>%print(data=translib.a10_hospInfo)&#59<br/><br/><br/>/*import ed data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp1 (where = (f8='Y')) /*if required by HQC*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"ed (NACRS)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp1)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_ed_a2012'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp1 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf6=strip(upcase(f6))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf7=strip(upcase(f7))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f6='' and f7 ='' and f10 ='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import hospital data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp11<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Hosp (DAD)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp11)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_hosp'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp11 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf5=strip(upcase(f5))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf14=strip(upcase(f14))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf15=strip(upcase(f15))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf16=strip(upcase(f16))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f14&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f16&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f5='' and f14 ='' and f15 ='' and f16='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import phrs data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp21<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"PHRS\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp21)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp22&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_phrs_'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp21 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import drug claim variable description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp31<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Drug plan\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp31)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp32&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_dp_'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp31 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/*import description of msb billing variables*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp41<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Claims (MSB)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp41)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp42&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp41 (firstOBS=4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/*import description of msb mobility doc info variables*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp51<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Mobility (MSB docs)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp52&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp51 (firstOBS=4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*create an emtpy data set for var description*/<br/>&nbsp&nbsp&nbsp&nbspData importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Append  descriptions from source data files*/<br/>&nbsp&nbsp&nbsp&nbspdata importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91 importDIc_tmp2 importDIc_tmp12 importDIc_tmp22 importDIc_tmp32 importDIc_tmp42 importDIc_tmp52&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(varname, ' ')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then varname =substr(varname, 1, pos1-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>/*Determine the remote data/target/reports folder*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value)&#59<br/>run&#59<br/>%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder))&#59<br/>%put >>> RemoteParentFolder = &RemoteParentFolder&#59<br/>%let RemoteSourcePath=&RemoteParentFolder./Source&#59<br/>%put >>>RemoteSourcePath= &RemoteSourcePath&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataStartDate=%bquote('&DataStartDate')d&#59<br/>%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate))&#59<br/>%put >>> DataStartDate = &DataStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataEndDate=%bquote('&DataEndDate')d&#59<br/>%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate))&#59<br/>%put >>> DataEndDate = &DataEndDate&#59<br/><br/>/*import data from MDS LTC (MDS_ASSESSMENT_F_2015)  <br/>&nbsp&nbsp&nbsp&nbspfor diagnoses (if in DXFiles, long_term_care =1), <br/>&nbsp&nbsp&nbsp&nbspit is not to get any dxlist (not like the ICD list, etc), rather it is go run a specific macro so as to get the study patients.<br/>&nbsp&nbsp&nbsp&nbspe.g., to have dementia patients by running specific macros,<br/>&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbspto have all who admitted into LTC within a certain period of time (like the Frailty-HRPIM study)<br/><br/>&nbsp&nbsp&nbsp&nbspfor MDS_LTC data requested for a cohort, the fields are from two sources:<br/>&nbsp&nbsp&nbsp&nbsp1) by default, get key_hsn, create_date,  MDS_AB1, AB1b, A3, and R4, these fields has been specified in A2_CohortDataVars<br/>&nbsp&nbsp&nbsp&nbsp2) fields specified in sheet 'vars_MDS_LTC'<br/><br/>&nbsp&nbsp&nbsp&nbspNote that the two sources may have overlapping vars&#59 therefore they are putting together to have a list of distinct vars.<br/>&nbsp&nbsp&nbsp&nbspThe distinct vars are then added to A2_CohortDataVars<br/>*/<br/>/*21 import data vars from sheet 'vars_mds_ltc' LTC file*/<br/>data translib.a2_vars&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status $100. file_nick_name $100. VarName_in_Raw_File $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%print(data=translib.a2_cohortdatavars)&#59<br/>data _tmp201&#59<br/>&nbsp&nbsp&nbsp&nbspformat variable $100.  &#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=_tmp201 (keep=variable where=(variable ne ''))<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"vars_MDS_LTC\"&#59<br/>run&#59<br/>data _tmp202&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. &#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp201&#59<br/>&nbsp&nbsp&nbsp&nbsprename variable = VarName_in_Raw_File&#59<br/>&nbsp&nbsp&nbsp&nbspfinal_status =1&#59<br/>&nbsp&nbsp&nbsp&nbspfile_nick_name='mds_ltc'&#59<br/>run&#59<br/>/*get ltc vars already input into a2 from sheet 'StudyFields'*/<br/>data _tmp203&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars&#59<br/>&nbsp&nbsp&nbsp&nbspif file_nick_name='mds_ltc' &#59<br/>run&#59<br/><br/>/*from _tmp202, remove those already appeared in _tmp203*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_tmp202,<br/>&nbsp&nbsp&nbsp&nbsptarget=_tmp204,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(VarName_in_Raw_File not in (select  VarName_in_Raw_File from _tmp203))<br/>)&#59<br/><br/>/*attach vars in _tmp202 to a2*/<br/>data translib.a2_cohortdatavars&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars &nbsp&nbsp&nbsp&nbsp_tmp204&#59<br/>&nbsp&nbsp&nbsp&nbspVarName_in_Raw_File=upcase(strip(VarName_in_Raw_File))&#59<br/>run&#59<br/>%sort(data =  translib.a2_cohortdatavars, sorter=file_nick_name VarName_in_Raw_File)&#59<br/><br/><br/>/*get dictionary for mds_ltc vars*/<br/>/*import description of variables from mds_ltc */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp205<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"MDS-LTC\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'mds_ltc'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp205 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and trailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc lagvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='') &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*For some of the vars, the description is in two rows. The var name appears in the first row, but not the second row<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp207&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat lagVar1 $100. lagDesc $1000. lagNote $1000. lagMeta $1000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagVar1 = lag(variable)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagdesc = lag(description)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagNotes = lag(notes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagMeta = lag(metadoc)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif variable='' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvariable = lagVar1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription = strip(Lagdesc) || ' ' || description&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes = strip(lagNotes) || ' ' || notes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc = strip(LagMeta) || ' ' || metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sort(data=importDIc_tmp207, sorter=variable obs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp208&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp207&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby variable obs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.variable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop obs lagVar1 lagdesc lagNotes lagMeta&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset  translib.A11_DataVarDic importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(variable, ' ')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then variable =substr(variable, 1, pos1-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/**getting macro file (full path) and command lines for getting dx from MDS_LTC files**/<br/><br/>%macro getLTCMacro&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*by default, always have a empty macro (for a later task, there has to be a file to be transferred)*/<br/>&nbsp&nbsp&nbsp&nbsp/*create an empty sas file. If A12 does not contain a real sas file, transfer the empty sas file*/<br/>&nbsp&nbsp&nbsp&nbspfilename EmpSAS \"&localDataPath.\\empty.sas\"&#59<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfile EmpSAS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspput &#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbspproc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=translib.a12_DxMDSLTC (where = (strip(theFile) ne ''))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Dx_MDS_LTC_Macro\"&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=translib.a12_DxMDSLTC)&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %eval(&nobs=0) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata translib.a12_DxMDSLTC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat thePath $1000. theFile $100. theLines $1000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePath = \"&localDataPath\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheFile =\"empty.sas\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getLTCMacro&#59<br/>%getLTCMacro&#59<br/><br/><br/><br/><br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%delData(data=importDIc_tmp1 importDIc_tmp2 importDIc_tmp11 importDIc_tmp12<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp21 importDIc_tmp22 importDIc_tmp31 importDIc_tmp32<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp41 importDIc_tmp42 importDIc_tmp51 importDIc_tmp52<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp91 importDIc_tmp92<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp205 importDIc_tmp206 importDIc_tmp207 importDIc_tmp208<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_tmp201 _tmp202 _tmp203 _tmp204 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*************************************************************************************/<br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-cWNDcRk2GJkT9UJm","name":"A1_Copy data sets in transLib to Remote Server","type":"TASK","children":[{"idx":"CodeTask-CinsaqqKpNiJAroE","name":"A2_at Local, del files in transDir","type":"TASK","NodeDescription":"///t<br/>///s<br/>/**/<br/>/*%delData(data=translib.a1_MasterInput translib.a2_vars */<br/>/*translib.a3_icddx translib.a4_intvndx translib.a5_fsc translib.a6_dindx*/<br/>/*translib.a7_dxfiles)&#59*/<br/><br/>Proc delete data=translib._all_&#59<br/>run&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-B7GYeGViHcyJuijA","name":"B_Remote_get settings into macro variables","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*get the project start date. It is also the last Xtrc Date*/<br/>data _null_&#59run&#59<br/><br/>%global <br/>&nbsp&nbsp&nbsp&nbspProjectName<br/>&nbsp&nbsp&nbsp&nbspProjectStartDate<br/>&nbsp&nbsp&nbsp&nbspContact<br/>&nbsp&nbsp&nbsp&nbspEmail<br/>&nbsp&nbsp&nbsp&nbspDataStartDate<br/>&nbsp&nbsp&nbsp&nbspDataEndDate<br/>&nbsp&nbsp&nbsp&nbspEntryStartDate<br/>&nbsp&nbsp&nbsp&nbspEntryEndDate<br/>&nbsp&nbsp&nbsp&nbspEntryStartYear<br/>&nbsp&nbsp&nbsp&nbspEntryEndYear<br/>&nbsp&nbsp&nbsp&nbspEntryYears&nbsp&nbsp&nbsp&nbsp<br/><br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_MSB<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_MSB<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_Ben<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_Ben<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_NBen<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_NBen<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_Cover<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_SPEC<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_SPEC<br/>&nbsp&nbsp&nbsp&nbspXtrc_MDS_LTC<br/>&nbsp&nbsp&nbsp&nbspLPath_MDSLTC_DxMacro<br/>&nbsp&nbsp&nbsp&nbspFile_MDSLTC_DxMacro<br/>&nbsp&nbsp&nbsp&nbspCommand_MDSLTC_DxMacro<br/><br/>&nbsp&nbsp&nbsp&nbspRemoteParentFolder<br/>&nbsp&nbsp&nbsp&nbspremoteSourcePath<br/>&nbsp&nbsp&nbsp&nbspremoteReportPath<br/>&nbsp&nbsp&nbsp&nbspremoteTargetPath<br/>&nbsp&nbsp&nbsp&nbsplocalParentFolder<br/>&nbsp&nbsp&nbsp&nbsplocalDataPath<br/>&nbsp&nbsp&nbsp&nbsplocalTargetPath<br/>&#59<br/><br/>/*get remote path*/<br/>%print(data=RexLib.a1_MasterInput)&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value)&#59<br/>run&#59<br/>%put >>> &RemoteParentFolder&#59<br/><br/>%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder))&#59<br/>%put >>> &RemoteParentFolder&#59<br/><br/>/*the source files on remote server*/<br/>%let remoteSourcePath=&RemoteParentFolder./Source&#59<br/>%put >>> &remoteSourcePath&#59<br/>libname remoteS \"&remoteSourcePath\"&#59<br/>/*the target files on remote server*/<br/>%let remoteTargetPath=&RemoteParentFolder./Target&#59<br/>libname remoteT \"&remoteTargetPath\"&#59<br/>/*the report on remote server*/<br/>%let remoteReportPath=&RemoteParentFolder./Reports&#59<br/>libname remoteR \"&remoteReportPath\"&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value)&#59<br/>run&#59<br/>%let localParentFolder=%sysfunc(strip(&localParentFolder))&#59<br/>%put >>> &localParentFolder&#59<br/>%let localDataPath=&localParentFolder.\\Data&#59<br/>%put >>> localDataPath=&localDataPath&#59<br/>%let localTargetPath=&localParentFolder.\\Output\\Result data&#59<br/>%put >>> localTargetPath = &localTargetPath&#59<br/><br/><br/>/*copy all files from remote exchange to remoteS*/<br/>proc datasets lib=Rexlib&#59<br/>&nbsp&nbsp&nbsp&nbspcopy out=remoteS&#59<br/>run&#59<br/><br/>Proc delete data=Rexlib._all_&#59<br/>run&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items='ProjectStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbsp/*in the source data, the date values are characters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the folloiwng steps, the character date values are changed to numberical datavalues, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen put into macro variables<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhy not directly put characters into macro variable values?<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspbecause the original character is like 'yyyymmdd', while the required data format is 'ddmmmyyyy'<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('ProjectStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let ProjectStartDate=%bquote('&ProjectStartDate')d&#59<br/>%let ProjectStartDate=%substr(&ProjectStartDate, 1, %length(&ProjectStartDate))&#59<br/>%put >>> ProjectStartDate = &ProjectStartDate&#59<br/>%let LastXtrcDate=&ProjectStartDate&#59<br/>%put >>> ProjectStartDate = &ProjectStartDate&#59<br/>%put >>> LastXtrcDate=&ProjectStartDate&#59<br/><br/>/*get the data start and end dates*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataStartDate=%bquote('&DataStartDate')d&#59<br/>%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate))&#59<br/>%put >>> DataStartDate = &DataStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataEndDate=%bquote('&DataEndDate')d&#59<br/>%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate))&#59<br/>%put >>> DataEndDate = &DataEndDate&#59<br/><br/>/*get the cohort entrydates*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='EntryStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('EntryStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let EntryStartDate=%bquote('&EntryStartDate')d&#59<br/>%let EntryStartDate=%substr(&EntryStartDate, 1, %length(&EntryStartDate))&#59<br/>%put >>> EntryStartDate = &EntryStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='EntryEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('EntryEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let EntryEndDate=%bquote('&EntryEndDate')d&#59<br/>%let EntryEndDate=%substr(&EntryEndDate, 1, %length(&EntryEndDate))&#59<br/>%put >>> EntryEndDate = &EntryEndDate&#59<br/><br/>%let EntryStartYear = %sysfunc(year(&EntryStartDate))&#59<br/>%put >>> EntryStartYear=&EntryStartYear&#59<br/>%let EntryEndYear = %sysfunc(year(&EntryEndDate))&#59<br/>%put >>> EntryEndYear=&EntryEndYear&#59<br/>%let EntryYears = %eval(&EntryEndYear - &EntryStartYear +1)&#59<br/>%put >>> EntryYears=&EntryYears&#59<br/><br/><br/>/*The  project name, contact, and email*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='ProjectName'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('ProjectName', value)&#59<br/>run&#59<br/>%put >>> ProjectName = &ProjectName&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='Contact'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Contact', value)&#59<br/>run&#59<br/>%put >>> Contact = &Contact&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='Email'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Email', value)&#59<br/>run&#59<br/>%put >>> Email = &Email&#59<br/><br/><br/>/*the following part is to determine the xtrc_date for each sources<br/>&nbsp&nbsp&nbsp&nbspMSB, Drug claims, coverage period (same for demo, resitype)<br/>&nbsp&nbsp&nbsp&nbspThe cleaned hospital file does not require xtrc date<br/>&nbsp&nbsp&nbsp&nbsp?? How about the mortality record file (verfdt), the emergancy file (f_2012)<br/><br/>*/<br/>%put >>> &dataStartDate&#59<br/>/*the xtrc_dates*/<br/>/*determine the msb xtrc_date***********/<br/>%freq(data=clean.xtrc_dates, table=ds)&#59<br/>%sort(data=clean.xtrc_dates, target=b11, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/><br/>data b12&#59<br/>&nbsp&nbsp&nbsp&nbspset b11&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'msb_billing'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b12, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b13&#59<br/>&nbsp&nbsp&nbsp&nbspset b12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_MSB', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_MSB=%str(%')&Xtrc_Start_MSB.%str(%')d&#59<br/>%let Xtrc_Start_MSB= %substr(&Xtrc_Start_MSB, 1, %length(&Xtrc_Start_MSB))&#59<br/>%put >>> &Xtrc_Start_MSB&#59<br/><br/>%sort(data=b12, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b14&#59<br/>&nbsp&nbsp&nbsp&nbspset b12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_MSB', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_MSB=%str(%')&Xtrc_End_MSB.%str(%')d&#59<br/>%let Xtrc_End_MSB= %substr(&Xtrc_End_MSB, 1, %length(&Xtrc_End_MSB))&#59<br/>%put >>> &Xtrc_End_MSB&#59<br/>/******************************************/<br/><br/>/*determine the benefit drug claim xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b21, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b22&#59<br/>&nbsp&nbsp&nbsp&nbspset b21&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b22, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b23&#59<br/>&nbsp&nbsp&nbsp&nbspset b22 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_Ben', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_Ben=%str(%')&Xtrc_Start_DP_Ben.%str(%')d&#59<br/>%let Xtrc_Start_DP_Ben= %substr(&Xtrc_Start_DP_Ben, 1, %length(&Xtrc_Start_DP_Ben))&#59<br/>%put >>> &Xtrc_Start_DP_Ben&#59<br/><br/>%sort(data=b22, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b24&#59<br/>&nbsp&nbsp&nbsp&nbspset b22 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_Ben', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_Ben=%str(%')&Xtrc_End_DP_Ben.%str(%')d&#59<br/>%let Xtrc_End_DP_Ben= %substr(&Xtrc_End_DP_Ben, 1, %length(&Xtrc_End_DP_Ben))&#59<br/>%put >>> &Xtrc_End_DP_Ben&#59<br/>/******************************************/<br/><br/>/*determine the non-benefit drug claim xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b31, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b32&#59<br/>&nbsp&nbsp&nbsp&nbspset b31&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim_non_ben'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b32, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b33&#59<br/>&nbsp&nbsp&nbsp&nbspset b32 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_NBen', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_NBen=%str(%')&Xtrc_Start_DP_NBen.%str(%')d&#59<br/>%let Xtrc_Start_DP_NBen= %substr(&Xtrc_Start_DP_NBen, 1, %length(&Xtrc_Start_DP_NBen))&#59<br/>%put >>> &Xtrc_Start_DP_NBen&#59<br/><br/>%sort(data=b32, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b34&#59<br/>&nbsp&nbsp&nbsp&nbspset b32 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_NBen', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_NBen=%str(%')&Xtrc_End_DP_NBen.%str(%')d&#59<br/>%let Xtrc_End_DP_NBen= %substr(&Xtrc_End_DP_NBen, 1, %length(&Xtrc_End_DP_NBen))&#59<br/>%put >>> &Xtrc_End_DP_NBen&#59<br/>/******************************************/<br/><br/>*&xtrc_cover&#59<br/>/*determine the coverage xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b41, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>/*%freq(data=b41, table=ds)&#59*/<br/>data b42&#59<br/>&nbsp&nbsp&nbsp&nbspset b41&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'phrs_pers_prog'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>%sort(data=b42, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b43&#59<br/>&nbsp&nbsp&nbsp&nbspset b42 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_Cover', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_Cover=%str(%')&Xtrc_Start_Cover.%str(%')d&#59<br/>%let Xtrc_Start_Cover= %substr(&Xtrc_Start_Cover, 1, %length(&Xtrc_Start_Cover))&#59<br/>%put >>> &Xtrc_Start_Cover&#59<br/><br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b44&#59<br/>&nbsp&nbsp&nbsp&nbspset b42 end=last&#59<br/>&nbsp&nbsp&nbsp&nbspif last&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_Cover', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_Cover=%str(%')&Xtrc_End_Cover.%str(%')d&#59<br/>%let Xtrc_End_Cover= %substr(&Xtrc_End_Cover, 1, %length(&Xtrc_End_Cover))&#59<br/>%put >>> &Xtrc_End_Cover&#59<br/>/******************************************/<br/><br/>/*determine the drug spec xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b51, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b52&#59<br/>&nbsp&nbsp&nbsp&nbspset b51&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim' or ds = 'dp_claim_non_ben'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>%sort(data=b52, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b53&#59<br/>&nbsp&nbsp&nbsp&nbspset b52 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_SPEC', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_SPEC=%str(%')&Xtrc_Start_DP_SPEC.%str(%')d&#59<br/>%let Xtrc_Start_DP_SPEC= %substr(&Xtrc_Start_DP_SPEC, 1, %length(&Xtrc_Start_DP_SPEC))&#59<br/>%put >>> &Xtrc_Start_DP_SPEC&#59<br/><br/>%sort(data=b52, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b54&#59<br/>&nbsp&nbsp&nbsp&nbspset b52 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_SPEC', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_SPEC=%str(%')&Xtrc_End_DP_SPEC.%str(%')d&#59<br/>%let Xtrc_End_DP_SPEC= %substr(&Xtrc_End_DP_SPEC, 1, %length(&Xtrc_End_DP_SPEC))&#59<br/>%put >>> &Xtrc_End_DP_SPEC&#59<br/>/******************************************/<br/><br/>/***get xtrc_date for mds_ltc data****************************/<br/>data b61&#59<br/>&nbsp&nbsp&nbsp&nbspset clean.xtrc_dates&#59<br/>&nbsp&nbsp&nbsp&nbspif xtrc_date < = &LastXtrcDate  and ds='mds_assessment_f_2015'&#59<br/>run&#59<br/>%sort(data=b61, sorter=descending xtrc_date)&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset b61 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_MDS_LTC',  put(xtrc_date, date9.))&#59 <br/>run&#59<br/>%let XTRC_MDS_LTC=%str(%')&XTRC_MDS_LTC.%str(%')d&#59<br/>%let XTRC_MDS_LTC= %substr(&XTRC_MDS_LTC, 1, %length(&XTRC_MDS_LTC))&#59<br/>%put >>> &XTRC_MDS_LTC&#59<br/><br/>/****************************************************/<br/><br/>/*get the file (full path) and macro command for getting dx info from MDS_LTC*/<br/>%macro getMDSMacro&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*initially, let the following variables = nothing*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let File_MDSLTC_DxMacro=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let Command_MDSLTC_DxMacro =&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data =remoteS.A12_DXMDSLTC )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the path, file name and command lines*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remoteS.A12_DXMDSLTC (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('LPath_MDSLTC_DxMacro',  thePath)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('File_MDSLTC_DxMacro',  theFile)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('Command_MDSLTC_DxMacro',  theLines)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*remove the slash at the end of the path*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%sysfunc(strip(&LPath_MDSLTC_DxMacro))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %substr(&LPath_MDSLTC_DxMacro, %length(&LPath_MDSLTC_DxMacro), 1) = \\ %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%substr(&LPath_MDSLTC_DxMacro, 1, %eval(%length(&LPath_MDSLTC_DxMacro)-1))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro= %sysfunc(strip(&LPath_MDSLTC_DxMacro))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the local macro file to get dx data from MDS_LTC = %str(&LPath_MDSLTC_DxMacro.\\&File_MDSLTC_DxMacro)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the remote macro file to get dx data from MDS_LTC = %str(&remoteSourcePath.\\&File_MDSLTC_DxMacro)&#59<br/>%mend getMDSMacro&#59<br/>%getMDSMacro&#59<br/><br/>%freq(source=clean.xtrc_dates, table=ds)&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-yUjgFuvpaSgEzUDM","name":"Copy LTCMacro to Remote","type":"TASK","custparents":[{"idx":"CodeTask-B7GYeGViHcyJuijA"}]}],"custparents":[{"idx":"CodeTask-CinsaqqKpNiJAroE"}]}],"custparents":[{"idx":"EGTask-cWNDcRk2GJkT9UJm"}]}],"custparents":[{"idx":"CodeTask-kdXNatjk26MJ53wd"}]}],"custparents":[{"idx":"CodeTask-8XQczBciSUyozSiJ"}]}],"custparents":[{"idx":"EGTask-oyLU9215za4Elsgd"}]}],"custparents":[{"idx":"CodeTask-lm45gKn6MFkGPZo4"}]}],"custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-MFaCVD2HKG8H2ZiE","name":"MyMacros","type":"TASK","custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-zlO9ztVQoMSivIaE","name":"Test_remote","type":"TASK","NodeDescription":"///t<br/>///s<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-q65h3IrNGuXafJ8T","name":"Test_local","type":"TASK","NodeDescription":"///t<br/>///s<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-b3OezYBUd9h9Xqga","name":"escape","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*data x&#59a=1&#59run&#59*/<br/>)&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-nFFfnUzpOAcAde3z","name":"Beep","type":"TASK","NodeDescription":"///t<br/>///s<br/>%beep&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-YxMkyU68wHLjoZvY","name":"Learnings","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*Leanring*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=msbzzb,<br/>&nbsp&nbsp&nbsp&nbsptarget=ZZD0,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, key_doc_num, dos,  ifc(t1.mode='1', 'FFS', 'NFFS' ) as PayMode length=4),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(num_srv ne 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLOS NOT in ('B','2','K','9')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMODE ne 'Z'<br/>&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*note, it does not work to set length by format $4. as paymode. The length will yet be 200.*/<br/>/*Instead, should set the length=4*/<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-nFFfnUzpOAcAde3z"}]}],"custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-cgblpitkLXgBWLXi","name":"UPC code","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*from:<br/>Z:\\My Project\\Projects\\PhD Thesis\\SAS code\\Master code - UPC (Sept 2014).sas<br/>*/<br/><br/><br/>/***************************************************************************************************  <br/> *   Programmer: Beliz Acan Osman with reference methodology from CIHI Continuity of PHC study, SK  *                                                  &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br/> *   Date: July 2013                                           &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp                            *<br/> *   Project: Primary Health Care Hoshin - Patient Connetedness- CHRONIC DISEASE PROFILES           *<br/> *   Purpose: This code extracts physician information for the chronic disease cohorts &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br/> *&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof SK FY 2006-2013 and in &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br/> *   investigates the contunity of the care provided by GPs and NPs&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br/> ****************************************************************************************************/<br/>* Jan 2018<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.Used most upto date MSB & PHRS & Death & Doc Num files<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Mode = Z codes are excluded from UPC calculation - New Knowledge: these codes represent out of province claims<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3. could not complete the ACSC specific UPC calculation as we are not calculating incidence/prevalence for ACSC conditions anymore.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTalked with Patrick about this January 9th. He will decide whether we should leave it as is or continue with inc/prev analysis.<br/><br/>* April 2017<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.Used most upto date MSB & PHRS & Death & Doc Num files<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Mode = Z codes are excluded from UPC calculation - New Knowledge: these codes represent out of province claims<br/><br/>* Jan 2016<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.Took out the clinic piece we will not provide that this wall walk.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Used most upto date MSB & PHRS & Death & Doc Num files<br/><br/>* Sept 2015 PLT Wall Walk - Notes by Meric Osman & Beliz Acan Osman<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. UPC by Clinic added. 2 sets of results,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. UPC by physician (same as before)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. UPC by clinic (new) - see code Master Code - UPC_by_clinic (Aug 2015)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Used most upto date MSB & PHRS & Death & Doc Num files<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/><br/>* June 2015 PLT Wall Walk - Notes by Meric Osman<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. Used most upto date MSB & PHRS file<br/><br/>* April 2015 PLT Wall Walk - Notes by Meric Osman<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. Used most upto date MSB & PHRS file<br/><br/>Old notes&#59<br/>* December 2014 RUN for January 2015 PLT Wall Walk - Notes by Meric Osman<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. Additional slush numbers have been acquired and used (see below),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2. Minor bug fixes.<br/><br/><br/>* August-September 2014 RUN for October 2014 PLT Wall Walk - Notes by Meric Osman<br/><br/>Changes/Updates (during Beliz's maternity leave)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. New MSB data has been acquired by HQC. This data includes physician specialty<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2. As the physician specialty information is already in the data - DOC FILE is not being used<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3. Previously, MSB extracted from 2006, however only last 3-4 years of inforamtion is needed (informed by team), thus shorter extraction (Apr 2010 onwards) has been done.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4. Out of province DOC numbers are for SAS flat files (not for the ORACLE MSB file), thus not used (see below).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp5. Most upto date PHRS, Death files...etc. have been used (see below).<br/><br/><br/><br/>*MACROS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas'&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_share/Meric/calc_age_discr.sas'&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/>*DATASETS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let death_file &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= clean17.verf_dths_3_jfm17_01nov2017&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let phrs_res&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp= clean17.phrs_pers_resc_4_jas17_01dec2017&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let geo_file&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= clean17.phrs_pers_resc_4_jas17_01dec2017&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/><br/>* EXCLUSIONS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let in_patient&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= 'B' '2' 'K'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*Slush codes are added from clean.Physician #s for Slush codes (new).txt&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let slush&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= '76925314678' '36825374671' '52825354677' '66925324672' '38825384673' '52825354672' '35925334677' '00825374673' '32825384674' '79825354677' '42925314672' '14925324671'<br/>'74825384673' '95825354670' '86825364672' '95925344676' '03925304670' '59925304677' '96925314677' '36925314674' '96925314672' '62825364671' '28925304679' '82825394672'<br/>'43925314674' '13825364672' '31925324677' '48925314670' '05825364678' '17825354674' '13925304670' '82825384679' '27825354670' '19825374671' '45925304670' '07925304677'<br/>'05925344673' '64925344674' '25925304675' '95925314671' '05825354679' '64925304678' '26925334671' '80925334670' '87925304678' '53825394678' '17825344678' '52925304678'<br/>'61825384670' '17825374676' '31825374679' '29825354679' '41925304676' '01825374674' '24825364678'<br/>'11345384672' '91925324677' '87825394671' '81925304678' '74925304674' '78925334671' '01825354674' '58825374670' '83925324670' '34825364677' '58925324670' '53825384670' <br/>'27825344678' '48925314676' '37825364674' '31925324675' '56925304672' '95925344670' '02825384671' '81825354676' '22925304670' '51825394672' '95925304677' '84825354674' <br/>'74925314673'<br/>'06825384675' '39825344678' '99825374677' '35925304676' '73825364675' '14925304678' '14825354671' '14925314673' '76825364676' '88925314677' '76825374677' '23825374672'<br/>'74825384670' '07925334671' '71825364676' '24925304677' '11925324678' '49925334678' '31925324674' '80925314677' '91825364675' '11825374679' '55925324679' '99925304678'<br/>'35825374676' '10925314671' '22825394677' '93825394679' '26925314679' '59825344671' '27825384672' '12925304677' '42925304671' '16825364671' '24925304679' '82925314676'<br/>'17925314671' '04825394674' '16825344676' '33925344675' '01825394671' '28925314674' '18825354679' '25925344671' '01825354670' '93925304677' '47925334678' '37925334676'<br/>'01825364673' '75925324675' '85925314673' '35925334678' '24825364679' '90925304671' '73925324677' '76825374671' '83825354675' '74825374672' '77925314672' '50925324674'<br/>'05925324670' '20925304670' '06825354674' '42825364678' '88825354673' '81825364678' '23925314673' '24925334677' '99825394677' '94825374674' '08825374674' '87925324675'<br/>'06925304678' '84825384672' '19825344672' '28825394679' '53925334671' '05925334676' '81925314671' '64825354676' '28825394673' '22925314674' '38825394679' '57925324671'<br/>'46925334672' '92925334678'&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let mode_exc = 'Z'&#59*NEW - April 2017&#59<br/><br/>*LIBRARIES&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname phc &nbsp&nbsp&nbsp&nbsp'/SAS_data/dw0/HQC_share/Beliz/continuity/Jan 2018'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>*needed library for SASApp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname hqc meta library=\"HQC\"&#59<br/><br/>*DISEASE COHORTS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname copd   '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/COPD'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname asthma '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/Asthma'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname chf    '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/CHF'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname cad    '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/CAD'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname dm     '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/DM'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname mood   '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/Mood'&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoptions mprint nosymbolgen nomlogic&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoption compress=Y&#59<br/><br/><br/>options nosymbolgen nomlogic nomprint&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*****************************************************************************************************/<br/><br/><br/><br/><br/>%let phc_dos_start &nbsp&nbsp&nbsp&nbsp= '01Apr2010'd&#59<br/>%let phc_dos_end &nbsp&nbsp&nbsp&nbsp= '30SEP2017'd&#59<br/><br/><br/><br/>%Extract_MSB(<br/>   &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp=&nbsp&nbsp&nbsp&nbspmsb_extract,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp'31MAR2011'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp'19SEP2017'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdostart&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp&phc_dos_start,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp    dosend&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp&phc_dos_end)&#59*-Jan 2018:79,756,277, Apr2017: 73,926,659, -JuneWW16 62,303,134, -JanWW16 59,682,474- , JuneWW15 - 54,106,206&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   select min(dos_1) as earliest format=date9., max(dos_1) as latest format=date9. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   from msb_extract&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp quit&#59*(01Apr2010 , 12Sep2017)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp <br/>* Do a nodupkey - Only important thing for PHC is having the \"Record of Visit\" not the individual claims&#59<br/>proc sort data=msb_extract nodupkey out=msb_extract_nodup_all&#59 by key_hsn dos_1 key_doc_num spec&#59 run&#59*jan 2018-57,471,158 ,apr2017-53,370,242, june2016-45150575,Jan16-43,276,407--39,312,813&#59<br/><br/>*Note:&nbsp&nbsp&nbsp&nbspThere is no case that num_srv = 0 - HQC does not receive those claims (deleted at the source by eHealth)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAssume all spec's starting with B (%72.13) as BB and also keep the pediatricians with couple exlusions, and WB - nurse practitioners (per CIHI),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDelete slush physician numbers & (NEW) out of province claims through mode = Z&nbsp&nbsp&nbsp&nbsp<br/> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRemember, in_patient&nbsp&nbsp&nbsp&nbsp= 'B' '2' 'K' (will be deleted)&#59<br/><br/>proc freq data = msb_extract_nodup_all&#59table num_srv&#59 run&#59<br/><br/>*There will be another exclusion in later steps regarding pediatricians and patient's age&#59<br/><br/>data msb_extract_nodup&#59 set msb_extract_nodup_all&#59<br/><br/>*apr2017 run had missing key_hsn - deleted&#59<br/>if key_hsn=\"\" then delete&#59<br/>if num_srv = 0 then delete&#59<br/>if los in:(&in_patient) then delete&#59<br/>if key_doc_num in:(&slush) then delete&#59<br/>if spec not in: ('B','C','WB') then delete&#59<br/>if substr(spec,1,1)='C' and ~(substr(fsc,1,1) not in ('B','C')) then delete&#59<br/>if mode in:(&mode_exc) then delete&#59<br/><br/>*fy&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp if '01APR2010'd LE dos_1 LE '31MAR2011'd then fy = 'FY2010/11'&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspelse if '01APR2011'd LE dos_1 LE '31MAR2012'd then fy = 'FY2011/12'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if '01APR2012'd LE dos_1 LE '31MAR2013'd then fy = 'FY2012/13'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if '01APR2013'd LE dos_1 LE '31MAR2014'd then fy = 'FY2013/14'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if '01APR2014'd LE dos_1 LE '31MAR2015'd then fy = 'FY2014/15'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if '01APR2015'd LE dos_1 LE '31MAR2016'd then fy = 'FY2015/16'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if '01APR2016'd LE dos_1 LE '31MAR2017'd then fy = 'FY2016/17'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if '01APR2017'd LE dos_1 LE '31MAR2018'd then fy = 'FY2017/18'&#59<br/>rename xtrc_date=xtrc_date_msb&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>run&#59*Jan 2018-7271258,apr2017-34,698,104 -- jun16-29,523,814--jan16  28,294,478--25,747,453&#59<br/>proc freq data=msb_extract_nodup&#59 table fy spec num_srv los&#59run&#59<br/><br/>/*1b. Add demographic information (RHA at time of service)*/<br/><br/>%demog_assign(prs_xtrc_dt='02OCT2017'd,<br/>                   ds_in &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= msb_extract_nodup,<br/>                   ds_out&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= cohort_master_apr17, <br/>                   strt_dt_var&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= dos_1,<br/>                   end_dt_var&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= dos_1,<br/>                   geo_file&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &geo_file,<br/>incl_full_info=N)&#59*34,698,104&#59<br/><br/>proc freq data=cohort_master_apr17&#59 table sex_desc rha&#59run&#59<br/><br/>* Remove key_hsn's that we can NOT find in PHRS - 5,849 visits (previously - 1,084 visits)&#59<br/>* 34,607 times an RHA can NOT be assigned to a key_hsn - keep them for now&#59<br/><br/>data cohort_master_apr17_1&#59 set cohort_master_apr17&#59<br/><br/>if sex_desc = ''  then delete&#59<br/>if sex_desc&nbsp&nbsp&nbsp&nbsp= 'M' then male=1&#59 else male=0&#59<br/><br/>rename rha = rha_index&#59<br/><br/>drop tot_days mindiff_rha rhadays rhadiff mindiff_urb_rur urdays urdiff&#59<br/>run&#59* 37269992 (1266 visits dropped)&#59<br/>proc freq data=cohort_master_apr17_1&#59table fy sex_desc male rha_index&#59run&#59*28,758 missing RHA (apr2017), 35,499 missing rha--27,920 Rha cannot be assigned (roughly 10,000 people)&#59<br/><br/><br/>/*add age at date of service */<br/>* Note: There are handful of patients receiving services after their death date - very few thus not investigating - consider for future&#59<br/><br/>%calc_age_discr(ds_in=cohort_master_apr17_1,ds_out=cohort_master_1,refday_var=dos_1,agevar=age)&#59<br/><br/>proc freq data=cohort_master_1&#59 table age&#59run&#59* No missing age&#59<br/><br/>/*manipulate variables*/<br/><br/>* NOTE: There are some patients where best_dt < 01Apr2010, however, there are claims indicating that they have seen a physician after 01Apr2010 -  keep them (<1000 cases)&#59<br/><br/>data phc.cohort_master_3&#59 set cohort_master_1&#59<br/><br/>* Delete pediatrician claims if the patients is 18 and older&#59<br/>if age >= 18 and substr(spec,1,1)='C' then delete&#59<br/><br/>*For UPC calculation&#59<br/>n = 1&#59<br/><br/>run&#59*34,692,255&#59<br/>proc freq data=phc.cohort_master_3&#59 table n fy los&#59run&#59<br/>proc freq data=phc.cohort_master_3&#59 table age&#59 where substr(spec,1,1)='C'&#59run&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp proc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   select min(dos_1) as earliest format=date9., max(dos_1) as latest format=date9. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   from phc.cohort_master_3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp quit&#59*(01Apr2010 , 14Mar2017)&#59<br/><br/><br/>* RHA assignment of patients<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp RHA's are assigned to patients AT THE TIME OF PHY SERVICE<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp There are some patients who had assigned >1 RHA's within a fiscal year (probably due to a move)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp For those cases - assign the RHA where the patient was residing, received majority of services<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp If there is a draw, assign randomly&#59<br/><br/>* RHA frequencies&#59<br/>proc sql noprint&#59 <br/>create table rha_assign as <br/>  select key_hsn, fy, rha_index,<br/>  &nbsp&nbsp&nbsp&nbspsum (n)&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspas rha_times<br/>from phc.cohort_master_3<br/>  group by key_hsn, fy, rha_index<br/>  order by key_hsn&#59<br/>run&#59*6,255,567&#59<br/>proc sort data=rha_assign&#59 by key_hsn fy descending rha_times&#59 run&#59*6,255,567 -- 1,261,810 unique patients&#59<br/>proc sort data=rha_assign nodupkey out=rha_assign_1&#59 by key_hsn fy&#59run&#59* 6,186,049&#59<br/><br/><br/>* It has been decided to ONLY include UPC to the PLT Wall - thus only calculate UPC&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /*UPC index*/<br/><br/>* Sum the visits by EACH DOCTOR in EACH FY by EACH PATIENT&#59<br/>proc summary nway data=phc.cohort_master_3&#59<br/>class key_hsn key_doc_num fy&#59<br/>var n&#59<br/>output out=upc n=visits&#59<br/>run&#59<br/>proc freq data=upc&#59 table visits&#59run&#59<br/><br/>data upc_drop(drop=_type_ _freq_)&#59 set upc&#59run&#59* Notes:&nbsp&nbsp&nbsp&nbspType is all 7, Freq & visits are exactly same (delete them)&#59<br/><br/><br/>*&nbsp&nbsp&nbsp&nbspSum the total visits in EACH FY by EACH PATIENT<br/>Also keeps the maximum number of visits done to an individual physician&#59<br/>proc summary nway data=upc_drop&#59<br/>class key_hsn fy&#59<br/>var visits&#59<br/>output out=upc3 max=max_visits sum=visits&#59<br/>run&#59<br/><br/>proc sort data=upc&#59 by key_hsn fy&#59run&#59<br/>proc sort data=upc3&#59 by key_hsn fy&#59run&#59<br/><br/>* Delete cases where the patient had ONLY 1 visit within a fiscal year&#59<br/>data upc_1(drop=_type_ _freq_)&#59 set upc3&#59<br/>if visits = 1 then delete&#59<br/>run&#59<br/>proc freq data = upc_1&#59 table visits&#59run&#59<br/><br/>data UPC_index&#59<br/>set upc_1&#59<br/>UPC=(max_visits/visits)*100&#59<br/>format UPC 8.2&#59<br/>run&#59<br/>proc freq data=UPC_index&#59 table fy upc&#59run&#59<br/><br/>*Merge the RHA info&#59<br/>proc sort data=rha_assign_1&#59by key_hsn fy&#59run&#59<br/>proc sort data=UPC_index&#59by key_hsn fy&#59run&#59<br/><br/>data phc.UPC_final&#59<br/>merge UPC_index(in=b) rha_assign_1(in=m)&#59<br/><br/>by key_hsn fy&#59<br/>if b&#59<br/>format rha_name $22.&#59<br/>if rha_index = '1' then rha_name = \"Sun Country\"&#59<br/>if rha_index = '2' then rha_name = \"Five Hills\"&#59<br/>if rha_index = '3' then rha_name = \"Cypress\"&#59<br/>if rha_index = '4' then rha_name = \"Regina Qu'Appelle\"&#59<br/>if rha_index = '5' then rha_name = \"Sunrise\"&#59<br/>if rha_index = '6' then rha_name = \"Saskatoon\"&#59<br/>if rha_index = '7' then rha_name = \"Heartland\"&#59<br/>if rha_index = '8' then rha_name = \"Kelsey Trail\"&#59<br/>if rha_index = '9' then rha_name = \"Prince Albert\"&#59<br/>if rha_index = '10' then rha_name = \"Prairie North\"&#59<br/>if rha_index = '11' or rha_index = '12' or rha_index = '13' then rha_name = \"Northern Sask\"&#59<br/>if rha_index = ''  then rha_name = \"Missing\"&#59<br/><br/>run&#59<br/>proc freq data=phc.UPC_final order=freq&#59 table rha_index rha_name fy UPC&#59 run&#59<br/><br/>* Important Note (Meric) Aug 6, 2015: Above dataset created and saved phc.UPC_final. Run below to report to PLT Wall Walk.<br/><br/>* UPC by RHA&#59<br/>proc report data=phc.UPC_final missing&#59 <br/>column fy rha_name UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* UPC by SK&#59<br/>proc report data=phc.UPC_final missing&#59 <br/>column fy UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* ACSC Drilldown&#59<br/><br/>* 1.Asthma&#59<br/>proc sql&#59<br/>create table asthma_UPC as select * from phc.UPC_final<br/>where key_hsn in<br/>(select key_hsn from asthma.master)&#59<br/>quit&#59*Jan2018-5498078,April17:557,990 /// January16:463,710 /// October15: 416,059 /// June15 run:338,082 /// March15 run:331,387 /// Dec14 run:270,372 /// Aug14 run:232,809&#59<br/><br/><br/>* Asthma UPC by RHA&#59<br/>proc report data=asthma_UPC missing&#59 <br/>column fy rha_name UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* Asthma  UPC by SK&#59<br/>proc report data=asthma_UPC missing&#59 <br/>column fy UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/><br/>* 2.CAD&#59<br/>proc sql&#59<br/>create table CAD_UPC as select * from phc.UPC_final<br/>where key_hsn in<br/>(select key_hsn from CAD.CAD)&#59<br/>quit&#59* April17:461,757 /// January16: 392,945 ///October15: 358,176 /// June15 run:313,105 /// March15 run:310,737 // Dec14 run:251,777 -Aug14 run:243,896&#59<br/><br/>* CAD UPC by RHA&#59<br/>proc report data=CAD_UPC missing&#59 <br/>column fy rha_name UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* CAD  UPC by SK&#59<br/>proc report data=CAD_UPC missing&#59 <br/>column fy UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/><br/>* 3.CHF&#59<br/>proc sql&#59<br/>create table CHF_UPC as select * from phc.UPC_final<br/>where key_hsn in<br/>(select key_hsn from CHF.CHF)&#59<br/>quit&#59*April17:305,696 /// January16: 261,091 /// October15: 237,316  /// June15 run:200,287 /// March15 run:199,151// Dec14 run:163,569 - Aug14 run:159,443&#59<br/><br/>* CHF UPC by RHA&#59<br/>proc report data=CHF_UPC missing&#59 <br/>column fy rha_name UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* CHF  UPC by SK&#59<br/>proc report data=CHF_UPC missing&#59 <br/>column fy UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/><br/>* 4.COPD&#59<br/>proc sql&#59<br/>create table COPD_UPC as select * from phc.UPC_final<br/>where key_hsn in<br/>(select key_hsn from COPD.COPD)&#59<br/>quit&#59*April17:396,216 /// January16: 330,876 /// October15: 295,995 /// June15 run:249,655 /// March15 run:247,427 // Dec14 run:200,578 - Aug14 run:194,410&#59<br/><br/>* COPD UPC by RHA&#59<br/>proc report data=COPD_UPC missing&#59 <br/>column fy rha_name UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* COPD UPC by SK&#59<br/>proc report data=COPD_UPC missing&#59 <br/>column fy UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/><br/>* 5.DM&#59<br/>proc sql&#59<br/>create table DM_UPC as select * from phc.UPC_final<br/>where key_hsn in<br/>(select key_hsn from DM.DM)&#59<br/>quit&#59*April17:593,552 /// January16: 497,721 /// October15: 448,050 ///June15 run:382,400 /// March15 run:379,076 // Dec14 run:305,827 -Aug14 run:295,604&#59<br/><br/>* DM UPC by RHA&#59<br/>proc report data=DM_UPC missing&#59 <br/>column fy rha_name UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* DM UPC by SK&#59<br/>proc report data=DM_UPC missing&#59 <br/>column fy UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/><br/>* 6.Mood&#59<br/>proc sql&#59<br/>create table Mood_UPC as select * from phc.UPC_final<br/>where key_hsn in<br/>(select key_hsn from Mood.Mood)&#59<br/>quit&#59*April17: 1,000,000+ /// *January16: 1,872,423 /// October15: 1,690,695 /// June15 run:1,495,170 /// March15 run:1,469,429 // Dec14 run:1,196,115 - Aug14 run:1,092,251&#59<br/><br/>* Mood UPC by RHA&#59<br/>proc report data=Mood_UPC missing&#59 <br/>column fy rha_name UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/>* Mood UPC by SK&#59<br/>proc report data=Mood_UPC missing&#59 <br/>column fy UPC,(n mean)&#59<br/>define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group&#59<br/>define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis&#59<br/>run&#59<br/><br/><br/>**********************************************************************************<br/>**********************************************************************************<br/>**********************************************************************************<br/><br/>/* DATA PREPERATION FOR QIO */<br/><br/>* UPC by RHA&#59<br/>proc means data=phc.UPC_final&#59<br/>class fy rha_name&#59<br/>var upc&#59<br/>output out=whole_pop_rha mean=result_connected&#59 run&#59<br/><br/>data whole_pop_rha_1&#59 set whole_pop_rha&#59<br/>if fy = \"\" then delete&#59<br/>if rha_name = \"\" then rha_name=\"sk\"&#59<br/>drop _type_ _freq_&#59<br/>run&#59<br/><br/>* ACSC Drilldown&#59<br/><br/>* 1.Asthma&#59<br/>proc means data=asthma_UPC&#59<br/>class fy rha_name&#59<br/>var upc&#59<br/>output out=asthma_rha mean=result_connected&#59 run&#59<br/><br/>data asthma_rha_1&#59 set asthma_rha&#59<br/>if fy = \"\" then delete&#59<br/>if rha_name = \"\" then rha_name=\"sk\"&#59<br/>format tag1 $char12.&#59<br/>tag1 = \"asthma\"&#59<br/>drop _type_ _freq_&#59<br/>run&#59<br/><br/><br/>* 2.CAD&#59<br/>proc means data=cad_UPC&#59<br/>class fy rha_name&#59<br/>var upc&#59<br/>output out=cad_rha mean=result_connected&#59 run&#59<br/><br/>data cad_rha_1&#59 set cad_rha&#59<br/>if fy = \"\" then delete&#59<br/>if rha_name = \"\" then rha_name=\"sk\"&#59<br/>format tag1 $char12.&#59<br/>tag1 = \"cad\"&#59<br/>drop _type_ _freq_&#59<br/>run&#59<br/><br/><br/>* 3.CHF&#59<br/>proc means data=chf_UPC&#59<br/>class fy rha_name&#59<br/>var upc&#59<br/>output out=chf_rha mean=result_connected&#59 run&#59<br/><br/>data chf_rha_1&#59 set chf_rha&#59<br/>if fy = \"\" then delete&#59<br/>if rha_name = \"\" then rha_name=\"sk\"&#59<br/>format tag1 $char12.&#59<br/>tag1 = \"chf\"&#59<br/>drop _type_ _freq_&#59<br/>run&#59<br/><br/><br/>* 4.COPD&#59<br/>proc means data=copd_UPC&#59<br/>class fy rha_name&#59<br/>var upc&#59<br/>output out=copd_rha mean=result_connected&#59 run&#59<br/><br/>data copd_rha_1&#59 set copd_rha&#59<br/>if fy = \"\" then delete&#59<br/>if rha_name = \"\" then rha_name=\"sk\"&#59<br/>format tag1 $char12.&#59<br/>tag1 = \"copd\"&#59<br/>drop _type_ _freq_&#59<br/>run&#59<br/><br/><br/>* 5.DM&#59<br/>proc means data=dm_UPC&#59<br/>class fy rha_name&#59<br/>var upc&#59<br/>output out=dm_rha mean=result_connected&#59 run&#59<br/><br/>data dm_rha_1&#59 set dm_rha&#59<br/>if fy = \"\" then delete&#59<br/>if rha_name = \"\" then rha_name=\"sk\"&#59<br/>format tag1 $char12.&#59<br/>tag1 = \"dm\"&#59<br/>drop _type_ _freq_&#59<br/>run&#59<br/> <br/><br/>* 6.Mood&#59<br/>proc means data=mood_UPC&#59<br/>class fy rha_name&#59<br/>var upc&#59<br/>output out=mood_rha mean=result_connected&#59 run&#59<br/><br/>data mood_rha_1&#59 set mood_rha&#59<br/>if fy = \"\" then delete&#59<br/>if rha_name = \"\" then rha_name=\"sk\"&#59<br/>format tag1 $char12.&#59<br/>tag1 = \"mood\"&#59<br/>drop _type_ _freq_&#59<br/>run&#59<br/><br/>*Combine all databases&#59<br/><br/>data phc.qio_connectedness&#59 retain date result_connected rha_name tag1&#59 set whole_pop_rha_1 &#59*asthma_rha_1 cad_rha_1 chf_rha_1 copd_rha_1 dm_rha_1 mood_rha_1<br/><br/>if rha_name = \"Cypress\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"chr\"&#59<br/>if rha_name = \"Sun Country\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"schr\"&#59<br/>if rha_name = \"Five Hills\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"fhhr\"&#59<br/>if rha_name = \"Regina Qu'Appelle\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"rqhr\"&#59<br/>if rha_name = \"Sunrise\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"sunhr\"&#59<br/>if rha_name = \"Saskatoon\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"shr\"&#59<br/>if rha_name = \"Heartland\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"hhr\"&#59<br/>if rha_name = \"Kelsey Trail\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"kthr\"&#59<br/>if rha_name = \"Prince Albert\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"paphr\"&#59<br/>if rha_name = \"Prairie North\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"pnhr\"&#59<br/>if rha_name = \"Northern Sask\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"northern\"&#59<br/><br/>if rha_name = \"Missing\" then delete&#59<br/><br/>rename rha_name = tag&#59<br/><br/>if fy = \"FY2010/11\" then date = \"20100630\"&#59<br/>if fy = \"FY2011/12\" then date = \"20110630\"&#59<br/>if fy = \"FY2012/13\" then date = \"20120630\"&#59<br/>if fy = \"FY2013/14\" then date = \"20130630\"&#59<br/>if fy = \"FY2014/15\" then date = \"20140630\"&#59<br/>if fy = \"FY2015/16\" then date = \"20150630\"&#59<br/>if fy = \"FY2016/17\" then date = \"20160630\"&#59<br/>if fy = \"FY2017/18\" then date = \"20170630\"&#59<br/>drop fy&#59<br/><br/>run&#59<br/>proc freq data=phc.qio_connectedness&#59 table tag tag1 date&#59run&#59<br/><br/><br/><br/>/*UPC taxonomy*/<br/>data taxupc&#59<br/>infile datalines truncover&#59<br/>length date $45. rate $45. region $45. acsc $45.&#59<br/>input date rate region acsc&#59<br/>datalines&#59<br/>number-of-data-columns duration tag tag . . . . . . <br/>1 fiscal-year connected-phys smarter . . . . . . <br/>date  result-connected-phys|percentage tag tag<br/>&#59 <br/>run&#59<br/><br/>data qio_connectedness &#59<br/>retain date rate region acsc&#59<br/>set phc.qio_connectedness &#59<br/><br/>*rename result_connected=rate&#59<br/>rename tag=region&#59<br/>rename tag1=acsc&#59<br/>rate=trim (left (put(result_connected, 12.2)))&#59<br/>drop result_connected&#59<br/><br/> <br/>run&#59<br/><br/>data phc.upc_apr17&#59<br/>set taxupc qio_connectedness &#59<br/>run&#59<br/><br/><br/><br/>data qio_connectedness &#59<br/>retain date rate region acsc&#59<br/>set phc.qio_connectedness &#59<br/><br/>*rename result_connected=rate&#59<br/>rename tag=region&#59<br/>rename tag1=acsc&#59<br/>rate=trim (left (put(result_connected, 12.2)))&#59<br/>drop result_connected&#59<br/><br/> <br/>run&#59<br/>proc sort data=qio_connectedness&#59 by  date region&#59<br/>run&#59<br/>proc transpose data=qio_connectedness out=moh&#59<br/>by date region&#59<br/>var acsc rate&#59<br/>run&#59<br/> <br/>data moh1&#59<br/>set moh&#59<br/>drop _name_&#59<br/>rename col2=asthma&#59<br/>rename col3=cad&#59<br/>rename col4=chf&#59<br/>rename col5=copd&#59<br/>rename col6=dm&#59<br/>rename col7=mood&#59<br/>if col1=. then delete&#59<br/>rename col1=all&#59<br/>run&#59<br/><br/><br/><br/>/* -------------------------------------------------------------------<br/>   Code generated by SAS Task<br/><br/>   Generated on: Thursday, January 21, 2016 at 11:23:17 AM<br/>   By task: List Data1<br/><br/>   Input Data: WORK.MOH1<br/>   Server:  Local<br/>   ------------------------------------------------------------------- */<br/><br/>%_eg_conditional_dropds(WORK.SORTTempTableSorted)&#59<br/>/* -------------------------------------------------------------------<br/>   Sort data set WORK.MOH1<br/>   ------------------------------------------------------------------- */<br/>PROC SORT<br/>&nbsp&nbsp&nbsp&nbspDATA=WORK.MOH1(FIRSTOBS=1  KEEP=date asthma cad chf copd dm mood all region)<br/>&nbsp&nbsp&nbsp&nbspOUT=WORK.SORTTempTableSorted<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspBY region&#59<br/>RUN&#59<br/>TITLE&#59<br/>TITLE1 \"Report Listing\"&#59<br/>FOOTNOTE&#59<br/>FOOTNOTE1 \"Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))\"&#59<br/><br/>/* Start of custom user code. */<br/>ods tagsets.excelxp style=sasweb file=\"/SAS_data/dw0/HQC_share/Beliz/continuity/oct2016/by_options.xls\" options(suppress_bylines='yes')&#59<br/>/* End of custom user code. */<br/><br/>PROC PRINT DATA=WORK.SORTTempTableSorted<br/>&nbsp&nbsp&nbsp&nbspOBS=\"Row number\"<br/>&nbsp&nbsp&nbsp&nbspLABEL<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspVAR date asthma cad chf copd dm mood all&#59<br/>&nbsp&nbsp&nbsp&nbspBY region&#59<br/>RUN&#59<br/><br/>/* Start of custom user code. */<br/>ods tagsets.excelxp close&#59<br/>/* End of custom user code. */<br/>/* -------------------------------------------------------------------<br/>   End of task code.<br/>   ------------------------------------------------------------------- */<br/>RUN&#59 QUIT&#59<br/>%_eg_conditional_dropds(WORK.SORTTempTableSorted)&#59<br/>TITLE&#59 FOOTNOTE&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]},{"idx":"CodeTask-nbwvdnJMbVnPgccI","name":"Physician Pannel code","type":"TASK","NodeDescription":"///t<br/>///s<br/>/*from<br/>P:\\2018 - Physician Panel Reports\\SAS code\\1. Patient Allocation to Physician Panels(Alberta Health).sas*/<br/><br/>/*PHYSICIAN PRACTICE REPORTS*/<br/>/*<br/>1. Extract MSB starting from latest available date (31 Dec 2017) and going back 5 years<br/>2. Exclude from MSB<br/>if key_hsn=\"\" then delete<br/>if num_srv = 0 then delete<br/>if los in:(&in_patient) then delete<br/>if key_doc_num in:(&slush) then delete<br/>if spec not in: ('B','C','WB') then delete<br/>if substr(spec,1,1)='C' and ~(substr(fsc,1,1) not in ('B','C')) then delete<br/>if mode in:(&mode_exc) then delete<br/>*/<br/>%let mode_exc = 'Z'&#59*NEW - April 2017&#59<br/>%let in_patient= 'B' '2' 'K'&#59<br/>*Slush codes are added from clean.Physician #s for Slush codes (new).txt&#59<br/>%let slush='76925314678' '36825374671' '52825354677' '66925324672' '38825384673' '52825354672' '35925334677' '00825374673' '32825384674' '79825354677' '42925314672' '14925324671'<br/>'74825384673' '95825354670' '86825364672' '95925344676' '03925304670' '59925304677' '96925314677' '36925314674' '96925314672' '62825364671' '28925304679' '82825394672'<br/>'43925314674' '13825364672' '31925324677' '48925314670' '05825364678' '17825354674' '13925304670' '82825384679' '27825354670' '19825374671' '45925304670' '07925304677'<br/>'05925344673' '64925344674' '25925304675' '95925314671' '05825354679' '64925304678' '26925334671' '80925334670' '87925304678' '53825394678' '17825344678' '52925304678'<br/>'61825384670' '17825374676' '31825374679' '29825354679' '41925304676' '01825374674' '24825364678'<br/>'11345384672' '91925324677' '87825394671' '81925304678' '74925304674' '78925334671' '01825354674' '58825374670' '83925324670' '34825364677' '58925324670' '53825384670' <br/>'27825344678' '48925314676' '37825364674' '31925324675' '56925304672' '95925344670' '02825384671' '81825354676' '22925304670' '51825394672' '95925304677' '84825354674' <br/>'74925314673'<br/>'06825384675' '39825344678' '99825374677' '35925304676' '73825364675' '14925304678' '14825354671' '14925314673' '76825364676' '88925314677' '76825374677' '23825374672'<br/>'74825384670' '07925334671' '71825364676' '24925304677' '11925324678' '49925334678' '31925324674' '80925314677' '91825364675' '11825374679' '55925324679' '99925304678'<br/>'35825374676' '10925314671' '22825394677' '93825394679' '26925314679' '59825344671' '27825384672' '12925304677' '42925304671' '16825364671' '24925304679' '82925314676'<br/>'17925314671' '04825394674' '16825344676' '33925344675' '01825394671' '28925314674' '18825354679' '25925344671' '01825354670' '93925304677' '47925334678' '37925334676'<br/>'01825364673' '75925324675' '85925314673' '35925334678' '24825364679' '90925304671' '73925324677' '76825374671' '83825354675' '74825374672' '77925314672' '50925324674'<br/>'05925324670' '20925304670' '06825354674' '42825364678' '88825354673' '81825364678' '23925314673' '24925334677' '99825394677' '94825374674' '08825374674' '87925324675'<br/>'06925304678' '84825384672' '19825344672' '28825394679' '53925334671' '05925334676' '81925314671' '64825354676' '28825394673' '22925314674' '38825394679' '57925324671'<br/>'46925334672' '92925334678'&#59<br/><br/>/*vaheguru ji   Extract MSB data*/<br/>%include '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas'&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas'&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/coverage_days.sas'&#59<br/>libname ppr '/SAS_data/dw0/HQC_share/nsidhu/PPR/data_MS'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas'&#59&nbsp&nbsp&nbsp&nbsp<br/>%Extract_MSB(xtrc_start_dt='31Mar2012'd,<br/>                   xtrc_end_dt='26Mar2018'd, <br/>                   excl_xtrc_dt=, <br/>                   ds_out=temp_msb, <br/>                   ds_out_hsn_only=, <br/>                   hsn_list=, <br/>                   hsn_file=, <br/>                   MDnumber=, <br/>                   diagcode=, <br/>&nbsp&nbsp&nbsp&nbsp       diag_file=, <br/>                   dostart='01Apr2013'd, <br/>                   dosend='31Mar2018'd, <br/>                   fscode=, <br/>                   loscode=, <br/>                   othercondition=, <br/>                   othernumber=, <br/>                   kept_vars=KEY_HSN KEY_DOC_NUM SPEC MG DIAG FSC NUM_SRV LOS CONTACTS AMT_APP MODE, <br/>                   debug=N)&#59&nbsp&nbsp&nbsp&nbsp<br/>data ppr.temp_msb1&#59<br/>set temp_msb&#59<br/>SPEC1=trim(left(upcase(substr(SPEC, 1,1))))&#59<br/>if SPEC1='B' then SPEC_flag=1&#59 else SPEC_flag=0&#59<br/>run&#59<br/><br/>/*<br/>Quality Checks: Check below for the chosen 4 physicians, <br/>Proc freq variable SPEC and LOS<br/>Check the earliest dos_1 for each of 4 physicians<br/>Extract the data of these 4 physicians from the physician mobility file to check the practice start dates<br/>*/<br/>proc freq data=ppr.temp_msb1&#59<br/>table spec los&#59<br/>run&#59<br/><br/>/*Exclusions mention above in notes*/<br/>data temp_msb2&#59/*332003786 out of 54983036*/<br/>set ppr.temp_msb1&#59<br/>/*<br/>if key_doc_num in ('51925304676' '42925324679' '27925304675' '63825354679' '05825374675' '73925324675') <br/>then key_doc_num='00123456789'&#59<br/>*/<br/><br/>if key_hsn='' then delete&#59<br/>if num_srv=0 then delete&#59<br/>*if los in:(&in_patient) then delete&#59/*we decided to include hospital physician visits April 26*/<br/>if key_doc_num in:(&slush) then delete&#59<br/>if spec not in: ('B') then delete&#59<br/>if mode in:(&mode_exc) then delete&#59<br/>if substr(spec,1,1)='C' and ~(substr(fsc,1,1) not in ('B','C')) then delete&#59<br/>run&#59<br/>proc freq data=temp_msb2&#59<br/>tables spec&#59 run&#59<br/>/*Step 4 removing same day, same doctor visits: <br/>NOTE: There were 32003786 observations read from the data set WORK.TEMP_MSB2.<br/>NOTE: 5942281 observations with duplicate key values were deleted.<br/>NOTE: The data set PPR.TEMP_MSB2 has 26061505 observations and 14 variables.<br/>*/<br/>data ppr.temp_msb1x&#59<br/>set temp_msb2&#59<br/>if FSC in ('B003' 'B064' 'B052' 'B004' ) then physical_flag=1&#59 else physical_flag=0&#59<br/>run&#59<br/><br/>proc sort data=ppr.temp_msb1x&#59<br/>by key_hsn key_doc_num dos_1 descending physical_flag&#59<br/>run&#59<br/>proc sort data=ppr.temp_msb1x out=ppr.temp_msb2 nodupkey&#59<br/>by key_hsn key_doc_num dos_1&#59<br/>run&#59<br/>/*<br/>NOTE: There were 26061505 observations read from the data set PPR.TEMP_MSB2.<br/>NOTE: The data set WORK.TEMP_MSB_3YEAR has 15783671 observations and 14 variables.<br/>*/<br/>data temp_msb_3year&#59<br/>set ppr.temp_msb2&#59<br/>where ('01Apr2015'd LE dos_1 LE '31Mar2018'd)&#59<br/><br/>     if ('01Apr2015'd LE dos_1 LE '31Mar2016'd) then FY='201516'&#59<br/>else if ('01Apr2016'd LE dos_1 LE '31Mar2017'd) then FY='201617'&#59<br/>else if ('01Apr2017'd LE dos_1 LE '31Mar2018'd) then FY='201718'&#59<br/>else if ('01Apr2018'd LE dos_1 LE '31Mar2019'd) then FY='201819'&#59<br/>run&#59<br/><br/><br/>/*checking coverage on Mar 31, 2018*/<br/>data temp_msb_3year&#59<br/>set temp_msb_3year&#59<br/>cover_dt1='1Dec2017'd&#59<br/>cover_dt='31Dec2017'd&#59 /*change these dates to 31Mar 2018 when data comes*/<br/>format cover_dt date9. cover_dt1 date9.&#59<br/>run&#59<br/><br/>%coverage_days(xtrc_dt='02JAN2018'd,<br/>&nbsp&nbsp&nbsp&nbspds_in=temp_msb_3year,<br/>&nbsp&nbsp&nbsp&nbspds_out=temp_msb_3year_covered, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=cover_dt,      <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=cover_dt,<br/>&nbsp&nbsp&nbsp&nbspdef_strt_dt=07DEC1994,<br/>&nbsp&nbsp&nbsp&nbspdef_end_dt=&sysdate9,<br/>&nbsp&nbsp&nbsp&nbspcvrg_strt_dt_var=eff_date,<br/>&nbsp&nbsp&nbsp&nbspcvrg_end_dt_var=exp_date)&#59<br/>proc freq data=temp_msb_3year_covered&#59<br/>table cvgdays&#59<br/>run&#59<br/>/*keeping if covered on last day of month*/<br/>data temp_msb_3yearx&#59<br/>set temp_msb_3year_covered&#59<br/>if cvgdays=1&#59<br/>run&#59<br/><br/>proc sort data=temp_msb_3yearx out=tt nodupkey&#59 by key_doc_num&#59 run&#59/*1548*/<br/>proc sql noprint&#59 <br/>create table temp_msb_3year1 as <br/>select *, count(dos_1) as total_visits3<br/>from temp_msb_3yearx<br/>group by key_hsn<br/>order by key_hsn&#59<br/>run&#59<br/>proc sort data=temp_msb_3year1 nodupkey out=checkz&#59 by key_hsn&#59 run&#59<br/>proc freq data=checkz&#59table total_visits3&#59run&#59<br/><br/>proc sql noprint&#59 <br/>create table temp_msb_3year2 as <br/>select *, count(dos_1) as total_visits_phy3<br/>from temp_msb_3year1<br/>group by key_hsn, key_doc_num<br/>order by key_hsn, key_doc_num&#59<br/>run&#59<br/><br/>data ppr.visits_by_phy_3year&#59/*14943391 visits*/<br/>retain key_hsn key_doc_num total_visits_phy3 total_visits3 upc3&#59<br/>set temp_msb_3year2&#59<br/>upc3=(total_visits_phy3/total_visits3)*100&#59<br/>format upc3 6.2&#59<br/>run&#59<br/>proc sort data=ppr.visits_by_phy_3year out=tt nodupkey&#59 by key_doc_num&#59 run&#59/*1548*/<br/><br/>/*Single provider*/<br/>data sole_visits ppr.after_sole_visits&#59/*sole=921798 1061676+rest left out=14861873=Total of 15783671*/<br/>set ppr.visits_by_phy_3year&#59<br/>if upc3=100 then output sole_visits&#59<br/>else output ppr.after_sole_visits&#59<br/>run&#59<br/>proc sort data=sole_visits&#59/*sorting this way? Idea is to keep the last visit date*/<br/>by key_hsn descending dos_1 key_doc_num&#59 <br/>run&#59<br/>proc sort data=sole_visits nodupkey out=ppr.sole_visits&#59/*729502 accounting for 921798 visits*/<br/>by key_hsn key_doc_num&#59 <br/>run&#59<br/>data ppr.sole_visits&#59<br/>set ppr.sole_visits&#59<br/>step=1&#59<br/>run&#59<br/><br/>/*192296 individuals keys are alloted physician based on sole provider*/<br/>proc sort data=ppr.sole_visits out=check1 nodupkey&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/>/*14861873 observations (or 938099 unique individuals) has to allocated doctor based on criteria below*/<br/>proc sort data=ppr.after_sole_visits out=check nodupkey&#59<br/>by key_hsn&#59<br/>run&#59<br/>/*<br/>2. Majority Provider&#59 <br/>3. if tie then PHYSICAL EXAM(3B), CDM(64B), SUPPORTIVE CARE(52B), WELL BABY(4B) takes prority&#59<br/>4. if no physical then date of service takes priority<br/>*/  <br/>data after_sole_visitsx&#59<br/>retain key_hsn upc3 FSC physical_flag dos_1 key_doc_num&#59<br/>set ppr.after_sole_visits&#59<br/>/*if FSC in ('B003' 'B064' 'B052' 'B004' ) then physical_flag=1&#59 else physical_flag=0&#59*/<br/>run&#59<br/>proc freq data=after_sole_visitsx&#59 tables physical_flag&#59 run&#59<br/>proc sort data=after_sole_visitsx&#59<br/>by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num&#59<br/>run&#59<br/>proc sort data=after_sole_visitsx out=after_sole_visitsxz nodupkey&#59 /*904902 accounting for 14084916 visits*/<br/>by key_hsn&#59<br/>run&#59<br/><br/>/*to add which step contributed, i changed code as under and we get same result*/<br/>/*Here starts setp 2*/<br/>proc sort data=after_sole_visitsx out=step2A nodupkey&#59<br/>by key_hsn upc3 key_doc_num&#59<br/>run&#59<br/>proc sort data=step2A&#59<br/>by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num&#59<br/>run&#59<br/>data step2B&#59<br/>_n_ ++ 1&#59<br/>if _n_ LE n then do&#59<br/>set step2A point=_n_&#59<br/>leadupc3=upc3&#59<br/>end&#59<br/>set step2A nobs=n end=end&#59<br/>by key_hsn&#59<br/>if end then leadupc3=.&#59<br/>run&#59<br/>data step2C&#59<br/>set step2B&#59<br/>by key_hsn&#59<br/>if last.key_hsn then do&#59<br/>leadupc3=.&#59<br/>end&#59<br/>run&#59<br/>data step2D&#59<br/>set step2C&#59<br/>by key_hsn&#59<br/>if first.key_hsn then do&#59<br/>if upc3 GT leadupc3 then step=2&#59<br/>&nbsp&nbsp&nbsp&nbsp        else step=9&#59<br/>&nbsp&nbsp&nbsp&nbsp      end&#59<br/>run&#59<br/>proc freq data=step2D&#59<br/>tables step&#59<br/>run&#59<br/>data step2E&#59/*741493 unique people got alloted in step 2*/<br/>set step2D&#59<br/>if step=2&#59<br/>run&#59<br/>proc sort data=step2E out=check nodupkey&#59 by key_hsn&#59 run&#59<br/><br/>/*Here starts setp 3*/<br/>Proc sql&#59/*start with 1030476 observations*/ <br/>create table step3 as select * from after_sole_visitsx<br/>where key_hsn not in <br/>(select key_hsn from step2E)&#59<br/>quit&#59<br/>proc sort data=step3 out=step3A nodupkey&#59/*704108*/<br/>by key_hsn physical_flag key_doc_num&#59<br/>run&#59<br/>proc sort data=step3A&#59<br/>by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num&#59<br/>run&#59<br/>data step3B&#59<br/>_n_ ++ 1&#59<br/>if _n_ LE n then do&#59<br/>set step3A point=_n_&#59<br/>leadphysical_flag=physical_flag&#59<br/>end&#59<br/>set step3A nobs=n end=end&#59<br/>by key_hsn&#59<br/>if end then leadphysical_flag=.&#59<br/>run&#59<br/>data step3C&#59<br/>set step3B&#59<br/>by key_hsn&#59<br/>if last.key_hsn then do&#59<br/>leadphysical_flag=.&#59<br/>end&#59<br/>run&#59<br/>data step3D&#59<br/>set step3C&#59<br/>by key_hsn&#59<br/>if first.key_hsn then do&#59<br/>if physical_flag GT leadphysical_flag then step=3&#59<br/>&nbsp&nbsp&nbsp&nbsp        else step=9&#59<br/>&nbsp&nbsp&nbsp&nbsp      end&#59<br/>run&#59<br/>proc freq data=step3D&#59<br/>tables step&#59<br/>run&#59<br/>data step3E&#59/*25078 unique people got alloted in step 2*/<br/>set step3D&#59<br/>if step=3&#59<br/>run&#59<br/>proc sort data=step3E out=check nodupkey&#59 by key_hsn&#59 run&#59<br/><br/>/*Here starts setp 4*/<br/>Proc sql&#59/*start with 822472 observations*/ <br/>create table step4 as select * from step3<br/>where key_hsn not in <br/>(select key_hsn from step3E)&#59<br/>quit&#59<br/>proc sort data=step4 out=step4A nodupkey&#59/*822472*/<br/>by key_hsn dos_1 key_doc_num&#59<br/>run&#59<br/>proc sort data=step4A&#59<br/>by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num&#59<br/>run&#59<br/>data step4B&#59<br/>_n_ ++ 1&#59<br/>if _n_ LE n then do&#59<br/>set step4A point=_n_&#59<br/>leaddos_1=dos_1&#59<br/>end&#59<br/>set step4A nobs=n end=end&#59<br/>by key_hsn&#59<br/>if end then leaddos_1=.&#59<br/>run&#59<br/>data step4C&#59<br/>set step4B&#59<br/>by key_hsn&#59<br/>if last.key_hsn then do&#59<br/>leaddos_1=.&#59<br/>end&#59<br/>run&#59<br/>data step4D&#59<br/>set step4C&#59<br/>by key_hsn&#59<br/>if first.key_hsn then do&#59<br/>if dos_1 GT leaddos_1 then step=4&#59<br/>&nbsp&nbsp&nbsp&nbsp        else step=9&#59<br/>&nbsp&nbsp&nbsp&nbsp      end&#59<br/>run&#59<br/>proc freq data=step4D&#59<br/>tables step&#59<br/>run&#59<br/>data step4E&#59/*136652 unique people got alloted in step 2*/<br/>set step4D&#59<br/>if step=4&#59<br/>run&#59<br/>proc sort data=step4E out=check nodupkey&#59 by key_hsn&#59 run&#59<br/><br/>/*left out in all above steps assigned randomly*/<br/>Proc sql&#59/*start with 6161 observations, these are going to different doctor but same date and same upc and same physical flag*/ <br/>create table step5 as select * from step4<br/>where key_hsn not in <br/>(select key_hsn from step4E)&#59<br/>quit&#59<br/><br/>proc sort data=step5 out=step5A nodupkey&#59/*6161*/<br/>by key_hsn dos_1 key_doc_num&#59<br/>run&#59<br/>proc sort data=step5A out=FSCtest nodupkey&#59/*130 unique FSC*/<br/>by fsc&#59<br/>run&#59<br/>proc print data=FSCtest noobs&#59<br/>var FSC&#59<br/>run&#59<br/><br/>data step5A&#59<br/>set step5A&#59<br/>random_number=rand('uniform')&#59<br/>run&#59<br/>proc sort data=step5A&#59<br/>by key_hsn descending upc3 descending physical_flag descending dos_1 random_number&#59<br/>run&#59<br/>proc sort data=step5A out=step5B nodupkey&#59/*1679 got allotted based on lower key_doc_num*/<br/>by key_hsn&#59<br/>run&#59<br/>data step5B&#59<br/>set step5B&#59<br/>step=4&#59 /*we still call it step 4*/<br/>run&#59<br/><br/>/*combining steps 2 to 5*/<br/>data steps2to5&#59<br/>set step2E step3E step4E step5B&#59<br/>drop leadupc3 leadphysical_flag leaddos_1&#59<br/>run&#59<br/>proc freq data=steps2to5&#59<br/>table step&#59<br/>run&#59<br/><br/>/*<br/>combining sole provider and step 2, 3 and 4<br/>NOTE: There were 938099 observations read from the data set WORK.AFTER_SOLE_VISITSXZ.<br/>NOTE: There were 192296 observations read from the data set PPR.SOLE_VISITS.<br/>NOTE: The data set WORK.TOGETHER has 1130395 observations and 18 variables.<br/>*/<br/>data together&#59<br/>retain key_hsn key_doc_num total_visits_phy3 total_visits3 upc3 step&#59<br/>set <br/>steps2to5  /*old way was this data: after_sole_visitsxz*/ <br/>ppr.sole_visits&#59<br/>run&#59<br/>proc sort data=together&#59<br/>by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num&#59<br/>run&#59<br/>proc freq data=together&#59 table step&#59 run&#59<br/><br/>/*how many physicians are there?*/<br/>proc sort data=together out=tt1 nodupkey&#59 by key_doc_num&#59 run&#59/*1511*/<br/>proc freq data=together order=freq&#59<br/>tables key_doc_num upc3&#59<br/>run&#59<br/>proc sql noprint&#59 <br/>create table patients1 as <br/>select *, count(key_hsn) as total_patients  <br/>from together<br/>group by key_doc_num<br/>order by key_doc_num&#59<br/>run&#59<br/>data unique_phy_patients&#59<br/>retain key_doc_num key_hsn total_patients total_visits_phy3 total_visits3 upc3 spec spec1 spec_flag FSC physical_flag step&#59<br/>set patients1&#59<br/>if physical_flag=. then physical_flag=9&#59<br/>keep FY key_doc_num key_hsn total_patients total_visits_phy3 total_visits3 upc3 spec spec1 spec_flag FSC physical_flag dos_1 step&#59<br/>run&#59<br/>proc freq data=unique_phy_patients&#59 tables spec spec1 physical_flag&#59 run&#59<br/>proc sort data=unique_phy_patients out=dr nodupkey&#59 by key_doc_num&#59 run&#59/*1511 unique physician total*/<br/>proc sort data=unique_phy_patients&#59 by key_doc_num descending upc3&#59 run&#59<br/><br/>/*Getting Demographic Information*/<br/>%demog_assign(prs_xtrc_dt='02JAN2018'd,<br/>ds_in=unique_phy_patients,<br/>ds_out=unique_phy_patients_demog, <br/>strt_dt_var=dos_1,&nbsp&nbsp&nbsp&nbsp<br/>end_dt_var=dos_1,<br/>geo_file=clean17.phrs_pers_resc_4_jas17_01dec2017,<br/>incl_full_info=N)&#59<br/>data unique_phy_patients_demog&#59<br/>set unique_phy_patients_demog&#59<br/>age_dt='31Mar2018'd&#59<br/>format age_dt date9.&#59<br/>run&#59<br/>%include '/SAS_data/dw0/HQC_share/nsidhu/PPR/sas code/calc_age_discr.sas'&#59<br/>%calc_age_discr(ds_in=unique_phy_patients_demog,ds_out=unique_phy_patients_demog1,refday_var=age_dt,agevar=age)&#59<br/><br/>/*addition of two other ages*/<br/>data unique_phy_patients_demog1&#59<br/>set unique_phy_patients_demog1&#59<br/>age_dt1='31Mar2016'd&#59<br/>format age_dt1 date9.&#59<br/>age_dt2='31Mar2017'd&#59<br/>format age_dt2 date9.&#59<br/>run&#59<br/>%calc_age_discr(ds_in=unique_phy_patients_demog1,ds_out=unique_phy_patients_demog2,refday_var=age_dt1,agevar=age1)&#59<br/>%calc_age_discr(ds_in=unique_phy_patients_demog2,ds_out=unique_phy_patients_demog3,refday_var=age_dt2,agevar=age2)&#59<br/><br/>/*end of age*/<br/>data ppr.unique_phy_patients_demog&#59<br/>retain key_doc_num key_hsn age sex_desc rha urb_rur&#59<br/>set unique_phy_patients_demog3&#59<br/>drop age_dt tot_days mindiff_RHA RHAdays RHAdiff mindiff_Urb_Rur URdays URdiff INCQTL mindiff_INCQTL INCQTLdays INCQTLdiff NATV_STAT_FLAG&#59<br/>run&#59<br/>proc freq data=ppr.unique_phy_patients_demog&#59 <br/>table sex_desc rha urb_rur&#59<br/>run&#59<br/>proc sort data=ppr.unique_phy_patients_demog&#59 by key_doc_num&#59 run&#59<br/><br/>/*just creating missing physician data. In data but NOT in our panel data*/<br/>Proc sql&#59<br/>create table missing_dr as select * from ppr.temp_msb1<br/>where key_hsn not in <br/>(select key_hsn from ppr.unique_phy_patients_demog)&#59<br/>quit&#59<br/>proc sort data=missing_dr out=missing_dr1 nodupkey&#59<br/>by key_doc_num&#59 <br/>run&#59<br/>data ppr.missing_dr&#59<br/>set missing_dr1&#59<br/>keep key_doc_num&#59<br/>run&#59<br/><br/>/************************specialist data****************************/<br/>data specialist&#59<br/>length section $50&#59<br/>set ppr.temp_msb1&#59<br/>where ('01Apr2015'd LE dos_1 LE '31Mar2018'd)&#59<br/>if key_hsn='' then delete&#59<br/>if num_srv=0 then delete&#59<br/>if key_doc_num in:(&slush) then delete&#59<br/>if mode in:(&mode_exc) then delete&#59<br/><br/>     if ('01Apr2015'd LE dos_1 LE '31Mar2016'd) then FY='201516'&#59<br/>else if ('01Apr2016'd LE dos_1 LE '31Mar2017'd) then FY='201617'&#59<br/>else if ('01Apr2017'd LE dos_1 LE '31Mar2018'd) then FY='201718'&#59<br/>else if ('01Apr2018'd LE dos_1 LE '31Mar2019'd) then FY='201819'&#59<br/><br/>if substr(spec,1,1)=\"B\" then section = \"General Practice\"&#59<br/>if substr(spec,1,1)=\"C\" then section = \"Paediatrics\"&#59<br/><br/>if substr(spec,1,2)=\"DK\" then section = \"Neurology\"&#59<br/>if substr(spec,1,2)=\"DL\" then section = \"Cardiology\"&#59<br/>if substr(spec,1,1)=\"D\" and spec not in ('DK', 'DL') then section = \"Internal Medicine\"&#59<br/><br/>if substr(spec,1,1)=\"E\" then section = \"Psychiatry\"&#59<br/>if substr(spec,1,1)=\"F\" then section = \"Dermatology\"&#59<br/>if substr(spec,1,1)=\"G\" then section = \"Medical Genetics\"&#59<br/>if substr(spec,1,1)=\"H\" then section = \"Anaesthesia\"&#59<br/>if substr(spec,1,1)=\"I\" then section = \"Physical Medicine\"&#59<br/>if substr(spec,1,1)=\"K\" then section = \"NeuroSurgery\"&#59<br/><br/>if substr(spec,1,2)=\"LB\" then section = \"General Surgery\"&#59<br/>if substr(spec,1,2)=\"LL\" then section = \"Cardiac Surgery\"&#59<br/><br/>if substr(spec,1,1)=\"M\" then section = \"Orthopaedic Surgery\"&#59<br/>if substr(spec,1,1)=\"N\" then section = \"Plastic & Reconstructive Surgery\"&#59<br/>if substr(spec,1,1)=\"P\" then section = \"Obstetrics & Gynaecology\"&#59<br/>if substr(spec,1,1)=\"R\" then section = \"Urological Surgery\"&#59<br/>if substr(spec,1,1)=\"S\" then section = \"Ophthalmology\"&#59<br/>if substr(spec,1,1)=\"T\" then section = \"Otolaryngology\"&#59<br/>if substr(spec,1,1)=\"X\" then section = \"Diagnostic Radiology & Radiology Oncology\"&#59<br/>if substr(spec,1,1)=\"Y\" then section = \"Therapeutic Radiology & Nuclear Medicine\"&#59<br/>if substr(spec,1,1)=\"V\" then section = \"Laboratory Specialties\"&#59<br/>if substr(spec,1,1)=\"W\" then section = \"Others (NP, RN,etc.)\"&#59<br/><br/>if section NE \"General Practice\"&#59<br/>run&#59<br/>proc sort data=specialist out=ppr.specialist nodupkey&#59 by key_hsn key_doc_num dos_1&#59 run&#59<br/><br/>proc freq data=ppr.specialist&#59 <br/>table SPEC_flag spec*section&#59 <br/>run&#59<br/><br/>data check&#59<br/>set ppr.specialist&#59<br/>if section = \"General Practice\"&#59<br/>run&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-CljcMilWauaTBrim"}]}],"custparents":[{"idx":"MY84805d1e-a9a8-4034-ad9d-bb995777ec44"},{"idx":"MY84805d1e-a9a8-4034-ad9d-bb995777ec44"}]}]}]}