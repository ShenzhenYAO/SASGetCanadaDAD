[{"idx":"ProjectCollection-cmSbt48MqRzD7t79","name":"PhD_PhysicianImpactStatin_20190604","children":[{"idx":"CodeTask-rXaW7KfQgzQfcx1V","name":"VXA_Statin Users","NodeDescription":"///t<br />///s<br />/*VXA. Those receiving Statins between 2011 and 2015*/<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_cohort.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_cohort.sas7bdat)<br />&nbsp&nbsp&nbsp&nbsp);<br />/*%print(data=master_cohort);*/<br />/*%nobs(data=master_cohort);*/<br />/*%minmax(data=master_cohort, var=dqdate, format=date9., target=test1, m=max);*/<br /><br /><br />/*applying inclusion and exclusion criteria*/<br /><br />%print(data=master_cohort);<br /><br />/*keep the relevant cols*/<br />data VXA;<br />&nbsp&nbsp&nbsp&nbspset master_cohort;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn dqdate RHA sex_desc mari_stat_desc fam_no birth age fsa nh_name nh_number QAIPPE resitype;<br />&nbsp&nbsp&nbsp&nbsprename dqdate = EntryDate;<br />run;<br />/*46492*/<br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXa.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXa.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br />/*<br />The following exclusion has been applied during cohort creation<br />missing age sex<br />age < 18 at entry<br />not continuously covered during washout (5 years) or 2 years follow up<br />(including those deceased)<br />Receiving statin within washout (5 years)<br />*/<br /><br />/*Stay in long term care within lookback or follow up?<br />&nbsp&nbsp&nbsp&nbspmaybe not need to apply. Othewise think about get it in the cohort building period<br />*/<br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-gbhiLx1DedOwRO4o","name":"VXB_Encounter Episodes","NodeDescription":"///t<br />///s<br />/*VXB, get all encounter episodes, indicated by whether or not being CME, and type of provider (PCP, SCP, OTH)*/<br />data _null_;run;<br />/*1. MSB claims of patients in the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxa.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxa.sas7bdat)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br />);<br /><br />/*get msb claims within lookback and follow up (i.e. +/- 365 days around entryDate*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_msb,<br />&nbsp&nbsp&nbsp&nbspt2=vxa,<br />&nbsp&nbsp&nbsp&nbsptarget=vxb1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.entryDate),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.EntryDate-365 and t2.EntryDate +365-1)<br />);<br /><br />/*from above, get eligible service claims (see appendix 2)*/<br />data vxb2;<br />&nbsp&nbsp&nbsp&nbspset vxb1;<br />&nbsp&nbsp&nbsp&nbspwhere<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnum_srv ne 0<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLOS NOT in ('B','2','K','9')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMODE ne 'Z'<br />&nbsp&nbsp&nbsp&nbsp;<br />run;<br /><br />/*excluding claims without doc number, or by slush doc codes, anyway these claims are difficult to calculate encounter episodes*/<br />data vxb3;<br />&nbsp&nbsp&nbsp&nbspset vxb2;<br />&nbsp&nbsp&nbsp&nbspwhere key_doc_num ne '' and DocSlushCode = 'N';<br />run;<br /><br />/*get the number of encounter episode (a distinct patient-doc-dos is an episode)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.get distinct patient doc dos and spec*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=vxb3, target=vxb4, vars=%str(key_hsn, entryDate, key_doc_num, dos, spec), orderby=%str(key_hsn,key_doc_num, dos, spec)); <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*996640*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2. the above may have the same doc as diff SPEC onthe same day, in that case, choose the first record*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata VXB5;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VXB4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_hsn key_doc_num dos spec;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.dos;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*996492*/<br /><br />/*Vxb5 contains all encounters*/<br />&nbsp&nbsp&nbsp&nbsp%print(data=vxb5);<br /><br />/*determine whether the encounter episodes are with a PCP or SCP (appendix 3 and 4)*/<br />data VXB6;<br />&nbsp&nbsp&nbsp&nbspset vxb5;<br />&nbsp&nbsp&nbsp&nbspif spec in:('B') then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProviderType_DateSpecific = 'PCP'; /*Family physician or primary care provider*/<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec in ('CL','DL') then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProviderType_DateSpecific = 'SCP'; /*Specialist*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse ProviderType_DateSpecific = 'OTH'; /*Other*/<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br />%freq(data=vxb6, table=ProviderType_DateSpecific);<br />/*vxb6 contains all encounters, the provider indicated as PCP, SCP, or OTH*/<br />/*996492*/<br /><br />/*indicate the CME providers, FSC code in Appendix 5*/<br />data vxb7;<br />&nbsp&nbsp&nbsp&nbspset vxb3;<br />&nbsp&nbsp&nbsp&nbspif fsc in ('B003','B064','B052', 'B004');<br />run;<br />/*get encounter episodes of CME (i.e., distinct patient-provider-date)*/<br />%distinct(data=vxb7, target=vxb8, vars=%str(key_hsn, key_doc_num, dos));<br /><br />/*all VXB8 should be in vxb5*/<br />%compAB(a=vxb5, b=vxb8, target=test, vars=%str(key_hsn key_doc_num dos));<br />/*Yes, all CME episodes can be found in vxb5*/<br /><br />/*link vxb8 to vxb6 to indicate the CME episodes*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=vxb6,<br />&nbsp&nbsp&nbsp&nbspt2=vxb8,<br />&nbsp&nbsp&nbsp&nbsptarget=vxb,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn='', 0,1) as CME),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn dos key_doc_num<br />);<br />%freq(data=vxb, table=cme*ProviderType_DateSpecific);<br />/*996492*/<br />/*!!! VXB contains all encounter episodes, indicated whether or not a CME, also indicated type of provider*/<br />/*however don't get confused!<br />&nbsp&nbsp&nbsp&nbspA doctors can be both a CMEP, or not; can be a PCP, SCP, or OTH<br />&nbsp&nbsp&nbsp&nbspThese classifications are episode-specific (i.e., patient and service date specific) <br />*/<br /><br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXb.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXb.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br />s///<br />t///","children":[{"idx":"CodeTask-JZFzNfMpOGC6Bx7D","name":"VXCL_ProviderType Lookback","NodeDescription":"///t<br>///s&nbsp;<br>/*VXC_L determine the Adjusted Provider Type during look back*/<br>data _null_;run;<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxa.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxa.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>/*the upc index has to been caculated separately for look-back and for follow up*/<br><br>/*UPC in look-back*/<br>/*From vxb, get claims with 365 days prior to the index(entryDate) */<br>data VXC_L1;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate - 365 and entryDate -1;<br>run;<br><br>/*<br>&nbsp;&nbsp;&nbsp;&nbsp;As aforementioned in program vxb, the doc type is specific by dos, which means that<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a doc can be pcp, as well as scp during the look back<br>*/<br>/*in VXC_L1 (eposides in look back), how is the physician patterns? <br>&nbsp;&nbsp;&nbsp;&nbsp;as PCP, as SCP, as both PCP and SCP, as PCP, SCP, and OTH<br>&nbsp;&nbsp;&nbsp;&nbsp;To illustrate, let's transpose the data, make the PCP, SCP, and OTH in separate columns<br>*/<br>%print(data=VXC_L1);<br>/*count the ProviderType_DateSpecific*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXC_L1,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXC_L2,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific, count(ProviderType_DateSpecific) as count),<br>&nbsp;&nbsp;&nbsp;&nbsp;groupby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific),<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific)<br>);<br>%transpose(data = VXC_L2, target=VXC_L4, <br>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn EntryDate Key_doc_num ,<br>&nbsp;&nbsp;&nbsp;&nbsp;colhead=ProviderType_DateSpecific,<br>&nbsp;&nbsp;&nbsp;&nbsp;contents=count<br>)<br>/*add a column to illustrate the # of provider types for a link of patient-physician*/<br>data VXC_L5;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L4;<br>&nbsp;&nbsp;&nbsp;&nbsp;countProviderType = sum(pcp/pcp,scp/scp,oth/oth); /*this sum function is smart :-)*/<br>run;<br><br>%freq(data=VXC_L5, table = countProviderType);<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L5;<br>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderType&gt;1;<br>run;<br>/*only a few cases are of multiple provider types in a link of patient-physician<br>&nbsp;&nbsp;&nbsp;&nbsp;most are that physicians acting as both PCP and OTH, the rest as a few SCP and OTH<br>&nbsp;&nbsp;&nbsp;&nbsp;there is no situation of PCP and SCP<br>&nbsp;&nbsp;&nbsp;&nbsp;It sounds logic here to set the rule that:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if the physician used to be PCP during followup, make it PCP<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else, if the physician used to be SCP, make it SCP<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else make it OTH<br>*/<br>data VXC_L6;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L5;<br>&nbsp;&nbsp;&nbsp;&nbsp;if PCP ne . then ProviderType = 'PCP';<br>&nbsp;&nbsp;&nbsp;&nbsp;else if SCP ne . then ProviderType = 'SCP';<br>&nbsp;&nbsp;&nbsp;&nbsp;else ProviderType='OTH';<br>run;<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_L6;<br>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderTYpe &gt;1;<br>run;<br>/*sounds make sense*/<br><br>/*why don't determine the adjusted ProviderType in VXB?<br>&nbsp;&nbsp;&nbsp;&nbsp;because such providerType is study period specific. Here is for lookback. Latter for followup it has to be determined again<br>*/<br><br><br>/*get a distinct list of patient-physician and providerTypeL (in lookback)*/<br>%distinct(data = VXC_L6, target=VXC_L, vars=%str(key_hsn, key_doc_num, ProviderType as ProviderTypeL));<br>/*Note that not all cohort members had doctors with defined ProviderTypeL, because some patients do not have<br>&nbsp;&nbsp;&nbsp;&nbsp;eligible encounters during look back<br>*/<br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXC_L.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXC_L.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br><br>s///<br>t///","children":[{"idx":"CodeTask-eMS7CaKemHLL3NE7","name":"VXDL_UPCIndex UPCPL","NodeDescription":"///t<br>///s&nbsp;<br>/*VXD_L determine the upc index and UPCPL (for look back period)*/<br>data _null_;run;<br>/*Provider Type*/<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxc_L.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxc_L.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxa.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxa.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>/*the upc index has to been caculated separately for look-back and for follow up*/<br><br>/*UPC in look-back*/<br>/*From vxb, get claims with 365 days prior to the index(entryDate) */<br>data VXD_L1;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate - 365 and entryDate -1;<br>run;<br><br>/*calculate the UPC index from encounter episodes in look back*/<br>/*the macro getUPCIndex works for MSB claim data, and other data<br>&nbsp;&nbsp;&nbsp;&nbsp;for MSB claim data, the LOS, MODE, SPEC, and NUM_SRV must be provided<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the excluding LOC, excluding MODE, and including SPEC must be provided<br>&nbsp;&nbsp;&nbsp;&nbsp;for other data (like in this case, the episodes have been prepared, or like prescription data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify the claimType as others, and do not need to specify LOS,MODE exclusion, and SPEC<br>&nbsp;&nbsp;&nbsp;&nbsp;By default, the target file contains the doc with the max UPCIndex<br>&nbsp;&nbsp;&nbsp;&nbsp;but this is not what is wanted here. <br>&nbsp;&nbsp;&nbsp;&nbsp;For this analysis, it is expected to keep all docs, from which those as PCP, and with Max UPC Index will be kept<br>&nbsp;&nbsp;&nbsp;&nbsp;so the interested data set is not the target, but the tmp5 file created by the macro&nbsp;&nbsp;&nbsp;&nbsp;<br>*/<br>%getUPCIndex(<br>&nbsp;&nbsp;&nbsp;&nbsp;data=VXD_L1, <br>&nbsp;&nbsp;&nbsp;&nbsp;target=vx2_notInterested,<br>&nbsp;&nbsp;&nbsp;&nbsp;claimType=others,<br>&nbsp;&nbsp;&nbsp;&nbsp;debug=1<br>);<br>/*197502*/<br><br>/*Determine the UPCPL*/<br>/*link the providerTYpe to getUPC_tmp5 */<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=getUPC_tmp5,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXC_L,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXD_L7,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.providerTYpeL),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn key_doc_num,<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, upcIndex )<br>);<br>/*197502*/<br><br>/*from above, keep only those of providerType = 'PCP'*/<br>data VXD_L8;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXD_L7;<br>&nbsp;&nbsp;&nbsp;&nbsp;if providerTypeL = 'PCP';<br>run;<br><br>/*for each patient, determine the highest UPC index*/<br>data vxd_L9;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxd_L8;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn UPCIndex;<br>&nbsp;&nbsp;&nbsp;&nbsp;if last.key_hsn;<br>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn UPCIndex;<br>run;<br><br>/*Link the highest upc index back to vxd_L8 to keep patient-doc links with the highest UPC index<br>(there could be multiple physicians with tie index values for a single patient)*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=vxd_l8,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=vxd_L9,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=vxd_l10,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars= key_hsn UPCIndex,<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, key_doc_num) <br>);<br><br>/*determine the UPCPL. In case of tie, get UPCPL1, UPCPL2, ....<br>&nbsp;&nbsp;&nbsp;&nbsp; in case of tie, there will be multiple UPCPLs<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each UPCPL <br>&nbsp;&nbsp;&nbsp;&nbsp;and we'll need these values for each UPCPL<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Following is a smart idea:<br>&nbsp;&nbsp;&nbsp;&nbsp;1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \";\"<br>&nbsp;&nbsp;&nbsp;&nbsp;2) make a tag of UPCPL1, 2, etc<br>*/<br>data vxd_L11;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxd_L10;<br>&nbsp;&nbsp;&nbsp;&nbsp;format UPCIndex 6.2;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn ;<br>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_hsn then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i =1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UPCPL='UPCPL' || strip(i);&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;else do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i+1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UPCPL='UPCPL' || strip(i);<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i;<br>&nbsp;&nbsp;&nbsp;&nbsp;/*combine the var values together*/<br>&nbsp;&nbsp;&nbsp;&nbsp;length theStr $50.; <br>&nbsp;&nbsp;&nbsp;&nbsp;theStr = catx(':', key_doc_num, N_Visits, ProviderTypeL, put(UPCIndex, 6.2));<br>&nbsp;&nbsp;&nbsp;&nbsp;rename T_visits=T_visitsL;<br>run;<br><br>/*now we can transpose the string in theStr into columsn of UPCPL1, 2, ...<br>&nbsp;&nbsp;&nbsp;&nbsp;The values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br>&nbsp;&nbsp;&nbsp;&nbsp;(i.e., scan(UPCPL1, 1, \":\") is the key_doc_num of UPCPL1, scan(UPCPL1, 2, \";\") is the n_visits of UPCPL1, etc<br>*/<br>%transpose(data = vxd_L11, target=vxd_L12, <br>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn T_VisitsL  ,<br>&nbsp;&nbsp;&nbsp;&nbsp;colhead=UPCPL,<br>&nbsp;&nbsp;&nbsp;&nbsp;contents= theStr<br>)<br>/*43411*/<br><br>/*example to get upcindex of upcpl1*/<br>/*<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxd_L12 (obs=1);<br>&nbsp;&nbsp;&nbsp;&nbsp;UPCIndex_UPCPL1= scan(UPCPL1, 4, ':');<br>run;<br>*/<br><br>/*The docs in VXD_L12 are UPCPLs, link them back to VXA (the cohort)*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXA,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXD_L12,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXD_L13,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=*,<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br>/*There are patients not having UPCPL, because these patients do not have eligible encounter during look back<br>&nbsp;&nbsp;&nbsp;&nbsp;In that case, indicate as 'none'<br>*/<br><br>data VXD_L;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXD_L13;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp{*} UPCPL:;<br>&nbsp;&nbsp;&nbsp;&nbsp;do i = 1 to dim(tmp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if tmp(i)='' then tmp(i)='na:.:na:.';<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i&nbsp;&nbsp;&nbsp;&nbsp;<br>run;<br>/*46492*/<br><br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXD_L.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXD_L.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br><br>s///<br>t///","children":[{"idx":"Note-1jCl1s6PYPIIVUd9","name":"Note (3)","NodeDescription":"///t<br />For&nbspUPCIndex,&nbspexcluding&nbspthose&nbsponly&nbsphave&nbsp1&nbspencounter?no,&nbspotherwise&nbspthe&nbsponly&nbspPCP&nbspwon't&nbspbe&nbspidentified,&nbspeven&nbspif&nbspthe&nbspdoc&nbspis&nbspthere.&nbspThis&nbspis&nbspunfairDealing&nbspwith&nbspReferral,&nbspgroup&nbsppracticingStandardization&nbspof&nbspUPCCOCSEquence...&nbsp<br />t///","custparents":[{"idx":"CodeTask-eMS7CaKemHLL3NE7"}]},{"idx":"CodeTask-WOlheZQueJ48Okz7","name":"VXEL_CMEPL","NodeDescription":"///t<br>///s&nbsp;<br>/*CMEPL during look back*/<br>data _null_;run;<br><br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXD_F.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXD_F.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXC_L.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXC_L.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>/*from VXB, get encounter episodes indicated as CME during look back */<br>data VXE_L1;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate - 365 and entryDate -1 and CME=1;<br>run;<br><br>/*sort by days between service date entryDate, and determine the closest CME to EntryDate*/<br>data VXE_L2;<br>&nbsp;&nbsp;&nbsp;&nbsp;set Vxe_l1;<br>&nbsp;&nbsp;&nbsp;&nbsp;CMEDaysToEntry = intck('day', dos, entrydate); /*date2 - date1*/<br>&nbsp;&nbsp;&nbsp;&nbsp;/*in the above data, the provider type is date specific, which is not to be used...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(there could be a doc whose date specific provider type is OTH, but is defined as PCP for the whole look back,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in that case, it is more porper to use the provider type of the whole period (i.e., PCP))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The whole-period provider type is made in VXC_L, which will be linked later<br>&nbsp;&nbsp;&nbsp;&nbsp;*/<br>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn key_doc_num EntryDate CMEDaysToEntry;<br>run; <br><br>/*Determine the CMEPL*/<br>/*link the providerTYpe to VXE_L2 */<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXE_L2,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXC_L,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXE_L7,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.providerTYpeL),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn key_doc_num,<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, key_doc_num, CMEDaysToEntry )<br>);<br>/*21924*/<br><br>/*from above, keep only those of providerType = 'PCP'*/<br>data VXE_L8;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_L7;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn key_doc_num CMEDaysToEntry;<br>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_doc_num;<br>&nbsp;&nbsp;&nbsp;&nbsp;if providerTypeL = 'PCP';<br>run;<br><br>/*shall we keep only the CMEPL closer to the entry date? or any CMEPL during look back<br>&nbsp;&nbsp;&nbsp;&nbsp;It seems that keeping any makes more sense<br>*/<br><br>/*determine the CMEPL. In case of tie, get CMEPL1, CMEP2, ....<br>&nbsp;&nbsp;&nbsp;&nbsp; in case of tie, there will be multiple CMEPLs<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each CMEPL <br>&nbsp;&nbsp;&nbsp;&nbsp;and we'll need these values for each CMEPL<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Following is a nice idea:<br>&nbsp;&nbsp;&nbsp;&nbsp;1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \";\"<br>&nbsp;&nbsp;&nbsp;&nbsp;2) make a tag of CMEPL1, 2, etc<br>*/<br>data vxe_L11;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxe_L8;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn ;<br>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_hsn then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i =1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CMEPL='CMEPL' || strip(i);&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;else do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i+1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CMEPL='CMEPL' || strip(i);<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i;<br>&nbsp;&nbsp;&nbsp;&nbsp;/*combine the var values together*/<br>&nbsp;&nbsp;&nbsp;&nbsp;length theStr $50.; <br>&nbsp;&nbsp;&nbsp;&nbsp;theStr = catx(':', key_doc_num, CMEDaysToEntry, ProviderTypeL);<br>run;<br><br>/*now we can transpose the string in theStr into columsn of CMEPL1, 2, ...<br>&nbsp;&nbsp;&nbsp;&nbsp;The values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br>&nbsp;&nbsp;&nbsp;&nbsp;(i.e., scan(CMEPL1, 1, \":\") is the key_doc_num of CMEPL1, scan(CMEPL1, 2, \";\") is the n_visits of CMEPL1, etc<br>*/<br>%transpose(data = vxe_L11, target=vxe_L12, <br>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn EntryDate  ,<br>&nbsp;&nbsp;&nbsp;&nbsp;colhead=CMEPL,<br>&nbsp;&nbsp;&nbsp;&nbsp;contents= theStr<br>)<br>/*16832*/<br><br>/*example to get provider type of CMEPL1*/<br>/*<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxe_L12 (obs=1);<br>&nbsp;&nbsp;&nbsp;&nbsp;ProviderType_CMEPL1= scan(CMEPL1, 3, ':');<br>run;<br>*/<br><br>/*The docs in VXE_L12 are CMEPLs, link them back to VXD_F (the cohort)*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXD_F,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXE_L12,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXE_L13,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=*,<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br>/*There are patients not having CMEPL, because these patients do not have eligible encounter during look back<br>&nbsp;&nbsp;&nbsp;&nbsp;In that case, indicate as 'none'<br>*/<br><br>data VXE_L;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_L13;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp{*} CMEPL:;<br>&nbsp;&nbsp;&nbsp;&nbsp;do i = 1 to dim(tmp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if tmp(i)='' then tmp(i)='na:.:na';<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i&nbsp;&nbsp;&nbsp;&nbsp;<br>run;<br>/*46492*/<br><br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXE_L.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXE_L.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br><br><br><br>s///<br>t///","children":[{"idx":"Note-5ZnDqrKwGwkNqW76","name":"Note (2)","NodeDescription":"///t<br />How&nbspto&nbspdeal&nbspwith&nbspmultiple&nbspCME&nbspprovidersIs&nbspit&nbspworthy&nbspto&nbspaccount&nbspfor&nbspthe&nbsp#&nbspof&nbspCMEsIf&nbspdoc&nbspA&nbspis&nbspa&nbspCME&nbspprovider,&nbspbut&nbspnot&nbspof&nbspthe&nbspclosest&nbspCME,&nbspis&nbspit&nbspfine&nbspto&nbspignore&nbspit?All&nbspCME&nbspproviders&nbspduring&nbspthe&nbspperiod&nbspare&nbspkept<br />t///"}],"custparents":[{"idx":"CodeTask-jZobJlVFsLEwSeaJ"},{"idx":"CodeTask-gbhiLx1DedOwRO4o"}]}],"custparents":[{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"}]}],"custparents":[{"idx":"CodeTask-rXaW7KfQgzQfcx1V"},{"idx":"CodeTask-gbhiLx1DedOwRO4o"}]},{"idx":"CodeTask-fTiJ1wEyUDGKYnqu","name":"VXCF_ProviderType Followup","NodeDescription":"///t<br>///s<br>/*VXC_F determine the Adjusted Provider Type during Follow up*/<br>data _null_;run;<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxc_L.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxc_L.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>/*From vxb, get claims with 365 days since the index(entryDate) */<br>data VXC_F1;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate  and entryDate +365 -1;<br>run;<br><br>/*<br>&nbsp;&nbsp;&nbsp;&nbsp;As aforementioned in program vxb, the doc type is specific by dos, which means that<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a doc can be pcp, as well as scp during the Follow up<br>*/<br>/*in VXC_F1 (eposides in Follow up), how is the physician patterns? <br>&nbsp;&nbsp;&nbsp;&nbsp;as PCP, as SCP, as both PCP and SCP, as PCP, SCP, and OTH<br>&nbsp;&nbsp;&nbsp;&nbsp;To illustrate, let's transpose the data, make the PCP, SCP, and OTH in separate columns<br>*/<br>%print(data=VXC_F1);<br>/*count the ProviderType_DateSpecific*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXC_F1,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXC_F2,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific, count(ProviderType_DateSpecific) as count),<br>&nbsp;&nbsp;&nbsp;&nbsp;groupby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific),<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, EntryDate, Key_doc_num, ProviderType_DateSpecific)<br>);<br>%transpose(data = VXC_F2, target=VXC_F4, <br>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn EntryDate Key_doc_num ,<br>&nbsp;&nbsp;&nbsp;&nbsp;colhead=ProviderType_DateSpecific,<br>&nbsp;&nbsp;&nbsp;&nbsp;contents=count<br>)<br>/*add a column to illustrate the # of provider types for a link of patient-physician*/<br>data VXC_F5;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F4;<br>&nbsp;&nbsp;&nbsp;&nbsp;countProviderType = sum(pcp/pcp,scp/scp,oth/oth); /*this sum function is smart :-)*/<br>run;<br><br>%freq(data=VXC_F5, table = countProviderType);<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F5;<br>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderType&gt;1;<br>run;<br>/*only a few cases are of multiple provider types in a link of patient-physician<br>&nbsp;&nbsp;&nbsp;&nbsp;most are that physicians acting as both PCP and OTH, the rest as a few SCP and OTH<br>&nbsp;&nbsp;&nbsp;&nbsp;there is no situation of PCP and SCP<br>&nbsp;&nbsp;&nbsp;&nbsp;It sounds logic here to set the rule that:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if the physician used to be PCP during followup, make it PCP<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else, if the physician used to be SCP, make it SCP<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else make it OTH<br>*/<br>data VXC_F6;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F5;<br>&nbsp;&nbsp;&nbsp;&nbsp;if PCP ne . then ProviderType = 'PCP';<br>&nbsp;&nbsp;&nbsp;&nbsp;else if SCP ne . then ProviderType = 'SCP';<br>&nbsp;&nbsp;&nbsp;&nbsp;else ProviderType='OTH';<br>run;<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXC_F6;<br>&nbsp;&nbsp;&nbsp;&nbsp;if countProviderTYpe &gt;1;<br>run;<br>/*sounds make sense*/<br><br>/*why don't determine the adjusted ProviderType in VXB?<br>&nbsp;&nbsp;&nbsp;&nbsp;because such providerType is study period specific. Here is for lookback. Latter for followup it has to be determined again<br>*/<br><br><br>/*get a distinct list of patient-physician and providerTypeR (in follow up)*/<br>%distinct(data = VXC_F6, target=VXC_F, vars=%str(key_hsn, key_doc_num, ProviderType as ProviderTypeF));<br>/*Note that not all cohort members had doctors with defined ProviderTypeF, because some patients do not have<br>&nbsp;&nbsp;&nbsp;&nbsp;eligible encounters during follow up<br>*/<br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXC_F.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXC_F.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br>s///<br>t///","custparents":[{"idx":"CodeTask-gbhiLx1DedOwRO4o"}],"children":[{"idx":"CodeTask-jZobJlVFsLEwSeaJ","name":"VXDF_UPCIndex UPCPF","NodeDescription":"///t<br>///s&nbsp;&nbsp;<br>/*VXD_F determine the upc index and UPCPF (for Follow-up period)*/<br><br><br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXC_F.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXC_F.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXD_L.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXD_L.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>/*UPC in follow up*/<br>/*From vxb, get claims with 365 days since to the index(entryDate) */<br>data VXD_F1;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate  and entryDate +365 -1;<br>run;<br><br>/*calculate the UPC index from encounter episodes in follow up*/<br>/*the macro getUPCIndex works for MSB claim data, and other data<br>&nbsp;&nbsp;&nbsp;&nbsp;for MSB claim data, the LOS, MODE, SPEC, and NUM_SRV must be provided<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the excluding LOC, excluding MODE, and including SPEC must be provided<br>&nbsp;&nbsp;&nbsp;&nbsp;for other data (like in this case, the episodes have been prepared, or like prescription data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify the claimType as others, and do not need to specify LOS,MODE exclusion, and SPEC<br>&nbsp;&nbsp;&nbsp;&nbsp;By default, the target file contains the doc with the max UPCIndex<br>&nbsp;&nbsp;&nbsp;&nbsp;but this is not what is wanted here. <br>&nbsp;&nbsp;&nbsp;&nbsp;For this analysis, it is expected to keep all docs, from which those as PCP, and with Max UPC Index will be kept<br>&nbsp;&nbsp;&nbsp;&nbsp;so the interested data set is not the target, but the tmp5 file created by the macro&nbsp;&nbsp;&nbsp;&nbsp;<br>*/<br>%getUPCIndex(<br>&nbsp;&nbsp;&nbsp;&nbsp;data=VXD_F1, <br>&nbsp;&nbsp;&nbsp;&nbsp;target=vx2_notInterested,<br>&nbsp;&nbsp;&nbsp;&nbsp;claimType=others,<br>&nbsp;&nbsp;&nbsp;&nbsp;debug=1<br>);<br>/*210785*/<br><br>/*why don't determine the adjusted ProviderType in VXB?<br>&nbsp;&nbsp;&nbsp;&nbsp;because such providerType is study period specific. Here is for follow up. Latter for followup it has to be determined again<br>*/<br><br>/*Now we can determine the UPCPF*/<br>/*link the providerTYpe_adj to getUPC_tmp5 */<br>/*%Print(data=getUPC_tmp5);*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=getUPC_tmp5,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXC_F,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXD_F7,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.providerTYpeF),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn key_doc_num,<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, upcIndex )<br>);<br>/*210785*/<br><br>/*from above, keep only those of providerTypeF = 'PCP'*/<br>data VXD_F8;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXD_F7;<br>&nbsp;&nbsp;&nbsp;&nbsp;if providerTypeF = 'PCP';<br>run;<br><br><br>/*for each patient, determine the highest UPC index*/<br>data vxd_F9;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxd_F8;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn UPCIndex;<br>&nbsp;&nbsp;&nbsp;&nbsp;if last.key_hsn;<br>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn UPCIndex;<br>run;<br><br>/*Link the highest upc index back to vxd_F8 to keep patient-doc links with the highest UPC index<br>(there could be multiple physicians with tie index values for a single patient)*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=vxd_F8,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=vxd_F9,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=vxd_F10,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars= key_hsn UPCIndex,<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, key_doc_num) <br>);<br><br>/*determine the UPCPF. In case of tie, get UPCPF1, UPCPF2, ....<br>&nbsp;&nbsp;&nbsp;&nbsp; in case of tie, there will be multiple UPCPFs<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each UPCPF <br>&nbsp;&nbsp;&nbsp;&nbsp;and we'll need these values for each UPCPF<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Following is a smart idea:<br>&nbsp;&nbsp;&nbsp;&nbsp;1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \";\"<br>&nbsp;&nbsp;&nbsp;&nbsp;2) make a tag of UPCPF1, 2, etc<br>*/<br>data vxd_F11;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxd_F10;<br>&nbsp;&nbsp;&nbsp;&nbsp;format UPCIndex 6.2;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn ;<br>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_hsn then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i =1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UPCPF='UPCPF' || strip(i);&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;else do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i+1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UPCPF='UPCPF' || strip(i);<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i;<br>&nbsp;&nbsp;&nbsp;&nbsp;/*combine the var values together*/<br>&nbsp;&nbsp;&nbsp;&nbsp;length theStr $50.; <br>&nbsp;&nbsp;&nbsp;&nbsp;theStr = catx(':', key_doc_num, N_Visits, ProviderTypeF, put(UPCIndex, 6.2));<br>&nbsp;&nbsp;&nbsp;&nbsp;rename T_visits=T_visitsF;<br>run;<br><br>/*now we can transpose the string in theStr into columsn of UPCPF1, 2, ...<br>&nbsp;&nbsp;&nbsp;&nbsp;The values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br>&nbsp;&nbsp;&nbsp;&nbsp;(i.e., scan(UPCPF1, 1, \":\") is the key_doc_num of UPCPF1, scan(UPCPF1, 2, \";\") is the n_visits of UPCPF1, etc<br>*/<br>%transpose(data = vxd_F11, target=vxd_F12, <br>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn T_VisitsF  ,<br>&nbsp;&nbsp;&nbsp;&nbsp;colhead=UPCPF,<br>&nbsp;&nbsp;&nbsp;&nbsp;contents= theStr<br>)<br>/*44610*/<br>/*a patient can have as many as 16 tied UPCPF1*/<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxd_f12;<br>&nbsp;&nbsp;&nbsp;&nbsp;if upcPF16 ne '';<br>run;<br><br>/*example to get upcindex of UPCPF1*/<br>/*<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxd_F12 (obs=1);<br>&nbsp;&nbsp;&nbsp;&nbsp;UPCIndex_UPCPF1= scan(UPCPF1, 4, ':');<br>run;<br>*/<br><br>/*The docs in VXD_F12 are UPCPFs, link them back to VXD_L (the cohort)*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXD_L,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXD_F12,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXD_F13,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=*,<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br>/*There are patients not having UPCPF, because these patients do not have eligible encounter during look back<br>&nbsp;&nbsp;&nbsp;&nbsp;In that case, indicate as 'none'<br>*/<br><br>data VXD_F;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXD_F13;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp{*} UPCPF:;<br>&nbsp;&nbsp;&nbsp;&nbsp;do i = 1 to dim(tmp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if tmp(i)='' then tmp(i)='na:.:na:.';<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i&nbsp;&nbsp;&nbsp;&nbsp;<br>run;<br>/*46492*/<br><br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXD_F.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXD_F.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>/*determine whether there is a tie in UPC Index*/<br>data VXD_F9;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXD_F8;<br>&nbsp;&nbsp;&nbsp;&nbsp;lagUpcIndex = lag(UpcIndex);<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn UpcIndex;<br>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_hsn then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tie =0;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lagUpcIndex=.;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;else do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if lagUpcIndex ne UPCIndex then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tie=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else tie=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop lagUpcIndex;<br>run;<br><br><br>/*From above, keep the PCP with the highest UPCIndex*/<br>data VXD_F10;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXD_F9;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn  upcIndex;<br>&nbsp;&nbsp;&nbsp;&nbsp;if last.key_hsn;<br>&nbsp;&nbsp;&nbsp;&nbsp;if tie=1 then key_doc_num='tie';<br>run;<br>/*44610*/<br><br>/*The docs in VXD_F10 are UPCPFs, link them back to VXC_L (the cohort)*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXD_L,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXD_F10,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXD_F11,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.key_doc_num as UPCPF, t2.UPCIndex as UPCIndex_F),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br><br><br>/*There are patients not having UPCPF, because these patients do not have eligible encounter during follow up<br>&nbsp;&nbsp;&nbsp;&nbsp;In that case, indicate as 'none'<br>*/<br>data VXD_F;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXD_F11;<br>&nbsp;&nbsp;&nbsp;&nbsp;length UPCPF $11.;<br>&nbsp;&nbsp;&nbsp;&nbsp;if UPCPF='' then UPCPF='none';<br>run;<br>/*46492*/<br><br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXD_F.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXD_F.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br><br><br>s///<br>t///","children":[{"idx":"CodeTask-1SpxtlXR8T5jchis","name":"VXEF_CMEPF","NodeDescription":"///t<br>///s&nbsp;<br>/*CMEPF during follow up*/<br>data _null_;run;<br><br><br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXE_L.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXE_L.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>&nbsp;&nbsp;&nbsp;&nbsp;%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXC_F.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXC_F.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxb.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxb.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>/*from VXB, get encounter episodes indicated as CME during follow up */<br>data VXE_F1;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxb;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between entryDate and entryDate  +365 -1 and CME=1;<br>run;<br><br>/*sort by days between service date entryDate, and determine the closest CME to EntryDate*/<br>data VXE_F2;<br>&nbsp;&nbsp;&nbsp;&nbsp;set Vxe_F1;<br>&nbsp;&nbsp;&nbsp;&nbsp;CMEDaysToEntry = intck('day',  entrydate, dos); /*date2 - date1*/<br>&nbsp;&nbsp;&nbsp;&nbsp;/*in the above data, the provider type is date specific, which is not to be used...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(there could be a doc whose date specific provider type is OTH, but is defined as PCP for the whole follow up,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in that case, it is more porper to use the provider type of the whole period (i.e., PCP))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The whole-period provider type is made in VXC_F, which will be linked later<br>&nbsp;&nbsp;&nbsp;&nbsp;*/<br>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn key_doc_num EntryDate CMEDaysToEntry;<br>run; <br><br>/*Determine the CMEPF*/<br>/*link the providerTYpe to VXE_F2 */<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXE_F2,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXC_F,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXE_F7,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.providerTYpeF),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn key_doc_num,<br>&nbsp;&nbsp;&nbsp;&nbsp;orderby=%str(key_hsn, key_doc_num, CMEDaysToEntry )<br>);<br>/*30045*/<br><br>/*from above, keep only those of providerType = 'PCP'*/<br>data VXE_F8;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F7;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn key_doc_num CMEDaysToEntry;<br>&nbsp;&nbsp;&nbsp;&nbsp;if last.key_doc_num;<br>&nbsp;&nbsp;&nbsp;&nbsp;if providerTypeF = 'PCP';<br>run;<br><br>/*shall we keep only the CMEPF closer to the entry date? or any CMEPF during follow up<br>&nbsp;&nbsp;&nbsp;&nbsp;It seems that keeping any makes more sense<br>*/<br><br>/*determine the CMEPF. In case of tie, get CMEPF1, CMEP2, ....<br>&nbsp;&nbsp;&nbsp;&nbsp; in case of tie, there will be multiple CMEPFs<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each CMEPF <br>&nbsp;&nbsp;&nbsp;&nbsp;and we'll need these values for each CMEPF<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Following is a nice idea:<br>&nbsp;&nbsp;&nbsp;&nbsp;1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \";\"<br>&nbsp;&nbsp;&nbsp;&nbsp;2) make a tag of CMEPF1, 2, etc<br>*/<br>data VXE_F11;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F8;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn ;<br>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_hsn then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i =1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CMEPF='CMEPF' || strip(i);&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;else do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i+1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CMEPF='CMEPF' || strip(i);<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i;<br>&nbsp;&nbsp;&nbsp;&nbsp;/*combine the var values together*/<br>&nbsp;&nbsp;&nbsp;&nbsp;length theStr $50.; <br>&nbsp;&nbsp;&nbsp;&nbsp;theStr = catx(':', key_doc_num, CMEDaysToEntry, ProviderTypeF);<br>run;<br><br>/*now we can transpose the string in theStr into columsn of CMEPF1, 2, ...<br>&nbsp;&nbsp;&nbsp;&nbsp;The values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br>&nbsp;&nbsp;&nbsp;&nbsp;(i.e., scan(CMEPF1, 1, \":\") is the key_doc_num of CMEPF1, scan(CMEPF1, 2, \";\") is the n_visits of CMEPF1, etc<br>*/<br>%transpose(data = VXE_F11, target=VXE_F12, <br>&nbsp;&nbsp;&nbsp;&nbsp;rowhead =key_hsn EntryDate  ,<br>&nbsp;&nbsp;&nbsp;&nbsp;colhead=CMEPF,<br>&nbsp;&nbsp;&nbsp;&nbsp;contents= theStr<br>)<br>/*30044*/<br><br>/*example to get provider type of CMEPF1*/<br>/*<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F12 (obs=1);<br>&nbsp;&nbsp;&nbsp;&nbsp;ProviderType_CMEPF1= scan(CMEPF1, 3, ':');<br>run;<br>*/<br><br>/*The docs in VXE_F12 are CMEPFs, link them back to VXE_L (the cohort)*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXE_L,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXE_F12,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXE_F13,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=*,<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br>/*There are patients not having CMEPF, because these patients do not have eligible encounter during follow up<br>&nbsp;&nbsp;&nbsp;&nbsp;In that case, indicate as 'none'<br>*/<br><br>data VXE_F;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F13;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp{*} CMEPF:;<br>&nbsp;&nbsp;&nbsp;&nbsp;do i = 1 to dim(tmp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if tmp(i)='' then tmp(i)='na:.:na';<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop i&nbsp;&nbsp;&nbsp;&nbsp;<br>run;<br>/*46492*/<br><br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXE_F.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXE_F.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>/*sort by days betweeo service date entryDate, and determine the closest CME to EntryDate*/<br>data VXE_F2;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F1;<br>&nbsp;&nbsp;&nbsp;&nbsp;CMEDaysToEntry = intck('day', dos, entrydate); /*date2 - date1*/<br>run; <br>%sort(data=VXE_F2, sorter=key_hsn descending CMEDaysToEntry); /*smaller CMEDaysToEntry is closer to EntryDate*/<br><br>/*determine whether there is a tie in UPC Index*/<br>data VXE_F3;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F2;<br>&nbsp;&nbsp;&nbsp;&nbsp;LagCMEDaysToEntry = lag(CMEDaysToEntry);<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn descending CMEDaysToEntry;<br>&nbsp;&nbsp;&nbsp;&nbsp;if first.key_hsn then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tie =0;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LagCMEDaysToEntry=.;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;else do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if LagCMEDaysToEntry ne CMEDaysToEntry then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tie=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else tie=1;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;drop LagCMEDaysToEntry;<br>run;<br>%freq(data=VXE_F3, table=tie);<br><br>/*From above, keep the CMEP with the lowest CMEDaysToEntry*/<br>data VXE_F4;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F3;<br>&nbsp;&nbsp;&nbsp;&nbsp;by key_hsn descending CMEDaysToEntry;<br>&nbsp;&nbsp;&nbsp;&nbsp;if last.key_hsn;<br>&nbsp;&nbsp;&nbsp;&nbsp;if tie=1 then key_doc_num='tie';<br>run;<br>/*16832*/<br><br>/*Link to the cohort (VXE_F) to indicate the Last CME date and CMEP during follow up*/<br><br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXE_F,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=VXE_F4,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXE_F5,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.key_doc_num as CMEPF, t2.dos as CMEDateF),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br><br><br>/*There are patients not having CMEPF, because these patients do not have eligible encounter during follow up<br>&nbsp;&nbsp;&nbsp;&nbsp;In that case, indicate as 'none'<br>*/<br>data VXE_F;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F5;<br>&nbsp;&nbsp;&nbsp;&nbsp;length CMEPF $11.;<br>&nbsp;&nbsp;&nbsp;&nbsp;if CMEPF='' then CMEPF='none';<br>run;<br>/*46492*/<br><br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXE_F;<br>&nbsp;&nbsp;&nbsp;&nbsp;if CMEPF = 'tie';<br>run;<br><br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXE_F.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXE_F.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br>s///<br>t///","custparents":[{"idx":"CodeTask-WOlheZQueJ48Okz7"},{"idx":"CodeTask-jZobJlVFsLEwSeaJ"},{"idx":"CodeTask-gbhiLx1DedOwRO4o"}]}],"custparents":[{"idx":"CodeTask-eMS7CaKemHLL3NE7"},{"idx":"CodeTask-fTiJ1wEyUDGKYnqu"},{"idx":"CodeTask-gbhiLx1DedOwRO4o"}]}]}],"custparents":[{"idx":"CodeTask-rXaW7KfQgzQfcx1V"}]},{"idx":"CodeTask-qfcAXJSXk3TTi6Wu","name":"VXF_StatinClaims","NodeDescription":"///t<br>///s&nbsp;<br>/*VXF. the statin Rx of these patients within 1 years since index date*/<br>data _null_;run;<br><br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localdataPath.\\master_dp_benefit.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(master_dp_benefit.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\vxa.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(vxa.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localdataPath.\\master_dp_nonbenefit.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(master_dp_nonbenefit.sas7bdat)<br>&nbsp;&nbsp;&nbsp;&nbsp;);<br><br><br>/*Have statin claims of the patients in a with 365 days since EntryDate.*/<br>/*VXF1. benefit statin claims */<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=master_dp_benefit, <br>&nbsp;&nbsp;&nbsp;&nbsp;t2=locald.A6_DINDX,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXF1a,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*), <br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=din<br>);<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXF1a, <br>&nbsp;&nbsp;&nbsp;&nbsp;t2=vxa,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXF1,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.EntryDate), <br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;jterm=%str(t1.Key_hsn = t2.key_hsn and t1.rx_ddddd between t2.EntryDate and t2.EntryDate +365-1)<br>);<br>/*Have statin claims of the patients in a with 365 days since EntryDate.*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=master_dp_nonbenefit, <br>&nbsp;&nbsp;&nbsp;&nbsp;t2=locald.A6_DINDX,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXF2a,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*), <br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=din<br>);<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXF2a, <br>&nbsp;&nbsp;&nbsp;&nbsp;t2=vxa,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXF2,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.EntryDate), <br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;jterm=%str(t1.Key_hsn = t2.key_hsn and t1.rx_ddddd between t2.EntryDate and t2.EntryDate +365-1)<br>);<br><br>/*combined to have claims from both sources, indicate those anonymous or slushcode doctors as unknown<br>&nbsp;&nbsp;&nbsp;&nbsp;these docs are kept here as we'll still need the corresponding claims to identify the first prescriber<br>*/<br>data VXF;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXF1 VXF2;<br>&nbsp;&nbsp;&nbsp;&nbsp;if docslushcode ='Y' or key_prscr_num = '' or key_prscr_num = 'UNKNOWN0000' then <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_prscr_num='unknown'&nbsp;&nbsp;&nbsp;&nbsp;<br>run;<br><br>%sort(data=VXF, sorter=%str(key_hsn rx_ddddd key_prscr_num));<br>/*VXF contains statin claims within 365 days since the EntryDate<br>&nbsp;&nbsp;&nbsp;&nbsp;it includes those prescribed by slushcode docs or docs unknown (blank)<br>&nbsp;&nbsp;&nbsp;&nbsp;For adherence calculation, these claims should not be excluded<br>*/<br><br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=%str(&amp;localTargetPath), <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXF.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXF.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br><br><br><br><br>s///<br>t///","children":[{"idx":"CodeTask-SFfBPWO2kVud9Lvh","name":"VXG_FP","NodeDescription":"///t<br />///s<br />/*VXG first prescriber*/<br />data _null_;run;<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXc_F.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXc_F.sas7bdat)<br />);<br />/*get statin claims*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXF.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXF.sas7bdat)<br />);<br />/*get the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXE_F.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXE_F.sas7bdat)<br />);<br /><br />/*to Identify the first prescriber of statin, get prescribers on the EntryDate*/<br />%distinct(data = vxf, target=vxg1, vars=%str(key_hsn, key_prscr_num as key_doc_num, entryDate), <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(rx_ddddd = entryDate), orderby=%str(key_hsn, key_prscr_num));<br />/*Note that in the above, without the filters, the data set has duplicated records, why??? Is there a bug in the macro distinct???*/<br />/*46497*/<br /><br /><br /><br />/*Determine the FP*/<br />/*link the providerTYpe to vxg1 */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=vxg1,<br />&nbsp&nbsp&nbsp&nbspt2=VXC_F,<br />&nbsp&nbsp&nbsp&nbsptarget=VXG7,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeF),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br />&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn)<br />);<br />/*46497*/<br /><br />/*from above, unlike for PCPs, we'll keep all types, not only those of providerTypeF = 'PCP'<br />&nbsp&nbsp&nbsp&nbspotherwise it'll be biased*/<br />data VXG8;<br />&nbsp&nbsp&nbsp&nbspset VXG7;<br />&nbsp&nbsp&nbsp&nbspif providerTypeF = '' then providerTypeF='na';<br />run;<br />/*those 'na' yet can be family doctors (PCP for other patients), it is just that they did not provide any service to the patient during follow up*/<br /><br />/*shall we keep only the FP closer to the entry date? or any FP during follow up<br />&nbsp&nbsp&nbsp&nbspIt seems that keeping any makes more sense<br />*/<br /><br />/*determine the FP. In case of tie, get FP1, FP2, ....<br />&nbsp&nbsp&nbsp&nbsp in case of tie, there will be multiple FPs<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each FP <br />&nbsp&nbsp&nbsp&nbspand we'll need these values for each FP<br /><br />&nbsp&nbsp&nbsp&nbspFollowing is a nice idea:<br />&nbsp&nbsp&nbsp&nbsp1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \";\"<br />&nbsp&nbsp&nbsp&nbsp2) make a tag of FP1, 2, etc<br />*/<br />data VXG11;<br />&nbsp&nbsp&nbsp&nbspset VXG8;<br />&nbsp&nbsp&nbsp&nbspby key_hsn ;<br />&nbsp&nbsp&nbsp&nbspif first.key_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi =1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFP='FP' || strip(i);&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi+1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFP='FP' || strip(i);<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspdrop i;<br />&nbsp&nbsp&nbsp&nbsp/*combine the var values together*/<br />&nbsp&nbsp&nbsp&nbsplength theStr $20.; <br />&nbsp&nbsp&nbsp&nbsptheStr = catx(':', key_doc_num, ProviderTypeF);<br />run;<br /><br />/*now we can transpose the string in theStr into columsn of FP1, 2, ...<br />&nbsp&nbsp&nbsp&nbspThe values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br />&nbsp&nbsp&nbsp&nbsp(i.e., scan(FP1, 1, \":\") is the key_doc_num of FP1, scan(FP1, 2, \";\") is the n_visits of FP1, etc<br />*/<br />%transpose(data = VXG11, target=VXG12, <br />&nbsp&nbsp&nbsp&nbsprowhead =key_hsn EntryDate  ,<br />&nbsp&nbsp&nbsp&nbspcolhead=FP,<br />&nbsp&nbsp&nbsp&nbspcontents= theStr<br />)<br />/*30853*/<br /><br />/*example to get provider type of FP1*/<br />/*<br />data test;<br />&nbsp&nbsp&nbsp&nbspset VXG12 (obs=1);<br />&nbsp&nbsp&nbsp&nbspProviderType_FP1= scan(FP1, 2, ':');<br />run;<br />*/<br /><br />/*The docs in VXG12 are FPs, link them back to VXE_F (the cohort)*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXE_F,<br />&nbsp&nbsp&nbsp&nbspt2=VXG12,<br />&nbsp&nbsp&nbsp&nbsptarget=VXG13,<br />&nbsp&nbsp&nbsp&nbspvars=*,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />/*There are patients not having FP, because these patients do not have eligible encounter during follow up<br />&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br />*/<br /><br />data VXG;<br />&nbsp&nbsp&nbsp&nbspset VXG13;<br />&nbsp&nbsp&nbsp&nbsparray tmp{*} FP:;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i)='' then tmp(i)='na:na';<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspdrop i&nbsp&nbsp&nbsp&nbsp;<br />run;<br />/*46492*/<br /><br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXG.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXG.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-j6dtk9XKc4xrGUMh","name":"VXH_UP","NodeDescription":"///t<br />///s<br />/*UPR Usual prescriber*/<br />data _null_;run;<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXG.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXG.sas7bdat)<br />);<br />/*get statin claims*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXF.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXF.sas7bdat)<br />);<br />/*the type of provider during follow up*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXC_F.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXC_F.sas7bdat)<br />);<br /><br /><br /><br />/*calculate the Rx Freq from statin drug claims in follow up*/<br />/*the macro getUPCIndex works for MSB claim data, and other data<br />&nbsp&nbsp&nbsp&nbspfor MSB claim data, the LOS, MODE, SPEC, and NUM_SRV must be provided<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe excluding LOC, excluding MODE, and including SPEC must be provided<br />&nbsp&nbsp&nbsp&nbspfor other data (like in this case, the episodes have been prepared, or like prescription data)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspspecify the claimType as others, and do not need to specify LOS,MODE exclusion, and SPEC<br /><br />&nbsp&nbsp&nbsp&nbspunlike UPC in MSB, here it is fine even if the combination of same patient-doc-rx_ddddd repeat<br /><br />&nbsp&nbsp&nbsp&nbspBy default, the target file contains the doc with the max rx Freq<br />&nbsp&nbsp&nbsp&nbspbut this is not what is wanted here. <br />&nbsp&nbsp&nbsp&nbspFor this analysis, it is expected to keep all docs, from which those as PCP, and with Max rx Freq will be kept<br />&nbsp&nbsp&nbsp&nbspso the interested data set is not the target, but the tmp5 file created by the macro&nbsp&nbsp&nbsp&nbsp<br /><br />*/<br />/*Use the macro UPC to identify the most freq prescriber of Statin during follow up, <br />&nbsp&nbsp&nbsp&nbspunlike UPC in MSB, here it is fine even if the combination of same patient-doc-rx_ddddd repeat<br />*/<br />%getUPCIndex(<br />&nbsp&nbsp&nbsp&nbspdata=VXF, <br />&nbsp&nbsp&nbsp&nbsptarget=VXH1,<br />&nbsp&nbsp&nbsp&nbspInPatientLOS = , <br />&nbsp&nbsp&nbsp&nbspoutProvMode = ,<br />&nbsp&nbsp&nbsp&nbspInterestedSPEC =,<br />&nbsp&nbsp&nbsp&nbspdocIDCol = key_prscr_num,<br />&nbsp&nbsp&nbsp&nbspdoscol=rx_ddddd,<br />&nbsp&nbsp&nbsp&nbspclaimType=dp,<br />&nbsp&nbsp&nbsp&nbspdebug=1<br />);<br />/*70619*/<br /><br />/*why don't determine the ProviderType in VXB?<br />&nbsp&nbsp&nbsp&nbspbecause such providerType is study period specific. Here is for follow up. Latter for followup it has to be determined again<br />*/<br /><br />data VXH1;<br />&nbsp&nbsp&nbsp&nbspset getUPC_tmp5;<br />&nbsp&nbsp&nbsp&nbsprename <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_prscr_num = key_doc_num;<br />run;<br /><br />/*Now we can determine the UP*/<br />/*link the providerTYpe to getUPC_tmp5 */<br />/*%Print(data=getUPC_tmp5);*/<br /><br />/*in the following, despite that it is called UPC, nvisits, tvisits, it is actually for Usual prescriber index, nRx an tRx*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXH1,<br />&nbsp&nbsp&nbsp&nbspt2=VXC_F,<br />&nbsp&nbsp&nbsp&nbsptarget=VXH_F7,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTypeF),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br />&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, upcIndex )<br />);<br />/*70619*/<br /><br />/*from above, unlike for PCPs, we'll keep all types, not only those of providerTypeF = 'PCP'<br />&nbsp&nbsp&nbsp&nbspotherwise it'll be biased<br />*/<br />data VXH_F8;<br />&nbsp&nbsp&nbsp&nbspset VXH_F7;<br />&nbsp&nbsp&nbsp&nbspif providerTypeF = '' then providerTypeF='na';<br />run;<br />/*those 'na' yet can be family doctors (PCP for other patients), it is just that they did not provide any service to the patient during follow up*/<br /><br /><br />/*for each patient, determine the highest UPC index (i.e., the highest Rx Freq)*/<br />data VXH_F9;<br />&nbsp&nbsp&nbsp&nbspset VXH_F8;<br />&nbsp&nbsp&nbsp&nbspby key_hsn UPCIndex;<br />&nbsp&nbsp&nbsp&nbspif last.key_hsn;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn UPCIndex;<br />run;<br /><br />/*Link the highest upc index back to VXH_F8 to keep patient-doc links with the highest UPC index<br />(there could be multiple physicians with tie index values for a single patient)*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXH_F8,<br />&nbsp&nbsp&nbsp&nbspt2=VXH_F9,<br />&nbsp&nbsp&nbsp&nbsptarget=VXH_F10,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars= key_hsn UPCIndex,<br />&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, key_doc_num) <br />);<br /><br />/*determine the UP. In case of tie, get UP1, UP2, ....<br />&nbsp&nbsp&nbsp&nbsp in case of tie, there will be multiple UPs<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocNumer, Nvisits, UPCindex, ProviderTypeL, these are all specific by each UP <br />&nbsp&nbsp&nbsp&nbspand we'll need these values for each UP<br /><br />&nbsp&nbsp&nbsp&nbspFollowing is a smart idea:<br />&nbsp&nbsp&nbsp&nbsp1) putting values of these doc-specifc variables into a string (theStr), with the dlmt \";\"<br />&nbsp&nbsp&nbsp&nbsp2) make a tag of UP1, 2, etc<br />*/<br />data VXH_F11;<br />&nbsp&nbsp&nbsp&nbspset VXH_F10;<br />&nbsp&nbsp&nbsp&nbspformat UPCIndex 6.2;<br />&nbsp&nbsp&nbsp&nbspby key_hsn ;<br />&nbsp&nbsp&nbsp&nbspif first.key_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi =1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPR='UPR' || strip(i);&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi+1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPR='UPR' || strip(i);<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspdrop i;<br />&nbsp&nbsp&nbsp&nbsp/*combine the var values together*/<br />&nbsp&nbsp&nbsp&nbsplength theStr $50.; <br />&nbsp&nbsp&nbsp&nbsptheStr = catx(':', key_doc_num, N_Visits, ProviderTypeF, put(UPCIndex, 6.2));<br />&nbsp&nbsp&nbsp&nbsprename T_visits=T_Rx;<br />run;<br /><br />/*now we can transpose the string in theStr into columsn of UP1, 2, ...<br />&nbsp&nbsp&nbsp&nbspThe values will stay there. Later we can use scan(var, # of word, dlmt) to get the values<br />&nbsp&nbsp&nbsp&nbsp(i.e., scan(UPR1, 1, \":\") is the key_doc_num of UPR1, scan(UPR1, 2, \";\") is the n_visits of UPR1, etc<br />*/<br />%transpose(data = VXH_F11, target=VXH_F12, <br />&nbsp&nbsp&nbsp&nbsprowhead =key_hsn T_Rx  ,<br />&nbsp&nbsp&nbsp&nbspcolhead=UPR,<br />&nbsp&nbsp&nbsp&nbspcontents= theStr<br />)<br />/*46492*/<br />/*a patient can have as many as 6 tied UPR1*/<br />data test;<br />&nbsp&nbsp&nbsp&nbspset VXH_F12;<br />&nbsp&nbsp&nbsp&nbspif UPR6 ne '';<br />run;<br /><br />/*example to get upcindex of UPR1*/<br />/*<br />data test;<br />&nbsp&nbsp&nbsp&nbspset VXH_F12 (obs=1);<br />&nbsp&nbsp&nbsp&nbspUPCIndex_UPR1= scan(UPR1, 4, ':');<br />run;<br />*/<br /><br />/*The docs in VXH_F12 are UPRs, link them back to VXG (the cohort)*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXG,<br />&nbsp&nbsp&nbsp&nbspt2=VXH_F12,<br />&nbsp&nbsp&nbsp&nbsptarget=VXH_F13,<br />&nbsp&nbsp&nbsp&nbspvars=*,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />/*There are patients not having UP, because these patients do not have eligible encounter during look back<br />&nbsp&nbsp&nbsp&nbspIn that case, indicate as 'none'<br />*/<br /><br />data VXH;<br />&nbsp&nbsp&nbsp&nbspset VXH_F13;<br />&nbsp&nbsp&nbsp&nbsparray tmp{*} UPR:;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i)='' then tmp(i)='na:.:na:.';<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspdrop i&nbsp&nbsp&nbsp&nbsp;<br />run;<br />/*46492*/<br /><br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXH.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXH.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-V9nhbWJ4RhmiMaZJ","name":"VXI_LinkPatternByRollofDOc","NodeDescription":"///t<br>///s&nbsp;<br>/*VXI, Link Pattern of all distinct doctors*/<br>data _null_;run;<br><br>%VbsUnzip(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localTargetPath.\\VXH.zip),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(VXH.sas7bdat)<br>);<br><br>/*now we are going to determine an algorithm to deal with the link pattern.<br>&nbsp;&nbsp;&nbsp;&nbsp;We need to determine, for each role (UPCPL, UPCPF, etc), which doctor to select in case of tie<br>&nbsp;&nbsp;&nbsp;&nbsp;First, we need to see how the tie patterns looks like&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;In the following we'll try to map out all the tie patterns. For example:<br>&nbsp;&nbsp;&nbsp;&nbsp;for UPCPL, if there are two docs, it'll be AB<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then for UPCPF, if there are two docs again, in which one is the same doc A as in UPCPL, but the other is a new one, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;therefore the pattern for UPCPF will be AC,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and we'll line them up to be like: AB,AC.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;We'll repeat the same method for other role of docs (CMEPL, CMEPF, FP, and UP), like AB,AC,BC,.....<br>&nbsp;&nbsp;&nbsp;&nbsp;That way we can see how does physicians repeatedly appear in different roles<br>&nbsp;&nbsp;&nbsp;&nbsp;byte values for A =65, a=97<br>*/<br><br>data VXi1;<br>&nbsp;&nbsp;&nbsp;&nbsp;set vxh;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp1 {*} UPCPL:;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp2 {*} UPCPF:;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp3 {*} CMEPL:;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp4 {*} CMEPF:;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp5 {*} FP:;<br>&nbsp;&nbsp;&nbsp;&nbsp;array tmp6 {*} UPR:;<br>&nbsp;&nbsp;&nbsp;&nbsp;/*get the max # of doctors */<br>/*&nbsp;&nbsp;&nbsp;&nbsp;dimAll = sum(dim(tmp1),dim(tmp2),dim(tmp3),dim(tmp4),dim(tmp5),dim(tmp6) );*/<br>&nbsp;&nbsp;&nbsp;&nbsp;/*set the length of the docIDs*/<br>&nbsp;&nbsp;&nbsp;&nbsp;length docIDs $1500.;<br>/*&nbsp;&nbsp;&nbsp;&nbsp;array tmpAll {dimAll};*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;concatecate all docs together, between different roles, split by ;, within roles, split by ,*/<br>&nbsp;&nbsp;&nbsp;&nbsp;Do i = 1 to dim(tmp1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID = scan(tmp1(i), 1, \":\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if theID not in:('na') then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docIDs = strip(docIDs) || \",\"  || theID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs=strip(docIDs) || \";\";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Do i = 1 to dim(tmp2);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID = scan(tmp2(i), 1, \":\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if theID not in:('na') then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docIDs = strip(docIDs) || \",\"  || theID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs=strip(docIDs) || \";\";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Do i = 1 to dim(tmp3);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID = scan(tmp3(i), 1, \":\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if theID not in:('na') then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docIDs = strip(docIDs) || \",\"  || theID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs=strip(docIDs) || \";\";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Do i = 1 to dim(tmp4);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID = scan(tmp4(i), 1, \":\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if theID not in:('na') then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docIDs = strip(docIDs) || \",\"  || theID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs=strip(docIDs) || \";\";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;Do i = 1 to dim(tmp5);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID = scan(tmp5(i), 1, \":\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if theID not in:('na') then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docIDs = strip(docIDs) || \",\"  || theID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs=strip(docIDs) || \";\";<br>&nbsp;&nbsp;&nbsp;&nbsp;Do i = 1 to dim(tmp6);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID = scan(tmp6(i), 1, \":\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if theID not in:('na') then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docIDs = strip(docIDs) || \",\"  || theID;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs=strip(docIDs) || \";\";<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs = tranwrd(docIDs, \";,\", \";\");<br>&nbsp;&nbsp;&nbsp;&nbsp;if substr(docIDs, 1,1) =\",\" then docIDs = substr(docIDs, 2, length(docIDs) -1);<br>&nbsp;&nbsp;&nbsp;&nbsp;if substr(docIDs, length(DocIDs), 1) =\";\" then docIDs = substr(docIDs, 1, length(docIDs) -1);<br>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn docIDs;<br>run;<br><br><br>/*scan for each docid and check the repeat situation*/<br>data VXi2;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXi1  ;<br>&nbsp;&nbsp;&nbsp;&nbsp;NTotalIDs=countw(docIDs); /*get the total # of IDs*/<br>&nbsp;&nbsp;&nbsp;&nbsp;docIDs2=tranwrd(docIDs, 'unknown', '');<br>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID=scan(docIDs2, 1, \",;\");*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;docIDs2=tranwrd(docIDs2, strip(theID), 'a');*/<br>&nbsp;&nbsp;&nbsp;&nbsp;letterCNT=0;<br>&nbsp;&nbsp;&nbsp;&nbsp;do NIDs = 1 to NTotalIDs;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theID=scan(docIDs2, NIDs, \",;\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if theID in: ('0','1','2','3','4','5','6','7','8','9','0') then do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;letterCNT+1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IDCount=count(docIDs2, strip(theID));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if IDCount &gt; 1 then byteBase=64;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else byteBase=96;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docIDs2=tranwrd(docIDs2, strip(theID), byte(letterCNT+byteBase));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;end;<br>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn DocIDs2;<br>&nbsp;&nbsp;&nbsp;&nbsp;rename DocIDs2 = RolesPatternAllDoc; <br>run;<br>/*46492*/<br><br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=VXH,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=vxi2,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=VXI3,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, ifc(t2.RolesPatternAllDoc='', 'na', t2.RolesPatternAllDoc) as RolesPatternAllDoc),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br>/*46492*/<br><br>/*scan function will skip consecutive delimits like ';;'. This is not what we want<br>&nbsp;&nbsp;&nbsp;&nbsp;an underscoure is added so that there is always something between two semicolons*/<br>data VXI;<br>&nbsp;&nbsp;&nbsp;&nbsp;set VXI3;<br>&nbsp;&nbsp;&nbsp;&nbsp;RolesPatternAllDoc=tranwrd(RolesPatternAllDoc, ';', ';_');<br>&nbsp;&nbsp;&nbsp;&nbsp;RolesPatternAllDoc=\"_\" || RolesPatternAllDoc;<br>&nbsp;&nbsp;&nbsp;&nbsp;RolesPatternAllDoc=compress(RolesPatternAllDoc, ' ');<br>run;<br>/*data test;*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;set VXI  (firstobs=138 obs=138);*/<br>/*run;*/<br>%vbsZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=&amp;localTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;zipFile=VXI.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcFile=VXI.sas7bdat, <br>&nbsp;&nbsp;&nbsp;&nbsp;srcDir=<br>);<br><br><br>s///<br>t///","children":[{"idx":"CodeTask-ae8PL8lWWCu1z3jG","name":"VXJ SwitchPattern","NodeDescription":"///t<br />///s<br />/*VXJ, Switch Patterns*/<br />data _null_;run;<br /><br />/*why there are patterns like ;;;;;; (none of the roles identified), these could be 'unknown' prescribers (e.g., slushcode, etc)*/<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXI.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXI.sas7bdat)<br />);<br />/*%print(data=VXI);*/<br /><br />/*the patterns are:<br />&nbsp&nbsp&nbsp&nbspUCPL (look back); UCPF (followup); CMEL; CMEF; FP (first statin prescriber); UPR (freq prescriber)<br />*/<br /><br />/*1. Never Changed<br /><br />&nbsp&nbsp&nbsp&nbspit can be like 'A,b;A;A;A;A;A' but there must be six 'A's<br />&nbsp&nbsp&nbsp&nbspbut it can also be like 'a,B;B;B;B;B;B', <br />&nbsp&nbsp&nbsp&nbspor 'a,b,C;C;C;C;C;C'<br />*/<br />data VXJ1;<br />&nbsp&nbsp&nbsp&nbspset VXI ;<br />&nbsp&nbsp&nbsp&nbspNever_Changed=0;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed;<br />&nbsp&nbsp&nbsp&nbspif RolesPatternAllDoc='_;_;_;_;_;_' then Never_Changed=9; <br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 26;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif count(RolesPatternAllDoc, byte(i+63)) =6 then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNever_Changed=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br />/*%freq(data=VXJ1 , table = Never_Changed);*/<br /><br />/*2. UPCP_changed<br />&nbsp&nbsp&nbsp&nbspUPCP_unchanged like: UPCPL = 'A,b;' UPCPF = 'A,d' (i.e., there is at least one letter is the same)<br />*/<br /><br />data VXJ2;<br />&nbsp&nbsp&nbsp&nbspset VXJ1 ;<br />&nbsp&nbsp&nbsp&nbspUPCP_changed=1;<br />&nbsp&nbsp&nbsp&nbspUPCPLs=scan(RolesPatternAllDoc, 1, ';');<br />&nbsp&nbsp&nbsp&nbspUPCPFs=scan(RolesPatternAllDoc, 2, ';');<br /><br />&nbsp&nbsp&nbsp&nbspif strip(UPCPLs)='_' and strip(UPCPFs)='_' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_changed=9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbspend;<br /><br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UPCPLs='_'  or UPCPFs='_'  then goto skip1; /*if UPCPLs does not contain any doctors*/<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspUPCPLs = tranwrd(UPCPLs, '_', '') ;<br /><br />&nbsp&nbsp&nbsp&nbspUPCPFs = tranwrd(UPCPFs, '_', '');<br />/*&nbsp&nbsp&nbsp&nbsploop for each UPCPL*/<br />&nbsp&nbsp&nbsp&nbspNUPCPLs = countw(UPCPLs)+1;/*for strings like ';B', the countw returns 1 (';' is treated as a delimiter).<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, ';') ='', scan(str,2,';') ='B'<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br />&nbsp&nbsp&nbsp&nbspNUPCPFs = countw(UPCPFs)+1;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to NUPCPLs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheUPCPL = scan(UPCPLs, i, ',');<br />/*&nbsp&nbsp&nbsp&nbsploop for each UPCPF*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NUPCPFs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheUPCPF = scan(UPCPFs, j, ',');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(theUPCPL)) = strip(upcase(theUPCPF)) and strip(upcase(theUPCPL)) ne '' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_changed=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />skip1:<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed;<br />run;<br /><br />/*3. CMEP_changed<br />&nbsp&nbsp&nbsp&nbspCMEP_unchanged like: CMEPL = 'A,b;' CMEPF = 'A,d' (i.e., there is at least one letter is the same)<br />*/<br />data VXJ3;<br />&nbsp&nbsp&nbsp&nbspset VXJ2 ;<br />&nbsp&nbsp&nbsp&nbspCMEP_changed=1;<br />&nbsp&nbsp&nbsp&nbspCMEPLs=scan(RolesPatternAllDoc, 3, ';');<br />&nbsp&nbsp&nbsp&nbspCMEPFs=scan(RolesPatternAllDoc, 4, ';');<br />&nbsp&nbsp&nbsp&nbspif strip(CMEPLs)='_' and strip(CMEPFs)='_' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_changed=9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif CMEPLs='_'  or CMEPFs='_'  then goto skip1; /*if CMEPLs does not contain any doctors*/<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspCMEPLs = tranwrd(CMEPLs, '_', '');<br />&nbsp&nbsp&nbsp&nbspCMEPFs = tranwrd(CMEPFs, '_', '');<br />/*&nbsp&nbsp&nbsp&nbsploop for each CMEPL*/<br />&nbsp&nbsp&nbsp&nbspNCMEPLs = countw(CMEPLs)+1;<br />&nbsp&nbsp&nbsp&nbspNCMEPFs = countw(CMEPFs)+1;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to NCMEPLs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCMEPL = scan(CMEPLs, i, ',');<br />/*&nbsp&nbsp&nbsp&nbsploop for each CMEPF*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NCMEPFs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCMEPF = scan(CMEPFs, j, ',');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(theCMEPL)) = strip(upcase(theCMEPF)) and strip(upcase(theCMEPL)) ne '' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_changed=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />skip1:<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed;<br />run;<br /><br />/*4. PR_changed<br />&nbsp&nbsp&nbsp&nbspPR_unchanged like: FP = 'A,b;' UPR = 'A,d' (i.e., there is at least one letter is the same)<br />*/<br />data VXJ4;<br />&nbsp&nbsp&nbsp&nbspset VXJ3 ;<br />&nbsp&nbsp&nbsp&nbspPR_changed=1;<br />&nbsp&nbsp&nbsp&nbspFPs=scan(RolesPatternAllDoc, 5, ';');<br />&nbsp&nbsp&nbsp&nbspUPRs=scan(RolesPatternAllDoc, 6, ';');<br />&nbsp&nbsp&nbsp&nbspif strip(FPs)='_' and strip(UPRs)='_' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPR_changed=9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif FPs='_'  or UPRs='_'  then goto skip1; /*if FPs does not contain any doctors*/<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspFPs = tranwrd(FPs, '_', '');<br />&nbsp&nbsp&nbsp&nbspUPRs = tranwrd(UPRs, '_', '');<br />/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br />&nbsp&nbsp&nbsp&nbspNFPs = countw(FPs) +1;<br />&nbsp&nbsp&nbsp&nbspNUPRs = countw(UPRs) +1;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to NFPs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheFP = scan(FPs, i, ',');<br />/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NUPRs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheUPR = scan(UPRs, j, ',');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(theFP)) = strip(upcase(theUPR))  and strip(upcase(theFP))  ne '' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPR_changed=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />skip1:<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed;<br />run;<br /><br /><br />/*5. UPCP not CMEP<br />&nbsp&nbsp&nbsp&nbspUPCP is CMEP like: UPCPL/F = 'A,b;c,d' CMEP = 'e,f;g, A' (i.e., there is at least one letter is the same)<br />*/<br />data VXJ5;<br />&nbsp&nbsp&nbsp&nbspset VXJ4 ;<br />&nbsp&nbsp&nbsp&nbspUPCP_Not_CMEP=1;<br />&nbsp&nbsp&nbsp&nbspUPCPs=scan(RolesPatternAllDoc, 1, ';') || ';' || scan(RolesPatternAllDoc, 2, ';') ;<br />&nbsp&nbsp&nbsp&nbspCMEPs=scan(RolesPatternAllDoc, 3, ';') || ';' || scan(RolesPatternAllDoc, 4, ';') ;<br />&nbsp&nbsp&nbsp&nbspif strip(UPCPs)='_;_' and strip(CMEPs)='_;_' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_CMEP=9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UPCPs='_;_'  or CMEPs='_;_'  then goto skip1; /*if UPCPs/CMEPs does not contain any doctors*/<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspUPCPs = tranwrd(UPCPs, '_', '');<br />&nbsp&nbsp&nbsp&nbspCMEPs = tranwrd(CMEPs, '_', '');<br /><br />&nbsp&nbsp&nbsp&nbspNPCPs = countw(UPCPs)+1; /*for strings like ';B', the countw returns 1 (';' is treated as a delimiter).<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, ';') ='', scan(str,2,';') ='B'<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br />&nbsp&nbsp&nbsp&nbspNCMEPs = countw(CMEPs)+1;<br />/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to NPCPs;<br />/*&nbsp&nbsp&nbsp&nbspdo i = 2 to 2;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePCP = scan(UPCPs, i, ',;');<br />/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NCMEPs;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 2 to 2;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCMEP = scan(CMEPs, j, ',;');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(thePCP)) = strip(upcase(theCMEP)) and strip(upcase(thePCP)) ne '' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_CMEP=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />skip1:<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed UPCP_Not_CMEP;<br />run;<br /><br /><br /><br />/*UPCP not PR<br />&nbsp&nbsp&nbsp&nbsp'UPCP is PR' like: UPCPL/F = 'A,b;c,d' FP/UPR = 'e,f;g, A' (i.e., there is at least one letter is the same)<br />*/<br />data VXJ6;<br />&nbsp&nbsp&nbsp&nbspset VXJ5;<br />&nbsp&nbsp&nbsp&nbspUPCP_Not_PR=1;<br />&nbsp&nbsp&nbsp&nbspUPCPs=scan(RolesPatternAllDoc, 1, ';') || ';' || scan(RolesPatternAllDoc, 2, ';') ;<br />&nbsp&nbsp&nbsp&nbspPRs=scan(RolesPatternAllDoc, 5, ';') || ';' || scan(RolesPatternAllDoc, 6, ';') ;<br />&nbsp&nbsp&nbsp&nbspif strip(UPCPs)='_;_' and strip(PRs)='_;_' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_PR=9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UPCPs='_;_'  or PRs='_;_'  then goto skip1; /*if UPCPs/PRs does not contain any doctors*/<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspUPCPs = tranwrd(UPCPs, '_', '');<br />&nbsp&nbsp&nbsp&nbspPRs = tranwrd(PRs, '_', '');<br /><br />&nbsp&nbsp&nbsp&nbspNPCPs = countw(UPCPs)+1; /*for strings like ';B', the countw returns 1 (';' is treated as a delimiter).<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, ';') ='', scan(str,2,';') ='B'<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br />&nbsp&nbsp&nbsp&nbspNPRs = countw(PRs)+1;<br />/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to NPCPs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePCP = scan(UPCPs, i, ',;');<br />/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NPRs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePR = scan(PRs, j, ',;');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(thePCP)) = strip(upcase(thePR)) and strip(upcase(thePCP)) ne '' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUPCP_Not_PR=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />skip1:<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed UPCP_Not_CMEP UPCP_Not_PR;<br />run;<br /><br /><br /><br />/*CMEP not PR<br />&nbsp&nbsp&nbsp&nbsp'CMEP is PR' like: CMEPL/F = 'A,b;c,d' FP/UPR = 'e,f;g, A' (i.e., there is at least one letter is the same)<br />*/<br />data VXJ7;<br />&nbsp&nbsp&nbsp&nbspset VXJ6 ;<br />&nbsp&nbsp&nbsp&nbspCMEP_Not_PR=1;<br />&nbsp&nbsp&nbsp&nbspCMEPs=scan(RolesPatternAllDoc, 3, ';') || ';' || scan(RolesPatternAllDoc, 4, ';') ;<br />&nbsp&nbsp&nbsp&nbspPRs=scan(RolesPatternAllDoc, 5, ';') || ';' || scan(RolesPatternAllDoc, 6, ';') ;<br />&nbsp&nbsp&nbsp&nbspif strip(CMEPs)='_;_' and strip(PRs)='_;_' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspx=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_Not_PR=9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif CMEPs='_;_'  or PRs='_;_'  then goto skip1; /*if CMEPs/PRs does not contain any doctors*/<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspCMEPs = tranwrd(CMEPs, '_', '');<br />&nbsp&nbsp&nbsp&nbspPRs = tranwrd(PRs, '_', '');<br /><br />&nbsp&nbsp&nbsp&nbspNPCPs = countw(CMEPs)+1; /*for strings like ';B', the countw returns 1 (';' is treated as a delimiter).<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, for function scan(), scan(str, 1, ';') ='', scan(str,2,';') ='B'<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso scan function will require loop to 2, while the word count ends at 1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the following loop, we'll let NPCPs = NPCPs +1, such that there is alwasy enough <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnumbers to loop with*/<br />&nbsp&nbsp&nbsp&nbspNPRs = countw(PRs)+1;<br />/*&nbsp&nbsp&nbsp&nbsploop for each FP*/<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to NPCPs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePCP = scan(CMEPs, i, ',;');<br />/*&nbsp&nbsp&nbsp&nbsploop for each UPR*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = 1 to NPRs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePR = scan(PRs, j, ',;');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(thePCP)) = strip(upcase(thePR)) and strip(upcase(thePCP)) ne '' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEP_Not_PR=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgoto skip1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />skip1:<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn RolesPatternAllDoc Never_Changed UPCP_changed CMEP_changed PR_changed UPCP_Not_CMEP UPCP_Not_PR CMEP_Not_PR;<br />run;<br /><br />/*8. is this right?<br />UPCP not CMEP not PR<br />&nbsp&nbsp&nbsp&nbspshould be that <br />&nbsp&nbsp&nbsp&nbspUPCP not CMEP =1 and UPCP not PR =1 and CMEP not PR 1<br />*/<br />data VXJ8;<br />&nbsp&nbsp&nbsp&nbspset VXJ7;<br />&nbsp&nbsp&nbsp&nbspUPCP_not_CMEP_not_PR = UPCP_not_CMEP * CMEP_not_PR * UPCP_not_PR;<br />run;<br /><br />/*link back to the cohort VXI*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXI,<br />&nbsp&nbsp&nbsp&nbspt2=VXJ8,<br />&nbsp&nbsp&nbsp&nbsptarget=VXJ,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspvars=*<br />);<br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXJ.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXJ.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br />s///<br />t///","custparents":[{"idx":"CodeTask-V9nhbWJ4RhmiMaZJ"}]}],"custparents":[{"idx":"CodeTask-j6dtk9XKc4xrGUMh"}]}],"custparents":[{"idx":"CodeTask-SFfBPWO2kVud9Lvh"},{"idx":"CodeTask-qfcAXJSXk3TTi6Wu"}]}],"custparents":[{"idx":"CodeTask-qfcAXJSXk3TTi6Wu"},{"idx":"CodeTask-1SpxtlXR8T5jchis"}]},{"idx":"CodeTask-crrSCccxKOORYiq3","name":"VXK Prescriber pattern","NodeDescription":"///t<br />///s<br />data _null_;run;<br />/*VXK, Prescriber pattern*/<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXj.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXj.sas7bdat)<br />);<br />/*get statin claims*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXF.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXF.sas7bdat)<br />);<br /><br /><br />data VXK1 ;<br />&nbsp&nbsp&nbsp&nbspretain key_hsn rx_ddddd key_prscr_num docs;<br />&nbsp&nbsp&nbsp&nbspformat docs $1000.;<br />&nbsp&nbsp&nbsp&nbspset VXF;<br />&nbsp&nbsp&nbsp&nbspby key_hsn rx_ddddd key_prscr_num;<br />&nbsp&nbsp&nbsp&nbspif first.key_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(key_prscr_num);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif index(docs, strip(key_prscr_num)) = 0 then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(docs) || ',' || strip(key_prscr_num);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=index(docs, strip(key_prscr_num));<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspDocIndex = int((index-1)/ 12)+1;<br />&nbsp&nbsp&nbsp&nbspDocIndexC = byte(DocIndex + 64);<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn rx_ddddd key_prscr_num docs  DocIndex DocIndexC;<br />run;<br /><br />/*%minmax(data=VXK1, var=DocIndex, format=, target=test1, m=max);*/<br /><br />Data VXK2;<br />&nbsp&nbsp&nbsp&nbspset VXK1 ;<br />&nbsp&nbsp&nbsp&nbsplagDocIndexC=lag(docindexC);<br />&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn);<br />&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain N_Unchange;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif docindexC = lagDocIndexC then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange='-';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange+1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br /><br />data VXK3;<br />&nbsp&nbsp&nbsp&nbspset VXK2;<br />&nbsp&nbsp&nbsp&nbsplagDocChange=lag(DocChange);<br />&nbsp&nbsp&nbsp&nbspformat PrscrPattern $20.;<br />&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn);<br />&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPrscrPattern = DocChange;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain PrscrPattern;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif DocChange ne '-' then PrscrPattern= strip(PrscrPattern) || strip(DocChange);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif substr(PrscrPattern, length(PrscrPattern), 1) ne '-' then PrscrPattern= strip(PrscrPattern) || \"-\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br /><br />data VXK4;<br />&nbsp&nbsp&nbsp&nbspset VXK3;<br />&nbsp&nbsp&nbsp&nbspby key_hsn rx_ddddd key_prscr_num;<br />&nbsp&nbsp&nbsp&nbspif last.key_hsn;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn PrscrPattern;<br />run;<br /><br />/*link back to the cohort VXI*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXJ,<br />&nbsp&nbsp&nbsp&nbspt2=VXK4,<br />&nbsp&nbsp&nbsp&nbsptarget=VXK,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspvars=*<br />);<br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXK.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXK.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br /><br /><br /><br />s///<br />t///","custparents":[{"idx":"CodeTask-qfcAXJSXk3TTi6Wu"},{"idx":"CodeTask-ae8PL8lWWCu1z3jG"}],"children":[{"idx":"CodeTask-vIplCgMSR6XiN8jq","name":"VXL_L PCPL pattern ","NodeDescription":"///t<br />///s<br />data _null_;run;<br />/*VXL_L, PCP patterns in look back*/<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXK.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXK.sas7bdat)<br />);<br />/*get encounters*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXB.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXB.sas7bdat)<br />);<br />/*provider type*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxc_L.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxc_L.sas7bdat)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />/*UPC in look-back*/<br />/*From vxb, get claims with 365 days prior to the index(entryDate) */<br />data VXL_L1;<br />&nbsp&nbsp&nbsp&nbspset vxb;<br />&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate - 365 and entryDate -1;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num;<br />run;<br />/*439886*/<br /><br />/*link the providerTYpe to VXL_L1 */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXL_L1,<br />&nbsp&nbsp&nbsp&nbspt2=VXC_L,<br />&nbsp&nbsp&nbsp&nbsptarget=VXL_L7,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.providerTYpeL),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br />&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dos, key_doc_num )<br />);<br />/*439886*/<br /><br />/*from above, keep only those of providerType = 'PCP'*/<br />data VXL_L8;<br />&nbsp&nbsp&nbsp&nbspset VXL_L7;<br />&nbsp&nbsp&nbsp&nbspif providerTypeL = 'PCP';<br />run;<br /><br />data VXL_L9 ;<br />&nbsp&nbsp&nbsp&nbspretain key_hsn dos key_doc_num docs;<br />&nbsp&nbsp&nbsp&nbspformat docs $1000.;<br />&nbsp&nbsp&nbsp&nbspset VXL_L8;<br />&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num;<br />&nbsp&nbsp&nbsp&nbspif first.key_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(key_doc_num);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif index(docs, strip(key_doc_num)) = 0 then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(docs) || ',' || strip(key_doc_num);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=index(docs, strip(key_doc_num));<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspDocIndex = int((index-1)/ 12)+1;<br />&nbsp&nbsp&nbsp&nbspDocIndexC = byte(DocIndex + 64);<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num docs  DocIndex DocIndexC;<br />run;<br /><br />/*%minmax(data=VXL_L9, var=DocIndex, format=, target=test1, m=max);*/<br /><br />Data VXL_L10;<br />&nbsp&nbsp&nbsp&nbspset VXL_L9 ;<br />&nbsp&nbsp&nbsp&nbsplagDocIndexC=lag(docindexC);<br />&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn);<br />&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain N_Unchange;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif docindexC = lagDocIndexC then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange='-';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange+1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br /><br />data VXL_L11;<br />&nbsp&nbsp&nbsp&nbspset VXL_L10;<br />&nbsp&nbsp&nbsp&nbsplagDocChange=lag(DocChange);<br />&nbsp&nbsp&nbsp&nbspformat PCPPatternL $20.;<br />&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn);<br />&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPCPPatternL = DocChange;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain PCPPatternL;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif DocChange ne '-' then PCPPatternL= strip(PCPPatternL) || strip(DocChange);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif substr(PCPPatternL, length(PCPPatternL), 1) ne '-' then PCPPatternL= strip(PCPPatternL) || \"-\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br /><br />data VXL_L12;<br />&nbsp&nbsp&nbsp&nbspset VXL_L11;<br />&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num;<br />&nbsp&nbsp&nbsp&nbspif last.key_hsn;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn PCPPatternL;<br />run;<br /><br />/*link back to the cohort VXK*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXK,<br />&nbsp&nbsp&nbsp&nbspt2=VXL_L12,<br />&nbsp&nbsp&nbsp&nbsptarget=VXL_L,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PCPPatternL='', 'na', t2.PCPPatternL) as PCPPatternL)<br />);<br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXL_L.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXL_L.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br /><br /><br /><br />s///<br />t///","custparents":[{"idx":"CodeTask-JZFzNfMpOGC6Bx7D"},{"idx":"CodeTask-gbhiLx1DedOwRO4o"},{"idx":"CodeTask-crrSCccxKOORYiq3"}],"children":[{"idx":"CodeTask-bk2fcAnE7kxDxYMD","name":"VXL_F PCPF pattern","NodeDescription":"///t<br />///s<br />data _null_;run;<br /><br />/*VXL_F, PCP patterns in follow up*/<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXL_L.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXL_L.sas7bdat)<br />);<br />/*get encounters*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXB.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXB.sas7bdat)<br />);<br />/*provider type*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXC_F.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXC_F.sas7bdat)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />/*UPC in look-back*/<br />/*From vxb, get claims with 365 days prior to the index(entryDate) */<br />data VXL_F1;<br />&nbsp&nbsp&nbsp&nbspset vxb;<br />&nbsp&nbsp&nbsp&nbspwhere DOS between entryDate and entryDate + 365  -1;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num;<br />run;<br />/*556606*/<br /><br />/*link the providerTYpe to VXL_F1 */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXL_F1,<br />&nbsp&nbsp&nbsp&nbspt2=VXC_F,<br />&nbsp&nbsp&nbsp&nbsptarget=VXL_F7,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ProviderTypeF),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn key_doc_num,<br />&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dos, key_doc_num )<br />);<br />/*556606*/<br /><br />/*from above, keep only those of providerType = 'PCP'*/<br />data VXL_F8;<br />&nbsp&nbsp&nbsp&nbspset VXL_F7;<br />&nbsp&nbsp&nbsp&nbspif ProviderTypeF = 'PCP';<br />run;<br /><br />data VXL_F9 ;<br />&nbsp&nbsp&nbsp&nbspretain key_hsn dos key_doc_num docs;<br />&nbsp&nbsp&nbsp&nbspformat docs $1000.;<br />&nbsp&nbsp&nbsp&nbspset VXL_F8;<br />&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num;<br />&nbsp&nbsp&nbsp&nbspif first.key_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(key_doc_num);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=1;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif index(docs, strip(key_doc_num)) = 0 then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocs= strip(docs) || ',' || strip(key_doc_num);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex=index(docs, strip(key_doc_num));<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspDocIndex = int((index-1)/ 12)+1;<br />&nbsp&nbsp&nbsp&nbspDocIndexC = byte(DocIndex + 64);<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn dos key_doc_num docs  DocIndex DocIndexC;<br />run;<br /><br />/*%minmax(data=VXL_F9, var=DocIndex, format=, target=test1, m=max);*/<br /><br />Data VXL_F10;<br />&nbsp&nbsp&nbsp&nbspset VXL_F9 ;<br />&nbsp&nbsp&nbsp&nbsplagDocIndexC=lag(docindexC);<br />&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn);<br />&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain N_Unchange;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif docindexC = lagDocIndexC then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange='-';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange+1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocChange = DocIndexC;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Unchange=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br /><br />data VXL_F11;<br />&nbsp&nbsp&nbsp&nbspset VXL_F10;<br />&nbsp&nbsp&nbsp&nbsplagDocChange=lag(DocChange);<br />&nbsp&nbsp&nbsp&nbspformat PCPPatternF $20.;<br />&nbsp&nbsp&nbsp&nbsplagKey_hsn = lag(key_hsn);<br />&nbsp&nbsp&nbsp&nbspif key_hsn ne lagKey_hsn then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPCPPatternF = DocChange;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain PCPPatternF;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif DocChange ne '-' then PCPPatternF= strip(PCPPatternF) || strip(DocChange);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif substr(PCPPatternF, length(PCPPatternF), 1) ne '-' then PCPPatternF= strip(PCPPatternF) || \"-\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />run;<br /><br />data VXL_F12;<br />&nbsp&nbsp&nbsp&nbspset VXL_F11;<br />&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num;<br />&nbsp&nbsp&nbsp&nbspif last.key_hsn;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn PCPPatternF;<br />run;<br /><br />/*link back to the cohort VXL_L*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXL_L,<br />&nbsp&nbsp&nbsp&nbspt2=VXL_F12,<br />&nbsp&nbsp&nbsp&nbsptarget=VXL_F,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PCPPatternF='', 'na', t2.PCPPatternF) as PCPPatternF)<br />);<br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VXL_F.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VXL_F.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br /><br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-mqQWr8kGTH7TzB2R","name":"VZA_Adherence","NodeDescription":"///t<br />///s<br />data _null_;run;<br />/*VZA, Adherence by PDC*/<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXL_F.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXL_F.sas7bdat)<br />);<br />/*get statin claims*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VXF.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VXF.sas7bdat)<br />);<br /><br /><br />%let MPR80 =.8;<br />%let supplyDayCol=supplyDays;<br /><br /><br />data VZA1;<br />&nbsp&nbsp&nbsp&nbspset VXF;<br />&nbsp&nbsp&nbsp&nbspsupplyDays=34;<br />&nbsp&nbsp&nbsp&nbspdrugclass='STATIN';<br />run;<br /><br /><br />%getAdherence(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VZA1, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZA2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspOptAdhCutOff =&MPR80, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLenInterval =%eval(365), <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_Intervals=1, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass =DrugClass, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfollowStart =EntryDate, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsupCol =&supplyDayCol, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAllowedGap=1, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptakeStartCol =, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptakeEndCol =, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspintervalCol =, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspintervalStartCol =, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspintervalEndCol =, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=<br />);<br />/*46492*/<br /><br />/*link back to the cohort VXL_L*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VXL_F,<br />&nbsp&nbsp&nbsp&nbspt2=VZA2,<br />&nbsp&nbsp&nbsp&nbsptarget=VZA,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.DaysOnMed, t2.Adherence)<br />);<br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VZA.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VZA.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br />s///<br />t///","children":[{"idx":"CodeTask-X3qh5qNEkgbTc2aV","name":"VZB_LogisticModels","NodeDescription":"///t<br />///s<br /><br />/*logistic regression models*/<br /><br />data _null_;run;<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZA.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZA.sas7bdat)<br />);<br /><br /><br />/*adherence, never changed*/<br />data VZB1;<br />&nbsp&nbsp&nbsp&nbspset VZA;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />run;<br /><br />/*1. consistency of doc as diff roles*/<br />%macro test1a (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= vzb1 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0')  /param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 9 vs 0\" &theVar 0 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1a;<br />%test1a(theVar=any_changed);<br />%test1a(theVar=UPCP_Changed);<br />%test1a(theVar=CMEP_Changed);<br />%test1a(theVar=PR_Changed, where=T_Rx >1);<br />%test1a(theVar=UPCP_NOT_CMEP);<br />%test1a(theVar=CMEP_NOT_PR);<br />%test1a(theVar=UPCP_NOT_PR);<br />%test1a(theVar=UPCP_NOT_CMEP_NOT_PR);<br />%print(data=vza);<br /><br />/*1b. adjusted by age...*/<br />%macro test1b (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= vzb1 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') /param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar age sex_desc  qaippe resitype &theVar * resitype /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 9 vs 0\" &theVar 0 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1b;<br />%test1b(theVar=any_changed);<br />%test1b(theVar=UPCP_Changed);<br />%test1b(theVar=CMEP_Changed);<br />%test1b(theVar=PR_Changed, where=T_Rx >1);<br />%test1b(theVar=UPCP_NOT_CMEP);<br />%test1b(theVar=CMEP_NOT_PR);<br />%test1b(theVar=UPCP_NOT_PR);<br />%test1b(theVar=UPCP_NOT_CMEP_NOT_PR);<br /><br /><br /><br /><br />data VZB2;<br />&nbsp&nbsp&nbsp&nbspset VZB1;<br />&nbsp&nbsp&nbsp&nbspif PCPPatternL='A-' then PCPChangeL=0;<br />&nbsp&nbsp&nbsp&nbspelse PCPChangeL=1;<br />&nbsp&nbsp&nbsp&nbspif PCPPatternF='A-' then PCPChangeF=0;<br />&nbsp&nbsp&nbsp&nbspelse PCPChangeF=1;<br />&nbsp&nbsp&nbsp&nbspif PrscrPattern='A-' then PrscrChangeF=0;<br />&nbsp&nbsp&nbsp&nbspelse PrscrChangeF=1;<br />run;<br /><br />/*1. PCPL pattern*/<br />%macro test2a (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= VZB2 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0')  /param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar /type3 dist=bin link=logit;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test2a;<br />%test2a(theVar=PCPChangeL, where= T_VisitsL > 1);<br />%test2a(theVar=PCPChangeF, where= T_VisitsF > 1);<br />%test2a(theVar=PrscrChangeF, where= T_Rx > 1);<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />%macro notrun;<br /><br /><br />%print(data=localt.g);<br />%print(data=localt.d);<br />proc logistic data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1;<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365 t_visits_fw365 upcIndex_fw365 upRindex_fw365; <br />run;<br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1;<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_Pre365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_Pre365;<br />run;<br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand doc_fw365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365;<br />run;<br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand LastPEDoc_Pre365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') LastPEDoc_Pre365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=LastPEDoc_Pre365;<br />run;<br /><br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 t_statinRx_fw365 /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365;<br />run;<br />%print(data=localt.g);<br />%freq(data=localt.g, filters=%str(docPatterns='AAAA' and N_visits_fw365 > 1 and N_visits_pre365 > 1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand N_Statinrx_fw365 >1 and StatinDoc_FW365 ne ''), table=adherence);<br /><br />data L11;<br />&nbsp&nbsp&nbsp&nbspset localt.g;<br />&nbsp&nbsp&nbsp&nbspif docPatterns = 'AACD' and adherence=0;<br />run;<br /><br />%freq(data=L11, table=PrscrPattern);<br /><br /><br />data L12;<br />&nbsp&nbsp&nbsp&nbspset localt.g;<br />&nbsp&nbsp&nbsp&nbspif docPatterns = 'ABAA' and adherence=0;<br />run;<br /><br />%freq(data=L12, table=PrscrPattern);<br /><br />/*Poisson model*/<br />data L20;<br />&nbsp&nbsp&nbsp&nbspset localt.G;<br />&nbsp&nbsp&nbsp&nbsplogTime = log(daysOnmed + daysOffmed);<br />run;<br />proc genmod data=L20 desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_Statinrx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 doc_fw365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel daysOnMed (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /*t_statinRx_fw365*/ <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=negbin offset=logTime  ; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365  ;<br />run;<br /><br />/*What predicts the pattern 'AAAA'*/<br />data L31;<br />&nbsp&nbsp&nbsp&nbspset localt.G;<br />&nbsp&nbsp&nbsp&nbspif DocPatterns = 'AAAA' then PatternOutcome = 1; else PatternOutcome=0;<br />&nbsp&nbsp&nbsp&nbspage = int(yrdif(birth, dqdate, \"AGE\"));<br />run;<br />%print(data=L31);<br />proc genmod data=L31 desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 sex_desc (ref='M') qaippe (ref='1')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel PatternOutcome (ref='0') =  age sex_desc qaippe resitype /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365;<br />run;<br /><br />proc genmod data=L31 desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 sex_desc (ref='M') qaippe (ref='1')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')<br />/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc qaippe resitype&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365;<br />run;<br /><br /><br />%mend notrun;<br /><br />s///<br />t///","children":[{"idx":"Note-GzCmzU2u7pmHxZPs","name":"Note Covariates","NodeDescription":"///t<br />hosp&nbspand&nbspLTC&nbspstay&nbspshould&nbspbe&nbspaccounted&nbspwhen&nbspestimating&nbspPDCthe&nbspLTC&nbspstay,&nbspand&nbsphospital&nbspstay&nbspshould&nbspbe&nbsptaken&nbspout&nbspfrom&nbspthe&nbspcalculation&nbspof&nbspPDC,!!!&nbspthose&nbspdeceased,&nbsppregnant,&nbsplost&nbspcoverage&nbspshould&nbspbe&nbspremoved&nbspfrom&nbspthe&nbspcohort&nbsp(after&nbspthe&nbspcovariates&nbspare&nbspdone)adherence&nbspin&nbspPDC,&nbsp%getAdherence&nbspdoneadherence&nbspin&nbspdiscontinuation,&nbsp%getDisc&nbspdoneCovariatesage,&nbsp%getPhRsinfosex,&nbsp%getPhRsinfomarital,&nbsp%getPhRsinfohealth&nbspcoverage,&nbsp%getCoverGAPs#&nbspmeds&nbsp(DINs),&nbspVE&nbspin&nbspFrailty&nbsp0128,&nbsppart&nbsp4&nbspand&nbsp5&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC5&nbspand&nbsp6#&nbsphosps,&nbspVE&nbspin&nbspFraity&nbsp0128,&nbsppart&nbsp19&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC7&nbspand&nbsp8#&nbsplos&nbsphosps,&nbspVE&nbspin&nbspFraity&nbsp0128,&nbsppart&nbsp19&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC9&nbspand&nbsp10#&nbspmsb&nbspvisits,&nbspVE&nbspin&nbspFrailty&nbsp0128,&nbsppart&nbsp17&nbsp&nbsp&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC11&nbspand&nbsp12#&nbspspec&nbspvisits,VE&nbspin&nbspFrailty&nbsp0128,&nbsppart&nbsp17&nbsp&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC11&nbspand&nbsp12#&nbspEmergency&nbspvisits,&nbspVE&nbspin&nbspFraity&nbsp0128,&nbsppart&nbsp18&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC13&nbspand&nbsp14total&nbspmed&nbspcost,&nbspVE&nbspin&nbspFraity&nbsp0128,&nbsppart&nbsp22&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC13&nbspand&nbsp14third&nbspparty&nbsppay&nbspof&nbspmed&nbspcost,&nbspVE&nbspin&nbspFraity&nbsp0128,&nbsppart&nbsp22&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC15&nbspand&nbsp16Use&nbspof&nbspPIMs&nbsp(Benzo,&nbspPsycho,&nbspANtidep,&nbspAnticho),&nbspVE&nbspin&nbspFraity&nbsp0128&nbsppart&nbsp21&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC17&nbspand&nbsp18#&nbspCAMH&nbspdisease,&nbsp%get_CAMH&nbsp(pre365,&nbsppost365),&nbspdone,&nbspVZC19Manitoba&nbspCharlson&nbspScore&nbsp(UltraSound&nbspProject),&nbspnot&nbspfound,&nbspeventually&nbspuse&nbspthe&nbspHQC&nbspone,&nbspVZC20.income,&nbsp%GEO_INCQTL_assign,&nbspdonerurality,&nbsp%getResiType,&nbspdoneCharlson's&nbspindex,&nbsp%Charlson_Elixhauser_Score_local,&nbspdonemortality,&nbspIB&nbspin&nbspnew&nbspcohort&nbspcreation,&nbspdone&nbspVZC21lost&nbspof&nbspcoverage&nbspduring&nbspfollow&nbspup,&nbsp%getCoverGAPs,&nbspdone,&nbspVZC22LTC&nbspstay,&nbspthe&nbspindicator&nbspLTCStay&nbspduring&nbspfollow&nbspup&nbsp(yes,&nbspno)&nbspis&nbspdone&nbspin&nbspVZC23#&nbspchronic&nbspdiseases&nbsp(CCDSS),&nbspas&nbspthe&nbspstudy&nbspdata&nbspis&nbspnot&nbspcomplete&nbspin&nbsptime,&nbspdo&nbspnot&nbspuse&nbspthe&nbspcohort&nbspdata&nbspto&nbspcalculate&nbspthe&nbspchronic&nbspconditions,&nbspinstead,&nbspuse&nbspthe&nbspexisting&nbspchronic&nbspcondition&nbspdatabase.&nbspDone&nbspVZC24&nbspand&nbspVZC25&nbsp(for&nbsppre&nbspand&nbsppost)pregnancy&nbsp(UltraSound&nbspProject,&nbsptoo&nbspcomplicated.&nbspeventually&nbspusing&nbspthe&nbspCCDSS&nbspcase&nbspdefinition,&nbspwhich&nbspis&nbspused&nbspfor&nbspexclusion&nbspin&nbspdefinition&nbspof&nbspCCDSS&nbspchronic&nbspconditions)Done&nbspVZC26&nbsp(for&nbsppre&nbspand&nbsppost)the&nbspcode&nbspof&nbsppregancy&nbspwas&nbspfrom&nbspthe&nbspfile&nbspA12_CoMorb_ICDDX&nbspin&nbspthe&nbspChronicPop's&nbspremoteS&nbspfolder('641',&nbsp'642',&nbsp'643',&nbsp'644',&nbsp'645',&nbsp'646',&nbsp'647',&nbsp'648',&nbsp'649',&nbsp'650',&nbsp'651',&nbsp'652',&nbsp'653',&nbsp'654',&nbsp'655',&nbsp'656',&nbsp'657',&nbsp'658',&nbsp'659',&nbsp'660',&nbsp'661',&nbsp'662',&nbsp'663',&nbsp'664',&nbsp'665',&nbsp'666',&nbsp'667',&nbsp'668',&nbsp'669',&nbsp'670',&nbsp'671',&nbsp'672',&nbsp'673',&nbsp'674',&nbsp'675',&nbsp'676',&nbsp'V27',&nbsp'O10',&nbsp'O11',&nbsp'O12',&nbsp'O13',&nbsp'O14',&nbsp'O15',&nbsp'O16',&nbsp'O17',&nbsp'O18',&nbsp'O19',&nbsp'O21',&nbsp'O22',&nbsp'O23',&nbsp'O24',&nbsp'O25',&nbsp'O26',&nbsp'O27',&nbsp'O28',&nbsp'O29',&nbsp'O30',&nbsp'O31',&nbsp'O32',&nbsp'O33',&nbsp'O34',&nbsp'O35',&nbsp'O36',&nbsp'O37',&nbsp'O38',&nbsp'O39',&nbsp'O40',&nbsp'O41',&nbsp'O42',&nbsp'O43',&nbsp'O44',&nbsp'O45',&nbsp'O46',&nbsp'O47',&nbsp'O48',&nbsp'O49',&nbsp'O50',&nbsp'O51',&nbsp'O52',&nbsp'O53',&nbsp'O54',&nbsp'O55',&nbsp'O56',&nbsp'O57',&nbsp'O58',&nbsp'O59',&nbsp'O60',&nbsp'O61',&nbsp'O62',&nbsp'O63',&nbsp'O64',&nbsp'O65',&nbsp'O66',&nbsp'O67',&nbsp'O68',&nbsp'O69',&nbsp'O70',&nbsp'O71',&nbsp'O72',&nbsp'O73',&nbsp'O74',&nbsp'O75',&nbsp'O76',&nbsp'O77',&nbsp'O78',&nbsp'O79',&nbsp'O80',&nbsp'O81',&nbsp'O82',&nbsp'O83',&nbsp'O84',&nbsp'O85',&nbsp'O86',&nbsp'O87',&nbsp'O88',&nbsp'O89',&nbsp'O90',&nbsp'O91',&nbsp'O92',&nbsp'O93',&nbsp'O94',&nbsp'O95',&nbsp'O98',&nbsp'O99',&nbsp'Z37')propensity&nbspscore,&nbsp%Q_PSScore,&nbspnot&nbspgeneralized&nbspyetother&nbspconditions:AK&nbspCK&nbspDB&nbspHP&nbspBBCV&nbspPV&nbspCD&nbspCOLV&nbspCALCNS&nbspAP&nbspGPDoctor&nbspsex,&nbspVRC&nbspin&nbspFrailty&nbsp0128Doctor&nbspage,&nbspVRC&nbspin&nbspFrailty&nbsp0128Doctor&nbspyears&nbspsince&nbspgraduation,&nbspVRC&nbspin&nbspFrailty&nbsp0128Doctor&nbspdomestic/foreign&nbsptraining,&nbspVRC&nbspin&nbspFrailty&nbsp0128Doctor&nbsppanel&nbspsizeDoctor&nbspworkloadFee&nbspfor&nbspservice&nbspor&nbspNFFSSpecsame&nbspage/sex<br />t///","custparents":[{"idx":"CodeTask-X3qh5qNEkgbTc2aV"}]}],"custparents":[{"idx":"CodeTask-mqQWr8kGTH7TzB2R"}]},{"idx":"CodeTask-cn4xkuAyEOFAppY5","name":"VZC_Patient Covariates","NodeDescription":"///t<br />///s<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZA.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZA.sas7bdat)<br />);<br /><br />%print(data=vza);<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br />&nbsp&nbsp&nbsp&nbsp);<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />%vbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_benefit.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_benefit.sas7bdat)<br />);<br /><br />%vbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_nonbenefit.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_nonbenefit.sas7bdat)<br />);<br /><br />%vbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_ed_a2012.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_ed_a2012.sas7bdat)<br />);<br />%vbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_verif_mort.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_verif_mort.sas7bdat)<br />);<br />%vbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_phrs_cov.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_phrs_cov.sas7bdat)<br />);<br /><br />%vbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_mds_ltc.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_mds_ltc.sas7bdat)<br />);<br /><br />%vbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&theChronicConditionDataPath.\\&theChronicConditionData..zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theChronicConditionData..sas7bdat)<br />);<br /><br /><br /><br /><br /><br />/*# med (excluding the study medication)*/<br />/***5* # DINs within 365 days prior to entry***************************************/<br />&nbsp&nbsp&nbsp&nbsp/*from benefit file*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZA,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'be' as src),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate-1 and t2.entryDate -365)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*from nonbenefit file*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZA,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'nb' as src),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate-1 and t2.entryDate -365)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*put the above together*/<br />&nbsp&nbsp&nbsp&nbspdata VZC5c;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC5a VZC5b;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbsp/*remove those DINs as statin*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC5c,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5d,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(DIN not in (select DIN from locald.StatinDINs))<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*get distinct DINs by key_hsn from both the benefit file and the nonbenefit file*/<br />&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC5d, target=VZC5e, vars=%str(key_hsn, DIN));<br />&nbsp&nbsp&nbsp&nbsp/*count DINs by Key_hsn*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC5e,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5f,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, count(DIN) as NDINS_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*Link backto VZA*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZA,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC5f,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC5,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinction=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.NDINS_Pre365 = ., 0, t2.NDINS_Pre365) as NDINS_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);&nbsp&nbsp&nbsp&nbsp<br /><br />/***6* # DINs within 365 days since entry***************************************/<br />&nbsp&nbsp&nbsp&nbsp/*from benefit file*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC5,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'be' as src),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate and t2.entryDate +365-1)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*from nonbenefit file*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC5,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.din, 'nb' as src),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate and t2.entryDate +365-1)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*put the above together*/<br />&nbsp&nbsp&nbsp&nbspdata VZC6c;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC6a VZC6b;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbsp/*remove those DINs as statin*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC6c,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6d,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(DIN not in (select DIN from locald.StatinDINs))<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*get distinct DINs by key_hsn from both the benefit file and the nonbenefit file*/<br />&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC6d, target=VZC6e, vars=%str(key_hsn, DIN));<br />&nbsp&nbsp&nbsp&nbsp/*count DINs by Key_hsn*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC6e,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6f,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, count(DIN) as NDINS_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*Link backto VZC5*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC5,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC6f,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC6,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinction=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.NDINS_Post365 = ., 0, t2.NDINS_Post365) as NDINS_Post365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);&nbsp&nbsp&nbsp&nbsp<br /><br /><br />/*VZC7 #  hospitalizations within 365 days prior to entry*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC6,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC7a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.adm_date, t1.dschg_date, t2.entrydate),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_IP='IP'<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.adm_date ne .  and t1.dschg_date ne . )<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate -1 and t2.entryDate - 365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate -1 and t2.entryDate - 365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate-365 and t1.dschg_date > t2.entryDate -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*count # of hosp visits per patient*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC7a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC7b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(adm_date) as NHosp_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*Link to VZC6*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC6,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC7b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC7,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NHosp_Pre365=., 0, t2.NHosp_Pre365) as NHosp_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />/*VZC8 #  hospitalizations within 365 days prior to entry*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC7,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC8a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.adm_date, t1.dschg_date, t2.entrydate),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_IP='IP'<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.adm_date ne .  and t1.dschg_date ne . )<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate  and t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate  and t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate and t1.dschg_date > t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*count # of hosp visits per patient*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC8a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC8b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(adm_date) as NHosp_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*Link to VZC7*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC7,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC8b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC8,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NHosp_Post365=., 0, t2.NHosp_Post365) as NHosp_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br /><br />&nbsp&nbsp&nbsp&nbsp/*VZC 9, # days/nights in hospital within 365 days prior to entry*/<br />&nbsp&nbsp&nbsp&nbsp%getHDay_Nights(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHospFile=master_hosp, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPtFile=VZC8, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdStart=&dataStartdate;, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdEnd=&dataEnddate;, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMaxGap=1, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldHN=0, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=EntryDate, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=VZC9a, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspperiodStart=EntryDate - 365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPeriodEnd=EntryDate - 1, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstep=2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbspdata VZC9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC9a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename PtHNights = HNights_Pre365 PtHDays = HDays_Pre365;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbsp/*VZC10, # days/nights in hospital within 365 days since entry*/<br />&nbsp&nbsp&nbsp&nbsp%getHDay_Nights(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHospFile=master_hosp, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPtFile=VZC9, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdStart=&dataStartdate;, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdEnd=&dataEnddate;, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMaxGap=1, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldHN=0, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=EntryDate, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=VZC10a, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspperiodStart=EntryDate , <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPeriodEnd=EntryDate + 365 - 1, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstep=2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbspdata VZC10;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC10a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename PtHNights = HNights_Post365 PtHDays = HDays_Post365;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br /><br />/*11. Doc (GP/SP) visits within 1 years prior to entry*/<br />&nbsp&nbsp&nbsp&nbsp/*from msb file, distinct visits (same date, same doc)*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_msb,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC10,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.dos, t1.key_doc_num, t1.spec),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate-1 and t2.entryDate - 365)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*get gp visits*/<br />&nbsp&nbsp&nbsp&nbspdata VZC11b1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC11a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec in: ('B');<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC11b1, target=VZC11c1, vars=%str(key_hsn, dos, key_doc_num));<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11c1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11d1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_GP_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*get SP visits*/<br />&nbsp&nbsp&nbsp&nbspdata VZC11b2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC11a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec not in: ('B') and spec not in: ('W'); /*W are nurses or pharmacists*/<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC11b2, target=VZC11c2, vars=%str(key_hsn, dos, key_doc_num));<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11c2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11d2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_SP_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*Link to VZC10*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC10,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC11d1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11e,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_GP_Pre365=., 0, t2.NVisits_GP_Pre365) as NVisits_GP_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11e,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC11d2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC11,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_SP_Pre365=., 0, t2.NVisits_SP_Pre365) as NVisits_SP_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />/*12. Doc (GP/SP) visits within 1 years since entry*/<br />&nbsp&nbsp&nbsp&nbsp/*from msb file, distinct visits (same date, same doc)*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_msb,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC11,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.dos, t1.key_doc_num, t1.spec),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate and t2.entryDate + 365-1)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*get gp visits*/<br />&nbsp&nbsp&nbsp&nbspdata VZC12b1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC12a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec in: ('B');<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC12b1, target=VZC12c1, vars=%str(key_hsn, dos, key_doc_num));<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12c1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12d1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_GP_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*get SP visits*/<br />&nbsp&nbsp&nbsp&nbspdata VZC12b2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC12a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif spec not in: ('B') and spec not in: ('W'); /*W are nurses or pharmacists*/<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp%distinct(data=VZC12b2, target=VZC12c2, vars=%str(key_hsn, dos, key_doc_num));<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12c2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12d2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(dos) as NVisits_SP_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*Link to VZC11*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC11,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC12d1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12e,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_GP_Post365=., 0, t2.NVisits_GP_Post365) as NVisits_GP_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12e,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC12d2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC12,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_SP_Post365=., 0, t2.NVisits_SP_Post365) as NVisits_SP_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />/*13. ER visits within a year prior to entry*/<br />&nbsp&nbsp&nbsp&nbsp/*from ER file*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_ed_a2012,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC12,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC13a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.inst_num, t1.reg_date, t1.disp_date, t2.entrydate),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.reg_date ne .  and t1.disp_date ne . )<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date between t2.entryDate -1 and t2.entryDate - 365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.disp_date between t2.entryDate -1 and t2.entryDate - 365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date < t2.entryDate-365 and t1.disp_date > t2.entryDate -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*count # of ER visits per patient*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC13a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC13b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(inst_num) as NVisits_ER_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*link to VZC12*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC12,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC13b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC13,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_ER_Pre365=., 0, t2.NVisits_ER_Pre365) as NVisits_ER_Pre365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />/*14. ER visits within a year since entry*/<br />&nbsp&nbsp&nbsp&nbsp/*from ER file*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=master_ed_a2012,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC13,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC14a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.inst_num, t1.reg_date, t1.disp_date, t2.entrydate),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str( <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.reg_date ne .  and t1.disp_date ne . )<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date between t2.entryDate  and t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.disp_date between t2.entryDate  and t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.reg_date < t2.entryDate and t1.disp_date > t2.entryDate+365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbsp/*count # of ER visits per patient*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC14a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC14b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, entryDate, count(inst_num) as NVisits_ER_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, entryDate)<br />&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*link to VZC13*/<br />&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VZC13,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VZC14b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC14,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.NVisits_ER_Post365=., 0, t2.NVisits_ER_Post365) as NVisits_ER_Post365),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn =t2.key_hsn)<br />&nbsp&nbsp&nbsp&nbsp);<br /><br />/*VZC15 the % paid by patient or 3rd party insurer of all drugs within 365 days prior to entry<br />&nbsp&nbsp&nbsp&nbsp1. get all drug claims for patients in the cohort<br />&nbsp&nbsp&nbsp&nbsp2. keep the claims within 365 prior to entry<br />&nbsp&nbsp&nbsp&nbsp3. For the claim from step 2, estimate the % paid by patient or 3rd party insurer<br />*/<br />/*VZC15a, get drug claims within 365*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbspt2=VZC14,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC15a1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn,  t1.Rx_ddddd, t1.rx_qty_amt, t1.total_apprv,t1.amnt_pay_drug_plan, t2.entryDate), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate - 365 and t2.entryDate -1)<br />);<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbspt2=VZC14,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC15a2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.rx_qty_amt, t1.total_cost as total_apprv,0 as amnt_pay_drug_plan, t2.entryDate), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate - 365 and t2.entryDate -1)<br />);<br /><br />data VZC15a;<br />&nbsp&nbsp&nbsp&nbspset VZC15a1 VZC15a2;<br />run;<br /><br />/*Sum to have total drug cost and the proportion paid by public drug plan*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC15a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC15b,<br />&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, EntryDate, sum(total_apprv) as total_Cost, sum(total_apprv) - sum(amnt_pay_drug_plan) as ThirdPartyPay),<br />&nbsp&nbsp&nbsp&nbspgroupby = %str(key_hsn, EntryDate)<br />);<br /><br />data VZC15c;<br />&nbsp&nbsp&nbsp&nbspset VZC15b;<br />&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT = ThirdPartyPay / total_Cost;<br />&nbsp&nbsp&nbsp&nbspformat ThirdPartyPayCAT $20.;<br />&nbsp&nbsp&nbsp&nbspif ThirdPartyPayPCT < .50 then ThirdPartyPayCAT =\"<50%\";<br />&nbsp&nbsp&nbsp&nbspelse ThirdPartyPayCAT =\">=50%\";<br />&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT2=round(ThirdPartyPayPCT*100, 1);<br />run;<br />/*%freq(data=VZC15c, table=ThirdPartyPayCAT);*/<br />%MakeCategories(<br />    Data=VZC15c, <br />    theVar=ThirdPartyPayPCT2,<br />    theTargetVar=ThirdPartyPayPCT2_CAT,<br />    theCutOffs=0 10 20 30 40 50 60 70 80 90 100, <br />    dlmt=, <br />    debug=, <br />    closeSide=left,<br />    target=VZC15d<br />);<br />/*%freq(data=VZC15D, table=ThirdPartyPayPCT2_CAT);<br />&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VZC15D,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=ThirdPartyPayPCT2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC15Tmp1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbspproc univariate data =  vzc15d normal;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar ThirdPartyPayPCT2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphistogram /normal;<br />&nbsp&nbsp&nbsp&nbsprun;<br />*/<br /><br />/*Link the 3rd party pay variables to VZC14 */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC14,<br />&nbsp&nbsp&nbsp&nbspt2=VZC15D,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC15,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ThirdPartyPay as ThirdPartyPay_Pre365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT as ThirdPartyPayPCT_Pre365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayCAT as ThirdPartyPayCAT_Pre365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT2_CAT as ThirdPartyPayLevel_Pre365), <br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br /><br />/*VZC16 the % paid by patient or 3rd party insurer of all drugs within 365 days since entry<br />&nbsp&nbsp&nbsp&nbsp1. get all drug claims for patients in the cohort<br />&nbsp&nbsp&nbsp&nbsp2. keep the claims within 365 since entry<br />&nbsp&nbsp&nbsp&nbsp3. For the claim from step 2, estimate the % paid by patient or 3rd party insurer<br />*/<br />/*VZC16a, get drug claims within 365 days since entry*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbspt2=VZC15,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC16a1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn,  t1.Rx_ddddd, t1.rx_qty_amt, t1.total_apprv,t1.amnt_pay_drug_plan, t2.entryDate), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate  and t2.entryDate +365 -1)<br />);<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbspt2=VZC15,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC16a2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.rx_qty_amt, t1.total_cost as total_apprv,0 as amnt_pay_drug_plan, t2.entryDate), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate  and t2.entryDate +365 -1)<br />);<br /><br />data VZC16a;<br />&nbsp&nbsp&nbsp&nbspset VZC16a1 VZC16a2;<br />run;<br /><br />/*Sum to have total drug cost and the proportion paid by public drug plan*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC16a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC16b,<br />&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, EntryDate, sum(total_apprv) as total_Cost, sum(total_apprv) - sum(amnt_pay_drug_plan) as ThirdPartyPay),<br />&nbsp&nbsp&nbsp&nbspgroupby = %str(key_hsn, EntryDate)<br />);<br /><br />data VZC16c;<br />&nbsp&nbsp&nbsp&nbspset VZC16b;<br />&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT = ThirdPartyPay / total_Cost;<br />&nbsp&nbsp&nbsp&nbspformat ThirdPartyPayCAT $20.;<br />&nbsp&nbsp&nbsp&nbspif ThirdPartyPayPCT < .50 then ThirdPartyPayCAT =\"<50%\";<br />&nbsp&nbsp&nbsp&nbspelse ThirdPartyPayCAT =\">=50%\";<br />&nbsp&nbsp&nbsp&nbspThirdPartyPayPCT2=round(ThirdPartyPayPCT*100, 1);<br />run;<br />/*%freq(data=VZC16c, table=ThirdPartyPayCAT);*/<br />%MakeCategories(<br />    Data=VZC16c, <br />    theVar=ThirdPartyPayPCT2,<br />    theTargetVar=ThirdPartyPayPCT2_CAT,<br />    theCutOffs=0 10 20 30 40 50 60 70 80 90 100, <br />    dlmt=, <br />    debug=, <br />    closeSide=left,<br />    target=VZC16d<br />);<br />/*%freq(data=VZC16D, table=ThirdPartyPayPCT2_CAT);<br />&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VZC16D,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=ThirdPartyPayPCT2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC16Tmp1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br /><br />&nbsp&nbsp&nbsp&nbspproc univariate data =  VZC16d normal;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar ThirdPartyPayPCT2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphistogram /normal;<br />&nbsp&nbsp&nbsp&nbsprun;<br />*/<br /><br />/*Link the 3rd party pay variables to VZC15 */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC15,<br />&nbsp&nbsp&nbsp&nbspt2=VZC16D,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC16,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ThirdPartyPay as ThirdPartyPay_Post365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT as ThirdPartyPayPCT_Post365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayCAT as ThirdPartyPayCAT_Post365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.ThirdPartyPayPCT2_CAT as ThirdPartyPayLevel_Post365), <br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br /><br />/*VZC 17, receiving PIM drugs within 365 days prior (exclusive) to the entry<br />&nbsp&nbsp&nbsp&nbspthese drugs including, Anticholinergics, antipsychotics, antidepressants, Benzodiazpines<br />&nbsp&nbsp&nbsp&nbspDINs were provided by Laura in the dropbox, also copied to P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS<br />&nbsp&nbsp&nbsp&nbspDINS were imported by the program makePIMs<br />*/<br /><br />/* 1. get drug claims<br />&nbsp&nbsp&nbsp&nbsp2. For patients in VZC16, determine whether or not the patient received 1+ dispensation of the PIM DINs within 30 days <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprior (exclusive) to entry<br />&nbsp&nbsp&nbsp&nbsp3. Indicate those received the interested PIMs&nbsp&nbsp&nbsp&nbsp<br />*/<br />/*VZC17a, get drug claims of ChEIs*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC17a1,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC17a2,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din<br />);<br /><br />data VZC17a;<br />&nbsp&nbsp&nbsp&nbspset VZC17a1 VZC17a2;<br />run;<br /><br /><br />/*VZC17b, keep the last drug specific claim closest to entryDate*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC16,<br />&nbsp&nbsp&nbsp&nbspt2=VZC17a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC17B,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.Class), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn ,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(entryDate -365 <= rx_ddddd < entryDate)<br />);<br /><br />/*transpose VZC17B, so as to have indicates for each class*/<br />%transpose(data=VZC17B, target=VZC17c, rowhead=key_hsn, colhead=class, contents=class);<br /><br /><br />/*Link the PIM indicatorsto VZC16 */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC16,<br />&nbsp&nbsp&nbsp&nbspt2=VZC17c,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC17,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.BENZO ne '', 1, 0) as BENZO_Pre365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.PSYCHO ne '', 1, 0) as PSYCHO_Pre365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiDep ne '', 1, 0) as ANTIDEP_Pre365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiCHO ne '', 1, 0) as ANTICHO_Pre365), <br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br /><br /><br />/*VZC 18, receiving PIM drugs within 365 days since (inclusive) to the entry<br />&nbsp&nbsp&nbsp&nbspthese drugs including, Anticholinergics, antipsychotics, antidepressants, Benzodiazpines<br />&nbsp&nbsp&nbsp&nbspDINs were provided by Laura in the dropbox, also copied to P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS<br />&nbsp&nbsp&nbsp&nbspDINS were imported by the program makePIMs<br />*/<br /><br />/* 1. get drug claims<br />&nbsp&nbsp&nbsp&nbsp2. For patients in VZC17, determine whether or not the patient received 1+ dispensation of the PIM DINs within 30 days <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprior (exclusive) to entry<br />&nbsp&nbsp&nbsp&nbsp3. Indicate those received the interested PIMs&nbsp&nbsp&nbsp&nbsp<br />*/<br />/*VZC18a, get drug claims of ChEIs*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC18a1,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbspt2=localt.PIMS,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC18a2,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.class, t1.Rx_ddddd), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din<br />);<br /><br />data VZC18a;<br />&nbsp&nbsp&nbsp&nbspset VZC18a1 VZC18a2;<br />run;<br /><br /><br />/*VZC18b, keep the last drug specific claim closest to entryDate*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC17,<br />&nbsp&nbsp&nbsp&nbspt2=VZC18a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC18B,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.Class), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn ,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(entryDate  <= rx_ddddd < entryDate +365)<br />);<br /><br />/*transpose VZC18B, so as to have indicates for each class*/<br />%transpose(data=VZC18B, target=VZC18c, rowhead=key_hsn, colhead=class, contents=class);<br /><br /><br />/*Link the PIM indicatorsto VZC16 */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC17,<br />&nbsp&nbsp&nbsp&nbspt2=VZC18c,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC18,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.BENZO ne '', 1, 0) as BENZO_Post365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.PSYCHO ne '', 1, 0) as PSYCHO_Post365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiDep ne '', 1, 0) as ANTIDEP_Post365, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.AntiCHO ne '', 1, 0) as ANTICHO_Post365), <br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br />/*19. CAMH*/<br />%get_CAMH( Data_Hosp=master_hosp, Data_msb=master_msb, Data_ed=master_ed_a2012, <br />&nbsp&nbsp&nbsp&nbspstartDate=&dataStartDate, endDate=&DataEndDate, debug=1, dxDateCol=, target=VZC19a<br />) ;<br />%print(data=VZC19a);<br />/*from the above, transpose and put the type of CAMH in one row for each patient*/<br />%transpose(data=VZC19a, target=VZC19b, rowhead=key_hsn, colhead=camh_cat, contents=dxdate);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC18,<br />&nbsp&nbsp&nbsp&nbspt2=VZC19b,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC19c,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.npd as CAMH_NPD_Date, t2.SA as CAMH_SA_Date,t2.PSY as CAMH_PSY_Date), <br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br />data VZC19;<br />&nbsp&nbsp&nbsp&nbspset VZC19c;<br />&nbsp&nbsp&nbsp&nbsparray cAMHdates{3} CAMH_NPD_Date CAMH_SA_Date CAMH_PSY_Date;<br />&nbsp&nbsp&nbsp&nbsparray CAMHPre_{3} ;<br />&nbsp&nbsp&nbsp&nbsparray camhPost_{3} ;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to 3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is no camh date, both pre and post are negative*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cAMHdates(i) =. then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) = 0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the camh date is before the entrydate, both pre and post are positive*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cAMHdates(i) < entryDate then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) = 1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the camh date is within the follow up period, the pre is negative, the post positive*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif entryDate <= cAMHdates(i) < entryDate + 365 then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) =1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the camh date is after the follow up period, both are negative*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_(i) = 0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_(i) =0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsprename <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_1 = CAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_2 = CAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPre_3 = CAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_1 = CAMH_NPD_Post365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_2 = CAMH_SA_Post365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMHPost_3 = CAMH_PSY_Post365<br />&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbspdrop i;<br />run;<br /><br />/*20 Charlson score*/<br />%Charlson_Elixhauser_Score_local(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcharlson=Y, <br />                 elixhauser=N, <br />                 msb_xtrc_start_dt=,<br />                 msb_xtrc_end_dt=,<br />                 hosp_file=master_hosp, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp msb_file=master_msb, <br />                 hsn_file=VZC19, <br />                 ref_date_var=EntryDate, <br />                 charlson_var_out=, <br />                 elix_postfix=elix_,<br />                 additionalByVar=, <br />                 ds_out=VZC20,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp days_lookback=,<br />                 debug=N<br />);<br /><br />/*mortality*/<br />%print(data=master_verif_mort);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC20,<br />&nbsp&nbsp&nbsp&nbspt2=master_verif_mort,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC21a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ddt_novit as MortDate),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br />data VZC21;<br />&nbsp&nbsp&nbsp&nbspset VZC21a;<br />&nbsp&nbsp&nbsp&nbspDeath_Pre365 =0;Death_Post365 =0;<br />&nbsp&nbsp&nbsp&nbspif MortDate ne . and MortDate < EntryDate then Death_Pre365=1;<br />&nbsp&nbsp&nbsp&nbspif MortDate ne . and EntryDate <= MortDate < EntryDate + 365 then Death_Post365=1;<br />Run;<br />%freq(data=VZC21, table = Death_Pre365);<br />%freq(data=VZC21, table = Death_Post365);<br /><br />/*22. lost of coverage during follow up */<br />%getCoverGAPs(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=master_phrs_cov, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=VZC21, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=EntryDate, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= %str(EntryDate+365-1), <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VZC22a, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br />&nbsp&nbsp&nbsp&nbspdebug=1<br />);<br />/*from above, get those with coverage gaps*/<br />data VZC22b;<br />&nbsp&nbsp&nbsp&nbspset VZC22a;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn EntryDate start<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverstart<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverEnd<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdays<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverPCT<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgaps<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgapPCT<br />;<br />&nbsp&nbsp&nbsp&nbspif gaps ne . and gaps > 0;<br />run;<br />/*make a distinct list from above*/<br />%sort(data=VZC22b, sorter = key_hsn entryDate coverstart coverend);<br />data VZC22c;<br />&nbsp&nbsp&nbsp&nbspset VZC22b;<br />&nbsp&nbsp&nbsp&nbspby key_hsn entryDate coverstart coverend;<br />&nbsp&nbsp&nbsp&nbspif first.key_hsn;<br />run;<br /><br />/*link back to VZC21, if the patient appears in VZC22C, indicate as lost of coverage in post365*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC21,<br />&nbsp&nbsp&nbsp&nbspt2=VZC22C,<br />&nbsp&nbsp&nbsp&nbspTarget=VZC22,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn = \"\", 0,1) as LostCov_Post365, t2.coverstart as Date_LostCov ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br />/*23. LTC stay*/<br />/*from the mds_ltc file, get ltc stay records*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC22,<br />&nbsp&nbsp&nbsp&nbspt2=master_mds_ltc,<br />&nbsp&nbsp&nbsp&nbsptarget= VZC23a,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.entryDate, t2.key_hsn, t2.mds_ab1 as adm_date, t2.mds_r4 as dschg_date ),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />/*concatenate the overlaping periods*/<br />%cleanHospital(<br />&nbsp&nbsp&nbsp&nbspdata=VZC23a, <br />&nbsp&nbsp&nbsp&nbsptarget=VZC23b, <br />&nbsp&nbsp&nbsp&nbspdxCol=,<br />&nbsp&nbsp&nbsp&nbspmdxCol=, <br />&nbsp&nbsp&nbsp&nbspintvnCol=, <br />&nbsp&nbsp&nbsp&nbspstartD=,<br />&nbsp&nbsp&nbsp&nbspendD=,<br />&nbsp&nbsp&nbsp&nbspinst_num=,<br />&nbsp&nbsp&nbsp&nbspMaxGap=1, <br />&nbsp&nbsp&nbsp&nbspincldHN=0, <br />&nbsp&nbsp&nbsp&nbspkeep=EntryDate,<br />&nbsp&nbsp&nbsp&nbspmaxLenD=,<br />&nbsp&nbsp&nbsp&nbspmaxLenM=,<br />&nbsp&nbsp&nbsp&nbspmaxLenI=,<br />&nbsp&nbsp&nbsp&nbspkeepTmp=1<br />);<br /><br />%distinct(data=VZC23b, target=VZC23c, vars=%str(key_hsn), <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(adm_date between entryDate and entryDate +365-1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor dschg_date between entryDate and entryDate +365-1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor adm_date < entryDate and dschg_date > entryDate +365-1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp));<br /><br />/*Link to VSZ22, indicate those having LTC stay*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC22,<br />&nbsp&nbsp&nbsp&nbspt2=VZC23c,<br />&nbsp&nbsp&nbsp&nbsptarget= VZC23,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn ne \"\", 0, 1) as LTCStay_Post365 ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br />/*24. Chronic Conditions (CCSDD definition) within 365 days prior to entry. The data has been prepared. file name and path <br />&nbsp&nbsp&nbsp&nbspdefined in Local Settings<br />*/<br />%print(data=&theChronicConditionData);<br /><br />/*from the conditions, get a list of distinct key_hsn - chronic conditions for patients in VZC23*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC23,<br />&nbsp&nbsp&nbsp&nbspt2=&theChronicConditionData,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC24a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t2.disease as ChronicD),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br />&nbsp&nbsp&nbsp&nbspfilters=%str( t2.dzStartDate between t1.EntryDate -365 and t1.EntryDate -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp t2.dzEndDate between t1.EntryDate -365 and t1.EntryDate -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp or<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  t2.dzStartDate < t1.EntryDate -365 and t2.dzEndDate > t1.EntryDate -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br /><br />data VZC24b;<br />&nbsp&nbsp&nbsp&nbspset VZC24a;<br />&nbsp&nbsp&nbsp&nbsplength ChronicD $50.;<br />&nbsp&nbsp&nbsp&nbspChronicD2='CC_Pre365_' || strip(ChronicD) ;<br />&nbsp&nbsp&nbsp&nbspChronicD3=1;<br />run;<br /><br />%transpose(data=VZC24b, target=VZC24c, rowhead=key_hsn, colhead=ChronicD2, contents=ChronicD3);<br /><br />/*link the above back to VZC23*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC23,<br />&nbsp&nbsp&nbsp&nbspt2=VZC24c,<br />&nbsp&nbsp&nbsp&nbsptarget= VZC24d,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=*,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br />data VZC24;<br />&nbsp&nbsp&nbsp&nbspset VZC24d;<br />&nbsp&nbsp&nbsp&nbsparray tmp {*} cc_pre365_:;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i) =. then tmp(i)=0;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspdrop i;<br />run;<br /><br />/*25. Chronic Conditions (CCSDD definition) within 365 days prior to entry. The data has been prepared. file name and path <br />&nbsp&nbsp&nbsp&nbspdefined in Local Settings<br />*/<br />/*from the conditions, get a list of distinct key_hsn - chronic conditions for patients in VZC23*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC24,<br />&nbsp&nbsp&nbsp&nbspt2=&theChronicConditionData,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC25a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t2.disease as ChronicD),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br />&nbsp&nbsp&nbsp&nbspfilters=%str( t2.dzStartDate between t1.EntryDate and t1.EntryDate +365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp t2.dzEndDate between t1.EntryDate  and t1.EntryDate +365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp or<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  t2.dzStartDate < t1.EntryDate and t2.dzEndDate > t1.EntryDate +365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br /><br />data VZC25b;<br />&nbsp&nbsp&nbsp&nbspset VZC25a;<br />&nbsp&nbsp&nbsp&nbsplength ChronicD $50.;<br />&nbsp&nbsp&nbsp&nbspChronicD2='CC_Post365_' || strip(ChronicD) ;<br />&nbsp&nbsp&nbsp&nbspChronicD3=1;<br />run;<br /><br />%transpose(data=VZC25b, target=VZC25c, rowhead=key_hsn, colhead=ChronicD2, contents=ChronicD3);<br /><br />/*link the above back to VZC24*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC24,<br />&nbsp&nbsp&nbsp&nbspt2=VZC25c,<br />&nbsp&nbsp&nbsp&nbsptarget= VZC25d,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=*,<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br />data VZC25;<br />&nbsp&nbsp&nbsp&nbspset VZC25d;<br />&nbsp&nbsp&nbsp&nbsparray tmp {*} cc_post365_:;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(tmp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif tmp(i) =. then tmp(i)=0;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspdrop i;<br />run;<br /><br />/*26. pregnancy<br />pregnancy (UltraSound Project, too complicated. eventually using the CCDSS case definition, which is used for exclusion in definition of CCDSS chronic conditions)<br />the code of pregancy was from the file A12_CoMorb_ICDDX in the ChronicPop's remoteS folder<br /><br />('641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '671', '672', '673', '674', '675', '676', 'V27', 'O10', 'O11', 'O12', 'O13', 'O14', 'O15', 'O16', 'O17', 'O18', 'O19', 'O21', 'O22', 'O23', 'O24', 'O25', 'O26', 'O27', 'O28', 'O29', 'O30', 'O31', 'O32', 'O33', 'O34', 'O35', 'O36', 'O37', 'O38', 'O39', 'O40', 'O41', 'O42', 'O43', 'O44', 'O45', 'O46', 'O47', 'O48', 'O49', 'O50', 'O51', 'O52', 'O53', 'O54', 'O55', 'O56', 'O57', 'O58', 'O59', 'O60', 'O61', 'O62', 'O63', 'O64', 'O65', 'O66', 'O67', 'O68', 'O69', 'O70', 'O71', 'O72', 'O73', 'O74', 'O75', 'O76', 'O77', 'O78', 'O79', 'O80', 'O81', 'O82', 'O83', 'O84', 'O85', 'O86', 'O87', 'O88', 'O89', 'O90', 'O91', 'O92', 'O93', 'O94', 'O95', 'O98', 'O99', 'Z37')<br />*/<br /><br />%let pregCodes=%str('641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', <br />'655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '671', '672', <br />'673', '674', '675', '676', 'V27', 'O10', 'O11', 'O12', 'O13', 'O14', 'O15', 'O16', 'O17', 'O18', 'O19', 'O21', 'O22', 'O23', <br />'O24', 'O25', 'O26', 'O27', 'O28', 'O29', 'O30', 'O31', 'O32', 'O33', 'O34', 'O35', 'O36', 'O37', 'O38', 'O39', 'O40', <br />'O41', 'O42', 'O43', 'O44', 'O45', 'O46', 'O47', 'O48', 'O49', 'O50', 'O51', 'O52', 'O53', 'O54', 'O55', 'O56', 'O57', <br />'O58', 'O59', 'O60', 'O61', 'O62', 'O63', 'O64', 'O65', 'O66', 'O67', 'O68', 'O69', 'O70', 'O71', 'O72', 'O73', 'O74', 'O75', <br />'O76', 'O77', 'O78', 'O79', 'O80', 'O81', 'O82', 'O83', 'O84', 'O85', 'O86', 'O87', 'O88', 'O89', 'O90', 'O91', 'O92', 'O93', <br />'O94', 'O95', 'O98', 'O99', 'Z37');<br /><br />/*hospital*/<br />data VZC26a;<br />&nbsp&nbsp&nbsp&nbspset master_hosp;<br />&nbsp&nbsp&nbsp&nbspsrc='hp';<br />&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25;<br />&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25;<br />&nbsp&nbsp&nbsp&nbspformat type $5.;<br />&nbsp&nbsp&nbsp&nbspformat code $10.;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to 25;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&pregCodes) then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&pregCodes)  then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn adm_date dschg_date src;<br />run;<br /><br />data VZC26b;<br />&nbsp&nbsp&nbsp&nbspset master_msb;<br />&nbsp&nbsp&nbsp&nbspsrc='mb';<br />&nbsp&nbsp&nbsp&nbspif diag in:(&pregCodes) then output;<br />&nbsp&nbsp&nbsp&nbspadm_date=dos;<br />&nbsp&nbsp&nbsp&nbspdschg_date=dos;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn adm_date dschg_date src;<br />run;<br /><br />data VZC26c;<br />&nbsp&nbsp&nbsp&nbspset VZC26a VZC26b;<br />run;<br /><br />/*link to VZC25, indicate those having preg during pre365*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC26c,<br />&nbsp&nbsp&nbsp&nbspt2=VZC25,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC26d,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, 1 as preg_pre365),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate -1 and t2.entryDate - 365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate -1 and t2.entryDate - 365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate-365 and t1.dschg_date > t2.entryDate -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />/*link to VZC25, indicate those having preg during post365*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC26c,<br />&nbsp&nbsp&nbsp&nbspt2=VZC25,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC26e,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, 1 as preg_post365),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date between t2.entryDate  and t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.entryDate  and t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.entryDate and t1.dschg_date > t2.entryDate + 365 -1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />/*link back to VZC25*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC25,<br />&nbsp&nbsp&nbsp&nbspt2=VZC26d,<br />&nbsp&nbsp&nbsp&nbspTarget=VZC26f,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn = \"\", 0,1) as preg_pre365 ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC26f,<br />&nbsp&nbsp&nbsp&nbspt2=VZC26e,<br />&nbsp&nbsp&nbsp&nbspTarget=VZC26,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn = \"\", 0,1) as preg_post365 ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />%freq(data=VZC26, table=preg_pre365*preg_post365);<br /><br /><br />/*VZC27<br />to count # of prescribers<br />of AHTN OH Statin medications<br />1) within 1 year prior to entryDate<br />2) within 1 year during follow up<br />*/<br /><br />/*claims of STATIN*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbspt2=locald.statindins,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27a1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbspt2=locald.statindins,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27a2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br />);<br /><br />/*claims of antiHTN*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbspt2=locald.ahtndins,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27a3,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbspt2=locald.ahtndins,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27a4,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br />);<br /><br />/*claims of oh*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br />&nbsp&nbsp&nbsp&nbspt2=locald.ohdins,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27a5,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br />&nbsp&nbsp&nbsp&nbspt2=locald.ohdins,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27a6,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.key_prscr_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=din,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(docslushcode='N')<br />);<br /><br />/*distinct records of statins*/<br />data VZC27b1;<br />&nbsp&nbsp&nbsp&nbspset VZC27a1 VZC27a2;<br />&nbsp&nbsp&nbsp&nbsptheMedClass='statin';<br />run;<br />%distinct(data=VZC27b1, target=VZC27b2, vars=*);<br /><br />data VZC27b3;<br />&nbsp&nbsp&nbsp&nbspset VZC27a3 VZC27a4;<br />&nbsp&nbsp&nbsp&nbsptheMedClass='ahtn';<br />run;<br />%distinct(data=VZC27b3, target=VZC27b4, vars=*);<br /><br />data VZC27b5;<br />&nbsp&nbsp&nbsp&nbspset VZC27a5 VZC27a6;<br />&nbsp&nbsp&nbsp&nbsptheMedClass='oh';<br />run;<br />%distinct(data=VZC27b5, target=VZC27b6, vars=*);<br /><br />/*put all records together*/<br />data VZC27C;<br />&nbsp&nbsp&nbsp&nbspset VZC27b2 VZC27B4 VZC27B6;<br />run;<br /><br />/*link to VZC26 to select records within look back*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27C,<br />&nbsp&nbsp&nbsp&nbspt2=VZC26,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27D1,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.key_prscr_num, t1.theMedClass, 'pre365' as thePeriod),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate -365 and t2.entryDate -1)<br />);<br /><br />/*link to VZC26 to select records within follow up*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27C,<br />&nbsp&nbsp&nbsp&nbspt2=VZC26,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27D2,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.key_prscr_num, t1.theMedClass, 'follow' as thePeriod),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=%str(key_hsn),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t2.entryDate and t2.entryDate+364)<br />);<br /><br />/*For each patient, # of distinct prescriber of statin ahtn oh in pre365 days*/<br />%distinct(data=VZC27D1, target=VZC27E1a, vars=%str(key_hsn, key_prscr_num));<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27E1a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27E1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(key_prscr_num) as Pre365_Prscr_statinAHTNOH),<br />&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />);<br />/*For each patient, # of distinct category of statin ahtn oh (1 to 3 categories) in pre365 days*/<br />%distinct(data=VZC27D1, target=VZC27E2a, vars=%str(key_hsn, theMedClass));<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27E2a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27E2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(theMedClass) as Pre365_MedClass_statinAHTNOH),<br />&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />);<br /><br />/*For each patient, # of distinct prescriber of statin ahtn oh in follow up*/<br />%distinct(data=VZC27D2, target=VZC27E3a, vars=%str(key_hsn, key_prscr_num));<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27E3a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27E3,<br />&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(key_prscr_num) as Followup_Prscr_statinAHTNOH),<br />&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />);<br />/*For each patient, # of distinct category of statin ahtn oh (1 to 3 categories) in pre365 days*/<br />%distinct(data=VZC27D2, target=VZC27E4a, vars=%str(key_hsn, theMedClass));<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27E4a,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27E4,<br />&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(theMedClass) as Followup_MedClass_statinAHTNOH),<br />&nbsp&nbsp&nbsp&nbspgroupby=key_hsn<br />);<br /><br />/*link to VZC26 to have the vars*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC26,<br />&nbsp&nbsp&nbsp&nbspt2=VZC27E1,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27F1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Pre365_Prscr_statinAHTNOH=., 0, Pre365_Prscr_statinAHTNOH) as Pre365_Prscr_statinAHTNOH ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27f1,<br />&nbsp&nbsp&nbsp&nbspt2=VZC27E2,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27F2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Pre365_MedClass_statinAHTNOH=., 0, Pre365_MedClass_statinAHTNOH) as Pre365_MedClass_statinAHTNOH ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27f2,<br />&nbsp&nbsp&nbsp&nbspt2=VZC27E3,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC27F3,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Followup_Prscr_statinAHTNOH=., 0, Followup_Prscr_statinAHTNOH) as Followup_Prscr_statinAHTNOH ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=VZC27f3,<br />&nbsp&nbsp&nbsp&nbspt2=VZC27E4,<br />&nbsp&nbsp&nbsp&nbsptarget=VZC,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.Followup_MedClass_statinAHTNOH=., 0, Followup_MedClass_statinAHTNOH) as Followup_MedClass_statinAHTNOH ),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br /><br /><br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VZC.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VZC.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br />%beep;<br /><br />s///<br />t///","children":[{"idx":"CodeTask-dfOUDauemdaGeNIW","name":"VZD_PropensityScoreMatching","NodeDescription":"///t<br />///s<br />data _null_;run;<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br />);<br /><br /><br />/*VZD, propensity score matching*/<br />data VZD1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspif CMEPL1 ='' or cmepl1='na:.:na' then var_CMEPL = 0; else var_CMEPL=1;<br />&nbsp&nbsp&nbsp&nbspif CMEPF1 ='' or cmepF1='na:.:na' then var_CMEPF = 0; else var_CMEPF=1;<br />&nbsp&nbsp&nbsp&nbspvar_CMEPLF=strip(var_CMEPL) || strip (var_CMEPF);<br />&nbsp&nbsp&nbsp&nbspif var_CMEPLF='00' then var_CMEPLF='0';<br />&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1;else Northern=0;<br />run;<br /><br />%MatchByPS(<br />&nbsp&nbsp&nbsp&nbspdata=VZD1,<br />&nbsp&nbsp&nbsp&nbsptheExposureVar=var_CMEPF,<br />&nbsp&nbsp&nbsp&nbsptrimPCT=5,<br /><br />&nbsp&nbsp&nbsp&nbspmatchN=5,<br />&nbsp&nbsp&nbsp&nbspcapliper=0.2,<br />&nbsp&nbsp&nbsp&nbspkeepVarsForPart2 = key_hsn var_CMEPF age sex_desc logit_ps entrydate,<br />&nbsp&nbsp&nbsp&nbspexposeCondition=%quote(var_CMEPF  = 1),<br />&nbsp&nbsp&nbsp&nbspControlCondition=%quote(var_CMEPF  = 0),<br />&nbsp&nbsp&nbsp&nbspConditionsForPart2 =%quote(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspabs(t1.age-t2.age) <=1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp|<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.sex_desc = t2.sex_desc<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp|<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspabs(t1.EntryDate-t2.EntryDate) <=365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp|<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspabs(t1.logit_ps - t2.logit_ps) <= 0.2),<br />&nbsp&nbsp&nbsp&nbsppsdiff=psdiff,<br />&nbsp&nbsp&nbsp&nbsppsdiffTermForPart2=%quote(,abs(t1.logit_ps-t2.logit_ps) as psDiff),<br />&nbsp&nbsp&nbsp&nbspnoreplaceForPart2=1,<br /><br />&nbsp&nbsp&nbsp&nbsptarget=VZD2,<br />&nbsp&nbsp&nbsp&nbspdebug=,<br />&nbsp&nbsp&nbsp&nbspthePSVars= <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365 CC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IB_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_UB_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_LB_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OB_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AK_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RF_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_CA_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_CK_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_WF_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AP_PS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NS_PS<br />);<br />data VZD;<br />&nbsp&nbsp&nbsp&nbspset VZD2_data;<br />run;<br /><br />%vbsZip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br />&nbsp&nbsp&nbsp&nbspzipFile=VZD.zip, <br />&nbsp&nbsp&nbsp&nbspsrcFile=VZD.sas7bdat, <br />&nbsp&nbsp&nbsp&nbspsrcDir=<br />);<br /><br />%beep;<br /><br />s///<br />t///","children":[{"idx":"CodeTask-86dWsNku3mZVaC19","name":"logistic matched and unmatched","NodeDescription":"///t<br />///s<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZd.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZd.sas7bdat)<br />);<br /><br />%macro test1d (data=, theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where data;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern (ref='0')&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern  &theVar*northern age sex_desc  qaippe /*resitype   &theVar * resitype*/ <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrata match_num;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp;<br /><br /><br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1d;<br />data test1;<br />&nbsp&nbsp&nbsp&nbspset vzd;<br />&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1;else Northern=0;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />run;<br />/*macro test1d is for ps matched analysis, using the matched cohort (VZD)*/<br />%freq(data=test1, table=rha*Northern);<br />%freq(data=test1, table=Northern*any_changed);<br />%freq(data=test1, table=Northern*adherence);<br />%test1d(data=test1, theVar=any_changed );<br /><br />/*macro test1e is for not matched,using the not matched cohort (VZC)*/<br />%macro test1e (data=, theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local data theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern(ref='0') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO (ref='1')<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO(ref='1')*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern &theVar *northern<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe resitype &theVar * resitype <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365_Medclass_statinAHTNOH<br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowup_Medclass_statinAHTNOH*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1/exp;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1e;<br /><br />data test2;<br />&nbsp&nbsp&nbsp&nbspset vzc;<br />&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1;else Northern=0;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO = Pre365_Prscr_statinAHTNOH;<br />&nbsp&nbsp&nbsp&nbspif Pre365NRxDocSAO> 4 then Pre365NRxDocSAO=5;<br />&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO=Followup_Prscr_statinAHTNOH;<br />&nbsp&nbsp&nbsp&nbspif FollowUpNRXDocSAO> 4 then FollowUpNRXDocSAO=4;<br />run;<br />%test1e(data=test2, theVar=any_changed );<br />%beep;<br />/*If it is compared to prescriber =1 within look back, it is not sig diff if there are 2, 3, 4... for statin AHTN OH<br />&nbsp&nbsp&nbsp&nbspFor followup it is diff. it is always significant, as it is simontaneously biased, or confounded?<br />*/<br /><br />%freq(data=test2, table=FollowUpNRXDocSAO); /*how comes that there are 0 prescribers during follow up?*/<br /><br />proc reg data=test2;<br />&nbsp&nbsp&nbsp&nbspmodel adherence = Followup_Prscr_statinAHTNOH  Followup_Medclass_statinAHTNOH /VIF;<br />run;<br /><br /><br /><br /><br /><br />s///<br />t///","custparents":[{"idx":"CodeTask-dfOUDauemdaGeNIW"}]}],"custparents":[{"idx":"CodeTask-cn4xkuAyEOFAppY5"}]},{"idx":"CodeTask-PTnsFKR281boiYv2","name":"test again","NodeDescription":"///t<br />///s<br /><br />/*logistic regression models*/<br /><br />data _null_;run;<br />/*the cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br />);<br /><br />/*adherence, never changed*/<br />data VZC1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />run;<br /><br />/*1. consistency of doc as diff roles*/<br />%macro test1a (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= VZC1 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0')  /param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 9 vs 0\" &theVar 0 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1a;<br />%test1a(theVar=any_changed);<br />%test1a(theVar=UPCP_Changed);<br />%test1a(theVar=CMEP_Changed);<br />%test1a(theVar=PR_Changed, where=T_Rx >1);<br />%test1a(theVar=UPCP_NOT_CMEP);<br />%test1a(theVar=CMEP_NOT_PR);<br />%test1a(theVar=UPCP_NOT_PR);<br />%test1a(theVar=UPCP_NOT_CMEP_NOT_PR);<br />%print(data=VZC);<br /><br />/*1b. adjusted by age...*/<br />%macro test1b (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= VZC1 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') /param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar age sex_desc  qaippe resitype &theVar * resitype /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 9 vs 0\" &theVar 0 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1b;<br />%test1b(theVar=any_changed);<br />%test1b(theVar=UPCP_Changed);<br />%test1b(theVar=CMEP_Changed);<br />%test1b(theVar=PR_Changed, where=T_Rx >1);<br />%test1b(theVar=UPCP_NOT_CMEP);<br />%test1b(theVar=CMEP_NOT_PR);<br />%test1b(theVar=UPCP_NOT_PR);<br />%test1b(theVar=UPCP_NOT_CMEP_NOT_PR);<br /><br /><br />/*1b. adjusted by all covariates...*/<br />%macro test1c (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= VZC1 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar age sex_desc  qaippe resitype &theVar * resitype <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 9 vs 0\" &theVar 0 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1b;<br />%test1c(theVar=any_changed);<br />%test1c(theVar=UPCP_Changed);<br />%test1c(theVar=CMEP_Changed);<br />%test1c(theVar=PR_Changed, where=T_Rx >1);<br />%test1c(theVar=UPCP_NOT_CMEP);<br />%test1c(theVar=CMEP_NOT_PR);<br />%test1c(theVar=UPCP_NOT_PR);<br />%test1c(theVar=UPCP_NOT_CMEP_NOT_PR);<br /><br /><br /><br /><br />data VZC2;<br />&nbsp&nbsp&nbsp&nbspset VZC1;<br />&nbsp&nbsp&nbsp&nbspif PCPPatternL='A-' then PCPChangeL=0;<br />&nbsp&nbsp&nbsp&nbspelse PCPChangeL=1;<br />&nbsp&nbsp&nbsp&nbspif PCPPatternF='A-' then PCPChangeF=0;<br />&nbsp&nbsp&nbsp&nbspelse PCPChangeF=1;<br />&nbsp&nbsp&nbsp&nbspif PrscrPattern='A-' then PrscrChangeF=0;<br />&nbsp&nbsp&nbsp&nbspelse PrscrChangeF=1;<br />run;<br /><br />/*1. PCPL pattern*/<br />%macro test2a (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= VZC2 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0')  /param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar /type3 dist=bin link=logit;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test2a;<br />%test2a(theVar=PCPChangeL, where= T_VisitsL > 1);<br />%test2a(theVar=PCPChangeF, where= T_VisitsF > 1);<br />%test2a(theVar=PrscrChangeF, where= T_Rx > 1);<br /><br />data VZC3;<br />&nbsp&nbsp&nbsp&nbspset VZC2;<br />&nbsp&nbsp&nbsp&nbspif CMEPL1 ='' or cmepl1='na:.:na' then var_CMEPL = 0; else var_CMEPL=1;<br />&nbsp&nbsp&nbsp&nbspif CMEPF1 ='' or cmepF1='na:.:na' then var_CMEPF = 0; else var_CMEPF=1;<br />&nbsp&nbsp&nbsp&nbspvar_CMEPLF=strip(var_CMEPL) || strip (var_CMEPF);<br />&nbsp&nbsp&nbsp&nbspif var_CMEPLF='00' then var_CMEPLF='0';<br />run;<br /><br />%macro test1d (theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= VZC3 desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar age sex_desc  qaippe resitype &theVar * resitype <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 01 vs 00\" &theVar 1 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1d;<br /><br />%test1d(theVar=var_CMEPLF);<br />data x;a=1;run;<br />%let thevar=var_CMEPLF;<br />proc glm data=test4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar  sex_desc qaippe resitype ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence  = <br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theVar age sex_desc   */<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprr cf  <br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO*/<br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER*/<br /><br /><br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp*/<br /><br />&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/tolerance; <br /><br />&nbsp&nbsp&nbsp&nbsprun;<br /><br /><br />&nbsp&nbsp&nbsp&nbspdata test4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VZC3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif resitype='RURAL' then rr=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif resitype='URBAN' then rr=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse rr=9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (var_CMEPLF='00') cf=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (var_CMEPLF='01') cf=2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (var_CMEPLF='10') cf=3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (var_CMEPLF='11') cf=4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise cf=5;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbspproc reg data=test4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence=rr cf /vif tol;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />s///<br />t///","custparents":[{"idx":"CodeTask-cn4xkuAyEOFAppY5"}]},{"idx":"CodeTask-YT3KsR6hTqWnAgpr","name":"VZE_compare UPI_AAA 1","NodeDescription":"///t<br />///s<br />/*<br />Compare the measures of AAA and upci<br /><br />*/<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br />);<br /><br />/*test the var FPUPIT (UP index )*/<br />data VZE1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\");<br />&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2); <br />&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT='0';/*missing*/<br />&nbsp&nbsp&nbsp&nbspif 0< FPUPI <= 66.67  then FPUPIT='L';/*low*/<br />&nbsp&nbsp&nbsp&nbspif 66.67< FPUPI <= 88.99  then FPUPIT='M';/*medium*/<br />&nbsp&nbsp&nbsp&nbspif FPUPI >88.99  then FPUPIT='H';/*high*/<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />run;<br />%print(data=VZE1);<br />%freq(data=VZE1, table = FPUPIT * any_changed); <br /><br />/*macro test1e is for not matched,using the not matched cohort (VZC)*/<br />%macro test1f (data=, theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local data theVar where;<br />&nbsp&nbsp&nbsp&nbsp%*ods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='L1') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='H1') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1f;<br />data VZE2;<br />&nbsp&nbsp&nbsp&nbspset VZE1;<br />&nbsp&nbsp&nbsp&nbspif FPUPIT ne '0';<br />&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed);<br /><br />&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br />&nbsp&nbsp&nbsp&nbspif FPUPIT = 'M' or FPUPIT='H' then FPUPIT2 = 'H'; else FPUPIT2='H';<br />&nbsp&nbsp&nbsp&nbsptheExpo2=strip(FPUPIT2) || strip(any_changed);<br />run;<br />%freq(data=vze2, table=adherence * theExpo);<br />%freq(data=vze2, table=adherence * theExpo2);<br />%test1f(data=VZE2, theVar=theExpo );<br />%test1f(data=VZE2, theVar=theExpo2 );<br /><br /><br />s///<br />t///"},{"idx":"CodeTask-3hkmQbNfuztlkN1V","name":"VZE2_compare UPI_AAA 2","NodeDescription":"///t<br />///s<br />/*<br />Compare the measures of AAA and UPC score<br /><br />*/<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br />);<br />/*check the upc score*/<br />%print(data=VZC);<br /><br />/*get the max UPC score for each patient (FPUPI), make UPC index categories (FPUPIT)*/<br />data VZE1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\");<br />&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2); <br />&nbsp&nbsp&nbsp&nbspDocID = scan(upcpf1, 0, \":\");<br />&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT='0';/*missing*/<br />&nbsp&nbsp&nbsp&nbspif 0< FPUPI <= 66.67  then FPUPIT='L';/*low*/<br />&nbsp&nbsp&nbsp&nbspif 66.67< FPUPI <= 88.99  then FPUPIT='M';/*medium*/<br />&nbsp&nbsp&nbsp&nbspif FPUPI >88.99  then FPUPIT='H';/*high*/<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />run;<br />%print(data=VZE1);<br />%freq(data=VZE1, table = FPUPIT * any_changed); <br /><br />/*check the correlation between FPUPI score, and the variable any_changed (perfect continuity)*/<br />proc glm data=VZE1;<br />&nbsp&nbsp&nbsp&nbspclass any_changed FPUPIT;<br />&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT any_changed /tolerance;<br />run;quit;<br /><br /><br /><br />/*macro test1e is for not matched,using the not matched cohort (VZC)*/<br />%macro test1f (data=, theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local data theVar where;<br />&nbsp&nbsp&nbsp&nbsp%*ods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='L1') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') any_changed(ref='1') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do; /*L1, or H1*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') any_changed(ref='1') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do; /*when using UPI index as main effect*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass  sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') any_changed(ref='0') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theVar=theExpo2 %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchanged vs low changed\" &theVar 1 0 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high changed vs low changed\" &theVar 0 1 0 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"low unchanged vs low changed\" &theVar 0 0 1 0 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low changed\" &theVar 0 0 0 1 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium changed vs low changed\" &theVar 0 0 0 0 1/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs changed\" &theVar 1 -1 0 0 0 /exp ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchange vs changed\" &theVar 0 0 0 1 -1 /exp;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high unchange vs medium unchanged\" &theVar 1 0 0 -1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"high change vs medium changed\" &theVar 0 1 0 0 -1 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"medium unchanged vs low unchanged\" &theVar 0 0 -1 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test1f;<br />data VZE2;<br />&nbsp&nbsp&nbsp&nbspset VZE1;<br />&nbsp&nbsp&nbsp&nbspif FPUPIT ne '0';<br />&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed);<br /><br />&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br />&nbsp&nbsp&nbsp&nbspif FPUPIT = 'M' or FPUPIT='H' then FPUPIT2 = 'H'; else FPUPIT2='L';<br />&nbsp&nbsp&nbsp&nbsptheExpo2=strip(FPUPIT2) || strip(any_changed);<br />run;<br />%freq(data=vze2, table=adherence * theExpo);<br />%freq(data=vze2, table=adherence * theExpo2);<br />%test1f(data=VZE2, theVar=theExpo2 );<br />%test1f(data=VZE2, theVar=any_changes );<br /><br />%test1f(data=VZE1, theVar=FPUPI );<br />%test1f(data=VZE1, theVar=any_changed);<br /><br /><br /><br /><br /><br />s///<br />t///"},{"idx":"CodeTask-hNhbmTUgmNjqsbwQ","name":"VZE3_compare UPI_AAA 3","NodeDescription":"///t<br />///s<br />/*<br />Compare the measures of AAAAAA and UPC score<br />Never changed during lookback/followup and First Statin prescriber<br /><br />*/<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br />);<br />/*check the upc score*/<br />%print(data=VZC);<br /><br /><br /><br />/*get the max UPC score for each patient (FPUPI), make UPC index categories (FPUPIT)<br />Never_Changed_F (during follow up) or Never_Changed<br />*/<br />data VZE1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\");<br />&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2); <br />&nbsp&nbsp&nbsp&nbspDocID = scan(upcpf1, 0, \":\");<br />&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT=9;/*missing*/<br />&nbsp&nbsp&nbsp&nbspprefectCOC=0;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then prefectCOC=1;<br />run;<br /><br />proc means data=VZe1 mean median qrange q1 q3;<br />&nbsp&nbsp&nbsp&nbspvar FPUPI;<br />run;<br />/*as the Q1 is 40, 57, 75, used to test*/<br /><br />data VZE1a;<br />&nbsp&nbsp&nbsp&nbspset VZe1;<br />&nbsp&nbsp&nbsp&nbspif 0<= FPUPI <= 57.14  then FPUPIT=0;/*low*/<br />&nbsp&nbsp&nbsp&nbspif FPUPI > 57.14  then FPUPIT=1;/*high*/<br />run;<br /><br />%freq(data=VZE1a, table = FPUPIT * prefectCOC); <br /><br />data VZE2;<br />&nbsp&nbsp&nbsp&nbspset VZE1a;<br />&nbsp&nbsp&nbsp&nbspif FPUPIT ne 9;<br />/*&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed);*/<br />&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br />&nbsp&nbsp&nbsp&nbspif FPUPIT = 1 then FPUPIT2 = 'H'; else FPUPIT2='L';<br />&nbsp&nbsp&nbsp&nbspUPCI_PerfCOC=strip(FPUPIT2) || strip(prefectCOC);<br />run;<br /><br />/*check the correlation between FPUPI score, and the variable prefectCOC (perfect continuity)*/<br />proc glm data=VZE2;<br />&nbsp&nbsp&nbsp&nbspclass prefectCOC FPUPIT2;<br />&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT2 prefectCOC /tolerance;<br />run;quit;<br />proc reg data=VZE2;<br />&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT prefectCOC / vif tol;<br />run;quit;<br />/*VIF is 1.0 < 2.5, and tol = .98 > .4 so no multilinearity concer!*/<br /><br /><br />%freq(data=VZE2, table=UPCI_PerfCOC);<br /><br />%let covariates = &nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR;<br /><br />/*Contrast between 3 scenarios*/<br />proc logistic data=VZE2 descending;<br />&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbsp/*H0=1 0 0, H1=0 1 0, L1=0 0 1 */<br />&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI, Perfect vs non prefect COC, L1 vs L0\" UPCI_PerfCOC 0 0 1/exp cl;<br />&nbsp&nbsp&nbsp&nbspestimate \"High UPCI, Perfect vs non prefect COC, H1 vs H0\" UPCI_PerfCOC -1 1 0 /exp cl;<br />&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI but prefect COC vs High UPCI but non-Perfect , L1 vs H0\" UPCI_PerfCOC -1 0 1 /exp cl;<br />run;<br /><br /><br />ods graphics on;<br />ods select ROCAssociation;<br />proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint);<br />&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI_PerfCOC + covariates' UPCI_PerfCOC &covariates;<br />&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates;<br />run;<br />ods select all;<br />ods graphics off;<br /><br />/*.6382 when UPCI cut off = .4 (q1)*/<br />/*.6390 when UPCI cut off = .57 (median)*/<br />/*.6374 when UPCI cut off = .667*/<br />/*.6368 when UPCI cut off = .75*/<br /><br />ods graphics on;<br />ods select ROCAssociation;<br />proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint);<br />&nbsp&nbsp&nbsp&nbspclass prefectCOC (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = prefectCOC &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbspROC 'M1: prefectCOC + covariates' prefectCOC &covariates;<br />&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates;<br />run;<br />ods select all;<br />ods graphics off;<br /><br />/*.6358 when UPCI cut off = .4*/<br />/*.6358 when UPCI cut off = .57 (median)*/<br />/*c=.6358 when UPCI cut off = .667*/<br />/*.6358 when UPCI cut off = .75*/<br /><br />ods graphics on;<br />ods select ROCAssociation;<br />proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint);<br />&nbsp&nbsp&nbsp&nbspclass FPUPIT2 (ref='L') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = FPUPIT2 &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI + covariates' FPUPIT2 &covariates;<br />&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates;<br />run;<br />ods select all;<br />ods graphics off;<br /><br />/*.6361 when UPCI cut off = .4 (Q1)*/<br />/*.6368 when UPCI cut off = .57 (median)*/<br />/*.6352 when UPCI cut off = .667*/<br />/*.6345 when UPCI cut off = .75 (Q3)*/<br /><br /><br /><br />s///<br />t///"},{"idx":"CodeTask-BTjzZbCAmJhftivv","name":"VZE4_compare UPI_AAA","NodeDescription":"///t<br />///s<br />/*<br />Compare the measures of AAA and UPC score during follow up<br /><br />*/<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VZC.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(VZC.sas7bdat)<br />);<br />/*check the upc score*/<br />%print(data=VZC);<br /><br />/*in VZC the Never_Change is for never change in both look back and follow up preriod<br />&nbsp&nbsp&nbsp&nbspthe following is to make a variable for perfect COC during follow up (ie. the same UCP, CMEP, and UPR)<br />&nbsp&nbsp&nbsp&nbspthe orginal pattern RolesPatternAllDoc has 6 segments (delimited by ;), each for UCPL (lookback) UCPF (followup)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCMEPL, CMEPF, FP (First prescriber), and UPRsF (usual statin prescriber during follow up)<br />UPCPFs=scan(RolesPatternAllDoc, 2, ';');<br />*/<br />data VZE0a;<br />&nbsp&nbsp&nbsp&nbspset VZC ;<br />&nbsp&nbsp&nbsp&nbsplength UPCPFs $100. UCMEPFs $100. USPRFs $100. RolesFollowAlldoc $100.;<br />&nbsp&nbsp&nbsp&nbspNever_Changed_F=0;<br />&nbsp&nbsp&nbsp&nbspUPCPFs=scan(RolesPatternAllDoc, 2, ';');<br />&nbsp&nbsp&nbsp&nbspUCMEPFs=scan(RolesPatternAllDoc, 4, ';');<br />&nbsp&nbsp&nbsp&nbspUSPRFs = scan(RolesPatternAllDoc, 6, ';');<br />&nbsp&nbsp&nbsp&nbspRolesFollowAlldoc=strip(UPCPFs) || ';' || Strip(UCMEPFs) || ';' || strip(USPRFs);<br />&nbsp&nbsp&nbsp&nbspif RolesFollowAlldoc='_;_;_;' then Never_Changed_f=9; <br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 26;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif count(RolesFollowAlldoc, byte(i+63)) =3 then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNever_Changed_F=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspdrop i;<br />run;<br />%freq(data=VZE0a, table =Never_Changed * Never_Changed_F);<br /><br /><br /><br />/*get the max UPC score for each patient (FPUPI), make UPC index categories (FPUPIT)<br />Never_Changed_F (during follow up) or Never_Changed<br />*/<br />data VZE1;<br />&nbsp&nbsp&nbsp&nbspset VZE0a;<br />&nbsp&nbsp&nbsp&nbspFPtype=scan(upcpf1, 3, \":\");<br />&nbsp&nbsp&nbsp&nbspFPUPI=input(scan(upcpf1, 4, \":\"),8.2); <br />&nbsp&nbsp&nbsp&nbspDocID = scan(upcpf1, 0, \":\");<br />&nbsp&nbsp&nbsp&nbspif FPUPI =. then FPUPIT=9;/*missing*/<br />&nbsp&nbsp&nbsp&nbspprefectCOC=0;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed_F=1 then prefectCOC=1;<br />run;<br /><br />proc means data=VZe1 mean median qrange q1 q3;<br />&nbsp&nbsp&nbsp&nbspvar FPUPI;<br />run;<br />/*as the Q1 is 40, 57, 75, used to test*/<br /><br />data VZE1a;<br />&nbsp&nbsp&nbsp&nbspset VZe1;<br />&nbsp&nbsp&nbsp&nbspif 0<= FPUPI <= 75  then FPUPIT=0;/*low*/<br />&nbsp&nbsp&nbsp&nbspif FPUPI > 75  then FPUPIT=1;/*high*/<br />run;<br /><br />%freq(data=VZE1a, table = FPUPIT * prefectCOC); <br /><br />data VZE2;<br />&nbsp&nbsp&nbsp&nbspset VZE1a;<br />&nbsp&nbsp&nbsp&nbspif FPUPIT ne 9;<br />/*&nbsp&nbsp&nbsp&nbsptheExpo = strip(FPUPIT) || strip(any_changed);*/<br />&nbsp&nbsp&nbsp&nbsp/*to simplyfy*/<br />&nbsp&nbsp&nbsp&nbspif FPUPIT = 1 then FPUPIT2 = 'H'; else FPUPIT2='L';<br />&nbsp&nbsp&nbsp&nbspUPCI_PerfCOC=strip(FPUPIT2) || strip(prefectCOC);<br />run;<br /><br />/*check the correlation between FPUPI score, and the variable prefectCOC (perfect continuity)*/<br />proc glm data=VZE2;<br />&nbsp&nbsp&nbsp&nbspclass prefectCOC FPUPIT2;<br />&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT2 prefectCOC /tolerance;<br />run;quit;<br />proc reg data=VZE2;<br />&nbsp&nbsp&nbsp&nbspmodel adherence = FPUPIT prefectCOC / vif tol;<br />run;quit;<br />/*VIF is 1.0 < 2.5, and tol = .98 > .4 so no multilinearity concer!*/<br /><br />/*to test % of patients with >1 UPC, and > 1 UPR*/<br />%print(data=VZE2);<br />%freq(data=VZE2, table=prefectCOC);<br />data test;<br />&nbsp&nbsp&nbsp&nbspset VZE2;<br />&nbsp&nbsp&nbsp&nbspuniquedoc=0;<br />&nbsp&nbsp&nbsp&nbspif upcpf2 = 'na:.:na:.' and upr2='na:.:na:.' then uniquedoc=1;<br />run;<br />%freq(data=test, table=prefectCOC*uniquedoc);<br />/*<br />only 5% of the patients having multiple usual PCPs or UPRs in follow up<br />back to Qais's point, he is wrong. Tt is really not worthy to lower the criteria by allowing multiple PCPs or UPRs<br />*/<br /><br /><br />%freq(data=VZE2, table=UPCI_PerfCOC);<br /><br />%let covariates = &nbsp&nbsp&nbsp&nbspage sex_desc  qaippe  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR;<br /><br />/*Contrast between 3 scenarios*/<br />proc logistic data=VZE2 descending;<br />&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbsp/*H0=1 0 0, H1=0 1 0, L1=0 0 1 */<br />&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI, Perfect vs non prefect COC, L1 vs L0\" UPCI_PerfCOC 0 0 1/exp cl;<br />&nbsp&nbsp&nbsp&nbspestimate \"High UPCI, Perfect vs non prefect COC, H1 vs H0\" UPCI_PerfCOC -1 1 0 /exp cl;<br />&nbsp&nbsp&nbsp&nbspestimate \"Low UPCI but prefect COC vs High UPCI but non-Perfect , L1 vs H0\" UPCI_PerfCOC -1 0 1 /exp cl;<br />run;<br /><br /><br />ods graphics on;<br />ods select ROCAssociation;<br />proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint);<br />&nbsp&nbsp&nbsp&nbspclass UPCI_PerfCOC (ref='L0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = UPCI_PerfCOC &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI_PerfCOC + covariates' UPCI_PerfCOC &covariates;<br />&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates;<br />run;<br />ods select all;<br />ods graphics off;<br /><br />/*.6443 when UPCI cut off = .4 (q1)*/<br />/*.6450 when UPCI cut off = .57 (median)*/<br />/*.6436 when UPCI cut off = .75*/<br /><br />ods graphics on;<br />ods select ROCAssociation;<br />proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint);<br />&nbsp&nbsp&nbsp&nbspclass prefectCOC (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = prefectCOC &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbspROC 'M1: prefectCOC + covariates' prefectCOC &covariates;<br />&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates;<br />run;<br />ods select all;<br />ods graphics off;<br /><br />/*.6429 when UPCI cut off = .4*/<br />/*.6429 when UPCI cut off = .57 (median)*/<br />/*.6429 when UPCI cut off = .75*/<br /><br />ods graphics on;<br />ods select ROCAssociation;<br />proc logistic data=VZE2 descending plots (only only) = ROC (id=cutpoint);<br />&nbsp&nbsp&nbsp&nbspclass FPUPIT2 (ref='L') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = FPUPIT2 &covariates /scale=none aggregate;<br />&nbsp&nbsp&nbsp&nbspROC 'M1: UPCI + covariates' FPUPIT2 &covariates;<br />&nbsp&nbsp&nbsp&nbspROC 'M2: covariates'  &covariates;<br />run;<br />ods select all;<br />ods graphics off;<br /><br />/*.6361 when UPCI cut off = .4 (Q1)*/<br />/*.6368 when UPCI cut off = .57 (median)*/<br />/*.6345 when UPCI cut off = .75 (Q3)*/<br /><br /><br /><br />s///<br />t///"}],"custparents":[{"idx":"CodeTask-mqQWr8kGTH7TzB2R"}]},{"idx":"Note-UuSMzzA9eNxvIodC","name":"Note (4)","NodeDescription":"///t<br />Adherence&nbspyet&nbspto&nbspaccount&nbspfor&nbspdays&nbspin&nbspHospital,&nbspLTC<br />t///","custparents":[{"idx":"CodeTask-mqQWr8kGTH7TzB2R"}]}],"custparents":[{"idx":"CodeTask-bk2fcAnE7kxDxYMD"}]}],"custparents":[{"idx":"CodeTask-gbhiLx1DedOwRO4o"},{"idx":"CodeTask-fTiJ1wEyUDGKYnqu"},{"idx":"CodeTask-vIplCgMSR6XiN8jq"}]}]}]}],"custparents":[{"idx":"CodeTask-rXaW7KfQgzQfcx1V"}]}]},{"idx":"CodeTask-pzOsKgUBMFRexTrx","name":"ZZA NFFS Anlayses","NodeDescription":"///t<br />///s<br />/*ZZA<br />*/<br /><br />/*All statin new users*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxa.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxa.sas7bdat)<br />);<br /><br />/*zza1 patient-entrydate*/<br />%distinct(data=vxa, target=zza1, vars=%str(key_hsn, entryDate));<br /><br />/*ZZA2. For statin new users (zza1), find statin prescribers within the followup period (365 days since the entryDate)*/<br />/*ZZA2a. Get all statin claims within follow up*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxf.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxf.sas7bdat)<br />);<br />/*%print(data=vxf);*/<br />/*ZZA2b. get a list of entryDate specific doc ID, excluding those of unknown ids or slush numbers*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=vxf,<br />&nbsp&nbsp&nbsp&nbspt2=zza1, <br />&nbsp&nbsp&nbsp&nbsptarget=zza2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_prscr_num as key_doc_num, t2.entryDate), <br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(rx_ddddd between t2.Entrydate and t2.EntryDate +364 and docSlushCode = 'N')<br />);<br /><br />/*ZZA3. For statin new users (zza1), find physician service providers within the followup period (365 days since the entryDate)*/<br />/*ZZA3a. Get all service claims of the new statin users within follow up*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_msb,<br />&nbsp&nbsp&nbsp&nbspt2=zza1, <br />&nbsp&nbsp&nbsp&nbsptarget=zza3,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t2.entryDate), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(dos between t2.Entrydate and t2.EntryDate +364 and docSlushCode = 'N')<br />);<br /><br />/*ZZA4. combine ZZA2 and ZZA3 (docs as prescribers/care providers during follow up , specified by entry date)*/<br />data ZZA4a;<br />&nbsp&nbsp&nbsp&nbspset zza2 ;<br />&nbsp&nbsp&nbsp&nbspRole = 'prescriber'; <br />run;<br />data ZZA4b;<br />&nbsp&nbsp&nbsp&nbspset ZZa3;<br />&nbsp&nbsp&nbsp&nbspRole='careprovider';<br />run;<br />data ZZA4;<br />&nbsp&nbsp&nbsp&nbspset ZZA4a ZZA4b;<br />&nbsp&nbsp&nbsp&nbspcnt=1;<br />run;<br />%DISTINCT(data=ZZA4, target=ZZA5, vars=%str(key_doc_num, entrydate, Role, cnt));<br />%transpose(data=ZZA5, target=ZZA6, rowhead=key_doc_num entrydate, colhead=role, contents=cnt);<br />data localt.ZZA;<br />&nbsp&nbsp&nbsp&nbspset ZZA6;<br />&nbsp&nbsp&nbsp&nbspformat Role $20.;<br />&nbsp&nbsp&nbsp&nbspif prescriber=1 and careprovid=1 then Role='both';<br />&nbsp&nbsp&nbsp&nbspif prescriber=1 and careprovid=. then Role='prescriber';<br />&nbsp&nbsp&nbsp&nbspif prescriber=. and careprovid=1 then Role='careprovider';<br />&nbsp&nbsp&nbsp&nbspif prescriber=. and careprovid=. then Role='none';<br />&nbsp&nbsp&nbsp&nbspdrop prescriber careprovid;<br />run;<br />%freq(data=localt.zza, table=Role);<br /><br /><br /><br />s///<br />t///","children":[{"idx":"EGTask-mNdzSqhm2Bn1Jy5q","name":"Copy Statin Prscr to Remote","children":[{"idx":"CodeTask-Aci5BDMMgR9LhbzQ","name":"ZZB MSB Claims Remote","NodeDescription":"///t<br>///s<br>/*&nbsp;<br>ZZB MSB claims of docs in ZZA<br>*/<br>data _null_;run;<br>%nobs(data=remotes.zza);<br>%distinct(data=remotes.zza, target=zzb1, vars=key_doc_num);<br><br>/*create an empty dataset*/<br><br>%macro getMSB(theYear=, theStart=, theEnd=, debug=);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%local theYear theStart theEnd debug;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%Extract_MSB(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xtrc_start_dt=&amp;Xtrc_Start_MSB,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xtrc_end_dt=&amp;Xtrc_End_MSB, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ds_out=getMSB_tmp1, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hsn_list=, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hsn_file= , <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;diagcode=, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dostart=&amp;theStart, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dosend=&amp;theEnd, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fscode=<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1=getMSB_tmp1,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t2=zzb1,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vars=t1.*,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target=%str(getMSB_tmp2 (rename =(dos_1 = DOS))), <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_doc_num<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;theYear = 2009 %then %do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data msbzzb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set getMSB_tmp2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%end;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%else %do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data msbzzb;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set msbzzb getMSB_tmp2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%end;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;debug ne 1 %then %do;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc datasets nolist;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete getMSB_tmp:;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%end;<br><br>%mend getMSB;<br>%getMSB(theYear=2009, theStart='01jan2009'd, theEnd='31dec2017'd, debug=1);<br><br>%UnixZip(<br>&nbsp;&nbsp;&nbsp;&nbsp;sPath=, <br>&nbsp;&nbsp;&nbsp;&nbsp;source=, <br>&nbsp;&nbsp;&nbsp;&nbsp;data=msbzzb, <br>&nbsp;&nbsp;&nbsp;&nbsp;tPath=&amp;remoteTargetPath, <br>&nbsp;&nbsp;&nbsp;&nbsp;target=msbzzb.zip, <br>&nbsp;&nbsp;&nbsp;&nbsp;debug=<br>);<br><br><br><br><br>s///<br>t///","children":[{"idx":"EGTask-SF7U4hFBpxtTrllt","name":"Copy MSBZips from Remote","children":[{"idx":"CodeTask-kpvpcTvUPzprxvZV","name":"ZZC GPs","NodeDescription":"///t<br />///s<br />/*ZZC*/<br /><br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\msbzzb.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(msbzzb.sas7bdat)<br />);<br />/*%print(data=msbzzb);*/<br /><br />/*ZZC1, get a unique list of entrydate specific docs by SPEC from the MSB claims<br />&nbsp&nbsp&nbsp&nbspwithin 2 year before and 1 year after the entryDate*/<br />/*the following is very inefficient, so prepare a compact data set first*/<br />%distinct(data=msbzzb, target=ZZC0, vars=%str(key_doc_num, dos, SPEC));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*how many doctors acting as GP, NGP, missing on the same date*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzc0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat Doctype $3.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC in: (\"B\") then DocType = \"GP\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC =\"\" then DocType = \"NN\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC not in:(\"B\") and SPEC ne \"\" then DocType=\"NGP\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcnt=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=test1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.dos, sum(Doctype=\"GP\") as GP, sum(Doctype=\"NN\") as NN, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(Doctype=\"NGP\") as NGP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, dos)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*check the patterns*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset test2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif GP =0 then p1=\"\";else P1=\"G\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NGP=0 then p2=\"\";else p2=\"N\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NN=0 then p3=\"\";else p3=\"_\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocPattern=cats(p1,p2,p3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop p1 p2 p3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test3, table=docPattern);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*it is quite rare that a doc was acting as both GP and NGP on the same date*/<br /><br /><br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzc0,<br />&nbsp&nbsp&nbsp&nbspt2=localt.ZZA,<br />&nbsp&nbsp&nbsp&nbsptarget=zzc1,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t2.entryDate, SPEC,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsubstr(strip(SPEC), 1,1)=\"B\", 1, 2   <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp) as order<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num,<br />&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num,entryDate, order),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate - 365*2 and t2.entryDate+365-1)<br />);<br />/*%freq(data=zzc1, table=spec);*/<br />/*Note: there are records missing SPEC values*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Aummarized by specific study periods (2 years before and 1 year after entryDate), how is the doc pattern?<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzc1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat Doctype $3.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC in: (\"B\") then DocType = \"GP\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC =\"\" then DocType = \"NN\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPEC not in:(\"B\") and SPEC ne \"\" then DocType=\"NGP\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcnt=1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=test1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, sum(Doctype=\"GP\") as GP, sum(Doctype=\"NN\") as NN, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(Doctype=\"NGP\") as NGP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, entryDate)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*check the patterns*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset test2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif GP =0 then p1=\"\";else P1=\"G\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NGP=0 then p2=\"\";else p2=\"N\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NN=0 then p3=\"\";else p3=\"_\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocPattern=cats(p1,p2,p3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop p1 p2 p3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test3, table=docPattern);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Again, it is quite rare that a doc was acting as both GP and NGP on the same date<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br /><br />/*It seems OK to be more restrict, as there is not a lot of hybrid docs to lose.<br />The decision is to indicate docs as NGP if there is at lease 1 claim as NGP<br />That way, the remaining docs only have GP claims. These docs are pure GPs.<br />*/<br /><br />/*<br />ZZC2<br />The goal is to identify GPs from docs in zzc1<br />*/<br />/*zzc2a. for entryDate-specific Docs in localt.ZZA, if  they are in ZZC1 as missing SPEC, or NGPs,  they are determined as NGPs<br />*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.ZZA,<br />&nbsp&nbsp&nbsp&nbspt2=ZZC1, <br />&nbsp&nbsp&nbsp&nbsptarget=ZZC2a,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'ngp'  as docType length=3, 'msb' as docSRC), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num EntryDate,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsubstr(strip(t2.spec), 1,1) ne \"B\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor strip(t2.SPEC) = \"\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />/*zzc2b. entryDate-specific Docs from localt.ZZA, in ZZC1 as GPs, and not in ZZC2a are GPs.<br />&nbsp&nbsp&nbsp&nbsp[_Note] These docs only have pure GP claims in the database within the study period<br />cat() similar to ||<br />catt() removing the trailing spaces<br />cats() removing both heading and trailing spaces<br />catx() insert a delimiter between concatenated values<br />*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.ZZA,<br />&nbsp&nbsp&nbsp&nbspt2=ZZC1, <br />&nbsp&nbsp&nbsp&nbsptarget=ZZC2b,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'gp'  as docType length=3, 'msb' as docSRC), <br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num EntryDate,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsubstr(strip(t2.spec), 1,1) = \"B\" <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcatx(\",\", t1.key_doc_num, t1.EntryDate) not in (select catx(\",\", key_doc_num, EntryDate) from ZZC2a)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The docs in ZZC2b should only act as GPs within the interested period*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Test*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zzc1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zzc2b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test31,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t2.key_doc_num, t2.entryDate, t1.SPEC),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test31, table=spec);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for these docs, there should be no claims as NGPs within the study period*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zzc0,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zzc2b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test32,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, SPEC),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entryDate - 365*2 and t2.entryDate+365-1)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test32, table=spec);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*confirmed*/<br /><br /><br />/*zzc3. next is to check doctors not appeared in the MSB claims<br />... but it is not very useful. <br />Althout there are docs not having msb claims, but are indeed GPs, how to estimate their missing claims? no clue.<br />It is valuable to check the proportion of doctors identified/not identified though<br />*/<br />data _null_;run;<br />/*ZZA contains all docs as statin prescribers, or service providers to the cohort member within the follow up period*/<br />%print(data=localt.zza);<br />/*From ZZA, those identified as GPs*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.zza,<br />&nbsp&nbsp&nbsp&nbspt2=ZZC2b,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZC3a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'GP' as DocType length=3),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br />);<br />/*From ZZA, those identified as NGPs*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.zza,<br />&nbsp&nbsp&nbsp&nbspt2=ZZC2a,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZC3b,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'NGP'  as DocType length=3),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br />);<br />/*From ZZA, those docs can be found in MSB claims (ZZC0), but does not have MSB claims within 2 years before, <br />and 1 year after the entryDate*/<br />/*From ZZA, docs in ZZC0*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzc0,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zza,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=zzc3c1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzc3c1,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zza,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=zzc3c2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t2.key_doc_num, t2.entryDate),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br />);<br />%beep;<br />/*from above, those not in ZZC3a, nor in ZZC3b (not identified as a GP/NGP within the period, i.e., not having any claims <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwithin the period)*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzc3c2,<br />&nbsp&nbsp&nbsp&nbsptarget=zzc3c3,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate), <br />&nbsp&nbsp&nbsp&nbspfilters=%str(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcatx(\",\", t1.key_doc_num, t1.EntryDate) not in (select catx(\",\", key_doc_num, EntryDate) from ZZC3a)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzc3c3,<br />&nbsp&nbsp&nbsp&nbsptarget=zzc3c,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, 'NO' as DocType), <br />&nbsp&nbsp&nbsp&nbspfilters=%str(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcatx(\",\", t1.key_doc_num, t1.EntryDate) not in (select catx(\",\", key_doc_num, EntryDate) from ZZC3b)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />/*The above three (ZZC3a, 3b, 3c) are docs that can be found in MSB claims. 3a and 3b are GP/NGPs, 3c are those<br />&nbsp&nbsp&nbsp&nbsphaving physician service claims out of the specified period(2 years before and 1 year after the entryDate), but not having<br />&nbsp&nbsp&nbsp&nbspphysician service claims within the specific period*/<br />/*The rest in ZZA are those not have any physician service claims*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.zza,<br />&nbsp&nbsp&nbsp&nbsptarget=zzc3d,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.entryDate, '__' as DocType length=3), <br />&nbsp&nbsp&nbsp&nbspfilters=%str(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_doc_num not in (select key_doc_num from ZZC0)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />/*ZZC4, assembly ZZC3a-d. by doc type*/<br />data ZZC4;<br />&nbsp&nbsp&nbsp&nbspformat DocType $3.;<br />&nbsp&nbsp&nbsp&nbspset ZZC3a ZZC3b ZZC3c ZZC3d;<br />run;<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=ZZC4,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zza,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=localT.ZZC,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.Role),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate<br />);<br />%freq(data=localt.ZZC, table=Role* doctype);<br />%nobs(data=localt.ZZA);<br /><br />/*the table shows that it is very rare to have doc-entryDate cases who did not have any msb claims within the specified period<br />Conclusion: the current method is good to include most of the docs (either a statin prescriber, or a service provider of for  <br />&nbsp&nbsp&nbsp&nbspcohort members during follow up<br />*/<br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-ViasKREJ44R4uJVe","name":"ZZD FFS NFFS","NodeDescription":"///t<br />///s<br />/*ZZD. For msbzzb, get MSB claims of GPs in ZZC, count % of claims as FFS/NFFS in the specified period (2 years prior and 1 year after the EntryDate */<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\msbzzb.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(msbzzb.sas7bdat)<br />);<br />/*note: do not use such as format $4. as paymode. Won't work. will have a length of 200!*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=msbzzb,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZD0,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, key_doc_num, dos,  ifc(t1.mode='1', 'FFS', 'NFFS' ) as PayMode length=4),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(num_srv ne 0<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLOS NOT in ('B','2','K','9')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMODE ne 'Z'<br />&nbsp&nbsp&nbsp&nbsp)<br />);<br /><br />/*Note, the FFS/NFFS is based all doc's services to ALL patients, not only to the cohort members. <br />&nbsp&nbsp&nbsp&nbspIf it were to the cohort members, many will have 0 visits, and FFS/NFFS cannot be determined.<br />&nbsp&nbsp&nbsp&nbspIt is more appropriate to count visits to ALL patients, but within the 2 year period around the entry dates. <br />&nbsp&nbsp&nbsp&nbspe.g., the entry date is 2002-1-1, then the doc's pay type is determined by the % of FFS of this doc to all his patients<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspbetween 2001-1-1 and 2003-12-31.<br />*/<br />/*ZZD1a, unique GPs from ZZC*/<br />%distinct(data=localt.zzc, target=zzd1a, vars=key_doc_num, filters=%str(DocType=\"GP\"));<br /><br />/*zzd1b, from ZZD0, encounters of gps in ZZD1a*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzd0,<br />&nbsp&nbsp&nbsp&nbspt2=zzd1a,<br />&nbsp&nbsp&nbsp&nbsptarget=zzd1b,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=t1.*,<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br />);<br /><br />%sort(data=zzd1b, sorter=key_hsn dos key_doc_num PayMode);<br /><br />/*ZZD1c, the above may have same visits with diff pay type. The following is to keep the last one, which gives priority to NFFS service*/<br />Data ZZd1c;<br />&nbsp&nbsp&nbsp&nbspset ZZD1b;<br />&nbsp&nbsp&nbsp&nbspby key_hsn dos key_doc_num PayMode;<br />&nbsp&nbsp&nbsp&nbspif last.key_doc_num;<br />run;<br /><br /><br />/*ZZD1d From above, select claims between entrydate -365 and entrydate +364*/<br />/*zzd1d, statin users and entrydate*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxa.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxa.sas7bdat)<br />);<br />%distinct(data=vxa, target=zzd1d, vars=entryDate);<br /><br />/*zzd2, MSB visits within 1 year before and 1 year after entryDate<br />&nbsp&nbsp&nbsp&nbspi.e., to have visits in each specific period defined by entrydate and doc<br />*/<br /><br />/*%distinct(data=zzd1c, target=test, vars=%str(year(dos) as year)); */<br />/*2009-2017*/<br />%macro makeZZD2a;<br />&nbsp&nbsp&nbsp&nbsp%local i j k;<br />&nbsp&nbsp&nbsp&nbsp%let k=0;<br />/*&nbsp&nbsp&nbsp&nbsp%do i = 2012 %to 2012; */<br />&nbsp&nbsp&nbsp&nbsp%do i = 2010 %to 2017; <br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 0 %to 0 %by 3;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 0 %to 9 %by 3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makeZZD2a_tmp1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzd1c;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere year(dos) = &i and<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmonth(dos) between %eval(&j +1) and %eval(&j + 3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun; <br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makeZZD2a_tmp2;*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zzd1d;*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif %eval(&i-1) le year(EntryDate) le %eval(&i+1);*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=makeZZD2a_tmp1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zzd1d,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=makeZZD2a_tmp3,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t2.entryDate, t1.key_doc_num, t1.PayMode,t1.dos),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=cross,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dos between t2.entrydate -365 and t2.entryDate +365-1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=makeZZD2a_tmp3,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=makeZZD2a_tmp4,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(entryDate, key_doc_num, PayMode, count(t1.dos) as N_Visits),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(entryDate, key_doc_num, PayMode)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &k=0 %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ZZD2a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset makeZZD2a_tmp4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ZZD2a;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ZZD2a makeZZD2a_tmp4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let k=%eval(&k+1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp%end;<br /><br />%mend;<br />%makeZZD2a;<br /><br />/* the ZZD2a need to be further grouped and summed. Same EntryDate-doc-paymode may appear multiple times*/<br />/*as the msb records were obtained by 3-months.  */<br />data ZZD2a2;set ZZD2a;run;<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=ZZD2a2,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZD2a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(entryDate, key_doc_num, PayMode, sum(N_Visits) as N_Visits),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str(entryDate, key_doc_num, PayMode)<br />);<br /><br />/*the following will overwirte the existing zip! be careful*/<br />/*%vbsZip(*/<br />/*&nbsp&nbsp&nbsp&nbsptgtDir=%str(&localTargetPath), */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=zzd2a.zip, */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=zzd2a.sas7bdat, */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=*/<br />/*);*/<br /><br /><br /><br />/*%print(data=ZZd2);*/<br /><br />/*transpose and have N_visits by NFFS and FFS payment type in columns*/<br />%transpose(data=zzd2a, target=zzd2b, rowhead=key_doc_num entryDate, colhead=PayMode, contents=n_visits);<br /><br />/*<br />&nbsp&nbsp&nbsp&nbspif the GP in ZZC has an FFS_CAT of (0-2), make it NFFS<br />&nbsp&nbsp&nbsp&nbspif the GP in ZZC has an FFS_CAT of 8-10, make it FFS<br />&nbsp&nbsp&nbsp&nbspif the gp in zzc has an FFS_CAT of 3-7, make it unk(unknown)<br />*/<br />data ZZD2;<br />&nbsp&nbsp&nbsp&nbspset ZZD2b;<br />&nbsp&nbsp&nbsp&nbspif NFFS=. then NFFS=0;<br />&nbsp&nbsp&nbsp&nbspif FFS=. then FFS=0;<br />&nbsp&nbsp&nbsp&nbspFFSPCT=INT(FFS / sum(NFFS, FFS)*100 );<br />&nbsp&nbsp&nbsp&nbspFFS_CAT=int(FFSPCT / 10);<br />&nbsp&nbsp&nbsp&nbspformat PayType $4.;<br />&nbsp&nbsp&nbsp&nbspif FFS_CAT LE 2 then PayType='NFFS';<br />&nbsp&nbsp&nbsp&nbspif FFS_CAT GE 8 then PayType='FFS';<br />&nbsp&nbsp&nbsp&nbspif 2 lt FFS_CAT LT 8 then PayType='UNKW';<br />run;<br /><br />/*%freq(data=zzd2, table=FFS_CAT*PayType);<br />It shows that only a small proportion of patients whose doc is of UNKW type*/<br /><br />/*ZZD3 link pay type to ZZC*/<br />/*link to zzc*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.ZZC,<br />&nbsp&nbsp&nbsp&nbspt2=ZZD2,<br />&nbsp&nbsp&nbsp&nbsptarget=localt.ZZD,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PayType=\"\", \"NMSB\", t2.PayType) as PayType length=4, T2.FFS_CAT),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.DocType=\"GP\")<br />);<br />%freq(data=localt.zzd, table=paytype*role);<br /><br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-kpt49up7VUF9xXPg","name":"ZZE Missing MSB Claims for RX","NodeDescription":"///t<br />///s<br />/*ZZE This program is to determine the missing service claims.<br />&nbsp&nbsp&nbsp&nbspQuestion: why using the MSBZZb file (claims of all doc's patients, not only those to cohort patients)<br />&nbsp&nbsp&nbsp&nbspwhy not using the master_msb file (claims of the cohort patients, which is way smaller)<br />*/<br /><br />data _null_;run;<br /><br />/*ZZE1. Get all statin claims of prescribers in ZZD to cohort members within the follow up period*/<br />/*ZZE1a. Get distinct statin dispensation dates within follow up*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vxf.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(vxf.sas7bdat)<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=vxf,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZE1,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t2.key_doc_num, t1.rx_ddddd),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_prscr_num = t2.key_doc_num),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.rx_ddddd between t1.entrydate and t1.entrydate + 364)<br />);<br /><br />/*ZZE2. Determin whether there is a visit claim within 30 days prior to the RxDate*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br />);<br /><br />/*from zzd, get a distinct list of docs*/<br />%distinct(data=localt.zzd, target=zzE2a1, vars=key_doc_num);<br />/*zze2a, get distinct visits for patients in zzd*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_msb,<br />&nbsp&nbsp&nbsp&nbspt2=zzE2a1,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZE2a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.key_doc_num, t1.dos),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br />);<br />/*zze2b, join zze1 and zze2a,  determine whether there is a visit claim within 30 60 90 180 days prior to the Date of statin dispensation*/<br />%macro analysisZZE;<br />&nbsp&nbsp&nbsp&nbsp%local lookbackClaims;<br />&nbsp&nbsp&nbsp&nbsp%do lookbackClaims = 30 %to 180 %by 30;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &lookbackClaims = 120 or &lookbackClaims = 150 %then %goto SkipToNext;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ZZE1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=zze2a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=zze2b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t1.key_doc_num, t1.rx_ddddd, ifc(t2.key_hsn=\"\", '_1', '_0') as MissVisitClaim),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t1.key_doc_num = t2.key_doc_num and t2.dos between t1.rx_ddddd -&lookbackClaims and t1.rx_ddddd)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=zze2b, table=MissVisitClaim);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%print(data = localt.zzd)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*link the hasvisitclaim records (ZZE2b) with entryDate-specific doc paytype (ZZD)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspso as to have the prescriber's pay type on the claim date<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif the specific entrydate-doc combination in zze2b cannot be found in zzd, indicate the PayType is 'UNKW' (unknown)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in ZZE2, there are docs who cannot be identified for PayTYpe on the specific entryDate (i.e., there were no <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspphysician service claims within 1 year before and 1 year after the entryDate). These could be NFFS doctors,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBut these could also be FFS doctors, who knows. <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zze2b,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=zze2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifc(t2.Role=\"\", \"prescriber\", t2.role) as Role length=20 , <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifc(t2.PayType=\"\", \"UNKW\", t2.PayType) as PayType length=20, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.FFS_CAT),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=entrydate key_doc_num,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'NMSB')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=zze2, table=Role * PayType);*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data =zze2);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=zze2b);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=zze2)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*To this step, a logistic model can be applied to estimate the impact of paytype to the outcome of missing visit claims.<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs the records are repeated by patient and doc, the two vars can be used for repeat terms in GEE models<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(patient nested in doc, 2 levels)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"GEE, binary of missing service claim, repeated by doc nested patient levels\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=zze2 desc ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass PayType(ref='FFS') key_doc_num key_hsn /param=reference ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel MissVisitClaim = PayType /type3 dist=bin link=logit covb;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" PayType 1 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"UNKW vs FFS\" PayType 0 1/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num ( key_hsn) /type=exch printmle ecovb;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*repeated or strata? levels or paired?*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrata key_doc_num key_hsn / missing;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br /><br /><br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Next, the missing cases are summerized by doctor. */<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*zze3, summary # of Rx, by doc, PayType, HasVisitClaim */<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=zze2,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=zze3a,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payType, t1.MissVisitClaim, count(Rx_ddddd) as NRx),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.key_doc_num, t1.payType,  t1.MissVisitClaim)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%transpose(data=zze3a, target=zze3b, rowhead = key_doc_num paytype , colhead = MissVisitClaim, contents=NRX);<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro GEE_1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local MissingPCTCutOff;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do MissingPCTCutOff=1 %to 10; /*missing xx% of claims*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata zze3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zze3b;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif _1=. then _1=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif _0=. then _0=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptotal = sum(_1, _0);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMiss_PCT= int(_1/total*100);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMiss_CAT = int(Miss_PCT/10);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Miss_CAT ge &MissingPCTCutOff then Miss_Bin = 1; else  Miss_Bin=0;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*proc freq data=zze3;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsptable Miss_Bin * paytype /chisq norow nocol nopct;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*run;*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The following model is to estimate the OR of Missing 80% of the service claims of a patient <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby a doc of NFFS type vs FFS type<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"Binary of doc missing y% service claims , MissingPCTCutOff=&MissingPCTCutOff\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=zze3 desc ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass PayType(ref='FFS') key_doc_num  /param=ref ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Miss_Bin = PayType /type3 dist=bin link=logit covb;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" PayType 1 0 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"UNKW vs FFS\" PayType  0 1/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num /type=exch printmle;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br /><br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*It seems that the OR is not stable. It ranges fro 3 to 0.5 when the missing PCT cut off changes from 10% to 100%. */<br /><br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &MissingPCTCutOff=10 %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*alternatively, a poisson model to estimate the rate of missing service claims<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe rate is estimated as # of missing claims out of the total claims<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ZZe4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset zze3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_total = log(total);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br /><br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*proc univariate data=zze4;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsphistogram Miss_PCT;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*run;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptitle \"Poisson model,MissingPCTCutOff=&MissingPCTCutOff \";<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=zze4  ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass PayType (ref='FFS') key_doc_num  /param=ref  ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel _1 = PayType /type3 dist=negbin  offset=log_total;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" PayType 1 0/exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"UNKW vs FFS\" PayType 0 1 /exp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num /type=exch modelse printmle;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend GEE_1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GEE_1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*If checking the rate of missing claims at doc level (summarizing all missing phycisian service cases out of all statin Rx), <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRate of missing service claim are 1.5 times higher among NFFS vs FFS &nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br />%SkipToNext:<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;/*end of loop for lookbackclaim days*/<br />%mend analysisZZE;<br />%analysisZZE;<br />/*alternatively, at patient level, check the rate of missing service claims by patient. <br />&nbsp&nbsp&nbsp&nbspSee whether it can be determined by tpe of patient's usual prescriber(s): i.e., FFS/NFFS/UNKW/Mixed<br />&nbsp&nbsp&nbsp&nbspBut... what is the point of doing that?<br />*/<br /><br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-47QaLlwY1h7Q44wY","name":"ZZF OR of being UPCPF FFS vs NFFS","NodeDescription":"///t<br />///s<br />/*ZZF, <br /> &nbsp&nbsp&nbsp&nbspThis progam is to test the hypothesis:<br />&nbsp&nbsp&nbsp&nbspNFFS doctors are less likely to be the cohort member's usual CARE PROVIDER during follow up.  &nbsp&nbsp&nbsp&nbsp<br />*/<br /><br />/*msb claim docs of the cohort members during follow up*/<br />/*msb claims*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br />);<br /><br />/*cohort memebers*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)<br />);<br /><br />/*distinct docs of msb claims of cohort memebers within follow up<br />&nbsp&nbsp&nbsp&nbspthese claims including doctors identified in zzb (as GPs by FFS/NFFS type)<br />&nbsp&nbsp&nbsp&nbspalso include doctors not identified in zzb <br />*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_msb,<br />&nbsp&nbsp&nbsp&nbspt2=vzc,<br />&nbsp&nbsp&nbsp&nbsptarget=zzf1,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t2.entryDate, t1.key_doc_num),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn, <br />&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.entrydate and t2.entrydate +364)<br />);<br />/*%print(data=vzc);*/<br />/*%print(data=localt.zzd);*/<br />/*From above, determine whether a FFS/NFFS doc is identified*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzf1,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br />&nbsp&nbsp&nbsp&nbsptarget=zzf2,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.entryDate, t1.key_doc_num, t2.paytype),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num entryDate,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br />);<br /><br />/*patients and their UGPFs (usual GP during follow up)*/<br />data ZZF3;<br />&nbsp&nbsp&nbsp&nbspset VZC;format upcpfdocid $11.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPF=1;<br />&nbsp&nbsp&nbsp&nbsparray upcpfs upcpf:;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(upcpfs);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspupcpfdocid= scan(upcpfs(i),1,\":\");<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif upcpfdocid ne 'na' then output;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn entrydate upcpfdocid UGPF;<br />run;<br /><br /><br />/*link zzf3 to zzf2, check if the very doc in zzf2 is identified as the usual provider*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzf2,<br />&nbsp&nbsp&nbsp&nbspt2=zzf3,<br />&nbsp&nbsp&nbsp&nbsptarget=zzf4,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.ugpf=., 0, 1) as UGPF),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t2.upcpfdocid = t1.key_doc_num)<br />);<br /><br />/*what is this? there is a cross over here<br />&nbsp&nbsp&nbsp&nbsppatient a may see doc 1 and 2<br />&nbsp&nbsp&nbsp&nbsppatient b may also see doc 1 and 2<br />&nbsp&nbsp&nbsp&nbsp...<br />*/<br />proc genmod data=zzf4 desc;<br />&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') key_doc_num  key_hsn /param=reference ;<br />&nbsp&nbsp&nbsp&nbspmodel UGPF = paytype  /link=logit dist=bin type3;<br />&nbsp&nbsp&nbsp&nbsprepeated subject= key_doc_num (key_hsn)  /type=exch;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp ;<br />run;<br /><br />/*It makes more sense to count the number of patients by doc<br />&nbsp&nbsp&nbsp&nbspfor number of patients being UGPF, and for total number of patients<br />*/<br />/*%print(data=zzf4);*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzf4,<br />&nbsp&nbsp&nbsp&nbsptarget=zzf5,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payType,  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(UGPF) as N_UGPF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, payType),<br />&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num, payType)<br />);<br />/*for docs acting both as a FFS and a NFFS for diff time periods, */<br />%transpose(data=ZZF5, target=ZZF6a, rowhead=key_doc_num, colhead=paytype, contents=total);<br />data ZZF7a;<br />&nbsp&nbsp&nbsp&nbspset ZZF6a;<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b';<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_';<br />&nbsp&nbsp&nbsp&nbspTotal =sum(nffs, ffs);<br />run;<br />%freq(data=zzf7a, table=PayClass);<br />%transpose(data=ZZF5, target=ZZF6b, rowhead=key_doc_num, colhead=paytype, contents=N_UGPF);<br />data ZZF7b;<br />&nbsp&nbsp&nbsp&nbspset ZZF6b;<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b';<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_';<br />&nbsp&nbsp&nbsp&nbspN_UGPF =sum(nffs, ffs);<br />run;<br />%freq(data=zzf7b, table=PayClass);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzf7a,<br />&nbsp&nbsp&nbsp&nbspt2=zzf7b,<br />&nbsp&nbsp&nbsp&nbsptarget=zzf7,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payclass, t2.N_UGPF, t1.Total),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num payclass<br />);<br /><br />/*A poisson model to est rate ratio of being UGPF*/<br />data ZZF8;<br />&nbsp&nbsp&nbsp&nbspset zzF7;<br />&nbsp&nbsp&nbsp&nbsplog_total = log(total);<br />&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10);<br />run;<br /><br />%freq(data=zzf8, table=pct_ugpf *payClass);<br /><br />title \"Poisson model \";<br /><br />proc genmod data=zzf8  ;<br />&nbsp&nbsp&nbsp&nbspclass payClass (ref='0f') key_doc_num  /param=effect desc ;<br />&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payClass /type3 dist=negbin  offset=log_total;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payClass 0 1 -1 /exp;<br />&nbsp&nbsp&nbsp&nbspestimate \"Both vs FFS\" payClass 1 0 -1 /exp;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS + Both vs FFS\" payClass 1 1 -2 /exp;<br />run;<br /><br /><br />/*What about those docs both act as FFS and NFFS?*/<br />data ZZF9;<br />&nbsp&nbsp&nbsp&nbspset ZZF8;<br />&nbsp&nbsp&nbsp&nbspif payClass='2b';<br />run;<br />/*get the payType specfic data*/<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzf4,<br />&nbsp&nbsp&nbsp&nbspt2=zzf9,<br />&nbsp&nbsp&nbsp&nbsptarget=zzf10,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, year(entryDate) as year),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_doc_num,<br />&nbsp&nbsp&nbsp&nbsporderby=%str(key_doc_num, paytype, year, key_hsn)<br />);<br />/*dose this make sense? It is a GEE binary analysis<br />&nbsp&nbsp&nbsp&nbspon whether or not being Usual GP<br />&nbsp&nbsp&nbsp&nbspby paytype<br />&nbsp&nbsp&nbsp&nbsprepeated by patient<br />&nbsp&nbsp&nbsp&nbspstratified by key_doc_num (being both NFFS, FFS),<br />&nbsp&nbsp&nbsp&nbspnot a lot of cases though<br />*/<br />proc genmod data=zzf10 desc;<br />&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') key_doc_num  key_hsn /param=reference desc;<br />&nbsp&nbsp&nbsp&nbspmodel UGPF = paytype  /link=logit dist=bin type3;<br />&nbsp&nbsp&nbsp&nbsprepeated subject= key_hsn  /type=exch ecovb;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp ;<br />&nbsp&nbsp&nbsp&nbspstrata key_doc_num ;<br />run;<br />/*the result is really weird and difficult to explain, the OR >1*/<br /><br /><br />/*Poisson? for these cross over group?*/<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzf10,<br />&nbsp&nbsp&nbsp&nbsptarget=zzf11,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_doc_num, t1.payType,  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(UGPF) as N_UGPF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str(key_doc_num, payType),<br />&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num, payType)<br />);<br />data ZZF12;<br />&nbsp&nbsp&nbsp&nbspset zzF11;<br />&nbsp&nbsp&nbsp&nbsplog_total = log(total);<br />&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10);<br />run;<br /><br />%freq(data=zzf12, table=pct_ugpf *payClass);<br /><br />title \"Poisson model \";<br /><br />proc genmod data=zzf12  ;<br />&nbsp&nbsp&nbsp&nbspclass payType (ref='FFS') key_doc_num  /param=ref desc ;<br />&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payType /type3 dist=negbin  offset=log_total;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payType 1 /exp;<br />&nbsp&nbsp&nbsp&nbspstrata key_doc_num;<br />run;<br />/*even stranger. it is kind of before-after analysis. Those turned to NFFS are more likely to be UGPF!*/<br />s///<br />t///","children":[{"idx":"CodeTask-xeAw1hpjIYgwn1R4","name":"ZZG UPR being UPCPF FFS vs NFFS","NodeDescription":"///t<br />///s<br />/*Usual prescribers, UPRs of FFS/NFFS type, and likelihood of being a UGPF (UPCPF)*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)<br />);<br />%print(data=vzc);<br /><br />/*1. get all UPRs of cohort memebers. Some patients had multiple UPRs*/<br />data ZZG1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspformat UGPPRDocID $11.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPR=1;<br />&nbsp&nbsp&nbsp&nbsparray UPRs UPR1 - UPR6;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(UPRs);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPRDocID= scan(UPRs(i),1,\":\");<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UGPPRDocID ne 'na' and UGPPRDocID ne 'unknown'  then output;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn entryDate UGPPRDocID UGPPR;<br />&nbsp&nbsp&nbsp&nbsp/*if strip(UGPPRDocID) ne 'unknown'; why those unknow is not deleted if the condition is put here, instead of in the 2 lines above*/<br />run;<br /><br />/*The UPRs in 1) may have missing claims. And because of that, they may not be identified as UPCPs. <br />&nbsp&nbsp&nbsp&nbspAmong them, some are of paytype FFS, some of NFFS. <br />&nbsp&nbsp&nbsp&nbspThe question is:<br />&nbsp&nbsp&nbsp&nbspIs it true that being an NFFS prescriber is more likely not to be identified as an UPCPF?<br />*/<br /><br />/*<br />&nbsp&nbsp&nbsp&nbspTo answer this question. the next step is to indicate the paytype for UPRs identified in 1)<br />2. */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=ZZG1,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZG2,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.paytype),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjterm=%str(t1.UGPPRDocID = t2.key_doc_num and t1.entryDate = t2.entryDate),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br />);<br /><br />/*3. from vzc, get UPCPFs of the cohort patients*/<br />data ZZg3;<br />&nbsp&nbsp&nbsp&nbspset VZC;format upcpfdocid $11.;<br />&nbsp&nbsp&nbsp&nbspIsUPCPF=1;<br />&nbsp&nbsp&nbsp&nbsparray upcpfs upcpf:;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(upcpfs);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspupcpfdocid= scan(upcpfs(i),1,\":\");<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif upcpfdocid ne 'na' and upcpfdocid ne 'unknown' then output;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn upcpfdocid IsUPCPF;<br />run;<br /><br />/*4. link 2 and 3,for each UPR in 2), determine whether or not the UPR is identified as UPCPF*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzg2,<br />&nbsp&nbsp&nbsp&nbspt2=zzg3,<br />&nbsp&nbsp&nbsp&nbsptarget=zzg4,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.IsUPCPF=., 0, 1) as IsUPCPF),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t1.UGPPRDocID = t2.upcpfdocid)<br />);<br /><br /><br /><br />/*what is this? there is a cross over here<br />&nbsp&nbsp&nbsp&nbsppatient a may see doc 1 and 2<br />&nbsp&nbsp&nbsp&nbsppatient b may also see doc 1 and 2<br />&nbsp&nbsp&nbsp&nbsp...<br />*/<br />proc genmod data=zzg4 desc;<br />&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') UGPPRDocID  key_hsn /param=reference ;<br />&nbsp&nbsp&nbsp&nbspmodel IsUPCPF = paytype  /link=logit dist=bin type3;<br />&nbsp&nbsp&nbsp&nbsprepeated subject= UGPPRDocID (key_hsn)  /type=exch;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp ;<br />&nbsp&nbsp&nbsp&nbspstrata UGPPRDocID key_hsn;<br />run;<br /><br />/*It makes more sense to count the number of patients by doc<br />&nbsp&nbsp&nbsp&nbspfor number of patients being UGPF, and for total number of patients<br />*/<br />%print(data=zzg4);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzg4,<br />&nbsp&nbsp&nbsp&nbsptarget=zzg5,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.UGPPRDocID, t1.payType,  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(IsUPCPF) as N_UGPF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str(UGPPRDocID, payType),<br />&nbsp&nbsp&nbsp&nbsporderby = %str(UGPPRDocID, payType)<br />);<br />/*for docs acting both as a FFS and a NFFS for diff time periods, */<br />%transpose(data=ZZG5, target=ZZG6a, rowhead=UGPPRDocID, colhead=paytype, contents=total);<br />data ZZG7a;<br />&nbsp&nbsp&nbsp&nbspset ZZG6a;<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b';<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_';<br />&nbsp&nbsp&nbsp&nbspTotal =sum(nffs, ffs);<br />run;<br />%freq(data=zzG7a, table=PayClass);<br />%transpose(data=ZZG5, target=ZZG6b, rowhead=UGPPRDocID, colhead=paytype, contents=N_UGPF);<br />data ZZG7b;<br />&nbsp&nbsp&nbsp&nbspset ZZG6b;<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs ne . then PayClass='0f';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs =. then Payclass='1n';<br />&nbsp&nbsp&nbsp&nbspif nffs ne . and ffs ne . then Payclass='2b';<br />&nbsp&nbsp&nbsp&nbspif nffs=. and ffs =. then PayClass='3_';<br />&nbsp&nbsp&nbsp&nbspN_UGPF =sum(nffs, ffs);<br />run;<br />%freq(data=zzg7b, table=PayClass);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzg7a,<br />&nbsp&nbsp&nbsp&nbspt2=zzg7b,<br />&nbsp&nbsp&nbsp&nbsptarget=zzg7,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.UGPPRDocID, t1.payclass, t2.N_UGPF, t1.Total),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=UGPPRDocID payclass<br />);<br /><br />/*A poisson model to est rate ratio of being UGPF*/<br />data ZZg8;<br />&nbsp&nbsp&nbsp&nbspset zzg7;<br />&nbsp&nbsp&nbsp&nbsplog_total = log(total);<br />&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10);<br />run;<br /><br />%freq(data=zzg8, table=pct_ugpf *payClass);<br /><br />title \"Poisson model \";<br /><br />proc genmod data=zzg8  ;<br />&nbsp&nbsp&nbsp&nbspclass payClass (ref='0f') UGPPRDocID  /param=effect desc ;<br />&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payClass /type3 dist=negbin  offset=log_total;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payClass 0 1 -1 /exp;<br />&nbsp&nbsp&nbsp&nbspestimate \"Both vs FFS\" payClass 1 0 -1 /exp;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS + Both vs FFS\" payClass 1 1 -2 /exp;<br />run;<br /><br /><br />/*What about those docs both act as FFS and NFFS?*/<br />data ZZg9;<br />&nbsp&nbsp&nbsp&nbspset ZZg8;<br />&nbsp&nbsp&nbsp&nbspif payClass='2b';<br />run;<br />/*get the payType specfic data*/<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzg4,<br />&nbsp&nbsp&nbsp&nbspt2=zzg9,<br />&nbsp&nbsp&nbsp&nbsptarget=zzg10,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, year(entryDate) as year),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=UGPPRDocID,<br />&nbsp&nbsp&nbsp&nbsporderby=%str(UGPPRDocID, paytype, year, key_hsn)<br />);<br />/*dose this make sense? It is a GEE binary analysis<br />&nbsp&nbsp&nbsp&nbspon whether or not being Usual GP<br />&nbsp&nbsp&nbsp&nbspby paytype<br />&nbsp&nbsp&nbsp&nbsprepeated by patient<br />&nbsp&nbsp&nbsp&nbspstratified by key_doc_num (being both NFFS, FFS),<br />&nbsp&nbsp&nbsp&nbspnot a lot of cases though<br />*/<br />proc genmod data=zzg10 desc;<br />&nbsp&nbsp&nbsp&nbspclass paytype (ref='FFS') UGPPRDocID  key_hsn /param=reference desc;<br />&nbsp&nbsp&nbsp&nbspmodel IsUPCPF = paytype  /link=logit dist=bin type3;<br />&nbsp&nbsp&nbsp&nbsprepeated subject= key_hsn  /type=exch ecovb;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" paytype 1 /exp ;<br />&nbsp&nbsp&nbsp&nbspstrata UGPPRDocID ;<br />run;<br />/*the result is interesting. Being a ususal prescriber of NFFS is way unlikely to be a usual care provider<br />&nbsp&nbsp&nbsp&nbspsuggesting that many claims are missing....<br />*/<br /><br /><br />/*Poisson? for these cross over group?*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=zzg10,<br />&nbsp&nbsp&nbsp&nbsptarget=zzg11,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.UGPPRDocID, t1.payType,  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(key_hsn) as Total,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(IsUPCPF) as N_UGPF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str(UGPPRDocID, payType),<br />&nbsp&nbsp&nbsp&nbsporderby = %str(UGPPRDocID, payType)<br />);<br />data ZZG12;<br />&nbsp&nbsp&nbsp&nbspset zzG11;<br />&nbsp&nbsp&nbsp&nbsplog_total = log(total);<br />&nbsp&nbsp&nbsp&nbspPCT_UGPF = int(N_UGPF / Total * 10);<br />run;<br /><br />%freq(data=zzg12, table=pct_ugpf *payType);<br /><br />title \"Poisson model \";<br /><br />proc genmod data=zzg12  ;<br />&nbsp&nbsp&nbsp&nbspclass payType (ref='FFS') UGPPRDocID  /param=ref desc ;<br />&nbsp&nbsp&nbsp&nbspmodel N_UGPF = payType /type3 dist=negbin  offset=log_total;<br />&nbsp&nbsp&nbsp&nbspestimate \"NFFS vs FFS\" payType 1 /exp;<br />&nbsp&nbsp&nbsp&nbspstrata UGPPRDocID /missing;<br />run;<br />/*Prescribers of NFFS type are way less likely to be UGPF!*/<br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-glcbbQCJxljMInFi","name":"ZZH Usual prescriber's PayType to ADH","NodeDescription":"///t<br />///s<br />/*does prescriber's pay type NFFS/FFS predict nonadherence?*/<br /><br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),<br />&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)<br />);<br /><br /><br /><br />/*1. get all UPRs of cohort memebers. Some patients had multiple UPRs*/<br />data ZZH1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspformat UGPPRDocID $11.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPR=1;<br />&nbsp&nbsp&nbsp&nbsparray UPRs UPR1 - UPR6;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(UPRs);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPPRDocID= scan(UPRs(i),1,\":\");<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UGPPRDocID ne 'na'  then output;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn entrydate UGPPRDocID UGPPR;<br />&nbsp&nbsp&nbsp&nbsp/*if strip(UGPPRDocID) ne 'unknown'; why those unknow is not deleted if the condition is put here, instead of in the 2 lines above*/<br />run;<br /><br />/*<br />2. the next step is to indicate the paytype for UPRs identified in 1)<br /> */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=ZZH1,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZH2,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.paytype),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjterm=%str(t1.UGPPRDocID = t2.key_doc_num and t1.entryDate = t2.entryDate),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br />);<br /><br />/*3. from 2. get a distinct list of patients by whether or not having FFS NFFS docs (can be both)*/<br />%distinct(data=ZZH2, target =ZZH3, vars=%str(key_hsn, PayType, UGPPR));<br />%transpose(data=zzh3, target=zzh4, rowhead=key_hsn, colhead=PayType, contents=UGPPR);<br />data ZZH5;<br />&nbsp&nbsp&nbsp&nbspset ZZH4;<br />&nbsp&nbsp&nbsp&nbspif ffs =1 and nffs=. then PayClass = 'f';<br />&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=1 then payclass='n';<br />&nbsp&nbsp&nbsp&nbspif ffs=1 and nffs=1 then PayClass = 'b';<br />&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=. then PayClass ='_';<br />run;<br />%freq(data=zzh5, table=Payclass);<br /><br />/*link back to cohort*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=vzc,<br />&nbsp&nbsp&nbsp&nbspt2=ZZH5,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZH,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PayClass=\"\", \"u\", t2.PayClass) as PayClass_UPR),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />data test2;<br />&nbsp&nbsp&nbsp&nbspset ZZH;<br />&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1;else Northern=0;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO = Pre365_Prscr_statinAHTNOH;<br />&nbsp&nbsp&nbsp&nbspif Pre365NRxDocSAO> 4 then Pre365NRxDocSAO=5;<br />&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO=Followup_Prscr_statinAHTNOH;<br />&nbsp&nbsp&nbsp&nbspif FollowUpNRXDocSAO> 4 then FollowUpNRXDocSAO=4;<br />run;<br /><br />proc genmod data=test2 desc;<br />&nbsp&nbsp&nbsp&nbspclass PayClass_UPR (ref='f')  key_hsn /param=reference ;<br />&nbsp&nbsp&nbsp&nbspmodel adherence =PayClass_UPR/link=logit dist=bin;<br />&nbsp&nbsp&nbsp&nbspestimate \"both vs ffs \" PayClass_UPR 1 0 0 /exp ;<br />&nbsp&nbsp&nbsp&nbspestimate \"nffs vs ffs \" PayClass_UPR 0 1 0 /exp ;<br />&nbsp&nbsp&nbsp&nbspestimate \"unknown vs ffs \" PayClass_UPR  0 0 1 /exp ;<br />run;<br /><br />/*macro test_ZZH is for not matched,using the not matched cohort (VZC)*/<br />%macro test_ZZH (data=, theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local data theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern(ref='0') PayClass_UPR(ref='f')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO (ref='1')<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO(ref='1')*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern &theVar *northern<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe resitype &theVar * resitype <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365_Medclass_statinAHTNOH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPayClass_UPR<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowup_Medclass_statinAHTNOH*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1/exp;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test_ZZH;<br /><br /><br />%test_ZZH(data=test2, theVar=any_changed );<br />s///<br />t///","children":[{"idx":"CodeTask-B7bSZ43FyDvRf1Kd","name":"ZZI UPCPF's  pay type to adh","NodeDescription":"///t<br />///s<br />/*ZZI PayTYpe to adherence */<br />/*does prescriber's pay type NFFS/FFS predict nonadherence?*/<br /><br />/*%VbsUnzip(*/<br />/*&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br />/*&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\vzc.zip),*/<br />/*&nbsp&nbsp&nbsp&nbspsrcFile=%str(vzc.sas7bdat)*/<br />/*);*/<br /><br />%print(data=vzc);<br /><br />/*1. get all UPRs of cohort memebers. Some patients had multiple UPRs*/<br />data ZZI1;<br />&nbsp&nbsp&nbsp&nbspset VZC;<br />&nbsp&nbsp&nbsp&nbspformat UGPFDocID $11.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPF=1;<br />&nbsp&nbsp&nbsp&nbsparray UGPS UPCPF:;<br />&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(UGPS);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspUGPFDocID= scan(UGPS(i),1,\":\");<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif UGPFDocID ne 'na' and strip(UGPFDocID) ne 'unknown' then output;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn entryDate UGPFDocID UGPF;<br />&nbsp&nbsp&nbsp&nbsp/*if strip(UGPFDocID) ne 'unknown'; why those unknow is not deleted if the condition is put here, instead of in the 2 lines above*/<br />run;<br /><br />/*<br />2. the next step is to indicate the paytype for UGPs identified in 1)<br /> */<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=ZZI1,<br />&nbsp&nbsp&nbsp&nbspt2=localt.zzd,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZI2,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.paytype),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjterm=%str(t1.UGPFDocID = t2.key_doc_num and t1.entryDate = t2.entryDate),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t2.paytype ne 'UNKW' and t2.paytype ne 'NMSB')<br />);<br /><br />/*3. from 2. get a distinct list of patients by whether or not having FFS NFFS docs (can be both)*/<br />%distinct(data=ZZI2, target =ZZI3, vars=%str(key_hsn, PayType, UGPF));<br />%transpose(data=zzI3, target=zzI4, rowhead=key_hsn, colhead=PayType, contents=UGPF);<br />data ZZI5;<br />&nbsp&nbsp&nbsp&nbspset ZZI4;<br />&nbsp&nbsp&nbsp&nbspif ffs =1 and nffs=. then PayClass_UGPF = 'f';<br />&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=1 then PayClass_UGPF='n';<br />&nbsp&nbsp&nbsp&nbspif ffs=1 and nffs=1 then PayClass_UGPF = 'b';<br />&nbsp&nbsp&nbsp&nbspif ffs=. and nffs=. then PayClass_UGPF ='_';<br />run;<br />%freq(data=zzI5, table=PayClass_UGPF);<br /><br />/*link back to cohort*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=vzc,<br />&nbsp&nbsp&nbsp&nbspt2=ZZI5,<br />&nbsp&nbsp&nbsp&nbsptarget=ZZI,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.PayClass_UGPF=\"\", \"u\", t2.PayClass_UGPF) as PayClass_UGPF),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br />);<br />data test2;<br />&nbsp&nbsp&nbsp&nbspset ZZI;<br />&nbsp&nbsp&nbsp&nbspif RHA>10 then Northern=1;else Northern=0;<br />&nbsp&nbsp&nbsp&nbspif Never_Changed=1 then any_changed=0; else any_changed=1;<br />&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO = Pre365_Prscr_statinAHTNOH;<br />&nbsp&nbsp&nbsp&nbspif Pre365NRxDocSAO> 4 then Pre365NRxDocSAO=5;<br />&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO=Followup_Prscr_statinAHTNOH;<br />&nbsp&nbsp&nbsp&nbspif FollowUpNRXDocSAO> 4 then FollowUpNRXDocSAO=4;<br />run;<br />%freq(data=test2, table=PayClass_UGPF * adherence);<br />proc genmod data=test2 desc;<br />&nbsp&nbsp&nbsp&nbspclass PayClass_UGPF (ref='f')  key_hsn /param=reference ;<br />&nbsp&nbsp&nbsp&nbspmodel adherence =PayClass_UGPF/link=logit dist=bin;<br />&nbsp&nbsp&nbsp&nbspestimate \"both vs ffs \" PayClass_UGPF 1 0 0 /exp ;<br />&nbsp&nbsp&nbsp&nbspestimate \"nffs vs ffs \" PayClass_UGPF 0 1 0 /exp ;<br />&nbsp&nbsp&nbsp&nbspestimate \"unknown vs ffs \" PayClass_UGPF  0 0 1 /exp ;<br />run;<br /><br />/*macro test_ZZI is for not matched,using the not matched cohort (VZC)*/<br />%macro test_ZZI (data=, theVar=, where=);<br />&nbsp&nbsp&nbsp&nbsp%local data theVar where;<br />&nbsp&nbsp&nbsp&nbspods select parameterEstimates Estimates type3;<br />&nbsp&nbsp&nbsp&nbspTitle \"&theVar\";<br />&nbsp&nbsp&nbsp&nbspproc genmod data= &data desc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere &where;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass &theVar (ref='0') sex_desc(ref='M') qaippe(ref='1') resitype(ref='URBAN') <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnorthern(ref='0') PayClass_UGPF(ref='f')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO (ref='1')<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO(ref='1')*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/param=reference;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = &theVar northern &theVar *northern<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc  qaippe resitype &theVar * resitype <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365NRxDocSAO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPre365_Medclass_statinAHTNOH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPayClass_UGPF<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowUpNRXDocSAO*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowup_Medclass_statinAHTNOH*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNDINS_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNHosp_Pre365 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_SP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNVisits_ER_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThirdPartyPay_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBENZO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPSYCHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTIDEP_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspANTICHO_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_NPD_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_SA_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCAMH_PSY_Pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharlson_Index<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ANXIETY_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_DIABETES<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HTN<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOOD_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_ASTHMA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_COPD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_HF<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OMH<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUBABUSE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AMI<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_IHD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_1POP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANX<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MOODANXP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_AD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_NONRA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_OSTEO_2DRUG<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_STROKE_2HOSP<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPAD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_RA<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SCHIZO_EVER<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_SUICIDE_OLD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_PD<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_MS<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCC_Pre365_EPJR&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 1 vs 0\" &theVar 1/exp;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 10 vs 00\" &theVar 0 1 0 /exp;*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"&theVar 11 vs 00\" &theVar 0 0 1 /exp;*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"Northern 1 vs 0\" Northern 1 /exp;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbspods select all;<br />&nbsp&nbsp&nbsp&nbsptitle;<br />%mend test_ZZI;<br /><br /><br />%test_ZZI(data=test2, theVar=any_changed );<br />s///<br />t///","custparents":[{"idx":"CodeTask-glcbbQCJxljMInFi"}]}],"custparents":[{"idx":"CodeTask-xeAw1hpjIYgwn1R4"}]}],"custparents":[{"idx":"CodeTask-47QaLlwY1h7Q44wY"}]}],"custparents":[{"idx":"CodeTask-kpt49up7VUF9xXPg"}]}],"custparents":[{"idx":"CodeTask-ViasKREJ44R4uJVe"}]}],"custparents":[{"idx":"CodeTask-kpvpcTvUPzprxvZV"}]}],"custparents":[{"idx":"EGTask-SF7U4hFBpxtTrllt"}]}],"custparents":[{"idx":"CodeTask-Aci5BDMMgR9LhbzQ"}]}],"custparents":[{"idx":"EGTask-mNdzSqhm2Bn1Jy5q"}]}],"custparents":[{"idx":"CodeTask-pzOsKgUBMFRexTrx"}]}],"custparents":[{"idx":"CodeTask-rXaW7KfQgzQfcx1V"},{"idx":"CodeTask-qfcAXJSXk3TTi6Wu"}]},{"idx":"MY1696de2e-57dd-474a-b49e-c72e6636be71","name":"Stand alone nodes","children":[{"idx":"CodeTask-qw5zY2AXDDUdP1Gk","name":"ZXD validate BB","NodeDescription":"///t<br />///s<br />/*ZXA<br />&nbsp&nbsp&nbsp&nbspValidate that BB code represents family physicians (FP)<br />&nbsp&nbsp&nbsp&nbsp<br /><br />&nbsp&nbsp&nbsp&nbspThe idea is that both FP and SP will have the save service codes, but<br />&nbsp&nbsp&nbsp&nbsp1). The charge of a subsequent service by SP is higher<br /><br />&nbsp&nbsp&nbsp&nbspLet's just use the MSB services of the statin cohort as an example<br /><br />*/<br /><br />/*1. Get service claims of the patients in the statin cohort*/<br />%VbsUnzip(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br />);<br />%print(data=master_msb);<br />/*2. does the amount of charge (amt_app) the same for<br />&nbsp&nbsp&nbsp&nbspdifferent<br />&nbsp&nbsp&nbsp&nbspspec, fsc?<br />*/<br />%distinct(data=master_msb, target=ZXA1, <br />vars=%str(fsc, amt_app, diag, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2), <br />orderby=%str(fsc, amt_app, diag, SP));<br /><br />/*the result shows that even for same GP same FSC, the charge is different<br />*/<br />data ZXA2a1;<br />&nbsp&nbsp&nbsp&nbspset master_msb;<br />&nbsp&nbsp&nbsp&nbspCalendarYr= year(dos);<br />&nbsp&nbsp&nbsp&nbspif month(dos) < 4 then FiscalYr=year(dos)-1;<br />&nbsp&nbsp&nbsp&nbspelse FiscalYr=year(dos);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat SPEC2 $2.;<br />&nbsp&nbsp&nbsp&nbspif spec in: (\"B\") then SPEC2=\"GP\";<br />&nbsp&nbsp&nbsp&nbspelse SPEC2=\"SP\";<br />run;<br />%beep;<br /><br />data ZXA2a2;<br />&nbsp&nbsp&nbsp&nbspset ZXA2a1;<br />&nbsp&nbsp&nbsp&nbspif FSC=\"A073\";<br />run;<br />/*is it true that by fiscal year the charge is the same for the same SPEC and the same FSC*/<br />%distinct(data=ZXA2a2, target=ZXA2b1, <br />vars=%str(fsc, amt_app, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2, FiscalYr), <br />orderby=%str(fsc, amt_app, FiscalYr, SP));<br />/*Nope. e.g., in CY 2015, for GP, the charge for A037 could be 56.8 or 57.9*/<br /><br />%distinct(data=ZXA2a2, target=ZXA2b2, <br />vars=%str(fsc, amt_app, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2, CalendarYr), <br />orderby=%str(fsc, amt_app, CalendarYr, SP));<br />/*Nope. e.g., again in FY 2015, for GP, the charge for A037 could be 56.8 or 57.9*/<br /><br />/*get the claims by GP in FY or CY 2015*/<br />data ZXA2b3;<br />&nbsp&nbsp&nbsp&nbspset ZXA2a2;<br />&nbsp&nbsp&nbsp&nbspif CalendarYr=2015 or FiscalYr=2015;<br />run;<br />/*it seems that the charge increased in FY 2015, but sometimes services in Apr (although in FY2015) were yet charged by the rate<br />&nbsp&nbsp&nbsp&nbspof the previous year<br />&nbsp&nbsp&nbsp&nbspHmm.... If that is true, then the services in the second half year should be of the same charge for GPs<br />*/<br />data ZXA2b4;<br />&nbsp&nbsp&nbsp&nbspset ZXA2a1;<br />&nbsp&nbsp&nbsp&nbspif spec in: (\"B\") and month(dos) > 5;<br />run;<br />%distinct(data=ZXA2b4, target=ZXA2b5, <br />vars=%str(fsc, amt_app, ifc(substr(strip(spec),1,1) = 'B', 'GP', SPEC) as SP length=2, FiscalYr), <br />orderby=%str(fsc, amt_app, FiscalYr, SP));<br />/*still have claims of different charges<br />e.g.<br />A056&nbsp&nbsp&nbsp&nbsp13.2 or 13.5 by&nbsp&nbsp&nbsp&nbspGP&nbsp&nbsp&nbsp&nbspin FY 2015<br />but maybe it is good enough, as the deviation in the same year is not that big<br />*/<br /><br /><br />/*another way, <br />what is the mean sd of charges by GP/SP by fsc fiscal years<br />*/<br />%GetMeanStats(<br />&nbsp&nbsp&nbsp&nbspdata=ZXA2a1, <br />&nbsp&nbsp&nbsp&nbspwhere=,<br />&nbsp&nbsp&nbsp&nbsptheVar=amt_app,<br />&nbsp&nbsp&nbsp&nbspgroupVars= fiscalyr fsc spec2,  <br />&nbsp&nbsp&nbsp&nbsptheStats=mean sd, <br />&nbsp&nbsp&nbsp&nbsptarget=ZXA3a, <br />&nbsp&nbsp&nbsp&nbspdebug=1,<br />&nbsp&nbsp&nbsp&nbsppersonID=<br />);<br /><br />/*Just to hypothesis, could it be that <br />&nbsp&nbsp&nbsp&nbspthe means of charge are sig dif between GP and SP<br />&nbsp&nbsp&nbsp&nbsp(by fiscal year, by fsc)<br />*/<br />/*<br />does it make sense to let charge predict SPEC?<br />is that a conditional log model (paired by fsc)<br />check the refereal fee code: 55B<br />*/<br />proc genmod data=ZXA2a1;<br />&nbsp&nbsp&nbsp&nbspwhere fsc='A110';<br />&nbsp&nbsp&nbsp&nbspclass key_doc_num key_hsn <br />&nbsp&nbsp&nbsp&nbsp fiscalyr (ref='2006') /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel SPEC2 (ref='GP') = amt_app fiscalyr;<br />&nbsp&nbsp&nbsp&nbsprepeated subject=key_doc_num ( key_hsn) /covb;<br />run;<br /><br />%distinct(data=ZXA2a1, target=test, vars=fsc);<br />%distinct(data=ZXA2a1, target=test2, vars=SPEC2, filters=%str(FSC= \"B005\" or FSC=\"B055\" ));<br />proc freq data=zxa2a1;<br />&nbsp&nbsp&nbsp&nbspwhere FSC= \"B005\" or FSC=\"B055\";<br />&nbsp&nbsp&nbsp&nbsptable  spec * fsc /nocol norow nopct;<br />run;<br />/*Bingo! B055 is for GPs to record that they had referred the patient to a specialist<br />&nbsp&nbsp&nbsp&nbsptheoretically it should only be claimed by GPs.<br />&nbsp&nbsp&nbsp&nbspIn the above, all claims with 'B055' are from a SPEC starting with 'B'. <br />&nbsp&nbsp&nbsp&nbspIt proves that spec starting with a 'B' are GPs. <br />*/<br /><br /><br /><br /><br /><br /><br />s///<br />t///"},{"idx":"CodeTask-IhdPqAjfbHPMkPbn","name":"L_LogisticModels - Copy","NodeDescription":"///t<br />///s<br />%print(data=localt.g);<br />%print(data=localt.d);<br />proc logistic data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1;<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365 t_visits_fw365 upcIndex_fw365 upRindex_fw365; <br />run;<br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1;<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_Pre365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_Pre365;<br />run;<br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand doc_fw365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365;<br />run;<br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand LastPEDoc_Pre365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') LastPEDoc_Pre365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=LastPEDoc_Pre365;<br />run;<br /><br /><br />proc genmod data=localt.G desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 t_statinRx_fw365 /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365;<br />run;<br />%print(data=localt.g);<br />%freq(data=localt.g, filters=%str(docPatterns='AAAA' and N_visits_fw365 > 1 and N_visits_pre365 > 1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand N_Statinrx_fw365 >1 and StatinDoc_FW365 ne ''), table=adherence);<br /><br />data L11;<br />&nbsp&nbsp&nbsp&nbspset localt.g;<br />&nbsp&nbsp&nbsp&nbspif docPatterns = 'AACD' and adherence=0;<br />run;<br /><br />%freq(data=L11, table=PrscrPattern);<br /><br /><br />data L12;<br />&nbsp&nbsp&nbsp&nbspset localt.g;<br />&nbsp&nbsp&nbsp&nbspif docPatterns = 'ABAA' and adherence=0;<br />run;<br /><br />%freq(data=L12, table=PrscrPattern);<br /><br />/*Poisson model*/<br />data L20;<br />&nbsp&nbsp&nbsp&nbspset localt.G;<br />&nbsp&nbsp&nbsp&nbsplogTime = log(daysOnmed + daysOffmed);<br />run;<br />proc genmod data=L20 desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_Statinrx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 doc_fw365 /param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel daysOnMed (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365 /*t_statinRx_fw365*/ <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=negbin offset=logTime  ; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365  ;<br />run;<br /><br />/*What predicts the pattern 'AAAA'*/<br />data L31;<br />&nbsp&nbsp&nbsp&nbspset localt.G;<br />&nbsp&nbsp&nbsp&nbspif DocPatterns = 'AAAA' then PatternOutcome = 1; else PatternOutcome=0;<br />&nbsp&nbsp&nbsp&nbspage = int(yrdif(birth, dqdate, \"AGE\"));<br />run;<br />%print(data=L31);<br />proc genmod data=L31 desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') doc_fw365 sex_desc (ref='M') qaippe (ref='1')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel PatternOutcome (ref='0') =  age sex_desc qaippe resitype /type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=doc_fw365;<br />run;<br /><br />proc genmod data=L31 desc;<br />&nbsp&nbsp&nbsp&nbspwhere N_visits_fw365 > 1 and N_visits_pre365 > 1 and N_StatinRx_fw365 >1 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand StatinDoc_FW365 ne '';<br />&nbsp&nbsp&nbsp&nbspclass DocPatterns (ref='AAAA') StatinDoc_FW365 sex_desc (ref='M') qaippe (ref='1')<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype (ref='URBAN')<br />/param=reference;<br />&nbsp&nbsp&nbsp&nbspmodel adherence (ref='0') = DocPatterns upcIndex_pre365 t_visits_pre365<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt_visits_fw365 upcIndex_fw365 upRindex_fw365  <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage sex_desc qaippe resitype&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=bin link=logit; <br />&nbsp&nbsp&nbsp&nbsprepeated subject=StatinDoc_FW365;<br />run;<br /><br /><br />s///<br />t///"},{"idx":"CodeTask-xSZTFg8HW5n1nVcn","name":"H_FFS Doc","NodeDescription":"///t<br />///s<br />/*H For the most freq prescriber, how many are fee-for-service(ffs), how many non-ffs*/<br />/*Those does not have service claims within the follow up*/<br /><br />/*%VbsUnzip(*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localdataPath.\\master_msb.zip),*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)*/<br />/*);*/<br /><br />/*Get the prescriber by index date*/<br />%print(data=localt.g);<br />%distinct(data=localt.G, target=h1, vars=%str(StatinDoc_FW365, dqdate, monotonic() as ID), filters=%str(statinDoc_Fw365 ne \"\"));<br /><br />/*for each doc-index, get the MSB claims of the same doc between 1 year before and after the index*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=h1,<br />&nbsp&nbsp&nbsp&nbspt2=master_msb,<br />&nbsp&nbsp&nbsp&nbsptarget=h2,<br />&nbsp&nbsp&nbsp&nbspvars=%str(*),<br />&nbsp&nbsp&nbsp&nbspjtype=left, <br />&nbsp&nbsp&nbsp&nbspjterm=%str(t1.StatinDoc_Fw365 = t2.key_doc_num),<br />&nbsp&nbsp&nbsp&nbspfilters=%str(t2.dos between t1.dqdate -365 and t1.dqdate +364)<br />);<br /><br />/*%vbsZip(*/<br />/*&nbsp&nbsp&nbsp&nbsptgtDir=%str(&localTargetPath), */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=h2.zip, */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=h2.sas7bdat, */<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=*/<br />/*);*/<br /><br />/*%VbsUnzip(*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\h2.zip),*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(h2.sas7bdat)*/<br />/*);*/<br /><br />/*count the number of claims for each specific doc-index case (# of claims within 2 years around index)*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=H2,<br />&nbsp&nbsp&nbsp&nbsptarget=h3,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, count(t1.StatinDoc_Fw365) as N_DocVisits),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate),<br />&nbsp&nbsp&nbsp&nbsporderby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate)<br />);<br /><br />/*distribution of N_DocVisits by each doc-index case*/<br />proc univariate data=h3;<br />&nbsp&nbsp&nbsp&nbsphistogram N_DocVisits /normal;<br />run;<br /><br />data h4;<br />&nbsp&nbsp&nbsp&nbspset h3;<br />&nbsp&nbsp&nbsp&nbsprename StatinDoc_Fw365=key_hsn;<br />run;<br />%GetMeanStats(<br />&nbsp&nbsp&nbsp&nbspdata=h4,<br />&nbsp&nbsp&nbsp&nbspwhere=,<br />&nbsp&nbsp&nbsp&nbspgroupVars=,<br />&nbsp&nbsp&nbsp&nbsptheVar=N_DocVisits,<br />&nbsp&nbsp&nbsp&nbsptheStats=min max mean std median p25 p50 p75 qrange,<br />&nbsp&nbsp&nbsp&nbspdebug=<br />);<br /><br />/*From H2, get the number of doc visits by mode (1 a FFS, others as NFFS)<br />*/<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=H2,<br />&nbsp&nbsp&nbsp&nbsptarget=h3a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, t1.Mode, count(t1.StatinDoc_Fw365) as N_DocClaims),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, t1.Mode),<br />&nbsp&nbsp&nbsp&nbsporderby=%str(t1.ID, t1.StatinDoc_Fw365, t1.dqDate, t1.Mode)<br />);<br /><br />/*from above, recode the Modes, mode =1 as FFS, others as NFFS*/<br />data H3b;<br />&nbsp&nbsp&nbsp&nbspset H3a;<br />&nbsp&nbsp&nbsp&nbspif Mode = \"1\" then FFS='FFS1'; else FFS='FFS0';<br />run;<br /><br />/*sum the doc claims by FFS*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=H3b,<br />&nbsp&nbsp&nbsp&nbsptarget=h3c,<br />&nbsp&nbsp&nbsp&nbspvars=%str( t1.StatinDoc_Fw365, t1.FFS, sum(t1.N_DocClaims) as N_DocClaims, count(ID) as Cases),<br />&nbsp&nbsp&nbsp&nbspgroupby=%str( t1.StatinDoc_Fw365,t1.FFS),<br />&nbsp&nbsp&nbsp&nbsporderby=%str( t1.StatinDoc_Fw365, t1.FFS)<br />);<br />/*N_DocClaims / Cases to have mean docClaims */<br />data H3d;<br />&nbsp&nbsp&nbsp&nbspset h3c;<br />&nbsp&nbsp&nbsp&nbspMean_DocClaims = int(N_DocClaims / Cases);<br />&nbsp&nbsp&nbsp&nbspdrop N_DocClaims Cases;<br />run;<br />/*transpose to put FFS 1 and 0 at the same row*/<br />%transpose(data=h3d, target=h3e, RowHead=StatinDoc_Fw365, ColHead=ffs, Contents=Mean_DocClaims, keepAllCol=);<br />data h3f;<br />&nbsp&nbsp&nbsp&nbspset h3e;<br />&nbsp&nbsp&nbsp&nbspif ffs0=. then ffs0=0;<br />&nbsp&nbsp&nbsp&nbspif ffs1=. then ffs1=0;<br />&nbsp&nbsp&nbsp&nbspFFSPCT = int (FFS1/sum(FFS0, FFS1) *100);<br />run;<br />/*have a histogram of % FFS for each doc*/<br />proc univariate data=h3f;<br />&nbsp&nbsp&nbsp&nbsphistogram FFSPCT /normal;<br />&nbsp&nbsp&nbsp&nbspods output histogramBins = H3g;<br />run;<br />/*seems that 60% having 99% of their services as FFS. 27% having 3% or less services as FFS. Others are in between<br />&nbsp&nbsp&nbsp&nbspSeems a good way to identify the FFS physicians<br />*/<br /><br /><br />/*# docs and pct of 'AAAA' (the fw365 doc)*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.g,<br />&nbsp&nbsp&nbsp&nbsptarget=h15a,<br />&nbsp&nbsp&nbsp&nbspvars=%str(doc_fw365, count(Key_hsn) as NPt ),<br />&nbsp&nbsp&nbsp&nbspgroupby=doc_fw365,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(doc_fw365 ne \"\" and docPatterns='AAAA')<br />);<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.g,<br />&nbsp&nbsp&nbsp&nbsptarget=h15b,<br />&nbsp&nbsp&nbsp&nbspvars=%str(doc_fw365, count(Key_hsn) as NPt ),<br />&nbsp&nbsp&nbsp&nbspgroupby=doc_fw365,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(doc_fw365 ne \"\" and adherence=1)<br />);<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localt.g,<br />&nbsp&nbsp&nbsp&nbsptarget=h16,<br />&nbsp&nbsp&nbsp&nbspvars=%str(doc_fw365, count(key_hsn) as TPt ),<br />&nbsp&nbsp&nbsp&nbspgroupby=doc_fw365,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(doc_fw365 ne \"\"  )<br />);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=h15a,<br />&nbsp&nbsp&nbsp&nbspt2=h16,<br />&nbsp&nbsp&nbsp&nbsptarget=h17,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.doc_fw365, t1.Npt, t2.TPt,  t1.Npt / t2.TPt *100 format 8.2 as AAAAPCT ),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=doc_fw365<br />);<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=h17,<br />&nbsp&nbsp&nbsp&nbspt2=h15b,<br />&nbsp&nbsp&nbsp&nbsptarget=h18,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.Npt as Npt_adh,  t2.Npt / t1.TPt *100 format 8.2 as AdhPCT ),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=doc_fw365<br />);<br /><br /><br /><br />proc univariate data=h18;<br />&nbsp&nbsp&nbsp&nbsphistogram AdhPCT AAAAPCT/normal;<br />run;<br />proc univariate data=h17;<br />&nbsp&nbsp&nbsp&nbsphistogram AdhPCT /normal;<br />run;<br /><br />/*the % of AAAA patients are quite skewed (there are a bunch of Drs having higher than average % of AAAA patients)*/<br />/*poisson? what predicts AAAA patients among doctors?*/<br />s///<br />t///"},{"idx":"CodeTask-vCOpZE73OY9t79ol","name":"T_Report DataSum into Xls","NodeDescription":"///t<br />///s<br />/*S export*/<br /><br />%SASToXlsRange(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_cover,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=cover, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />%SASToXlsRange(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=files, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />%SASToXlsRange(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_3,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=vars, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />%SASToXlsRange(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_4,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=missing, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br /><br />%SASToXlsRange(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_docslushcodes,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=docslushcodes, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />s///<br />t///"},{"idx":"CodeTask-tJhKkouTVvdrtAk4","name":"E_MSB UPC claims","NodeDescription":"///t<br>///s&nbsp;<br>/*Attach physicians to patients*/<br>data _null_ ;run;<br>/*%VbsUnzip(*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localdataPath.\\master_msb.zip),*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(master_msb.sas7bdat)*/<br>/*);*/<br><br>/*1. MSB claims of patients in the cohort*/<br>/*%VbsUnzip(*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtDir=,*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipFile=%str(&amp;localDataPath.\\master_cohort.zip),*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcFile=%str(master_cohort.sas7bdat)*/<br>/*&nbsp;&nbsp;&nbsp;&nbsp;);*/<br>/*%print(data=master_cohort);*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=master_msb,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=master_cohort,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=E1,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(t1.*, t2.dqdate, t2.birth, t2.Qaippe, t2.resitype, t2.sex_desc),<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=inner,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn<br>);<br><br>/*2. from above, get claims not missing doc number, and not from a slush code*/<br>data E2;<br>&nbsp;&nbsp;&nbsp;&nbsp;set E1;<br>&nbsp;&nbsp;&nbsp;&nbsp;where key_doc_num ne '' and DocSlushCode ne \"Y\";<br>run;<br><br>/*test. check data, is the any slush codes<br>&nbsp;&nbsp;&nbsp;&nbsp;the following has been tested, using the slushdoc from the physicina panel project<br>&nbsp;&nbsp;&nbsp;&nbsp;none of the slush code were included in E2<br>*/<br>/*<br>%let slushdoc='76925314678', '36825374671', '52825354677', '66925324672', '38825384673', '52825354672', <br>'35925334677', '00825374673', '32825384674', '79825354677', '42925314672', '14925324671', '74825384673', <br>'95825354670', '86825364672', '95925344676', '03925304670', '59925304677', '96925314677', '36925314674', <br>'96925314672', '62825364671', '28925304679', '82825394672', '43925314674', '13825364672', '31925324677', <br>'48925314670', '05825364678', '17825354674', '13925304670', '82825384679', '27825354670', '19825374671', <br>'45925304670', '07925304677', '05925344673', '64925344674', '25925304675', '95925314671', '05825354679', <br>'64925304678', '26925334671', '80925334670', '87925304678', '53825394678', '17825344678', '52925304678', <br>'61825384670', '17825374676', '31825374679', '29825354679', '41925304676', '01825374674', '24825364678', <br>'11345384672', '91925324677', '87825394671', '81925304678', '74925304674', '78925334671', '01825354674', <br>'58825374670', '83925324670', '34825364677', '58925324670', '53825384670', '27825344678', '48925314676', <br>'37825364674', '31925324675', '56925304672', '95925344670', '02825384671', '81825354676', '22925304670', <br>'51825394672', '95925304677', '84825354674', '74925314673', '06825384675', '39825344678', '99825374677', <br>'35925304676', '73825364675', '14925304678', '14825354671', '14925314673', '76825364676', '88925314677', <br>'76825374677', '23825374672', '74825384670', '07925334671', '71825364676', '24925304677', '11925324678', <br>'49925334678', '31925324674', '80925314677', '91825364675', '11825374679', '55925324679', '99925304678', <br>'35825374676', '10925314671', '22825394677', '93825394679', '26925314679', '59825344671', '27825384672', <br>'12925304677', '42925304671', '16825364671', '24925304679', '82925314676', '17925314671', '04825394674', <br>'16825344676', '33925344675', '01825394671', '28925314674', '18825354679', '25925344671', '01825354670', <br>'93925304677', '47925334678', '37925334676', '01825364673', '75925324675', '85925314673', '35925334678', <br>'24825364679', '90925304671', '73925324677', '76825374671', '83825354675', '74825374672', '77925314672', <br>'50925324674', '05925324670', '20925304670', '06825354674', '42825364678', '88825354673', '81825364678', <br>'23925314673', '24925334677', '99825394677', '94825374674', '08825374674', '87925324675', '06925304678', <br>'84825384672', '19825344672', '28825394679', '53925334671', '05925334676', '81925314671', '64825354676', <br>'28825394673', '22925314674', '38825394679', '57925324671', '46925334672', '92925334678';<br>*/<br>/*<br>data test;<br>&nbsp;&nbsp;&nbsp;&nbsp;set E2;<br>&nbsp;&nbsp;&nbsp;&nbsp;where key_doc_num in (&amp;slushdoc) and DocSlushCode = 'N;<br>&nbsp;&nbsp;&nbsp;&nbsp;keep key_hsn key_doc_num;<br>run;<br>*/<br><br>/*3a. From above, get claims with 365 days prior to the index(dqdate) */<br>data E3a;<br>&nbsp;&nbsp;&nbsp;&nbsp;set E2;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between dqdate - 365 and dqdate -1;<br>run;<br><br>/*3b. calculate the UPC index*/<br>%getUPCIndex(<br>&nbsp;&nbsp;&nbsp;&nbsp;data=E3a, <br>&nbsp;&nbsp;&nbsp;&nbsp;target=E3,<br>&nbsp;&nbsp;&nbsp;&nbsp;InPatientLOS = %str('B', '2', 'K', '9'), <br>&nbsp;&nbsp;&nbsp;&nbsp;outProvMode = %str('Z'),<br>&nbsp;&nbsp;&nbsp;&nbsp;InterestedSPEC = %str('B', 'CL', 'WB')<br>);<br><br>/*4a. From above, get claims with 365 days since the index(dqdate) */<br>data E4a;<br>&nbsp;&nbsp;&nbsp;&nbsp;set E2;<br>&nbsp;&nbsp;&nbsp;&nbsp;where DOS between dqdate  and dqdate + 365;<br>run;<br><br>/*4b. calculate the UPC index*/<br>%getUPCIndex(<br>&nbsp;&nbsp;&nbsp;&nbsp;data=E4a, <br>&nbsp;&nbsp;&nbsp;&nbsp;target=E4,<br>&nbsp;&nbsp;&nbsp;&nbsp;InPatientLOS = %str('B', '2', 'K', '9'), <br>&nbsp;&nbsp;&nbsp;&nbsp;outProvMode = %str('Z'),<br>&nbsp;&nbsp;&nbsp;&nbsp;InterestedSPEC = %str('B', 'CL', 'WB')<br>);<br><br>/*5. combine E3 and E4*/<br>%sqljoinv2(<br>&nbsp;&nbsp;&nbsp;&nbsp;t1=E3,<br>&nbsp;&nbsp;&nbsp;&nbsp;t2=E4,<br>&nbsp;&nbsp;&nbsp;&nbsp;target=localt.E,<br>&nbsp;&nbsp;&nbsp;&nbsp;vars=%str(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.key_hsn,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.dqdate,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.key_doc_num as doc_pre365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.spec as spec_pre365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.N_visits as N_visits_pre365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.T_visits as T_Visits_pre365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.UpcIndex as UPCIndex_pre365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t2.key_doc_num as doc_fw365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t2.spec as spec_fw365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t2.N_visits as N_visits_fw365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t2.T_visits as T_Visits_fw365,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t2.UpcIndex as UPCIndex_fw365, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ifn(t1.key_doc_num = t2.key_doc_num, 1,0) as sameDocPreFw<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;jtype=left,<br>&nbsp;&nbsp;&nbsp;&nbsp;jvars=key_hsn&nbsp;&nbsp;&nbsp;&nbsp;<br>);<br>%freq(data=localt.E, table=sameDocPreFw);<br><br><br>s///<br>t///"},{"idx":"CodeTask-WFWjsbb3S4nUSJrU","name":"F_MSB_PE_Provider","NodeDescription":"///t<br />///s<br />/*F. the annual physician examination provider<br />&nbsp&nbsp&nbsp&nbspthe FSC codes for annual physician examination are<br />&nbsp&nbsp&nbsp&nbsp'B003' 'B064' 'B052' 'B004'<br />*/<br />%let PEFeeCodes =&nbsp&nbsp&nbsp&nbsp'B003' 'B064' 'B052' 'B004';<br /><br />/*%VbsUnzip(*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localdataPath.\\master_msb.zip),*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)*/<br />/*);*/<br /><br />/*1. MSB claims of patients in the cohort*/<br />/*%VbsUnzip(*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_cohort.zip),*/<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_cohort.sas7bdat)*/<br />/*&nbsp&nbsp&nbsp&nbsp);*/<br />/*%print(data=master_cohort);*/<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=master_msb,<br />&nbsp&nbsp&nbsp&nbspt2=master_cohort,<br />&nbsp&nbsp&nbsp&nbsptarget=F1,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dqdate),<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(key_doc_num ne '' and DocSlushCode ne \"Y\")<br />);<br /><br />/*From above, select claims before the index date (DQdate). These are MSB claims <br />&nbsp&nbsp&nbsp&nbspwithin 1 years prior to the index*/<br />data F2;<br />&nbsp&nbsp&nbsp&nbspset F1;<br />&nbsp&nbsp&nbsp&nbspif dqdate -365 le dos < dqdate;<br />run;<br /><br />/*From above select claims for annual physical check up*/<br />data F3;<br />&nbsp&nbsp&nbsp&nbspset F2;<br />&nbsp&nbsp&nbsp&nbspif FSC in (&PEFeeCodes);<br />run;<br /><br />/*sort by DOS and keep the physician who submitted the last PE check up for the cohort patient*/<br />%sort(data=F3, sorter=key_hsn descending dos);<br />data F4a;<br />&nbsp&nbsp&nbsp&nbspset F3;<br />&nbsp&nbsp&nbsp&nbspby key_hsn descending dos;<br />&nbsp&nbsp&nbsp&nbspif first.key_hsn then PEOrder=1;<br />&nbsp&nbsp&nbsp&nbspelse PEOrder +1;<br />run;<br />data F4;<br />&nbsp&nbsp&nbsp&nbspset F4a;<br />&nbsp&nbsp&nbsp&nbspif PEOrder=1;<br />&nbsp&nbsp&nbsp&nbspkeep key_hsn key_doc_num dos;<br />&nbsp&nbsp&nbsp&nbsprename key_doc_num = LastPEDoc_Pre365 dos=lastPEDate_prior;<br />run;<br /><br />/*link to localT.E, to add the last PE doc <br />&nbsp&nbsp&nbsp&nbspthe target set contains the most frequently visited doc prior to the index, during follow up, and the last PE<br />*/<br />%print(data=localt.E);<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=localT.E,<br />&nbsp&nbsp&nbsp&nbspt2=F4,<br />&nbsp&nbsp&nbsp&nbsptarget=F5,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.LastPEDoc_Pre365, t2.LastPEDate_Prior),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn <br />);<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=F5,<br />&nbsp&nbsp&nbsp&nbspt2=master_cohort,<br />&nbsp&nbsp&nbsp&nbsptarget=F6,<br />&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dqdate, t2.birth, t2.Qaippe, t2.resitype, t2.sex_desc),<br />&nbsp&nbsp&nbsp&nbspjtype=left,<br />&nbsp&nbsp&nbsp&nbspjvars=key_hsn <br />);<br /><br />/*&nbsp&nbsp&nbsp&nbspindicate the most freq visited docs in prior365, during follow up, and the last PE provider*/<br />data localt.F;<br />&nbsp&nbsp&nbsp&nbspset F6;<br />&nbsp&nbsp&nbsp&nbspif doc_pre365 =\"\" then Doc1=\"_\";<br />&nbsp&nbsp&nbsp&nbspelse Doc1=\"A\";<br />&nbsp&nbsp&nbsp&nbspif doc_fw365 = \"\" then Doc2=\"_\";<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif doc_fw365 = doc_pre365 then Doc2=\"A\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse Doc2=\"B\";<br />&nbsp&nbsp&nbsp&nbspend;<br />if LastPEDoc_Pre365=\"\" then Doc3=\"_\";<br />&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LastPEDoc_Pre365 = doc_pre365 then Doc3=\"A\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LastPEDoc_Pre365 = doc_fw365 then Doc3=\"B\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse Doc3=\"C\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbspDocPatterns = strip(Doc1) || Strip(Doc2) || Strip(Doc3);<br />&nbsp&nbsp&nbsp&nbspdrop doc1 doc2 doc3;<br />run;<br />%freq(data = localt.F, table=DocPatterns);<br /><br />s///<br />t///"}]},{"idx":"Note-DQP9zFTPng4Ckh6G","name":"Note","NodeDescription":"///t<br />Setting&nbspthe&nbsplocal&nbspand&nbspremote&nbspenvironment&nbsp(variables,&nbsplibnames,&nbspetc)<br />t///","children":[{"idx":"Note-rwLAVc2OUTDR9VJn","name":"Note - Copy","NodeDescription":"///t<br />From&nbspthe&nbspdp&nbspdata,&nbspget&nbspthose&nbspreceiving&nbspstatins&nbspbetween&nbsp01Jan2011&nbspand&nbsp31Dec2015&nbsp(that&nbspway&nbsppatient&nbspwill&nbspbe&nbspable&nbspto&nbspbe&nbsplook&nbspback&nbspfor&nbsp5&nbspyears,&nbspand&nbspfollowed&nbspfor&nbsp2&nbspyears)<br />t///"}]},{"idx":"MY79cc50ec-e4b3-41d1-acf4-9bc94042ee41","name":"Tools and preparations","children":[{"idx":"Note-AFXFDtD6Jhi5M2bS","name":"Learnings","NodeDescription":"///t<br />Leanring%sqljoinv2(t1=msbzzb,target=ZZD0,distinct=1,vars=%str(key_hsn,&nbspkey_doc_num,&nbspdos,&nbsp&nbspifc(t1.mode='1',&nbsp'FFS',&nbsp'NFFS'&nbsp)&nbspas&nbspPayMode&nbsplength=4),filters=%str(num_srv&nbspne&nbsp0and&nbspLOS&nbspNOT&nbspin&nbsp('B','2','K','9')and&nbspMODE&nbspne&nbsp'Z'));note,&nbspit&nbspdoes&nbspnot&nbspwork&nbspto&nbspset&nbsplength&nbspby&nbspformat&nbsp$4.&nbspas&nbsppaymode.&nbspThe&nbsplength&nbspwill&nbspyet&nbspbe&nbsp200.Instead,&nbspshould&nbspset&nbspthe&nbsplength=4<br />t///"},{"idx":"CodeTask-bcqKjfzgshVbRL4v","name":"studyOHDINs","NodeDescription":"///t<br />///s<br />/*Making Study DINS*/<br />data _null_; run;<br />/*Oral Hyperglycermics (OH) (AHFS 68:20:20, and with statin in the generic names)*/<br /><br />/*get all DINs from the cleanned allDIN file*/<br />/*the problem is that in both of the following file, there is no AHFS class (maybe because AHFS class is not unique <br />&nbsp&nbsp&nbsp&nbspand will cause dup of DINs)*/<br />/*%print(data = clean18.alldin_4_jas18_15oct2018);*/<br />/*%print(data = hqc.dp_drug);*/<br />/*%print(data=hqc.dp_claim);*/<br /><br />/*get the dins from dp_claim, if with AHFS of 68:20:20*/<br />%distinct(source=hqc.dp_claim, target=_tmp1, vars=DIN, filters=%str(mjr_clss = '068' and mnr_clss='20' and sub_clss='20'));<br />/*get the dins from dp_claim_non_ben, if with AHFS of 68:20:20*/<br />%distinct(source=hqc.dp_claim_non_ben, target=_tmp2, vars=DIN, filters=%str(mjr_clss = '068' and mnr_clss='20' and sub_clss='20'));<br />/*merge the above two to have a distince DIN list*/<br />data _tmp3;<br />&nbsp&nbsp&nbsp&nbspset _tmp1 _tmp2;<br />run;<br />%distinct(data=_tmp3, target=_tmp4, vars=DIN);<br /><br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1= clean18.alldin_4_jas18_15oct2018,<br />&nbsp&nbsp&nbsp&nbspt2=_tmp4,<br />&nbsp&nbsp&nbsp&nbsptarget=remoteT.ohdins,<br />&nbsp&nbsp&nbsp&nbspvars=t1.*,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspjvars=DIN,<br />&nbsp&nbsp&nbsp&nbspjtype=inner<br />);<br />/*167*/<br /><br />/*double check to ensure that there is no dup dins in remotetT.AHTNDINs*/<br />%distinct(data=remoteT.ohdins, target=_tmp5, vars=DIN);<br />%freq(data=remoteT.ohdins, table=gen_name);<br />/*n=167, there is no dup DINs*/<br /><br />s///<br />t///","children":[{"idx":"EGTask-OC42bAXMm7V8rMsY","name":"CopyDINS_ohdins","custparents":[{"idx":"CodeTask-bcqKjfzgshVbRL4v"}]}]},{"idx":"CodeTask-cb1xaxfzL97QcEcF","name":"StudyAHTNDINs","NodeDescription":"///t<br />///s<br />/*Making Study DINS, the blood pressure lowering agents<br />&nbsp&nbsp&nbsp&nbspin the AEC-I, and ARB class<br />*/<br />data _null_;run;<br /><br />/*AEC-I and ARBs (AHFS 24:08:00, and with 'pril' 'sartan' in the generic names)*/<br /><br />/*get all DINs from the cleanned allDIN file*/<br />/*the problem is that in both of the following file, there is no AHFS class (maybe because AHFS class is not unique <br />&nbsp&nbsp&nbsp&nbspand will cause dup of DINs)*/<br />/*%print(data = clean18.alldin_4_jas18_15oct2018);*/<br />/*%print(data = hqc.dp_drug);*/<br />/*%print(data=hqc.dp_claim);*/<br /><br />/*get the dins from dp_claim, if with AHFS of 24:08*/<br />%distinct(source=hqc.dp_claim, target=AHTNDINs_tmp1, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='08'));<br />/*get the dins from dp_claim_non_ben, if with AHFS of 24:08*/<br />%distinct(source=hqc.dp_claim_non_ben, target=AHTNDINs_tmp2, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='08'));<br />/*merge the above two to have a distince DIN list*/<br />data AHTNDINs_tmp3;<br />&nbsp&nbsp&nbsp&nbspset AHTNDINs_tmp1 AHTNDINs_tmp2;<br />run;<br />%distinct(data=AHTNDINs_tmp3, target=AHTNDINs_tmp4, vars=DIN);<br /><br /><br />/*the above DINS are of AHFS 24:08, but not all are ACEI/ARB, those ARCE/ARB <br />&nbsp&nbsp&nbsp&nbspmust have a genetic name containing 'pril' or 'sartan'*/<br />/*get the DINs if the generic name contains statin*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1= clean18.alldin_4_jas18_15oct2018,<br />&nbsp&nbsp&nbsp&nbspt2=AHTNDINs_tmp4,<br />&nbsp&nbsp&nbsp&nbsptarget=remoteT.AHTNDINs,<br />&nbsp&nbsp&nbsp&nbspvars=t1.*,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspjvars=DIN,<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(index(upcase(gen_name), \"PRIL\") ne 0<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex(upcase(gen_name), \"SARTAN\") ne 0<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />);<br />/*n=723*/<br />/*double check to ensure that there is no dup dins in remotetT.AHTNDINs*/<br />%distinct(data=remoteT.AHTNDINs, target=AHTNDINs_tmp5, vars=DIN);<br />%freq(data=remoteT.AHTNDINs, table=gen_name);<br />/*n=723, there is no dup DINs*/<br />s///<br />t///","children":[{"idx":"EGTask-rdbuB2eZxzMerMhF","name":"CopyDINS_AHTNs","custparents":[{"idx":"CodeTask-cb1xaxfzL97QcEcF"}]}]},{"idx":"CodeTask-7bnUtUXU7R2nqpvh","name":"make PIMs","NodeDescription":"///t<br />///s<br />/*Make PIM DINs*/<br />/*&nbsp&nbsp&nbsp&nbspthese drugs including, Anticholinergics, antipsychotics, antidepressants, Benzodiazpines<br />&nbsp&nbsp&nbsp&nbspDINs were provided by Laura in the dropbox, also copied to P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS<br />&nbsp&nbsp&nbsp&nbspDINS were imported by the program makePIMs&nbsp&nbsp&nbsp&nbsp<br />*/<br />data _null_;run;<br /><br />/*Antidepressants*/<br />%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\DIN List Antidepressants.xlsx);<br />data PIMs1;<br />&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&thePIMxlsFile\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=PIMs1 (<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"Drugs\";<br />run;<br />%print (data=PIMs1);<br /><br />/*BENZO*/<br />%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\PIM drugs in dementia - Beers 2015 for Sask.xlsx);<br />data PIMs2;<br />&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&thePIMxlsFile\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=PIMs2 (<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"BENZO\";<br />run;<br />%print (data=PIMs2);<br /><br />/*PSYCHO*/<br />%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\PIM drugs in dementia - Beers 2015 for Sask.xlsx);<br />data PIMs3;<br />&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&thePIMxlsFile\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=PIMs3 (<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"PSYCHO\";<br />run;<br />%print (data=PIMs3);<br /><br />/*ANTICHO*/<br />%let thePIMxlsFile =%str(P:\\Frailty(MaxwellC)_Bio43\\Documentation\\Doc from ON team\\PIM and ChEI DINS\\PIM drugs in dementia - Beers 2015 for Sask.xlsx);<br />data PIMs4;<br />&nbsp&nbsp&nbsp&nbspformat DIN1 8. genName $100. DIN $8. class $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&thePIMxlsFile\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=PIMs4(<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= DIN genname class<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"ANTICHO\";<br />run;<br />%print (data=PIMs4);<br /><br />data PIMS_all;<br />&nbsp&nbsp&nbsp&nbspset PIMs1  PIMs2 PIMs3 PIMs4;<br />run;<br /><br />/*sort and remove the dup DINS per class*/<br />%sort(data=PIMS_all, sorter=class DIN);<br />data localt.PIMs;<br />&nbsp&nbsp&nbsp&nbspset PIMS_all;<br />&nbsp&nbsp&nbsp&nbspby class DIN;<br />&nbsp&nbsp&nbsp&nbspif first.DIN;<br />run;<br /><br />s///<br />t///"},{"idx":"CodeTask-MFaCVD2HKG8H2ZiE","name":"MyMacros"},{"idx":"CodeTask-b3OezYBUd9h9Xqga","name":"escape","NodeDescription":"///t<br />///s<br />/*data x;a=1;run;*/<br />);<br /><br />s///<br />t///"},{"idx":"CodeTask-nFFfnUzpOAcAde3z","name":"Beep","NodeDescription":"///t<br />///s<br />%beep;<br />s///<br />t///"},{"idx":"CodeTask-zlO9ztVQoMSivIaE","name":"Test_remote","NodeDescription":"///t<br />///s<br /><br />s///<br />t///"},{"idx":"CodeTask-q65h3IrNGuXafJ8T","name":"Test_local","NodeDescription":"///t<br />///s<br /><br />s///<br />t///"},{"idx":"CodeTask-cgblpitkLXgBWLXi","name":"UPC code","NodeDescription":"///t<br />///s<br />/*from:<br />Z:\\My Project\\Projects\\PhD Thesis\\SAS code\\Master code - UPC (Sept 2014).sas<br />*/<br /><br /><br />/***************************************************************************************************  <br /> *   Programmer: Beliz Acan Osman with reference methodology from CIHI Continuity of PHC study, SK  *                                                  &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br /> *   Date: July 2013                                           &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp                            *<br /> *   Project: Primary Health Care Hoshin - Patient Connetedness- CHRONIC DISEASE PROFILES           *<br /> *   Purpose: This code extracts physician information for the chronic disease cohorts &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br /> *&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof SK FY 2006-2013 and in &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br /> *   investigates the contunity of the care provided by GPs and NPs&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*<br /> ****************************************************************************************************/<br />* Jan 2018<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.Used most upto date MSB & PHRS & Death & Doc Num files<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Mode = Z codes are excluded from UPC calculation - New Knowledge: these codes represent out of province claims<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3. could not complete the ACSC specific UPC calculation as we are not calculating incidence/prevalence for ACSC conditions anymore.<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTalked with Patrick about this January 9th. He will decide whether we should leave it as is or continue with inc/prev analysis.<br /><br />* April 2017<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.Used most upto date MSB & PHRS & Death & Doc Num files<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Mode = Z codes are excluded from UPC calculation - New Knowledge: these codes represent out of province claims<br /><br />* Jan 2016<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.Took out the clinic piece we will not provide that this wall walk.<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Used most upto date MSB & PHRS & Death & Doc Num files<br /><br />* Sept 2015 PLT Wall Walk - Notes by Meric Osman & Beliz Acan Osman<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. UPC by Clinic added. 2 sets of results,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. UPC by physician (same as before)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. UPC by clinic (new) - see code Master Code - UPC_by_clinic (Aug 2015)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2.Used most upto date MSB & PHRS & Death & Doc Num files<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br /><br />* June 2015 PLT Wall Walk - Notes by Meric Osman<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. Used most upto date MSB & PHRS file<br /><br />* April 2015 PLT Wall Walk - Notes by Meric Osman<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. Used most upto date MSB & PHRS file<br /><br />Old notes;<br />* December 2014 RUN for January 2015 PLT Wall Walk - Notes by Meric Osman<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. Additional slush numbers have been acquired and used (see below),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2. Minor bug fixes.<br /><br /><br />* August-September 2014 RUN for October 2014 PLT Wall Walk - Notes by Meric Osman<br /><br />Changes/Updates (during Beliz's maternity leave)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1. New MSB data has been acquired by HQC. This data includes physician specialty<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2. As the physician specialty information is already in the data - DOC FILE is not being used<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3. Previously, MSB extracted from 2006, however only last 3-4 years of inforamtion is needed (informed by team), thus shorter extraction (Apr 2010 onwards) has been done.<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4. Out of province DOC numbers are for SAS flat files (not for the ORACLE MSB file), thus not used (see below).<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp5. Most upto date PHRS, Death files...etc. have been used (see below).<br /><br /><br /><br />*MACROS;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas';&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%INCLUDE '/SAS_data/dw0/HQC_share/Meric/calc_age_discr.sas';&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br /><br />&nbsp&nbsp&nbsp&nbsp<br />*DATASETS;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let death_file &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= clean17.verf_dths_3_jfm17_01nov2017;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let phrs_res&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp= clean17.phrs_pers_resc_4_jas17_01dec2017;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let geo_file&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= clean17.phrs_pers_resc_4_jas17_01dec2017;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br /><br />* EXCLUSIONS;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let in_patient&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= 'B' '2' 'K';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*Slush codes are added from clean.Physician #s for Slush codes (new).txt;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let slush&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= '76925314678' '36825374671' '52825354677' '66925324672' '38825384673' '52825354672' '35925334677' '00825374673' '32825384674' '79825354677' '42925314672' '14925324671'<br />'74825384673' '95825354670' '86825364672' '95925344676' '03925304670' '59925304677' '96925314677' '36925314674' '96925314672' '62825364671' '28925304679' '82825394672'<br />'43925314674' '13825364672' '31925324677' '48925314670' '05825364678' '17825354674' '13925304670' '82825384679' '27825354670' '19825374671' '45925304670' '07925304677'<br />'05925344673' '64925344674' '25925304675' '95925314671' '05825354679' '64925304678' '26925334671' '80925334670' '87925304678' '53825394678' '17825344678' '52925304678'<br />'61825384670' '17825374676' '31825374679' '29825354679' '41925304676' '01825374674' '24825364678'<br />'11345384672' '91925324677' '87825394671' '81925304678' '74925304674' '78925334671' '01825354674' '58825374670' '83925324670' '34825364677' '58925324670' '53825384670' <br />'27825344678' '48925314676' '37825364674' '31925324675' '56925304672' '95925344670' '02825384671' '81825354676' '22925304670' '51825394672' '95925304677' '84825354674' <br />'74925314673'<br />'06825384675' '39825344678' '99825374677' '35925304676' '73825364675' '14925304678' '14825354671' '14925314673' '76825364676' '88925314677' '76825374677' '23825374672'<br />'74825384670' '07925334671' '71825364676' '24925304677' '11925324678' '49925334678' '31925324674' '80925314677' '91825364675' '11825374679' '55925324679' '99925304678'<br />'35825374676' '10925314671' '22825394677' '93825394679' '26925314679' '59825344671' '27825384672' '12925304677' '42925304671' '16825364671' '24925304679' '82925314676'<br />'17925314671' '04825394674' '16825344676' '33925344675' '01825394671' '28925314674' '18825354679' '25925344671' '01825354670' '93925304677' '47925334678' '37925334676'<br />'01825364673' '75925324675' '85925314673' '35925334678' '24825364679' '90925304671' '73925324677' '76825374671' '83825354675' '74825374672' '77925314672' '50925324674'<br />'05925324670' '20925304670' '06825354674' '42825364678' '88825354673' '81825364678' '23925314673' '24925334677' '99825394677' '94825374674' '08825374674' '87925324675'<br />'06925304678' '84825384672' '19825344672' '28825394679' '53925334671' '05925334676' '81925314671' '64825354676' '28825394673' '22925314674' '38825394679' '57925324671'<br />'46925334672' '92925334678';<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let mode_exc = 'Z';*NEW - April 2017;<br /><br />*LIBRARIES;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname phc &nbsp&nbsp&nbsp&nbsp'/SAS_data/dw0/HQC_share/Beliz/continuity/Jan 2018';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />*needed library for SASApp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname hqc meta library=\"HQC\";<br /><br />*DISEASE COHORTS;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname copd   '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/COPD';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname asthma '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/Asthma';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname chf    '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/CHF';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname cad    '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/CAD';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname dm     '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/DM';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplibname mood   '/SAS_data/dw0/HQC_share/Shan/ACSC/17 Nov/Data/Mood';<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoptions mprint nosymbolgen nomlogic;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoption compress=Y;<br /><br /><br />options nosymbolgen nomlogic nomprint;<br /><br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*****************************************************************************************************/<br /><br /><br /><br /><br />%let phc_dos_start &nbsp&nbsp&nbsp&nbsp= '01Apr2010'd;<br />%let phc_dos_end &nbsp&nbsp&nbsp&nbsp= '30SEP2017'd;<br /><br /><br /><br />%Extract_MSB(<br />   &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp=&nbsp&nbsp&nbsp&nbspmsb_extract,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp'31MAR2011'd,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp'19SEP2017'd,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdostart&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp&phc_dos_start,<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp    dosend&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &nbsp&nbsp&nbsp&nbsp&phc_dos_end);*-Jan 2018:79,756,277, Apr2017: 73,926,659, -JuneWW16 62,303,134, -JanWW16 59,682,474- , JuneWW15 - 54,106,206;<br /><br />proc sql;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   select min(dos_1) as earliest format=date9., max(dos_1) as latest format=date9. <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   from msb_extract;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp quit;*(01Apr2010 , 12Sep2017);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp <br />* Do a nodupkey - Only important thing for PHC is having the \"Record of Visit\" not the individual claims;<br />proc sort data=msb_extract nodupkey out=msb_extract_nodup_all; by key_hsn dos_1 key_doc_num spec; run;*jan 2018-57,471,158 ,apr2017-53,370,242, june2016-45150575,Jan16-43,276,407--39,312,813;<br /><br />*Note:&nbsp&nbsp&nbsp&nbspThere is no case that num_srv = 0 - HQC does not receive those claims (deleted at the source by eHealth)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAssume all spec's starting with B (%72.13) as BB and also keep the pediatricians with couple exlusions, and WB - nurse practitioners (per CIHI),<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDelete slush physician numbers & (NEW) out of province claims through mode = Z&nbsp&nbsp&nbsp&nbsp<br /> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRemember, in_patient&nbsp&nbsp&nbsp&nbsp= 'B' '2' 'K' (will be deleted);<br /><br />proc freq data = msb_extract_nodup_all;table num_srv; run;<br /><br />*There will be another exclusion in later steps regarding pediatricians and patient's age;<br /><br />data msb_extract_nodup; set msb_extract_nodup_all;<br /><br />*apr2017 run had missing key_hsn - deleted;<br />if key_hsn=\"\" then delete;<br />if num_srv = 0 then delete;<br />if los in:(&in_patient) then delete;<br />if key_doc_num in:(&slush) then delete;<br />if spec not in: ('B','C','WB') then delete;<br />if substr(spec,1,1)='C' and ~(substr(fsc,1,1) not in ('B','C')) then delete;<br />if mode in:(&mode_exc) then delete;<br /><br />*fy;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp if '01APR2010'd LE dos_1 LE '31MAR2011'd then fy = 'FY2010/11';&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbspelse if '01APR2011'd LE dos_1 LE '31MAR2012'd then fy = 'FY2011/12';<br />&nbsp&nbsp&nbsp&nbspelse if '01APR2012'd LE dos_1 LE '31MAR2013'd then fy = 'FY2012/13';<br />&nbsp&nbsp&nbsp&nbspelse if '01APR2013'd LE dos_1 LE '31MAR2014'd then fy = 'FY2013/14';<br />&nbsp&nbsp&nbsp&nbspelse if '01APR2014'd LE dos_1 LE '31MAR2015'd then fy = 'FY2014/15';<br />&nbsp&nbsp&nbsp&nbspelse if '01APR2015'd LE dos_1 LE '31MAR2016'd then fy = 'FY2015/16';<br />&nbsp&nbsp&nbsp&nbspelse if '01APR2016'd LE dos_1 LE '31MAR2017'd then fy = 'FY2016/17';<br />&nbsp&nbsp&nbsp&nbspelse if '01APR2017'd LE dos_1 LE '31MAR2018'd then fy = 'FY2017/18';<br />rename xtrc_date=xtrc_date_msb;<br />&nbsp&nbsp&nbsp&nbsp<br />run;*Jan 2018-7271258,apr2017-34,698,104 -- jun16-29,523,814--jan16  28,294,478--25,747,453;<br />proc freq data=msb_extract_nodup; table fy spec num_srv los;run;<br /><br />/*1b. Add demographic information (RHA at time of service)*/<br /><br />%demog_assign(prs_xtrc_dt='02OCT2017'd,<br />                   ds_in &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= msb_extract_nodup,<br />                   ds_out&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= cohort_master_apr17, <br />                   strt_dt_var&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= dos_1,<br />                   end_dt_var&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= dos_1,<br />                   geo_file&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp= &geo_file,<br />incl_full_info=N);*34,698,104;<br /><br />proc freq data=cohort_master_apr17; table sex_desc rha;run;<br /><br />* Remove key_hsn's that we can NOT find in PHRS - 5,849 visits (previously - 1,084 visits);<br />* 34,607 times an RHA can NOT be assigned to a key_hsn - keep them for now;<br /><br />data cohort_master_apr17_1; set cohort_master_apr17;<br /><br />if sex_desc = ''  then delete;<br />if sex_desc&nbsp&nbsp&nbsp&nbsp= 'M' then male=1; else male=0;<br /><br />rename rha = rha_index;<br /><br />drop tot_days mindiff_rha rhadays rhadiff mindiff_urb_rur urdays urdiff;<br />run;* 37269992 (1266 visits dropped);<br />proc freq data=cohort_master_apr17_1;table fy sex_desc male rha_index;run;*28,758 missing RHA (apr2017), 35,499 missing rha--27,920 Rha cannot be assigned (roughly 10,000 people);<br /><br /><br />/*add age at date of service */<br />* Note: There are handful of patients receiving services after their death date - very few thus not investigating - consider for future;<br /><br />%calc_age_discr(ds_in=cohort_master_apr17_1,ds_out=cohort_master_1,refday_var=dos_1,agevar=age);<br /><br />proc freq data=cohort_master_1; table age;run;* No missing age;<br /><br />/*manipulate variables*/<br /><br />* NOTE: There are some patients where best_dt < 01Apr2010, however, there are claims indicating that they have seen a physician after 01Apr2010 -  keep them (<1000 cases);<br /><br />data phc.cohort_master_3; set cohort_master_1;<br /><br />* Delete pediatrician claims if the patients is 18 and older;<br />if age >= 18 and substr(spec,1,1)='C' then delete;<br /><br />*For UPC calculation;<br />n = 1;<br /><br />run;*34,692,255;<br />proc freq data=phc.cohort_master_3; table n fy los;run;<br />proc freq data=phc.cohort_master_3; table age; where substr(spec,1,1)='C';run;<br /><br /><br />&nbsp&nbsp&nbsp&nbsp proc sql;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   select min(dos_1) as earliest format=date9., max(dos_1) as latest format=date9. <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   from phc.cohort_master_3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp quit;*(01Apr2010 , 14Mar2017);<br /><br /><br />* RHA assignment of patients<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp RHA's are assigned to patients AT THE TIME OF PHY SERVICE<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp There are some patients who had assigned >1 RHA's within a fiscal year (probably due to a move)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp For those cases - assign the RHA where the patient was residing, received majority of services<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp If there is a draw, assign randomly;<br /><br />* RHA frequencies;<br />proc sql noprint; <br />create table rha_assign as <br />  select key_hsn, fy, rha_index,<br />  &nbsp&nbsp&nbsp&nbspsum (n)&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspas rha_times<br />from phc.cohort_master_3<br />  group by key_hsn, fy, rha_index<br />  order by key_hsn;<br />run;*6,255,567;<br />proc sort data=rha_assign; by key_hsn fy descending rha_times; run;*6,255,567 -- 1,261,810 unique patients;<br />proc sort data=rha_assign nodupkey out=rha_assign_1; by key_hsn fy;run;* 6,186,049;<br /><br /><br />* It has been decided to ONLY include UPC to the PLT Wall - thus only calculate UPC;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /*UPC index*/<br /><br />* Sum the visits by EACH DOCTOR in EACH FY by EACH PATIENT;<br />proc summary nway data=phc.cohort_master_3;<br />class key_hsn key_doc_num fy;<br />var n;<br />output out=upc n=visits;<br />run;<br />proc freq data=upc; table visits;run;<br /><br />data upc_drop(drop=_type_ _freq_); set upc;run;* Notes:&nbsp&nbsp&nbsp&nbspType is all 7, Freq & visits are exactly same (delete them);<br /><br /><br />*&nbsp&nbsp&nbsp&nbspSum the total visits in EACH FY by EACH PATIENT<br />Also keeps the maximum number of visits done to an individual physician;<br />proc summary nway data=upc_drop;<br />class key_hsn fy;<br />var visits;<br />output out=upc3 max=max_visits sum=visits;<br />run;<br /><br />proc sort data=upc; by key_hsn fy;run;<br />proc sort data=upc3; by key_hsn fy;run;<br /><br />* Delete cases where the patient had ONLY 1 visit within a fiscal year;<br />data upc_1(drop=_type_ _freq_); set upc3;<br />if visits = 1 then delete;<br />run;<br />proc freq data = upc_1; table visits;run;<br /><br />data UPC_index;<br />set upc_1;<br />UPC=(max_visits/visits)*100;<br />format UPC 8.2;<br />run;<br />proc freq data=UPC_index; table fy upc;run;<br /><br />*Merge the RHA info;<br />proc sort data=rha_assign_1;by key_hsn fy;run;<br />proc sort data=UPC_index;by key_hsn fy;run;<br /><br />data phc.UPC_final;<br />merge UPC_index(in=b) rha_assign_1(in=m);<br /><br />by key_hsn fy;<br />if b;<br />format rha_name $22.;<br />if rha_index = '1' then rha_name = \"Sun Country\";<br />if rha_index = '2' then rha_name = \"Five Hills\";<br />if rha_index = '3' then rha_name = \"Cypress\";<br />if rha_index = '4' then rha_name = \"Regina Qu'Appelle\";<br />if rha_index = '5' then rha_name = \"Sunrise\";<br />if rha_index = '6' then rha_name = \"Saskatoon\";<br />if rha_index = '7' then rha_name = \"Heartland\";<br />if rha_index = '8' then rha_name = \"Kelsey Trail\";<br />if rha_index = '9' then rha_name = \"Prince Albert\";<br />if rha_index = '10' then rha_name = \"Prairie North\";<br />if rha_index = '11' or rha_index = '12' or rha_index = '13' then rha_name = \"Northern Sask\";<br />if rha_index = ''  then rha_name = \"Missing\";<br /><br />run;<br />proc freq data=phc.UPC_final order=freq; table rha_index rha_name fy UPC; run;<br /><br />* Important Note (Meric) Aug 6, 2015: Above dataset created and saved phc.UPC_final. Run below to report to PLT Wall Walk.<br /><br />* UPC by RHA;<br />proc report data=phc.UPC_final missing; <br />column fy rha_name UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* UPC by SK;<br />proc report data=phc.UPC_final missing; <br />column fy UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* ACSC Drilldown;<br /><br />* 1.Asthma;<br />proc sql;<br />create table asthma_UPC as select * from phc.UPC_final<br />where key_hsn in<br />(select key_hsn from asthma.master);<br />quit;*Jan2018-5498078,April17:557,990 /// January16:463,710 /// October15: 416,059 /// June15 run:338,082 /// March15 run:331,387 /// Dec14 run:270,372 /// Aug14 run:232,809;<br /><br /><br />* Asthma UPC by RHA;<br />proc report data=asthma_UPC missing; <br />column fy rha_name UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* Asthma  UPC by SK;<br />proc report data=asthma_UPC missing; <br />column fy UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br /><br />* 2.CAD;<br />proc sql;<br />create table CAD_UPC as select * from phc.UPC_final<br />where key_hsn in<br />(select key_hsn from CAD.CAD);<br />quit;* April17:461,757 /// January16: 392,945 ///October15: 358,176 /// June15 run:313,105 /// March15 run:310,737 // Dec14 run:251,777 -Aug14 run:243,896;<br /><br />* CAD UPC by RHA;<br />proc report data=CAD_UPC missing; <br />column fy rha_name UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* CAD  UPC by SK;<br />proc report data=CAD_UPC missing; <br />column fy UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br /><br />* 3.CHF;<br />proc sql;<br />create table CHF_UPC as select * from phc.UPC_final<br />where key_hsn in<br />(select key_hsn from CHF.CHF);<br />quit;*April17:305,696 /// January16: 261,091 /// October15: 237,316  /// June15 run:200,287 /// March15 run:199,151// Dec14 run:163,569 - Aug14 run:159,443;<br /><br />* CHF UPC by RHA;<br />proc report data=CHF_UPC missing; <br />column fy rha_name UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* CHF  UPC by SK;<br />proc report data=CHF_UPC missing; <br />column fy UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br /><br />* 4.COPD;<br />proc sql;<br />create table COPD_UPC as select * from phc.UPC_final<br />where key_hsn in<br />(select key_hsn from COPD.COPD);<br />quit;*April17:396,216 /// January16: 330,876 /// October15: 295,995 /// June15 run:249,655 /// March15 run:247,427 // Dec14 run:200,578 - Aug14 run:194,410;<br /><br />* COPD UPC by RHA;<br />proc report data=COPD_UPC missing; <br />column fy rha_name UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* COPD UPC by SK;<br />proc report data=COPD_UPC missing; <br />column fy UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br /><br />* 5.DM;<br />proc sql;<br />create table DM_UPC as select * from phc.UPC_final<br />where key_hsn in<br />(select key_hsn from DM.DM);<br />quit;*April17:593,552 /// January16: 497,721 /// October15: 448,050 ///June15 run:382,400 /// March15 run:379,076 // Dec14 run:305,827 -Aug14 run:295,604;<br /><br />* DM UPC by RHA;<br />proc report data=DM_UPC missing; <br />column fy rha_name UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* DM UPC by SK;<br />proc report data=DM_UPC missing; <br />column fy UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br /><br />* 6.Mood;<br />proc sql;<br />create table Mood_UPC as select * from phc.UPC_final<br />where key_hsn in<br />(select key_hsn from Mood.Mood);<br />quit;*April17: 1,000,000+ /// *January16: 1,872,423 /// October15: 1,690,695 /// June15 run:1,495,170 /// March15 run:1,469,429 // Dec14 run:1,196,115 - Aug14 run:1,092,251;<br /><br />* Mood UPC by RHA;<br />proc report data=Mood_UPC missing; <br />column fy rha_name UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define rha_name&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br />* Mood UPC by SK;<br />proc report data=Mood_UPC missing; <br />column fy UPC,(n mean);<br />define fy &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ group;<br />define UPC&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ analysis;<br />run;<br /><br /><br />**********************************************************************************<br />**********************************************************************************<br />**********************************************************************************<br /><br />/* DATA PREPERATION FOR QIO */<br /><br />* UPC by RHA;<br />proc means data=phc.UPC_final;<br />class fy rha_name;<br />var upc;<br />output out=whole_pop_rha mean=result_connected; run;<br /><br />data whole_pop_rha_1; set whole_pop_rha;<br />if fy = \"\" then delete;<br />if rha_name = \"\" then rha_name=\"sk\";<br />drop _type_ _freq_;<br />run;<br /><br />* ACSC Drilldown;<br /><br />* 1.Asthma;<br />proc means data=asthma_UPC;<br />class fy rha_name;<br />var upc;<br />output out=asthma_rha mean=result_connected; run;<br /><br />data asthma_rha_1; set asthma_rha;<br />if fy = \"\" then delete;<br />if rha_name = \"\" then rha_name=\"sk\";<br />format tag1 $char12.;<br />tag1 = \"asthma\";<br />drop _type_ _freq_;<br />run;<br /><br /><br />* 2.CAD;<br />proc means data=cad_UPC;<br />class fy rha_name;<br />var upc;<br />output out=cad_rha mean=result_connected; run;<br /><br />data cad_rha_1; set cad_rha;<br />if fy = \"\" then delete;<br />if rha_name = \"\" then rha_name=\"sk\";<br />format tag1 $char12.;<br />tag1 = \"cad\";<br />drop _type_ _freq_;<br />run;<br /><br /><br />* 3.CHF;<br />proc means data=chf_UPC;<br />class fy rha_name;<br />var upc;<br />output out=chf_rha mean=result_connected; run;<br /><br />data chf_rha_1; set chf_rha;<br />if fy = \"\" then delete;<br />if rha_name = \"\" then rha_name=\"sk\";<br />format tag1 $char12.;<br />tag1 = \"chf\";<br />drop _type_ _freq_;<br />run;<br /><br /><br />* 4.COPD;<br />proc means data=copd_UPC;<br />class fy rha_name;<br />var upc;<br />output out=copd_rha mean=result_connected; run;<br /><br />data copd_rha_1; set copd_rha;<br />if fy = \"\" then delete;<br />if rha_name = \"\" then rha_name=\"sk\";<br />format tag1 $char12.;<br />tag1 = \"copd\";<br />drop _type_ _freq_;<br />run;<br /><br /><br />* 5.DM;<br />proc means data=dm_UPC;<br />class fy rha_name;<br />var upc;<br />output out=dm_rha mean=result_connected; run;<br /><br />data dm_rha_1; set dm_rha;<br />if fy = \"\" then delete;<br />if rha_name = \"\" then rha_name=\"sk\";<br />format tag1 $char12.;<br />tag1 = \"dm\";<br />drop _type_ _freq_;<br />run;<br /> <br /><br />* 6.Mood;<br />proc means data=mood_UPC;<br />class fy rha_name;<br />var upc;<br />output out=mood_rha mean=result_connected; run;<br /><br />data mood_rha_1; set mood_rha;<br />if fy = \"\" then delete;<br />if rha_name = \"\" then rha_name=\"sk\";<br />format tag1 $char12.;<br />tag1 = \"mood\";<br />drop _type_ _freq_;<br />run;<br /><br />*Combine all databases;<br /><br />data phc.qio_connectedness; retain date result_connected rha_name tag1; set whole_pop_rha_1 ;*asthma_rha_1 cad_rha_1 chf_rha_1 copd_rha_1 dm_rha_1 mood_rha_1<br /><br />if rha_name = \"Cypress\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"chr\";<br />if rha_name = \"Sun Country\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"schr\";<br />if rha_name = \"Five Hills\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"fhhr\";<br />if rha_name = \"Regina Qu'Appelle\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"rqhr\";<br />if rha_name = \"Sunrise\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"sunhr\";<br />if rha_name = \"Saskatoon\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"shr\";<br />if rha_name = \"Heartland\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"hhr\";<br />if rha_name = \"Kelsey Trail\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"kthr\";<br />if rha_name = \"Prince Albert\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"paphr\";<br />if rha_name = \"Prairie North\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"pnhr\";<br />if rha_name = \"Northern Sask\" &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen rha_name = \"northern\";<br /><br />if rha_name = \"Missing\" then delete;<br /><br />rename rha_name = tag;<br /><br />if fy = \"FY2010/11\" then date = \"20100630\";<br />if fy = \"FY2011/12\" then date = \"20110630\";<br />if fy = \"FY2012/13\" then date = \"20120630\";<br />if fy = \"FY2013/14\" then date = \"20130630\";<br />if fy = \"FY2014/15\" then date = \"20140630\";<br />if fy = \"FY2015/16\" then date = \"20150630\";<br />if fy = \"FY2016/17\" then date = \"20160630\";<br />if fy = \"FY2017/18\" then date = \"20170630\";<br />drop fy;<br /><br />run;<br />proc freq data=phc.qio_connectedness; table tag tag1 date;run;<br /><br /><br /><br />/*UPC taxonomy*/<br />data taxupc;<br />infile datalines truncover;<br />length date $45. rate $45. region $45. acsc $45.;<br />input date rate region acsc;<br />datalines;<br />number-of-data-columns duration tag tag . . . . . . <br />1 fiscal-year connected-phys smarter . . . . . . <br />date  result-connected-phys|percentage tag tag<br />; <br />run;<br /><br />data qio_connectedness ;<br />retain date rate region acsc;<br />set phc.qio_connectedness ;<br /><br />*rename result_connected=rate;<br />rename tag=region;<br />rename tag1=acsc;<br />rate=trim (left (put(result_connected, 12.2)));<br />drop result_connected;<br /><br /> <br />run;<br /><br />data phc.upc_apr17;<br />set taxupc qio_connectedness ;<br />run;<br /><br /><br /><br />data qio_connectedness ;<br />retain date rate region acsc;<br />set phc.qio_connectedness ;<br /><br />*rename result_connected=rate;<br />rename tag=region;<br />rename tag1=acsc;<br />rate=trim (left (put(result_connected, 12.2)));<br />drop result_connected;<br /><br /> <br />run;<br />proc sort data=qio_connectedness; by  date region;<br />run;<br />proc transpose data=qio_connectedness out=moh;<br />by date region;<br />var acsc rate;<br />run;<br /> <br />data moh1;<br />set moh;<br />drop _name_;<br />rename col2=asthma;<br />rename col3=cad;<br />rename col4=chf;<br />rename col5=copd;<br />rename col6=dm;<br />rename col7=mood;<br />if col1=. then delete;<br />rename col1=all;<br />run;<br /><br /><br /><br />/* -------------------------------------------------------------------<br />   Code generated by SAS Task<br /><br />   Generated on: Thursday, January 21, 2016 at 11:23:17 AM<br />   By task: List Data1<br /><br />   Input Data: WORK.MOH1<br />   Server:  Local<br />   ------------------------------------------------------------------- */<br /><br />%_eg_conditional_dropds(WORK.SORTTempTableSorted);<br />/* -------------------------------------------------------------------<br />   Sort data set WORK.MOH1<br />   ------------------------------------------------------------------- */<br />PROC SORT<br />&nbsp&nbsp&nbsp&nbspDATA=WORK.MOH1(FIRSTOBS=1  KEEP=date asthma cad chf copd dm mood all region)<br />&nbsp&nbsp&nbsp&nbspOUT=WORK.SORTTempTableSorted<br />&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbspBY region;<br />RUN;<br />TITLE;<br />TITLE1 \"Report Listing\";<br />FOOTNOTE;<br />FOOTNOTE1 \"Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))\";<br /><br />/* Start of custom user code. */<br />ods tagsets.excelxp style=sasweb file=\"/SAS_data/dw0/HQC_share/Beliz/continuity/oct2016/by_options.xls\" options(suppress_bylines='yes');<br />/* End of custom user code. */<br /><br />PROC PRINT DATA=WORK.SORTTempTableSorted<br />&nbsp&nbsp&nbsp&nbspOBS=\"Row number\"<br />&nbsp&nbsp&nbsp&nbspLABEL<br />&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbspVAR date asthma cad chf copd dm mood all;<br />&nbsp&nbsp&nbsp&nbspBY region;<br />RUN;<br /><br />/* Start of custom user code. */<br />ods tagsets.excelxp close;<br />/* End of custom user code. */<br />/* -------------------------------------------------------------------<br />   End of task code.<br />   ------------------------------------------------------------------- */<br />RUN; QUIT;<br />%_eg_conditional_dropds(WORK.SORTTempTableSorted);<br />TITLE; FOOTNOTE;<br /><br />s///<br />t///"},{"idx":"CodeTask-nbwvdnJMbVnPgccI","name":"Physician Pannel code","NodeDescription":"///t<br />///s<br />/*from<br />P:\\2018 - Physician Panel Reports\\SAS code\\1. Patient Allocation to Physician Panels(Alberta Health).sas*/<br /><br />/*PHYSICIAN PRACTICE REPORTS*/<br />/*<br />1. Extract MSB starting from latest available date (31 Dec 2017) and going back 5 years<br />2. Exclude from MSB<br />if key_hsn=\"\" then delete<br />if num_srv = 0 then delete<br />if los in:(&in_patient) then delete<br />if key_doc_num in:(&slush) then delete<br />if spec not in: ('B','C','WB') then delete<br />if substr(spec,1,1)='C' and ~(substr(fsc,1,1) not in ('B','C')) then delete<br />if mode in:(&mode_exc) then delete<br />*/<br />%let mode_exc = 'Z';*NEW - April 2017;<br />%let in_patient= 'B' '2' 'K';<br />*Slush codes are added from clean.Physician #s for Slush codes (new).txt;<br />%let slush='76925314678' '36825374671' '52825354677' '66925324672' '38825384673' '52825354672' '35925334677' '00825374673' '32825384674' '79825354677' '42925314672' '14925324671'<br />'74825384673' '95825354670' '86825364672' '95925344676' '03925304670' '59925304677' '96925314677' '36925314674' '96925314672' '62825364671' '28925304679' '82825394672'<br />'43925314674' '13825364672' '31925324677' '48925314670' '05825364678' '17825354674' '13925304670' '82825384679' '27825354670' '19825374671' '45925304670' '07925304677'<br />'05925344673' '64925344674' '25925304675' '95925314671' '05825354679' '64925304678' '26925334671' '80925334670' '87925304678' '53825394678' '17825344678' '52925304678'<br />'61825384670' '17825374676' '31825374679' '29825354679' '41925304676' '01825374674' '24825364678'<br />'11345384672' '91925324677' '87825394671' '81925304678' '74925304674' '78925334671' '01825354674' '58825374670' '83925324670' '34825364677' '58925324670' '53825384670' <br />'27825344678' '48925314676' '37825364674' '31925324675' '56925304672' '95925344670' '02825384671' '81825354676' '22925304670' '51825394672' '95925304677' '84825354674' <br />'74925314673'<br />'06825384675' '39825344678' '99825374677' '35925304676' '73825364675' '14925304678' '14825354671' '14925314673' '76825364676' '88925314677' '76825374677' '23825374672'<br />'74825384670' '07925334671' '71825364676' '24925304677' '11925324678' '49925334678' '31925324674' '80925314677' '91825364675' '11825374679' '55925324679' '99925304678'<br />'35825374676' '10925314671' '22825394677' '93825394679' '26925314679' '59825344671' '27825384672' '12925304677' '42925304671' '16825364671' '24925304679' '82925314676'<br />'17925314671' '04825394674' '16825344676' '33925344675' '01825394671' '28925314674' '18825354679' '25925344671' '01825354670' '93925304677' '47925334678' '37925334676'<br />'01825364673' '75925324675' '85925314673' '35925334678' '24825364679' '90925304671' '73925324677' '76825374671' '83825354675' '74825374672' '77925314672' '50925324674'<br />'05925324670' '20925304670' '06825354674' '42825364678' '88825354673' '81825364678' '23925314673' '24925334677' '99825394677' '94825374674' '08825374674' '87925324675'<br />'06925304678' '84825384672' '19825344672' '28825394679' '53925334671' '05925334676' '81925314671' '64825354676' '28825394673' '22925314674' '38825394679' '57925324671'<br />'46925334672' '92925334678';<br /><br />/*vaheguru ji   Extract MSB data*/<br />%include '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas';<br />%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas';<br />%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/coverage_days.sas';<br />libname ppr '/SAS_data/dw0/HQC_share/nsidhu/PPR/data_MS';<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas';&nbsp&nbsp&nbsp&nbsp<br />%Extract_MSB(xtrc_start_dt='31Mar2012'd,<br />                   xtrc_end_dt='26Mar2018'd, <br />                   excl_xtrc_dt=, <br />                   ds_out=temp_msb, <br />                   ds_out_hsn_only=, <br />                   hsn_list=, <br />                   hsn_file=, <br />                   MDnumber=, <br />                   diagcode=, <br />&nbsp&nbsp&nbsp&nbsp       diag_file=, <br />                   dostart='01Apr2013'd, <br />                   dosend='31Mar2018'd, <br />                   fscode=, <br />                   loscode=, <br />                   othercondition=, <br />                   othernumber=, <br />                   kept_vars=KEY_HSN KEY_DOC_NUM SPEC MG DIAG FSC NUM_SRV LOS CONTACTS AMT_APP MODE, <br />                   debug=N);&nbsp&nbsp&nbsp&nbsp<br />data ppr.temp_msb1;<br />set temp_msb;<br />SPEC1=trim(left(upcase(substr(SPEC, 1,1))));<br />if SPEC1='B' then SPEC_flag=1; else SPEC_flag=0;<br />run;<br /><br />/*<br />Quality Checks: Check below for the chosen 4 physicians, <br />Proc freq variable SPEC and LOS<br />Check the earliest dos_1 for each of 4 physicians<br />Extract the data of these 4 physicians from the physician mobility file to check the practice start dates<br />*/<br />proc freq data=ppr.temp_msb1;<br />table spec los;<br />run;<br /><br />/*Exclusions mention above in notes*/<br />data temp_msb2;/*332003786 out of 54983036*/<br />set ppr.temp_msb1;<br />/*<br />if key_doc_num in ('51925304676' '42925324679' '27925304675' '63825354679' '05825374675' '73925324675') <br />then key_doc_num='00123456789';<br />*/<br /><br />if key_hsn='' then delete;<br />if num_srv=0 then delete;<br />*if los in:(&in_patient) then delete;/*we decided to include hospital physician visits April 26*/<br />if key_doc_num in:(&slush) then delete;<br />if spec not in: ('B') then delete;<br />if mode in:(&mode_exc) then delete;<br />if substr(spec,1,1)='C' and ~(substr(fsc,1,1) not in ('B','C')) then delete;<br />run;<br />proc freq data=temp_msb2;<br />tables spec; run;<br />/*Step 4 removing same day, same doctor visits: <br />NOTE: There were 32003786 observations read from the data set WORK.TEMP_MSB2.<br />NOTE: 5942281 observations with duplicate key values were deleted.<br />NOTE: The data set PPR.TEMP_MSB2 has 26061505 observations and 14 variables.<br />*/<br />data ppr.temp_msb1x;<br />set temp_msb2;<br />if FSC in ('B003' 'B064' 'B052' 'B004' ) then physical_flag=1; else physical_flag=0;<br />run;<br /><br />proc sort data=ppr.temp_msb1x;<br />by key_hsn key_doc_num dos_1 descending physical_flag;<br />run;<br />proc sort data=ppr.temp_msb1x out=ppr.temp_msb2 nodupkey;<br />by key_hsn key_doc_num dos_1;<br />run;<br />/*<br />NOTE: There were 26061505 observations read from the data set PPR.TEMP_MSB2.<br />NOTE: The data set WORK.TEMP_MSB_3YEAR has 15783671 observations and 14 variables.<br />*/<br />data temp_msb_3year;<br />set ppr.temp_msb2;<br />where ('01Apr2015'd LE dos_1 LE '31Mar2018'd);<br /><br />     if ('01Apr2015'd LE dos_1 LE '31Mar2016'd) then FY='201516';<br />else if ('01Apr2016'd LE dos_1 LE '31Mar2017'd) then FY='201617';<br />else if ('01Apr2017'd LE dos_1 LE '31Mar2018'd) then FY='201718';<br />else if ('01Apr2018'd LE dos_1 LE '31Mar2019'd) then FY='201819';<br />run;<br /><br /><br />/*checking coverage on Mar 31, 2018*/<br />data temp_msb_3year;<br />set temp_msb_3year;<br />cover_dt1='1Dec2017'd;<br />cover_dt='31Dec2017'd; /*change these dates to 31Mar 2018 when data comes*/<br />format cover_dt date9. cover_dt1 date9.;<br />run;<br /><br />%coverage_days(xtrc_dt='02JAN2018'd,<br />&nbsp&nbsp&nbsp&nbspds_in=temp_msb_3year,<br />&nbsp&nbsp&nbsp&nbspds_out=temp_msb_3year_covered, <br />&nbsp&nbsp&nbsp&nbspstrt_dt_var=cover_dt,      <br />&nbsp&nbsp&nbsp&nbspend_dt_var=cover_dt,<br />&nbsp&nbsp&nbsp&nbspdef_strt_dt=07DEC1994,<br />&nbsp&nbsp&nbsp&nbspdef_end_dt=&sysdate9,<br />&nbsp&nbsp&nbsp&nbspcvrg_strt_dt_var=eff_date,<br />&nbsp&nbsp&nbsp&nbspcvrg_end_dt_var=exp_date);<br />proc freq data=temp_msb_3year_covered;<br />table cvgdays;<br />run;<br />/*keeping if covered on last day of month*/<br />data temp_msb_3yearx;<br />set temp_msb_3year_covered;<br />if cvgdays=1;<br />run;<br /><br />proc sort data=temp_msb_3yearx out=tt nodupkey; by key_doc_num; run;/*1548*/<br />proc sql noprint; <br />create table temp_msb_3year1 as <br />select *, count(dos_1) as total_visits3<br />from temp_msb_3yearx<br />group by key_hsn<br />order by key_hsn;<br />run;<br />proc sort data=temp_msb_3year1 nodupkey out=checkz; by key_hsn; run;<br />proc freq data=checkz;table total_visits3;run;<br /><br />proc sql noprint; <br />create table temp_msb_3year2 as <br />select *, count(dos_1) as total_visits_phy3<br />from temp_msb_3year1<br />group by key_hsn, key_doc_num<br />order by key_hsn, key_doc_num;<br />run;<br /><br />data ppr.visits_by_phy_3year;/*14943391 visits*/<br />retain key_hsn key_doc_num total_visits_phy3 total_visits3 upc3;<br />set temp_msb_3year2;<br />upc3=(total_visits_phy3/total_visits3)*100;<br />format upc3 6.2;<br />run;<br />proc sort data=ppr.visits_by_phy_3year out=tt nodupkey; by key_doc_num; run;/*1548*/<br /><br />/*Single provider*/<br />data sole_visits ppr.after_sole_visits;/*sole=921798 1061676+rest left out=14861873=Total of 15783671*/<br />set ppr.visits_by_phy_3year;<br />if upc3=100 then output sole_visits;<br />else output ppr.after_sole_visits;<br />run;<br />proc sort data=sole_visits;/*sorting this way? Idea is to keep the last visit date*/<br />by key_hsn descending dos_1 key_doc_num; <br />run;<br />proc sort data=sole_visits nodupkey out=ppr.sole_visits;/*729502 accounting for 921798 visits*/<br />by key_hsn key_doc_num; <br />run;<br />data ppr.sole_visits;<br />set ppr.sole_visits;<br />step=1;<br />run;<br /><br />/*192296 individuals keys are alloted physician based on sole provider*/<br />proc sort data=ppr.sole_visits out=check1 nodupkey;<br />by key_hsn;<br />run;<br /><br />/*14861873 observations (or 938099 unique individuals) has to allocated doctor based on criteria below*/<br />proc sort data=ppr.after_sole_visits out=check nodupkey;<br />by key_hsn;<br />run;<br />/*<br />2. Majority Provider; <br />3. if tie then PHYSICAL EXAM(3B), CDM(64B), SUPPORTIVE CARE(52B), WELL BABY(4B) takes prority;<br />4. if no physical then date of service takes priority<br />*/  <br />data after_sole_visitsx;<br />retain key_hsn upc3 FSC physical_flag dos_1 key_doc_num;<br />set ppr.after_sole_visits;<br />/*if FSC in ('B003' 'B064' 'B052' 'B004' ) then physical_flag=1; else physical_flag=0;*/<br />run;<br />proc freq data=after_sole_visitsx; tables physical_flag; run;<br />proc sort data=after_sole_visitsx;<br />by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num;<br />run;<br />proc sort data=after_sole_visitsx out=after_sole_visitsxz nodupkey; /*904902 accounting for 14084916 visits*/<br />by key_hsn;<br />run;<br /><br />/*to add which step contributed, i changed code as under and we get same result*/<br />/*Here starts setp 2*/<br />proc sort data=after_sole_visitsx out=step2A nodupkey;<br />by key_hsn upc3 key_doc_num;<br />run;<br />proc sort data=step2A;<br />by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num;<br />run;<br />data step2B;<br />_n_ ++ 1;<br />if _n_ LE n then do;<br />set step2A point=_n_;<br />leadupc3=upc3;<br />end;<br />set step2A nobs=n end=end;<br />by key_hsn;<br />if end then leadupc3=.;<br />run;<br />data step2C;<br />set step2B;<br />by key_hsn;<br />if last.key_hsn then do;<br />leadupc3=.;<br />end;<br />run;<br />data step2D;<br />set step2C;<br />by key_hsn;<br />if first.key_hsn then do;<br />if upc3 GT leadupc3 then step=2;<br />&nbsp&nbsp&nbsp&nbsp        else step=9;<br />&nbsp&nbsp&nbsp&nbsp      end;<br />run;<br />proc freq data=step2D;<br />tables step;<br />run;<br />data step2E;/*741493 unique people got alloted in step 2*/<br />set step2D;<br />if step=2;<br />run;<br />proc sort data=step2E out=check nodupkey; by key_hsn; run;<br /><br />/*Here starts setp 3*/<br />Proc sql;/*start with 1030476 observations*/ <br />create table step3 as select * from after_sole_visitsx<br />where key_hsn not in <br />(select key_hsn from step2E);<br />quit;<br />proc sort data=step3 out=step3A nodupkey;/*704108*/<br />by key_hsn physical_flag key_doc_num;<br />run;<br />proc sort data=step3A;<br />by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num;<br />run;<br />data step3B;<br />_n_ ++ 1;<br />if _n_ LE n then do;<br />set step3A point=_n_;<br />leadphysical_flag=physical_flag;<br />end;<br />set step3A nobs=n end=end;<br />by key_hsn;<br />if end then leadphysical_flag=.;<br />run;<br />data step3C;<br />set step3B;<br />by key_hsn;<br />if last.key_hsn then do;<br />leadphysical_flag=.;<br />end;<br />run;<br />data step3D;<br />set step3C;<br />by key_hsn;<br />if first.key_hsn then do;<br />if physical_flag GT leadphysical_flag then step=3;<br />&nbsp&nbsp&nbsp&nbsp        else step=9;<br />&nbsp&nbsp&nbsp&nbsp      end;<br />run;<br />proc freq data=step3D;<br />tables step;<br />run;<br />data step3E;/*25078 unique people got alloted in step 2*/<br />set step3D;<br />if step=3;<br />run;<br />proc sort data=step3E out=check nodupkey; by key_hsn; run;<br /><br />/*Here starts setp 4*/<br />Proc sql;/*start with 822472 observations*/ <br />create table step4 as select * from step3<br />where key_hsn not in <br />(select key_hsn from step3E);<br />quit;<br />proc sort data=step4 out=step4A nodupkey;/*822472*/<br />by key_hsn dos_1 key_doc_num;<br />run;<br />proc sort data=step4A;<br />by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num;<br />run;<br />data step4B;<br />_n_ ++ 1;<br />if _n_ LE n then do;<br />set step4A point=_n_;<br />leaddos_1=dos_1;<br />end;<br />set step4A nobs=n end=end;<br />by key_hsn;<br />if end then leaddos_1=.;<br />run;<br />data step4C;<br />set step4B;<br />by key_hsn;<br />if last.key_hsn then do;<br />leaddos_1=.;<br />end;<br />run;<br />data step4D;<br />set step4C;<br />by key_hsn;<br />if first.key_hsn then do;<br />if dos_1 GT leaddos_1 then step=4;<br />&nbsp&nbsp&nbsp&nbsp        else step=9;<br />&nbsp&nbsp&nbsp&nbsp      end;<br />run;<br />proc freq data=step4D;<br />tables step;<br />run;<br />data step4E;/*136652 unique people got alloted in step 2*/<br />set step4D;<br />if step=4;<br />run;<br />proc sort data=step4E out=check nodupkey; by key_hsn; run;<br /><br />/*left out in all above steps assigned randomly*/<br />Proc sql;/*start with 6161 observations, these are going to different doctor but same date and same upc and same physical flag*/ <br />create table step5 as select * from step4<br />where key_hsn not in <br />(select key_hsn from step4E);<br />quit;<br /><br />proc sort data=step5 out=step5A nodupkey;/*6161*/<br />by key_hsn dos_1 key_doc_num;<br />run;<br />proc sort data=step5A out=FSCtest nodupkey;/*130 unique FSC*/<br />by fsc;<br />run;<br />proc print data=FSCtest noobs;<br />var FSC;<br />run;<br /><br />data step5A;<br />set step5A;<br />random_number=rand('uniform');<br />run;<br />proc sort data=step5A;<br />by key_hsn descending upc3 descending physical_flag descending dos_1 random_number;<br />run;<br />proc sort data=step5A out=step5B nodupkey;/*1679 got allotted based on lower key_doc_num*/<br />by key_hsn;<br />run;<br />data step5B;<br />set step5B;<br />step=4; /*we still call it step 4*/<br />run;<br /><br />/*combining steps 2 to 5*/<br />data steps2to5;<br />set step2E step3E step4E step5B;<br />drop leadupc3 leadphysical_flag leaddos_1;<br />run;<br />proc freq data=steps2to5;<br />table step;<br />run;<br /><br />/*<br />combining sole provider and step 2, 3 and 4<br />NOTE: There were 938099 observations read from the data set WORK.AFTER_SOLE_VISITSXZ.<br />NOTE: There were 192296 observations read from the data set PPR.SOLE_VISITS.<br />NOTE: The data set WORK.TOGETHER has 1130395 observations and 18 variables.<br />*/<br />data together;<br />retain key_hsn key_doc_num total_visits_phy3 total_visits3 upc3 step;<br />set <br />steps2to5  /*old way was this data: after_sole_visitsxz*/ <br />ppr.sole_visits;<br />run;<br />proc sort data=together;<br />by key_hsn descending upc3 descending physical_flag descending dos_1 key_doc_num;<br />run;<br />proc freq data=together; table step; run;<br /><br />/*how many physicians are there?*/<br />proc sort data=together out=tt1 nodupkey; by key_doc_num; run;/*1511*/<br />proc freq data=together order=freq;<br />tables key_doc_num upc3;<br />run;<br />proc sql noprint; <br />create table patients1 as <br />select *, count(key_hsn) as total_patients  <br />from together<br />group by key_doc_num<br />order by key_doc_num;<br />run;<br />data unique_phy_patients;<br />retain key_doc_num key_hsn total_patients total_visits_phy3 total_visits3 upc3 spec spec1 spec_flag FSC physical_flag step;<br />set patients1;<br />if physical_flag=. then physical_flag=9;<br />keep FY key_doc_num key_hsn total_patients total_visits_phy3 total_visits3 upc3 spec spec1 spec_flag FSC physical_flag dos_1 step;<br />run;<br />proc freq data=unique_phy_patients; tables spec spec1 physical_flag; run;<br />proc sort data=unique_phy_patients out=dr nodupkey; by key_doc_num; run;/*1511 unique physician total*/<br />proc sort data=unique_phy_patients; by key_doc_num descending upc3; run;<br /><br />/*Getting Demographic Information*/<br />%demog_assign(prs_xtrc_dt='02JAN2018'd,<br />ds_in=unique_phy_patients,<br />ds_out=unique_phy_patients_demog, <br />strt_dt_var=dos_1,&nbsp&nbsp&nbsp&nbsp<br />end_dt_var=dos_1,<br />geo_file=clean17.phrs_pers_resc_4_jas17_01dec2017,<br />incl_full_info=N);<br />data unique_phy_patients_demog;<br />set unique_phy_patients_demog;<br />age_dt='31Mar2018'd;<br />format age_dt date9.;<br />run;<br />%include '/SAS_data/dw0/HQC_share/nsidhu/PPR/sas code/calc_age_discr.sas';<br />%calc_age_discr(ds_in=unique_phy_patients_demog,ds_out=unique_phy_patients_demog1,refday_var=age_dt,agevar=age);<br /><br />/*addition of two other ages*/<br />data unique_phy_patients_demog1;<br />set unique_phy_patients_demog1;<br />age_dt1='31Mar2016'd;<br />format age_dt1 date9.;<br />age_dt2='31Mar2017'd;<br />format age_dt2 date9.;<br />run;<br />%calc_age_discr(ds_in=unique_phy_patients_demog1,ds_out=unique_phy_patients_demog2,refday_var=age_dt1,agevar=age1);<br />%calc_age_discr(ds_in=unique_phy_patients_demog2,ds_out=unique_phy_patients_demog3,refday_var=age_dt2,agevar=age2);<br /><br />/*end of age*/<br />data ppr.unique_phy_patients_demog;<br />retain key_doc_num key_hsn age sex_desc rha urb_rur;<br />set unique_phy_patients_demog3;<br />drop age_dt tot_days mindiff_RHA RHAdays RHAdiff mindiff_Urb_Rur URdays URdiff INCQTL mindiff_INCQTL INCQTLdays INCQTLdiff NATV_STAT_FLAG;<br />run;<br />proc freq data=ppr.unique_phy_patients_demog; <br />table sex_desc rha urb_rur;<br />run;<br />proc sort data=ppr.unique_phy_patients_demog; by key_doc_num; run;<br /><br />/*just creating missing physician data. In data but NOT in our panel data*/<br />Proc sql;<br />create table missing_dr as select * from ppr.temp_msb1<br />where key_hsn not in <br />(select key_hsn from ppr.unique_phy_patients_demog);<br />quit;<br />proc sort data=missing_dr out=missing_dr1 nodupkey;<br />by key_doc_num; <br />run;<br />data ppr.missing_dr;<br />set missing_dr1;<br />keep key_doc_num;<br />run;<br /><br />/************************specialist data****************************/<br />data specialist;<br />length section $50;<br />set ppr.temp_msb1;<br />where ('01Apr2015'd LE dos_1 LE '31Mar2018'd);<br />if key_hsn='' then delete;<br />if num_srv=0 then delete;<br />if key_doc_num in:(&slush) then delete;<br />if mode in:(&mode_exc) then delete;<br /><br />     if ('01Apr2015'd LE dos_1 LE '31Mar2016'd) then FY='201516';<br />else if ('01Apr2016'd LE dos_1 LE '31Mar2017'd) then FY='201617';<br />else if ('01Apr2017'd LE dos_1 LE '31Mar2018'd) then FY='201718';<br />else if ('01Apr2018'd LE dos_1 LE '31Mar2019'd) then FY='201819';<br /><br />if substr(spec,1,1)=\"B\" then section = \"General Practice\";<br />if substr(spec,1,1)=\"C\" then section = \"Paediatrics\";<br /><br />if substr(spec,1,2)=\"DK\" then section = \"Neurology\";<br />if substr(spec,1,2)=\"DL\" then section = \"Cardiology\";<br />if substr(spec,1,1)=\"D\" and spec not in ('DK', 'DL') then section = \"Internal Medicine\";<br /><br />if substr(spec,1,1)=\"E\" then section = \"Psychiatry\";<br />if substr(spec,1,1)=\"F\" then section = \"Dermatology\";<br />if substr(spec,1,1)=\"G\" then section = \"Medical Genetics\";<br />if substr(spec,1,1)=\"H\" then section = \"Anaesthesia\";<br />if substr(spec,1,1)=\"I\" then section = \"Physical Medicine\";<br />if substr(spec,1,1)=\"K\" then section = \"NeuroSurgery\";<br /><br />if substr(spec,1,2)=\"LB\" then section = \"General Surgery\";<br />if substr(spec,1,2)=\"LL\" then section = \"Cardiac Surgery\";<br /><br />if substr(spec,1,1)=\"M\" then section = \"Orthopaedic Surgery\";<br />if substr(spec,1,1)=\"N\" then section = \"Plastic & Reconstructive Surgery\";<br />if substr(spec,1,1)=\"P\" then section = \"Obstetrics & Gynaecology\";<br />if substr(spec,1,1)=\"R\" then section = \"Urological Surgery\";<br />if substr(spec,1,1)=\"S\" then section = \"Ophthalmology\";<br />if substr(spec,1,1)=\"T\" then section = \"Otolaryngology\";<br />if substr(spec,1,1)=\"X\" then section = \"Diagnostic Radiology & Radiology Oncology\";<br />if substr(spec,1,1)=\"Y\" then section = \"Therapeutic Radiology & Nuclear Medicine\";<br />if substr(spec,1,1)=\"V\" then section = \"Laboratory Specialties\";<br />if substr(spec,1,1)=\"W\" then section = \"Others (NP, RN,etc.)\";<br /><br />if section NE \"General Practice\";<br />run;<br />proc sort data=specialist out=ppr.specialist nodupkey; by key_hsn key_doc_num dos_1; run;<br /><br />proc freq data=ppr.specialist; <br />table SPEC_flag spec*section; <br />run;<br /><br />data check;<br />set ppr.specialist;<br />if section = \"General Practice\";<br />run;<br />s///<br />t///"},{"idx":"CodeTask-fugAN6WsoMWNgKfZ","name":"StudyDINs","NodeDescription":"///t<br />///s<br />/*Making Study DINS*/<br />data _null_; run;<br />/*Statin (AHFS 24:06:00, and with statin in the generic names)*/<br /><br />/*get all DINs from the cleanned allDIN file*/<br />/*the problem is that in both of the following file, there is no AHFS class (maybe because AHFS class is not unique <br />&nbsp&nbsp&nbsp&nbspand will cause dup of DINs)*/<br />/*%print(data = clean18.alldin_4_jas18_15oct2018);*/<br />/*%print(data = hqc.dp_drug);*/<br />/*%print(data=hqc.dp_claim);*/<br /><br />/*get the dins from dp_claim, if with AHFS of 24:06*/<br />%distinct(source=hqc.dp_claim, target=_tmp1, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='06'));<br />/*get the dins from dp_claim_non_ben, if with AHFS of 24:06*/<br />%distinct(source=hqc.dp_claim_non_ben, target=_tmp2, vars=DIN, filters=%str(mjr_clss = '024' and mnr_clss='06'));<br />/*merge the above two to have a distince DIN list*/<br />data _tmp3;<br />&nbsp&nbsp&nbsp&nbspset _tmp1 _tmp2;<br />run;<br />%distinct(data=_tmp3, target=_tmp4, vars=DIN);<br /><br /><br />/*the above DINS are of AHFS 24:06, but not all are Statins, those statins must have a genetic name containing 'statin'*/<br />/*get the DINs if the generic name contains statin*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1= clean18.alldin_4_jas18_15oct2018,<br />&nbsp&nbsp&nbsp&nbspt2=_tmp4,<br />&nbsp&nbsp&nbsp&nbsptarget=remoteT.StatinDINs,<br />&nbsp&nbsp&nbsp&nbspvars=t1.*,<br />&nbsp&nbsp&nbsp&nbspdistinct=1,<br />&nbsp&nbsp&nbsp&nbspjvars=DIN,<br />&nbsp&nbsp&nbsp&nbspjtype=inner,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(index(upcase(gen_name), \"STATIN\") ne 0)<br />);<br />/*n=290*/<br />/*double check to ensure that there is no dup dins in remotetT.StatinDINs*/<br />%distinct(data=remoteT.StatinDINs, target=_tmp5, vars=DIN);<br />/*n=290, there is no dup DINs*/<br />s///<br />t///","children":[{"idx":"EGTask-CV6ZbaPGihGVgjE1","name":"CopyDINS to Local","custparents":[{"idx":"CodeTask-fugAN6WsoMWNgKfZ"}]}]},{"idx":"CodeTask-lm45gKn6MFkGPZo4","name":"Local Settings","NodeDescription":"///t<br />///s<br />/*include macro tools in drive S<br />&nbsp&nbsp&nbsp&nbsp/LRECL to allow the length of a statement line to be 32767 bytes instead of the default 256<br />*/<br />%include \"S:\\Collaborative_researchers\\Shenzhen\\My Project\\Projects\\DoNotDelete Common Macros\\MyMacros.sas\" /LRECL=32767;<br />%INCLUDE 'R:\\Macros\\StatAnal\\ICD9_E_CH_dxtype.sas' /LRECL=32767;<br />%INCLUDE 'R:\\Macros\\StatAnal\\ICD9_E_EX_dxtype.sas' /LRECL=32767;<br />%INCLUDE 'R:\\Macros\\StatAnal\\ICD10_CH_dxtype.sas' /LRECL=32767; <br />%INCLUDE 'R:\\Macros\\StatAnal\\ICD10_EX_dxtype.sas' /LRECL=32767;<br />%INCLUDE 'R:\\Macros\\Util\\ExpandLst.sas' /LRECL=32767;<br />%include 'R:\\Macros\\Util\\VarExist.sas' /LRECL=32767;<br />%include 'R:\\Macros\\Util\\IsEmptyDS.sas' /LRECL=32767;<br /><br /><br />%global settingsXls h_Infoxls AnalyticalReport DataReport dicXls;<br /><br />/*assign the address for the exchange folder between local and remote*/<br />%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote;<br />libname transLib \"&exchangeDir\"; <br /><br />/*the xlsx file with import information*/<br />%let settingsXls =Z:\\My Project\\Projects\\PhD Thesis\\StatinCohort\\Input\\Forms\\InputForm_StatinCohortPhD.xlsm;<br />%let h_Infoxls = %str(R:\\Data Warehouse\\Data Manuals\\Hospital %(CIHI DAD%)\\cihi_hosps_master_file.xlsx);<br /><br />/*the target files in local drive S<br />&nbsp&nbsp&nbsp&nbspsee A_import_settings<br />&nbsp&nbsp&nbsp&nbspthe local data, target, reports path are input from the xls file<br />*/<br /><br />/*the target files in local drive S*/<br />/*%let localTargetPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Target;*/<br />/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data; /*the folder to save requested raw data files*/*/<br />/*libname localT \"&localTargetPath\";*/<br /><br />/*the report in local drive S*/<br />%let localReportPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Reports;<br />/*libname localR \"&localReportPath\";*/<br />%let AnalyticalReport=Analytical_Report_StatinCohortPhD.xlsx;<br />%let DataReport=DataSum_Report_StatinCohortPhD.xlsx;<br /><br />/*The following steps are to import file and var description in the data dictionary *******/<br />%let dicXls = S:\\Reference\\Data Warehouse\\Data Manuals\\General Information\\HQC_MOH_DW_data_dictionary.xlsx;<br /><br />%put >>> the local work directory is at %sysfunc(pathname(work));<br /><br />%let theChronicConditionDataPath=P:\\Chronics_SKPop(YaoS)_142\\Output\\Result data;<br />%let theChronicConditionData = popdata_allepi_26mar19;<br /><br /><br /><br />s///<br />t///","children":[{"idx":"EGTask-oyLU9215za4Elsgd","name":"Copy Macro file to Remote Server","children":[{"idx":"CodeTask-8XQczBciSUyozSiJ","name":"Remote settings","NodeDescription":"///t<br />///s<br />/*what is the diff between msb_doctor, and msb_doctor_mobility*/<br /><br /><br />%include \"/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/DoNotDelete Common Macros/MyMacros.sas\" /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_CH_dxtype.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_EX_dxtype.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_CH_dxtype.sas' /LRECL=32767; <br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_EX_dxtype.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/ExpandLst.sas' /LRECL=32767;<br />%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/VarExist.sas' /LRECL=32767;<br />%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/IsEmptyDS.sas' /LRECL=32767;<br /><br />libname Clean \"/sasdata/hisc/shared_data/HQC_share/Clean\";<br /><br />libname Clean17 \"/sasdata/hisc/shared_data/HQC_share/Clean/2017 Data/Clean files\";<br />libname Clean18 \"/sasdata/hisc/shared_data/HQC_share/Clean/2018 Data/Clean files\";<br /><br />/*do not use the folder 'exchange'. That one is quite confusing*/<br /><br />/*assign the address for the exchange folder between local and remote<br />&nbsp&nbsp&nbsp&nbsptheexChangeDir is the LOCAL exchange folder<br />*/<br />%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote;<br />libname transLib \"&exchangeDir\"; <br /><br />%let Rexchange =  /sasdata/hisc/shared_data/HQC_share/Shenzhen/FileExchangeBetweenLocalAndRemote;<br />libname RexLib \"&RExchange\";<br /><br />/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data;*/ /* the folder to save requested raw data files*/<br /><br />/*set raw file names*/<br />%global<br />&nbsp&nbsp&nbsp&nbspexchangeDir Rexchange  dp_benefitFile dp_nonbenefitFile dp_specFile ed_a2012File ed_b2012File<br />&nbsp&nbsp&nbsp&nbsphospitalFile MSBFile MSB_DFile MSB_DocInfoFile PHRS_InfoFile PHRS_CovFile PHRS_RSDCFile PHRS_ArrvFile<br />&nbsp&nbsp&nbsp&nbspPHRS_ResiFile PHRS_Resi_cleanFile PHRS_retrFile VerfMortFile MDS_LTC_File AnalyticalReport DataReport alldinfile<br />;<br /><br />%let dp_benefitFile=hqc.dp_claim;<br />%let dp_nonbenefitFile=hqc.dp_claim_non_ben;<br />%let dp_specFile = hqc.dp_drug;<br /><br />%let ed_a2012File=hqc.ED_F_2012;<br />%let ed_b2012File=hqc.nacrs;<br /><br />%let hospitalFile=clean18.cihi_eoc_3_jfm18_01aug2018;<br /><br />%let MSBFile=hqc.MSB_BILLING;<br />%let MSB_DFile=hqc.MSB_Doctor;<br />%let MSB_DocInfoFile=hqc.MSB_DOCTOR_MOBILITY;<br /><br />%let PHRS_InfoFile = hqc.PHRS_PERS_INFO;<br />%let PHRS_CovFile = hqc.PHRS_PERS_PROG;<br />%let PHRS_RSDCFile=hqc.phrs_pers_rsdc;<br />%let PHRS_ArrvFile = HQC.phrs_pers_arrv;<br />%let PHRS_ResiFile = HQC.phrs_pers_resc;<br />%let PHRS_Resi_cleanFile=clean17.PHRS_PERS_RESC_3_AMJ17_02NOV2017; /*this is the last file with income quintile, AMJ = Apr May Jun*/<br />%let PHRS_retrFile = HQC.PHRS.PERS_RETR;<br />%let VerfMortFile = clean18.phrs_dths_3_jfm18_15aug2018;<br />%let MDS_LTC_File = hqc.MDS_ASSESSMENT_F_2015;<br /><br />%let AnalyticalReport=Analytical_Report_StatinCohortPhD.xlsx;<br />%let DataReport=DataSum_Report_StatinCohortPhD.xlsx;<br /><br />/*see B_remote setting, the folder is defined in and input from the input xls file*/<br /><br />/*the source files on remote server*/<br />/*%let remoteSourcePath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Source;*/<br />/*libname remoteS \"&remoteSourcePath\";*/<br />/*the target files on remote server*/<br />/*%let remoteTargetPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Target;*/<br />/*libname remoteT \"&remoteTargetPath\";*/<br /><br />/*the report on remote server*/<br />/*%let remoteReportPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Reports;*/<br />/*libname remoteR \"&remoteReportPath\";*/<br /><br />/*include the raw file extracing macros*/<br />%let alldinfile=clean17.alldin_4_jas17_03oct2017;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_CIHI.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/Addquotes.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/reformat_datevars.sas' /LRECL=32767;<br />%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767;<br />%include '/SAS_data/dw0/HQC_share/Xinya/Macros/GEO_INCQTL_assign.sas' /LRECL=32767;<br /><br />/*the following is for calculating the Charlson-elixer score*/<br />%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_CH_dxtype.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_EX_dxtype.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_CH_dxtype.sas' /LRECL=32767; <br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_EX_dxtype.sas' /LRECL=32767;<br />%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/ExpandLst.sas' /LRECL=32767;<br />%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/VarExist.sas' /LRECL=32767;<br />%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/IsEmptyDS.sas' /LRECL=32767;<br /><br />%put >>> the remote work directory is at %sysfunc(pathname(work));<br /><br /><br />s///<br />t///","children":[{"idx":"CodeTask-kdXNatjk26MJ53wd","name":"A_import settings","NodeDescription":"///t<br />///s<br />/*Import settings from the setting xls file (&settingXls)*/<br />data _null_;run;<br /><br />%global  localParentFolder localDataFolder localReportFolder localTargetPath localDataPath localReportPath<br />RemoteParentFolder RemoteSourcePath DataStartDate DataEndDate;<br /><br />Filename setXls \"&settingsXls\";<br /><br />/*create a folder dedicated for the project (by rem id?)*/<br />/*copy a back up of the setting xls file in the log directory*/<br />/*add a file for log (create date, etc)*/<br /><br />/*1.Import the dates*/<br />/*always create an empty data set first<br />&nbsp&nbsp&nbsp&nbspotherwise, when the source excel table contains 0 records, the import proc won't run,<br />&nbsp&nbsp&nbsp&nbspthe setting file won't be created<br />&nbsp&nbsp&nbsp&nbsplater, no files were copied to the remote site to overwrite the old files<br />&nbsp&nbsp&nbsp&nbspAs such, the old setting files will be used in getting data, which is wrong <br />*/<br />data translib.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspformat Items $100. Values $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a1_MasterInput<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"MasterInput\";<br />run;<br />%print(data=translib.a1_MasterInput);<br /><br />&nbsp&nbsp&nbsp&nbsp/*Determine the local data/target/reports folder*/<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder';<br />&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value);<br />run;<br /><br />%let localParentFolder=%sysfunc(strip(&localParentFolder));<br />%let localTargetPath=&localParentFolder.\\Output\\Result data;<br />%put >>> &localTargetPath;<br />%let localDataPath=&localParentFolder.\\Data; /*the folder to save requested raw data files*/<br />libname localT \"&localTargetPath\";<br />libname localD \"&localDataPath\";<br />%put >>> &localDataPath;<br />/*the report in local drive S*/<br />%let localReportPath=&localParentFolder.\\Output\\Reports;<br />%put >>> &localReportPath;<br />libname localR \"&localReportPath\";<br /><br /><br /><br />/*2.Import the sourcefiles and fields*/<br />data translib.A2_CohortDataVars;<br />&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. VarName_in_Raw_File $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.A2_CohortDataVars (<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=(Final_status=1) <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= final_status file_nick_name VarName_in_Raw_File<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"StudyFields\";<br />run;<br /><br /><br />/*3 import the case def ICD code list*/<br />data translib.a3_ICDDx;<br />&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a3_ICDDx (where=(code ne \"\") keep= Source_file Code_Version Code Disease Description)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"ICD_Codes\";<br />run;<br />%print(data=translib.a3_ICDDx);<br /><br />/*4 import the case def procedure code list*/<br />data translib.a4_IntvnDx;<br />&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a4_IntvnDx (where=(code ne \"\") keep=Source_file Code_Version Code Disease Description)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"Procedure_Codes\";<br />run;<br />%print(data=translib.a4_IntvnDx);<br /><br />/*5 import the case def SK fee for service code list*/<br />data translib.a5_FSC;<br />&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a5_FSC (where=(code ne \"\") keep=Source_file Code_Version Code Disease Description)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"SK_fee_Codes\";<br />run;<br />%print(data=translib.a5_FSC);<br /><br />/*6 import the case def DINPIN list*/<br />data translib.a6_DINDx;<br />&nbsp&nbsp&nbsp&nbspformat Therapeutic_Class $100. Generic_Name $100. DIN $100. Disease $100. Description $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a6_DINDx (where=(DIN ne \"\") keep=Therapeutic_Class Generic_Name DIN Disease Description)<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"DINs\";<br />run;<br />%print(data=translib.a6_DINDx);<br /><br />/*7 import the list of source files for case definition*/<br />data translib.a7_DxFiles;<br />&nbsp&nbsp&nbsp&nbspformat DxFiles $100. Inclusion 8.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a7_DxFiles (where=(Inclusion =1) )<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"DxFiles\";<br />run;<br />%print(data=translib.a7_DxFiles);<br /><br />/*8 import the list of additional request*/<br />data translib.a8_AddRequest;<br />&nbsp&nbsp&nbsp&nbspformat Class $100. Description $100. SourceData $100. Syntax $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a8_AddRequest  (where=(syntax ne '') )<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"Additional request\";<br />run;<br />%print(data=translib.a8_AddRequest);<br /><br />/*9 import cohort exclusion criteria*/<br />data translib.a9_CohortExclusion;<br />&nbsp&nbsp&nbsp&nbspformat Source $100. Criteria $100. Syntax $100. Description $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a9_CohortExclusion<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"cohort_exclusion\";<br />run;<br />%print(data=translib.a9_CohortExclusion);<br /><br />%put >>> &h_Infoxls;<br /><br />/*<br />&nbsp&nbsp&nbsp&nbspif the source xls file is open by other users, the import program may report error<br />&nbsp&nbsp&nbsp&nbspin that case, open the Excel application (do not have to open the source xls file, just the Excel App), <br />&nbsp&nbsp&nbsp&nbspthen run the following import program<br />*/<br />/*10 import hospital info*/<br />proc import datafile=\"&h_Infoxls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=translib.a10_hospInfo<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"facilities\";<br />run;<br />%print(data=translib.a10_hospInfo);<br /><br /><br />/*import ed data description*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp1 (where = (f8='Y')) /*if required by HQC*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"ed (NACRS)\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp1);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp2;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_ed_a2012';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp1 (firstOBS=3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf6=strip(upcase(f6));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf7=strip(upcase(f7));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f6;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f7;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f10;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f6='' and f7 ='' and f10 ='');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/****************************************************************/<br />&nbsp&nbsp&nbsp&nbsp<br />/*import hospital data description*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp11<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Hosp (DAD)\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp11);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp12;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_hosp';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp11 (firstOBS=3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf5=strip(upcase(f5));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf14=strip(upcase(f14));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf15=strip(upcase(f15));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf16=strip(upcase(f16));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f5;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f15;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f14;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f16;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f5='' and f14 ='' and f15 ='' and f16='');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/****************************************************************/<br />&nbsp&nbsp&nbsp&nbsp<br />/*import phrs data description*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp21<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"PHRS\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp21);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp22;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_phrs_';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp21 (firstOBS=3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/****************************************************************/<br />&nbsp&nbsp&nbsp&nbsp<br />/*import drug claim variable description*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp31<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Drug plan\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp31);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp32;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_dp_';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp31 (firstOBS=3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/****************************************************************/<br /><br />/*import description of msb billing variables*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp41<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Claims (MSB)\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp41);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp42;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp41 (firstOBS=4);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/****************************************************************/<br /><br />/*import description of msb mobility doc info variables*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp51<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Mobility (MSB docs)\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp52;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp51 (firstOBS=4);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/****************************************************************/<br /><br /><br />&nbsp&nbsp&nbsp&nbsp/*create an emtpy data set for var description*/<br />&nbsp&nbsp&nbsp&nbspData importDIc_tmp91;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete;<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp/*Append  descriptions from source data files*/<br />&nbsp&nbsp&nbsp&nbspdata importDIc_tmp91;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91 importDIc_tmp2 importDIc_tmp12 importDIc_tmp22 importDIc_tmp32 importDIc_tmp42 importDIc_tmp52;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br />&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(varname, ' ');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then varname =substr(varname, 1, pos1-1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br /><br />/*Determine the remote data/target/reports folder*/<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder';<br />&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value);<br />run;<br />%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder));<br />%put >>> RemoteParentFolder = &RemoteParentFolder;<br />%let RemoteSourcePath=&RemoteParentFolder./Source;<br />%put >>>RemoteSourcePath= &RemoteSourcePath;<br /><br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='DataStartDate';<br />&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.);<br />&nbsp&nbsp&nbsp&nbspformat datevalue date9.;<br />&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.));<br />run;<br />%let DataStartDate=%bquote('&DataStartDate')d;<br />%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate));<br />%put >>> DataStartDate = &DataStartDate;<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='DataEndDate';<br />&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.);<br />&nbsp&nbsp&nbsp&nbspformat datevalue date9.;<br />&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.));<br />run;<br />%let DataEndDate=%bquote('&DataEndDate')d;<br />%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate));<br />%put >>> DataEndDate = &DataEndDate;<br /><br />/*import data from MDS LTC (MDS_ASSESSMENT_F_2015)  <br />&nbsp&nbsp&nbsp&nbspfor diagnoses (if in DXFiles, long_term_care =1), <br />&nbsp&nbsp&nbsp&nbspit is not to get any dxlist (not like the ICD list, etc), rather it is go run a specific macro so as to get the study patients.<br />&nbsp&nbsp&nbsp&nbspe.g., to have dementia patients by running specific macros,<br />&nbsp&nbsp&nbsp&nbspor<br />&nbsp&nbsp&nbsp&nbspto have all who admitted into LTC within a certain period of time (like the Frailty-HRPIM study)<br /><br />&nbsp&nbsp&nbsp&nbspfor MDS_LTC data requested for a cohort, the fields are from two sources:<br />&nbsp&nbsp&nbsp&nbsp1) by default, get key_hsn, create_date,  MDS_AB1, AB1b, A3, and R4, these fields has been specified in A2_CohortDataVars<br />&nbsp&nbsp&nbsp&nbsp2) fields specified in sheet 'vars_MDS_LTC'<br /><br />&nbsp&nbsp&nbsp&nbspNote that the two sources may have overlapping vars; therefore they are putting together to have a list of distinct vars.<br />&nbsp&nbsp&nbsp&nbspThe distinct vars are then added to A2_CohortDataVars<br />*/<br />/*21 import data vars from sheet 'vars_mds_ltc' LTC file*/<br />data translib.a2_vars;<br />&nbsp&nbsp&nbsp&nbspformat final_status $100. file_nick_name $100. VarName_in_Raw_File $100.;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />%print(data=translib.a2_cohortdatavars);<br />data _tmp201;<br />&nbsp&nbsp&nbsp&nbspformat variable $100.  ;<br />&nbsp&nbsp&nbsp&nbspdelete;<br />run;<br />proc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbspout=_tmp201 (keep=variable where=(variable ne ''))<br />&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp;<br />getnames=yes;<br />sheet=\"vars_MDS_LTC\";<br />run;<br />data _tmp202;<br />&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. ;<br />&nbsp&nbsp&nbsp&nbspset _tmp201;<br />&nbsp&nbsp&nbsp&nbsprename variable = VarName_in_Raw_File;<br />&nbsp&nbsp&nbsp&nbspfinal_status =1;<br />&nbsp&nbsp&nbsp&nbspfile_nick_name='mds_ltc';<br />run;<br />/*get ltc vars already input into a2 from sheet 'StudyFields'*/<br />data _tmp203;<br />&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars;<br />&nbsp&nbsp&nbsp&nbspif file_nick_name='mds_ltc' ;<br />run;<br /><br />/*from _tmp202, remove those already appeared in _tmp203*/<br />%sqljoinv2(<br />&nbsp&nbsp&nbsp&nbspt1=_tmp202,<br />&nbsp&nbsp&nbsp&nbsptarget=_tmp204,<br />&nbsp&nbsp&nbsp&nbspvars=t1.*,<br />&nbsp&nbsp&nbsp&nbspfilters=%str(VarName_in_Raw_File not in (select  VarName_in_Raw_File from _tmp203))<br />);<br /><br />/*attach vars in _tmp202 to a2*/<br />data translib.a2_cohortdatavars;<br />&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars &nbsp&nbsp&nbsp&nbsp_tmp204;<br />&nbsp&nbsp&nbsp&nbspVarName_in_Raw_File=upcase(strip(VarName_in_Raw_File));<br />run;<br />%sort(data =  translib.a2_cohortdatavars, sorter=file_nick_name VarName_in_Raw_File);<br /><br /><br />/*get dictionary for mds_ltc vars*/<br />/*import description of variables from mds_ltc */<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp205<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"MDS-LTC\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51);*/<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp206;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'mds_ltc';<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp205 (firstOBS=3);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and trailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc lagvar;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='') ;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*For some of the vars, the description is in two rows. The var name appears in the first row, but not the second row<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp207;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp206;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat lagVar1 $100. lagDesc $1000. lagNote $1000. lagMeta $1000.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagVar1 = lag(variable);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagdesc = lag(description);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagNotes = lag(notes);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagMeta = lag(metadoc);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif variable='' then do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvariable = lagVar1;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription = strip(Lagdesc) || ' ' || description;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes = strip(lagNotes) || ' ' || notes;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc = strip(LagMeta) || ' ' || metadoc;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sort(data=importDIc_tmp207, sorter=variable obs);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp208;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp207;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby variable obs;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.variable;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop obs lagVar1 lagdesc lagNotes lagMeta;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br />&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset  translib.A11_DataVarDic importDIc_tmp206;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(variable, ' ');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then variable =substr(variable, 1, pos1-1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V');<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3;<br />&nbsp&nbsp&nbsp&nbsprun;<br />/****************************************************************/<br /><br />/**getting macro file (full path) and command lines for getting dx from MDS_LTC files**/<br /><br />%macro getLTCMacro;<br /><br />&nbsp&nbsp&nbsp&nbsp/*by default, always have a empty macro (for a later task, there has to be a file to be transferred)*/<br />&nbsp&nbsp&nbsp&nbsp/*create an empty sas file. If A12 does not contain a real sas file, transfer the empty sas file*/<br />&nbsp&nbsp&nbsp&nbspfilename EmpSAS \"&localDataPath.\\empty.sas\";<br />&nbsp&nbsp&nbsp&nbspdata _null_;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfile EmpSAS;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspput ;<br />&nbsp&nbsp&nbsp&nbsprun;<br /><br />&nbsp&nbsp&nbsp&nbspproc import datafile=\"&settingsXls\"<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=translib.a12_DxMDSLTC (where = (strip(theFile) ne ''))<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=yes;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Dx_MDS_LTC_Macro\";<br />&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp%nobs(data=translib.a12_DxMDSLTC);<br />&nbsp&nbsp&nbsp&nbsp%if %eval(&nobs=0) %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata translib.a12_DxMDSLTC;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat thePath $1000. theFile $100. theLines $1000.;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePath = \"&localDataPath\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheFile =\"empty.sas\";<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp%end;<br />%mend getLTCMacro;<br />%getLTCMacro;<br /><br /><br /><br /><br /><br /><br /><br />&nbsp&nbsp&nbsp&nbsp%delData(data=importDIc_tmp1 importDIc_tmp2 importDIc_tmp11 importDIc_tmp12<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp21 importDIc_tmp22 importDIc_tmp31 importDIc_tmp32<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp41 importDIc_tmp42 importDIc_tmp51 importDIc_tmp52<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp91 importDIc_tmp92<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp205 importDIc_tmp206 importDIc_tmp207 importDIc_tmp208<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_tmp201 _tmp202 _tmp203 _tmp204 <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp);<br />&nbsp&nbsp&nbsp&nbsp/*************************************************************************************/<br /><br /><br />s///<br />t///","children":[{"idx":"EGTask-cWNDcRk2GJkT9UJm","name":"A1_Copy data sets in transLib to Remote Server","children":[{"idx":"CodeTask-CinsaqqKpNiJAroE","name":"A2_at Local, del files in transDir","NodeDescription":"///t<br />///s<br />/**/<br />/*%delData(data=translib.a1_MasterInput translib.a2_vars */<br />/*translib.a3_icddx translib.a4_intvndx translib.a5_fsc translib.a6_dindx*/<br />/*translib.a7_dxfiles);*/<br /><br />Proc delete data=translib._all_;<br />run;<br /><br />s///<br />t///","children":[{"idx":"CodeTask-B7GYeGViHcyJuijA","name":"B_Remote_get settings into macro variables","NodeDescription":"///t<br />///s<br />/*get the project start date. It is also the last Xtrc Date*/<br />data _null_;run;<br /><br />%global <br />&nbsp&nbsp&nbsp&nbspProjectName<br />&nbsp&nbsp&nbsp&nbspProjectStartDate<br />&nbsp&nbsp&nbsp&nbspContact<br />&nbsp&nbsp&nbsp&nbspEmail<br />&nbsp&nbsp&nbsp&nbspDataStartDate<br />&nbsp&nbsp&nbsp&nbspDataEndDate<br />&nbsp&nbsp&nbsp&nbspEntryStartDate<br />&nbsp&nbsp&nbsp&nbspEntryEndDate<br />&nbsp&nbsp&nbsp&nbspEntryStartYear<br />&nbsp&nbsp&nbsp&nbspEntryEndYear<br />&nbsp&nbsp&nbsp&nbspEntryYears&nbsp&nbsp&nbsp&nbsp<br /><br />&nbsp&nbsp&nbsp&nbspLastXtrcDate<br />&nbsp&nbsp&nbsp&nbspXtrc_Start_MSB<br />&nbsp&nbsp&nbsp&nbspXtrc_End_MSB<br />&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_Ben<br />&nbsp&nbsp&nbsp&nbspXtrc_End_DP_Ben<br />&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_NBen<br />&nbsp&nbsp&nbsp&nbspXtrc_End_DP_NBen<br />&nbsp&nbsp&nbsp&nbspXtrc_End_Cover<br />&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_SPEC<br />&nbsp&nbsp&nbsp&nbspXtrc_End_DP_SPEC<br />&nbsp&nbsp&nbsp&nbspXtrc_MDS_LTC<br />&nbsp&nbsp&nbsp&nbspLPath_MDSLTC_DxMacro<br />&nbsp&nbsp&nbsp&nbspFile_MDSLTC_DxMacro<br />&nbsp&nbsp&nbsp&nbspCommand_MDSLTC_DxMacro<br /><br />&nbsp&nbsp&nbsp&nbspRemoteParentFolder<br />&nbsp&nbsp&nbsp&nbspremoteSourcePath<br />&nbsp&nbsp&nbsp&nbspremoteReportPath<br />&nbsp&nbsp&nbsp&nbspremoteTargetPath<br />&nbsp&nbsp&nbsp&nbsplocalParentFolder<br />&nbsp&nbsp&nbsp&nbsplocalDataPath<br />&nbsp&nbsp&nbsp&nbsplocalTargetPath<br />;<br /><br />/*get remote path*/<br />%print(data=RexLib.a1_MasterInput);<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder';<br />&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value);<br />run;<br />%put >>> &RemoteParentFolder;<br /><br />%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder));<br />%put >>> &RemoteParentFolder;<br /><br />/*the source files on remote server*/<br />%let remoteSourcePath=&RemoteParentFolder./Source;<br />%put >>> &remoteSourcePath;<br />libname remoteS \"&remoteSourcePath\";<br />/*the target files on remote server*/<br />%let remoteTargetPath=&RemoteParentFolder./Target;<br />libname remoteT \"&remoteTargetPath\";<br />/*the report on remote server*/<br />%let remoteReportPath=&RemoteParentFolder./Reports;<br />libname remoteR \"&remoteReportPath\";<br /><br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder';<br />&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value);<br />run;<br />%let localParentFolder=%sysfunc(strip(&localParentFolder));<br />%put >>> &localParentFolder;<br />%let localDataPath=&localParentFolder.\\Data;<br />%put >>> localDataPath=&localDataPath;<br />%let localTargetPath=&localParentFolder.\\Output\\Result data;<br />%put >>> localTargetPath = &localTargetPath;<br /><br /><br />/*copy all files from remote exchange to remoteS*/<br />proc datasets lib=Rexlib;<br />&nbsp&nbsp&nbsp&nbspcopy out=remoteS;<br />run;<br /><br />Proc delete data=Rexlib._all_;<br />run;<br /><br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif Items='ProjectStartDate';<br />&nbsp&nbsp&nbsp&nbsp/*in the source data, the date values are characters<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the folloiwng steps, the character date values are changed to numberical datavalues, <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen put into macro variables<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhy not directly put characters into macro variable values?<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspbecause the original character is like 'yyyymmdd', while the required data format is 'ddmmmyyyy'<br />&nbsp&nbsp&nbsp&nbsp*/<br />&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.);<br />&nbsp&nbsp&nbsp&nbspformat datevalue date9.;<br />&nbsp&nbsp&nbsp&nbspcall symput('ProjectStartDate', put(datevalue, date9.));<br />run;<br />%let ProjectStartDate=%bquote('&ProjectStartDate')d;<br />%let ProjectStartDate=%substr(&ProjectStartDate, 1, %length(&ProjectStartDate));<br />%put >>> ProjectStartDate = &ProjectStartDate;<br />%let LastXtrcDate=&ProjectStartDate;<br />%put >>> ProjectStartDate = &ProjectStartDate;<br />%put >>> LastXtrcDate=&ProjectStartDate;<br /><br />/*get the data start and end dates*/<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='DataStartDate';<br />&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.);<br />&nbsp&nbsp&nbsp&nbspformat datevalue date9.;<br />&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.));<br />run;<br />%let DataStartDate=%bquote('&DataStartDate')d;<br />%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate));<br />%put >>> DataStartDate = &DataStartDate;<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='DataEndDate';<br />&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.);<br />&nbsp&nbsp&nbsp&nbspformat datevalue date9.;<br />&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.));<br />run;<br />%let DataEndDate=%bquote('&DataEndDate')d;<br />%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate));<br />%put >>> DataEndDate = &DataEndDate;<br /><br />/*get the cohort entrydates*/<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='EntryStartDate';<br />&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.);<br />&nbsp&nbsp&nbsp&nbspformat datevalue date9.;<br />&nbsp&nbsp&nbsp&nbspcall symput('EntryStartDate', put(datevalue, date9.));<br />run;<br />%let EntryStartDate=%bquote('&EntryStartDate')d;<br />%let EntryStartDate=%substr(&EntryStartDate, 1, %length(&EntryStartDate));<br />%put >>> EntryStartDate = &EntryStartDate;<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='EntryEndDate';<br />&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.);<br />&nbsp&nbsp&nbsp&nbspformat datevalue date9.;<br />&nbsp&nbsp&nbsp&nbspcall symput('EntryEndDate', put(datevalue, date9.));<br />run;<br />%let EntryEndDate=%bquote('&EntryEndDate')d;<br />%let EntryEndDate=%substr(&EntryEndDate, 1, %length(&EntryEndDate));<br />%put >>> EntryEndDate = &EntryEndDate;<br /><br />%let EntryStartYear = %sysfunc(year(&EntryStartDate));<br />%put >>> EntryStartYear=&EntryStartYear;<br />%let EntryEndYear = %sysfunc(year(&EntryEndDate));<br />%put >>> EntryEndYear=&EntryEndYear;<br />%let EntryYears = %eval(&EntryEndYear - &EntryStartYear +1);<br />%put >>> EntryYears=&EntryYears;<br /><br /><br />/*The  project name, contact, and email*/<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='ProjectName';<br />&nbsp&nbsp&nbsp&nbspcall symput('ProjectName', value);<br />run;<br />%put >>> ProjectName = &ProjectName;<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='Contact';<br />&nbsp&nbsp&nbsp&nbspcall symput('Contact', value);<br />run;<br />%put >>> Contact = &Contact;<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput;<br />&nbsp&nbsp&nbsp&nbspif items='Email';<br />&nbsp&nbsp&nbsp&nbspcall symput('Email', value);<br />run;<br />%put >>> Email = &Email;<br /><br /><br />/*the following part is to determine the xtrc_date for each sources<br />&nbsp&nbsp&nbsp&nbspMSB, Drug claims, coverage period (same for demo, resitype)<br />&nbsp&nbsp&nbsp&nbspThe cleaned hospital file does not require xtrc date<br />&nbsp&nbsp&nbsp&nbsp?? How about the mortality record file (verfdt), the emergancy file (f_2012)<br /><br />*/<br />%put >>> &dataStartDate;<br />/*the xtrc_dates*/<br />/*determine the msb xtrc_date***********/<br />%freq(data=clean.xtrc_dates, table=ds);<br />%sort(data=clean.xtrc_dates, target=b11, <br />&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date));<br /><br />data b12;<br />&nbsp&nbsp&nbsp&nbspset b11;<br />&nbsp&nbsp&nbsp&nbspif ds = 'msb_billing';<br />&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate;<br />&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate;/* &LastXtrcDate;*/<br />&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.;<br />&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br />&nbsp&nbsp&nbsp&nbsp;<br />run;<br /><br /><br />%sort(data=b12, sorter=xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b13;<br />&nbsp&nbsp&nbsp&nbspset b12 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_MSB', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_Start_MSB=%str(%')&Xtrc_Start_MSB.%str(%')d;<br />%let Xtrc_Start_MSB= %substr(&Xtrc_Start_MSB, 1, %length(&Xtrc_Start_MSB));<br />%put >>> &Xtrc_Start_MSB;<br /><br />%sort(data=b12, sorter=descending xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b14;<br />&nbsp&nbsp&nbsp&nbspset b12 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_MSB', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_End_MSB=%str(%')&Xtrc_End_MSB.%str(%')d;<br />%let Xtrc_End_MSB= %substr(&Xtrc_End_MSB, 1, %length(&Xtrc_End_MSB));<br />%put >>> &Xtrc_End_MSB;<br />/******************************************/<br /><br />/*determine the benefit drug claim xtrc_date***********/<br />%sort(data=clean.xtrc_dates, target=b21, <br />&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date));<br />data b22;<br />&nbsp&nbsp&nbsp&nbspset b21;<br />&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim';<br />&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate;<br />&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate;/* &LastXtrcDate;*/<br />&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.;<br />&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br />&nbsp&nbsp&nbsp&nbsp;<br />run;<br /><br /><br />%sort(data=b22, sorter=xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b23;<br />&nbsp&nbsp&nbsp&nbspset b22 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_Ben', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_Start_DP_Ben=%str(%')&Xtrc_Start_DP_Ben.%str(%')d;<br />%let Xtrc_Start_DP_Ben= %substr(&Xtrc_Start_DP_Ben, 1, %length(&Xtrc_Start_DP_Ben));<br />%put >>> &Xtrc_Start_DP_Ben;<br /><br />%sort(data=b22, sorter=descending xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b24;<br />&nbsp&nbsp&nbsp&nbspset b22 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_Ben', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_End_DP_Ben=%str(%')&Xtrc_End_DP_Ben.%str(%')d;<br />%let Xtrc_End_DP_Ben= %substr(&Xtrc_End_DP_Ben, 1, %length(&Xtrc_End_DP_Ben));<br />%put >>> &Xtrc_End_DP_Ben;<br />/******************************************/<br /><br />/*determine the non-benefit drug claim xtrc_date***********/<br />%sort(data=clean.xtrc_dates, target=b31, <br />&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date));<br />data b32;<br />&nbsp&nbsp&nbsp&nbspset b31;<br />&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim_non_ben';<br />&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate;<br />&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate;/* &LastXtrcDate;*/<br />&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.;<br />&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br />&nbsp&nbsp&nbsp&nbsp;<br />run;<br /><br /><br />%sort(data=b32, sorter=xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b33;<br />&nbsp&nbsp&nbsp&nbspset b32 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_NBen', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_Start_DP_NBen=%str(%')&Xtrc_Start_DP_NBen.%str(%')d;<br />%let Xtrc_Start_DP_NBen= %substr(&Xtrc_Start_DP_NBen, 1, %length(&Xtrc_Start_DP_NBen));<br />%put >>> &Xtrc_Start_DP_NBen;<br /><br />%sort(data=b32, sorter=descending xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b34;<br />&nbsp&nbsp&nbsp&nbspset b32 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_NBen', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_End_DP_NBen=%str(%')&Xtrc_End_DP_NBen.%str(%')d;<br />%let Xtrc_End_DP_NBen= %substr(&Xtrc_End_DP_NBen, 1, %length(&Xtrc_End_DP_NBen));<br />%put >>> &Xtrc_End_DP_NBen;<br />/******************************************/<br /><br />*&xtrc_cover;<br />/*determine the coverage xtrc_date***********/<br />%sort(data=clean.xtrc_dates, target=b41, <br />&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date));<br />/*%freq(data=b41, table=ds);*/<br />data b42;<br />&nbsp&nbsp&nbsp&nbspset b41;<br />&nbsp&nbsp&nbsp&nbspif ds = 'phrs_pers_prog';<br />&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate;<br />&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate;/* &LastXtrcDate;*/<br />&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.;<br />&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br />&nbsp&nbsp&nbsp&nbsp;<br />run;<br /><br />%sort(data=b42, sorter=xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b43;<br />&nbsp&nbsp&nbsp&nbspset b42 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_Cover', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_Start_Cover=%str(%')&Xtrc_Start_Cover.%str(%')d;<br />%let Xtrc_Start_Cover= %substr(&Xtrc_Start_Cover, 1, %length(&Xtrc_Start_Cover));<br />%put >>> &Xtrc_Start_Cover;<br /><br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b44;<br />&nbsp&nbsp&nbsp&nbspset b42 end=last;<br />&nbsp&nbsp&nbsp&nbspif last;<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_Cover', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_End_Cover=%str(%')&Xtrc_End_Cover.%str(%')d;<br />%let Xtrc_End_Cover= %substr(&Xtrc_End_Cover, 1, %length(&Xtrc_End_Cover));<br />%put >>> &Xtrc_End_Cover;<br />/******************************************/<br /><br />/*determine the drug spec xtrc_date***********/<br />%sort(data=clean.xtrc_dates, target=b51, <br />&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date));<br />data b52;<br />&nbsp&nbsp&nbsp&nbspset b51;<br />&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim' or ds = 'dp_claim_non_ben';<br />&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate;<br />&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate;/* &LastXtrcDate;*/<br />&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.;<br />&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br />&nbsp&nbsp&nbsp&nbsp;<br />run;<br /><br />%sort(data=b52, sorter=xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b53;<br />&nbsp&nbsp&nbsp&nbspset b52 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_SPEC', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_Start_DP_SPEC=%str(%')&Xtrc_Start_DP_SPEC.%str(%')d;<br />%let Xtrc_Start_DP_SPEC= %substr(&Xtrc_Start_DP_SPEC, 1, %length(&Xtrc_Start_DP_SPEC));<br />%put >>> &Xtrc_Start_DP_SPEC;<br /><br />%sort(data=b52, sorter=descending xtrc_date);<br />/*the earliest xtrc_date should be the last one in the rows with a negative<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br />data b54;<br />&nbsp&nbsp&nbsp&nbspset b52 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_SPEC', put(xtrc_date, date9.));<br />run;<br />%let Xtrc_End_DP_SPEC=%str(%')&Xtrc_End_DP_SPEC.%str(%')d;<br />%let Xtrc_End_DP_SPEC= %substr(&Xtrc_End_DP_SPEC, 1, %length(&Xtrc_End_DP_SPEC));<br />%put >>> &Xtrc_End_DP_SPEC;<br />/******************************************/<br /><br />/***get xtrc_date for mds_ltc data****************************/<br />data b61;<br />&nbsp&nbsp&nbsp&nbspset clean.xtrc_dates;<br />&nbsp&nbsp&nbsp&nbspif xtrc_date < = &LastXtrcDate  and ds='mds_assessment_f_2015';<br />run;<br />%sort(data=b61, sorter=descending xtrc_date);<br />data _null_;<br />&nbsp&nbsp&nbsp&nbspset b61 (obs=1);<br />&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_MDS_LTC',  put(xtrc_date, date9.)); <br />run;<br />%let XTRC_MDS_LTC=%str(%')&XTRC_MDS_LTC.%str(%')d;<br />%let XTRC_MDS_LTC= %substr(&XTRC_MDS_LTC, 1, %length(&XTRC_MDS_LTC));<br />%put >>> &XTRC_MDS_LTC;<br /><br />/****************************************************/<br /><br />/*get the file (full path) and macro command for getting dx info from MDS_LTC*/<br />%macro getMDSMacro;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*initially, let the following variables = nothing*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let File_MDSLTC_DxMacro=;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let Command_MDSLTC_DxMacro =;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data =remoteS.A12_DXMDSLTC );<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the path, file name and command lines*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remoteS.A12_DXMDSLTC (obs=1);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('LPath_MDSLTC_DxMacro',  thePath); <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('File_MDSLTC_DxMacro',  theFile); <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('Command_MDSLTC_DxMacro',  theLines); <br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun;<br />&nbsp&nbsp&nbsp&nbsp<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*remove the slash at the end of the path*/<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%sysfunc(strip(&LPath_MDSLTC_DxMacro));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %substr(&LPath_MDSLTC_DxMacro, %length(&LPath_MDSLTC_DxMacro), 1) = \\ %then %do;<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%substr(&LPath_MDSLTC_DxMacro, 1, %eval(%length(&LPath_MDSLTC_DxMacro)-1));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end;<br /><br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro= %sysfunc(strip(&LPath_MDSLTC_DxMacro));<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the local macro file to get dx data from MDS_LTC = %str(&LPath_MDSLTC_DxMacro.\\&File_MDSLTC_DxMacro);<br />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the remote macro file to get dx data from MDS_LTC = %str(&remoteSourcePath.\\&File_MDSLTC_DxMacro);<br />%mend getMDSMacro;<br />%getMDSMacro;<br /><br />%freq(source=clean.xtrc_dates, table=ds);<br /><br /><br /><br /><br />s///<br />t///","children":[{"idx":"EGTask-yUjgFuvpaSgEzUDM","name":"Copy LTCMacro to Remote","custparents":[{"idx":"CodeTask-B7GYeGViHcyJuijA"}]}],"custparents":[{"idx":"CodeTask-CinsaqqKpNiJAroE"}]}],"custparents":[{"idx":"EGTask-cWNDcRk2GJkT9UJm"}]}],"custparents":[{"idx":"CodeTask-kdXNatjk26MJ53wd"}]}],"custparents":[{"idx":"CodeTask-8XQczBciSUyozSiJ"}]}],"custparents":[{"idx":"EGTask-oyLU9215za4Elsgd"}]}],"custparents":[{"idx":"CodeTask-lm45gKn6MFkGPZo4"}]}]}]}]}]