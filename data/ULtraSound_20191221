{"idx":"ProjectCollection-cmSbt48MqRzD7t79","name":"UltraS_20191226","children":[{"idx":"MYdb4d3945-343d-4214-b73d-a9c85e13d9a9","name":"Raw Data New","custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"}],"NodeDescription":"<p>///t</p><p>t///</p><p>Watch this</p><iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/esMlSF_CbsQ?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p><br></p><p><span style=\"background-color: rgb(255, 255, 0);\">[to do]</span></p><ol><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Make a master_phrs_resi_clean, get Residence code, dissemination area, and full postal code ever partially or fully overlapping with the study period of all SK residence. (Individual can have multiple records). <strong>Done</strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>For charlson score, need to look back for 5 years, <strong>Done</strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Need to have all RIS data and save to localD, <strong>Done</strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span><span style=\"background-color: rgb(255, 255, 0);\">Need a A5_... for FSC code for MSB U.S, and a Ax .. for Code for RIS data</span></li></ol><p><br></p>"},{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f","name":"Analysis NonPreg","custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"}],"children":[{"idx":"MY5beefc59-f4f0-4e53-90ab-4e95025261a9","name":"Part 1 define cohort","custparents":[{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"},{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"}],"children":[{"idx":"MY1201b790-a690-4134-8402-8754da40b4aa","name":"A Using PHRS (VX1A)","custparents":[{"idx":"MY5beefc59-f4f0-4e53-90ab-4e95025261a9"}],"children":[{"idx":"MYc50e3b15-92f8-4d7f-aca4-8881e5f466f6","name":"Part1.A1 individuals in PHRS 2014-2018 (VX1A1)","custparents":[{"idx":"MY1201b790-a690-4134-8402-8754da40b4aa"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/kQpRBwqu-FY?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p>/*VX1A1 individuals in PHRS 2014 to 2018</p><p>This part is done, the file master_cohort is the crude cohort, and was unziped in prog 'VXA'</p><p>*/</p><p>%print(data=master_cohort);</p><p>s///</p><p>t///</p>"},{"idx":"MYfcd282a1-f3e2-4f6d-870a-b14671198ee9","name":"Part1.A.2. # days covered in PHRS (VX1A2)","custparents":[{"idx":"MY1201b790-a690-4134-8402-8754da40b4aa"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/-vkMOlLo7lE?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p>/*VX1A2. Determine the index date, and sum the number of days covered within the study period*/</p><p>/*VX1A2a. for all patients in master_cohort, calculate days of coverage and days of gaps*/</p><p>%getCoverGAPs(</p><p>rawfile=master_phrs_cov, ptFile=master_cohort, theCovXtrc=, keyDateCol=,</p><p>start=&amp;inclusionStart, end=&amp;inclusionEnd,</p><p>target=VX1A2a, cohortgroup=, debug=</p><p>);</p><p><br></p><p>/*the file VX1A2a is like this</p><p>1. it contains all coverage/cover gaps within the study period</p><p>2. each person may have multiple records. Those of gap=0 are covered days, those of days=0 are coverage gaps.</p><p>Of those covered records, the earliest 'coverstart' is the earliest enrolment date into PHRS</p><p>Summarizing the covered records, we'll have the total # of days covered within the study period</p><p>*/</p><p><br></p><p>/*VX1A2b. From VX1A2a, keep records of covered days (i.e., those with gap=0) */</p><p>data VX1A2b;</p><p>set VX1A2a;</p><p>if gaps = 0;</p><p>run;</p><p>/*VX1A2b. Sum the # of days covered by PHRS within the study period*/</p><p>%sqljoinv2(</p><p>t1=VX1A2b,</p><p>target=VX1A2,</p><p>vars=%Str(t1.key_hsn, sum(t1.days) as coverDays),</p><p>groupby=%str(t1.key_hsn),</p><p>orderby=%str(t1.key_hsn)</p><p>);</p><p><br></p><p>s///</p><p>t///</p>"},{"idx":"MY48ad1da6-b286-4f2f-baa7-7e80d70aa0ea","name":"Part1.A.3 study cohort (VX1A3)","custparents":[{"idx":"MY1201b790-a690-4134-8402-8754da40b4aa"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/HZkML4HQ03c?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p>/*VX1A3. From VX1A2, keep those having 180+ covering days */</p><p>data VX1A3;</p><p>set VX1A2;</p><p>where coverdays &gt;=180;</p><p>run;</p><p><br></p><p>s///</p><p>t///</p>"},{"idx":"MY681a9603-8857-45b2-8b1d-2b296f481565","name":"Part1.A.4. Patient flow (VX1A4)","custparents":[{"idx":"MY1201b790-a690-4134-8402-8754da40b4aa"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VX1A4. Patient flow</p><p><br></p><p>a.Total number of individuals registered for registered for medical services in Saskatchewan at any point during the study period</p><p>b.Number of individuals registered for registered for medical services in Saskatchewan for at least 180 days during the study period</p><p>c.Number of individuals excluded from the study cohort as they were not registered for medical services in Saskatchewan for at least 180 days (the difference between a and b)</p><p>d.For individuals excluded from the study cohort as they did not have at least 180 days of coverage, determine number of deaths during the study period (i.e. those excluded due to time of death)</p><p>e.For individuals excluded from the study cohort as they did not have at least 180 days of coverage, determine number of births during the study period (i.e. those excluded due to time of birth)</p><p>*/</p><p><br></p><p>/*VX1A4a. Total number of individuals registered for registered for medical services in Saskatchewan at any point during the study period*/</p><p><br></p><p>%sqljoinv2(</p><p>\tt1=master_cohort,</p><p>\ttarget=VX1A4a,</p><p>\tvars=%str(</p><p>\t\t\"Total number of individuals registered for registered for medical services in Saskatchewan at any point during the study period\" as Step length=1000,</p><p>\t\tcount(t1.key_hsn) as N_Persons</p><p>\t)</p><p>);</p><p><br></p><p><br></p><p>/*VX1A4b. Number of individuals registered for registered for medical services in Saskatchewan for at least 180 days during the study period.*/</p><p>%sqljoinv2(</p><p>\tt1=VX1A3,</p><p>\ttarget=VX1A4b,</p><p>\tvars=%str(\"Number of individuals registered for registered for medical services in Saskatchewan for at least 180 days during the study period\" as Step length=1000,</p><p>\tcount(t1.key_hsn) as N_Persons)</p><p>);</p><p><br></p><p><br></p><p>/*VX1A4c. Number of individuals excluded from the study cohort as they were not registered for medical services in Saskatchewan for at least 180 days (the difference between a and b)</p><p>This is redundant. No need to do it by SAS here</p><p>*/</p><p><br></p><p>/*VX1A4d. For individuals excluded from the study cohort as they did not have at least 180 days of coverage, determine number of deaths during the study period (i.e. those excluded due to time of death).</p><p>*/</p><p>/*VX1A4d1. From VX1A2, keep those with coverdays &lt; 180 days). */</p><p>data VX1A4d1;</p><p>\tset VX1A2;</p><p>\twhere coverdays &lt;180;</p><p>run;</p><p><br></p><p><br></p><p><br></p><p>/*VX1A4d2. From VX1A2d1, link to the morality file and get those deceased within the study period*/</p><p>%sqljoinv2(</p><p>    t1=VX1A4d1,</p><p>    t2=master_verif_mort,</p><p>    target=VX1A4d2,</p><p>    vars=%str(t1.*, t2.ddt_novit as MortDate),</p><p>    jtype=inner,</p><p>    jvars=key_hsn,</p><p>\tfilters=%str(t2.ddt_novit between &amp;inclusionStart and &amp;InclusionEnd)</p><p>);</p><p><br></p><p>/*VX1A4d3. From above, calculate the number of patients*/</p><p>%sqljoinv2(</p><p>\tt1=VX1A4d2,</p><p>\ttarget=VX1A4d,</p><p>\tvars=%str(\"For individuals excluded from the study cohort as they did not have at least 180 days of coverage, determine number of deaths during the study period (i.e. those excluded due to time of death\" as Step length=1000,</p><p>\tcount(t1.key_hsn) as N_Persons</p><p>\t)</p><p>);</p><p><br></p><p><br></p><p>/*VX1A4e. For individuals excluded from the study cohort as they did not have at least 180 days of coverage, determine number of births during the study period (i.e. those excluded due to time of birth).</p><p>*/</p><p>/*VX1A4e1. From VX1A2d1, link to master_cohort file and get those born within the study period*/</p><p>%sqljoinv2(</p><p>    t1=VX1A4d1,</p><p>    t2=master_cohort ,</p><p>    target=VX1A4e1,</p><p>    vars=%str(t1.*),</p><p>    jtype=inner,</p><p>    jvars=key_hsn,</p><p>\tfilters=%str( birth between &amp;inclusionStart and &amp;InclusionEnd)</p><p>);</p><p><br></p><p>/*VX1A4e2. From above, calculate the number of patients*/</p><p>%sqljoinv2(</p><p>\tt1=VX1A4e1,</p><p>\ttarget=VX1A4e,</p><p>\tvars=%str(\"For individuals excluded from the study cohort as they did not have at least 180 days of coverage, determine number of births during the study period (i.e. those excluded due to time of birth)\" as Step length=1000,</p><p>\tcount(t1.key_hsn) as N_Persons</p><p>\t)</p><p>);</p><p><br></p><p>/*VX1A4. Merge the above tables together to have a report table*/</p><p>data VX1A4;</p><p>\tset VX1A4a VX1A4b VX1A4d VX1A4e;</p><p>run;</p><p><br></p><p>s///</p><p>t///</p>"},{"idx":"MY1df36860-e23b-46f2-a5ca-d29a38b6ba17","name":"Part A.5 Descriptive 1 (VX1A5)","custparents":[{"idx":"MY1201b790-a690-4134-8402-8754da40b4aa"}],"children":[{"idx":"MYd6a56c35-fcfc-41bd-a1ca-bc8a372c24c8","name":"Q_VX1A5","custparents":[{"idx":"MY1df36860-e23b-46f2-a5ca-d29a38b6ba17"}],"NodeDescription":"<p>///t</p><p><br></p><p><br></p><p>t///</p><p>[to do]</p><p>\"Part 1, 5a.\tDetermine the mean and standard deviation of the total time period of coverage for all individuals in the study cohort. Take into consideration that some individuals may leave the province and return within the 5-year period.</p><p>\"</p><p><strong>In terms of days? Years</strong></p><p><br></p><p>5D. Determine the number of person-years included in the study cohort. </p><p><strong>What is this? person-years as a whole? of each individual (if so, isn't it the same as coveryears?)</strong></p>"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/jcK23nZAip8?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p><br></p><p>/*</p><p>Part A 5. To present the follow-up period of individuals in the study cohort:</p><p>a. Determine the mean and standard deviation of the total time period of coverage for all individuals in the study cohort. Take into consideration that some individuals may leave the province and return within the 5-year period.</p><p>b. For individuals included in the study cohort, determine number of deaths during the study period (i.e. those with incomplete follow-up due to time of death)</p><p>c. For individuals included in the study cohort, determine number of birth during the study period (i.e. those with incomplete follow-up due to time of birth)</p><p>d. Determine the number of person-years included in the study cohort.</p><p>*/</p><p><br></p><p><br></p><p>/*VX1A5a. Determine the mean and standard deviation of the total time period of coverage for all individuals in the study cohort. Take into consideration that some individuals may leave the province and return within the 5-year period.</p><p>Q: assuming the mean and std is by years, not by days?</p><p>*/</p><p><br></p><p>data VX1A5a;</p><p>set VX1A3;</p><p>coverYears=coverdays / 365.25;</p><p>run;</p><p><br></p><p>proc means data=VX1A5a nway mean std;</p><p>var coverYears;</p><p>output out=VX1A5a mean=mean std=std;</p><p>run;</p><p><br></p><p><br></p><p>/*VX1A5b. For individuals included in the study cohort, determine number of deaths during the study period (i.e. those with incomplete follow-up due to time of death).</p><p>*/</p><p><br></p><p>/*VX1A5b1. From VX1A3, link to the mortality file and get those deceased within the study period*/</p><p>%sqljoinv2(</p><p>t1=VX1A3,</p><p>t2=master_verif_mort,</p><p>target=VX1A5b1,</p><p>vars=%str(t1.*, t2.ddt_novit as MortDate),</p><p>jtype=inner,</p><p>jvars=key_hsn,</p><p>filters=%str(t2.ddt_novit between &amp;inclusionStart and &amp;InclusionEnd)</p><p>);</p><p><br></p><p>/*VX1A5b2. From above, calculate the number of patients*/</p><p>%sqljoinv2(</p><p>t1=VX1A5b1,</p><p>target=VX1A5b,</p><p>vars=%str(\"For individuals included in the study cohort, determine number of deaths during the study period (i.e. those with incomplete follow-up due to time of death).\" as Step length=1000,</p><p>count(t1.key_hsn) as N_Persons</p><p>)</p><p>);</p><p><br></p><p><br></p><p>/*VX1A5C. a.For individuals included in the study cohort, determine number of birth during the study period (i.e. those with incomplete follow-up due to time of birth).</p><p>From VX1A3, link to master_cohort file and get those born within the study period*/</p><p><br></p><p>%sqljoinv2(</p><p>t1=VX1A3,</p><p>t2=master_cohort ,</p><p>target=VX1A5C1,</p><p>vars=%str(t1.*),</p><p>jtype=inner,</p><p>jvars=key_hsn,</p><p>filters=%str( birth between &amp;inclusionStart and &amp;InclusionEnd)</p><p>);</p><p><br></p><p>/*VX1A5C2. From above, calculate the number of patients*/</p><p><br></p><p>%sqljoinv2(</p><p>t1=VX1A5C1,</p><p>target=VX1A5C,</p><p>vars=%str(\"a.For individuals included in the study cohort, determine number of birth during the study period (i.e. those with incomplete follow-up due to time of birth)\" as Step length=1000,</p><p>count(t1.key_hsn) as N_Persons</p><p>)</p><p>);</p><p><br></p><p>/*VX1A5D. Determine the number of person-years included in the study cohort.</p><p>Q. What is this? person-years as a whole? of each individual (if so, isn't it the same as coveryears?)</p><p>*/</p><p><br></p><p>s///</p><p>t///</p>"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VXA. part 1. A 1 to 5 */</p><p>data _null_;run;</p><p><br></p><p>%let inclusionStart='01Jan2014'd;</p><p>%let inclusionEnd = '31Dec2018'd;</p><p><br></p><p><br></p><p>/*VXA0 prepare data*/</p><p>%<strong>vbsUnzip</strong>(</p><p>tgtDir=,</p><p>zipFile=%str(&amp;localDataPath.\\master_cohort.zip),</p><p>srcFile=%str(master_cohort.sas7bdat)</p><p>);</p><p>%<strong>vbsUnzip</strong>(</p><p>tgtDir=,</p><p>zipFile=%str(&amp;localDataPath.\\master_verif_mort.zip),</p><p>srcFile=%str(master_verif_mort.sas7bdat)</p><p>);</p><p>%<strong>vbsUnzip</strong>(</p><p>tgtDir=,</p><p>zipFile=%str(&amp;localDataPath.\\master_phrs_cov.zip),</p><p>srcFile=%str(master_phrs_cov.sas7bdat)</p><p>);</p><p><br></p><p>s///</p><p>t///</p>"}],"NodeDescription":"<p>Introduction of part 1:</p><iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/S8JRG7iEu7A?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p>"},{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e","name":"Part 2 Data Extraction ","custparents":[{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"},{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"}],"children":[{"idx":"MY71315ec9-e8c4-4376-836a-82369f18067b","name":"Q","custparents":[{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"}],"NodeDescription":"<p>///t</p><p>t///</p><p>[to do]</p><p>Name of this part 2 is confusing. Data Extraction is too general .</p>"},{"idx":"MY483b1a0e-1680-4b8a-800a-1035990e69c7","name":"A from PHRS Demo (VX2A)","custparents":[{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/VVTLhrYjhCM?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p><br></p><p>///t</p><p>///s</p><p><br></p><p>/*VX2A.For patients in VXA3, get demo info from master_cohort*/</p><p>/*</p><p><strong>Using PHRS:</strong></p><p>For individuals registered for medical services in Saskatchewan for at least 6 months between January 1, 2014 and December 31, 2018 (the study cohort), extract the following variables:</p><p>Patient Identification Number (Encrypted)</p><p>Month and Year of Birth</p><p>Sex</p><p>Registered Indian status</p><p>Residence code*</p><p>Dissemination Area*</p><p>Full postal code for place of residence*</p><p>Quintile of annual income per person equivalent</p><p>Q these variables cannot be put in the same table. because resi code, DA, and Full postal code are not unique for each patient</p><p>*/</p><p><br></p><p><br></p><p><br></p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"MY639dd607-9d63-4337-a6c7-39b13c62ad5c","name":"Q VX2A","custparents":[{"idx":"MY483b1a0e-1680-4b8a-800a-1035990e69c7"}],"NodeDescription":"<p>///t</p><p>t///</p><p>[to do]</p><p><br></p><p>Q these variables cannot be put in the same table. because resi code, DA, and Full postal code are not unique for each patient</p>"},{"idx":"MY0aae5792-ccf7-4a4c-8468-1df2da1fb91b","name":"1. Demo Info (VX2A1)","custparents":[{"idx":"MY483b1a0e-1680-4b8a-800a-1035990e69c7"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VX2A1. For patients in VXA3, get demo info from master_cohort</p><p><strong>Note: the info in this table is of the index date (e.g.,ResiTyupe, income quintile are the measures most close to the earliest PHRS cover date).</strong></p><p><strong>The table does not contain res_code, DA, or full postal code</strong></p><p>*/</p><p>/*VX2A1. For patients in VXA3, get demo info from master_cohort</p><p>Note: the info in this table are of the index date (e.g.,ResiTyupe, income quintile are the measures most close to the earliest PHRS cover date).</p><p>The table does not contain res_code, DA, or full postal code</p><p>*/</p><p>%sqljoinv2(</p><p>    t1=VX1A3,</p><p>    t2=master_cohort ,</p><p>    target=VX2A1a,</p><p>    vars=*,</p><p>    jtype=inner,</p><p>    jvars=key_hsn</p><p>);</p><p><br></p><p>data VX2A1;</p><p>\tset VX2A1a;</p><p>\tkeep key_hsn sex_desc Birth natv_stat_flag  resiType QAIPPE ;</p><p>\tif resiType=\"\" then urb_rur_cma = 'NA';</p><p>\tif QAIPPE=. then QAIPPE=9;</p><p>\trename QAIPPE = QAIPPE_Index resitype=resiType_index;</p><p>run;</p><p><br></p><p><br></p><p><br></p><p>s///</p><p>t///</p>"},{"idx":"MY9f4ded90-baa7-4a22-939c-dc7eb5ace5d0","name":"2. Residence code DA, and postal code (VX2A2)","custparents":[{"idx":"MY483b1a0e-1680-4b8a-800a-1035990e69c7"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VX2A2. Get res_code, DA, and Full postal code</p><p><strong>Note: key_hsn are NOT unique as one person may have multiple records!</strong></p><p>*/</p><p>%vbsUnzip(</p><p>    tgtDir=,</p><p>    zipFile=%str(&amp;localDataPath.\\master_PHRS_Resi.zip),</p><p>    srcFile=%str(master_PHRS_Resi.sas7bdat)</p><p>);</p><p>/*%print(data=master_PHRS_Resi);*/</p><p>%sqljoinv2(</p><p>\tt1=master_PHRS_Resi,</p><p>\tt2= VX2A1,</p><p>\ttarget=VX2A2,</p><p>\tjtype=inner,</p><p>\tjvars=key_hsn,</p><p>\tvars=%str(t1.*)</p><p>);</p><p>%vbsZip(</p><p>\t\ttgtDir=&amp;localtargetPath, </p><p>\t\tzipFile=VX2A2.zip, </p><p>\t\tsrcFile=VX2A2, </p><p>\t\tsrcDir=</p><p>);</p><p><br></p><p><br></p><p>s///</p><p>t///</p>"},{"idx":"MY63121a2b-55fe-428f-8ec4-451650ca2315","name":"3. Index date (VX2A3)","custparents":[{"idx":"MY483b1a0e-1680-4b8a-800a-1035990e69c7"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VX2A3. Determine index and age at index*/</p><p>/*VX2A3a. From VX1A2a, sort and get the first row (the earliset coverstart date)*/</p><p>proc sort data = VX1A2b;</p><p>\tby key_hsn coverstart coverend;</p><p>run;</p><p>data VX2A3a;</p><p>\tset VX1A2b;</p><p>\tby key_hsn coverstart coverend;</p><p>\tif first.key_hsn;</p><p>\trename coverstart=IndexDate;</p><p>\tkeep key_hsn coverstart;</p><p>run;</p><p><br></p><p>/*link the above to VX2A1, add the index date and calculate age</p><p>Note: VX2A3 is the study cohort with demo info. Patients are unique*/</p><p>%sqljoinv2(</p><p>\tt1=VX2A1,</p><p>\tt2= VX2A3a,</p><p>\ttarget=VX2A3,</p><p>\tjtype=inner,</p><p>\tjvars=key_hsn,</p><p>\tvars=%str(t1.*, t2.indexDate, INT(yrdif(birth, t2.IndexDate, 'AGE')) as Age_Index)</p><p>);</p><p>%vbsZip(</p><p>\t\ttgtDir=&amp;localtargetPath, </p><p>\t\tzipFile=VX2A3.zip, </p><p>\t\tsrcFile=VX2A3, </p><p>\t\tsrcDir=</p><p>);</p><p><br></p><p>s///</p><p>t///</p>"}]},{"idx":"MY8ecef71f-5e76-4265-8490-18a95d9dd5b5","name":"B. Charlson score (VX2B)","custparents":[{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/yn7GjUvHxnw?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p><br></p><p>/*VX2B0. Prepare data.*/</p><p>%VbsUnzip(</p><p>tgtDir=,</p><p>zipFile=%str(&amp;localDataPath.\\master_hosp.zip),</p><p>srcFile=%str(master_hosp.sas7bdat)</p><p>);</p><p><br></p><p>%VbsUnzip(</p><p>tgtDir=,</p><p>zipFile=%str(&amp;localDataPath.\\master_msb.zip),</p><p>srcFile=%str(master_msb.sas7bdat)</p><p>);</p><p>%vbsUnzip(</p><p>tgtDir=,</p><p>zipFile=%str(&amp;localTargetPath.\\VX2A3.zip),</p><p>srcFile=%str(VX2A3.sas7bdat)</p><p>);</p><p><br></p><p><br></p><p>/*VX2B1. Charlson score*/</p><p>/*for charlson score calculation, the following macro 'VarExist.sas' will be required.</p><p>However, it has conflict with the macro 'VarExist.sas' in MyMacros.sas.</p><p>After Calculating Charlson score, remember to reload MyMacros so as to load the same-name macro in MyMacros</p><p>*/</p><p><br></p><p>%macro runCharlson;</p><p>%include 'R:\\Macros\\Util\\VarExist.sas' /LRECL=32767;</p><p>%Charlson_Elixhauser_Score_local(</p><p>charlson=Y,</p><p>elixhauser=N,</p><p>msb_xtrc_start_dt=,</p><p>msb_xtrc_end_dt=,</p><p>hosp_file=master_hosp,</p><p>msb_file=master_msb,</p><p>hsn_file=VX2A3,</p><p>ref_date_var=IndexDate,</p><p>charlson_var_out=,</p><p>elix_postfix=elix_,</p><p>additionalByVar=,</p><p>ds_out=VX2B1,</p><p>days_lookback=1825,</p><p>debug=N</p><p>);</p><p>%let nccSASTools=P:\\02 New project data creation\\Tools\\SAS tools\\tools_ncc.sas;</p><p>%include \"&amp;nccSASTools\" /LRECL=32767;</p><p><br></p><p>Data VX2B;</p><p>set VX2B1;</p><p>if Charlson_Index=. then Charlson_Index=0;</p><p>run;</p><p>/*The file VX2B contains charlson score*/</p><p>%vbsZip(</p><p>tgtDir=&amp;localtargetPath,</p><p>zipFile=VX2B.zip,</p><p>srcFile=VX2B,</p><p>srcDir=</p><p>);</p><p>%mend runCharlson;</p><p>/*It took quite some time to calculate charlson score. Last time it took 4 hours. Do not run it everytime!*/</p><p>/*%runCharlson;*/</p><p>s///</p><p>t///</p>"},{"idx":"MY7f17b0d6-1149-4cea-b168-87f2194f1a19","name":"C. US_NonPreg MSB (VX2C)","custparents":[{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/vBV-e0jKeRI?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p>/*VX2C1-3 Ultrasound exame, Non-preg related, from MSB*/</p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"MYd0786cd6-8d5f-47c0-9155-2c8f211bf71e","name":"Q VX2C","custparents":[{"idx":"MY7f17b0d6-1149-4cea-b168-87f2194f1a19"}],"NodeDescription":"<p>///t</p><p>t///</p><p><br></p><p>[to do ]</p><p>where to get <span style=\"background-color: rgb(200, 200, 200); color: rgb(0, 0, 0);\">A5_FSC (FSC code for U.S exams from MSB)</span></p>"},{"idx":"MY5f4747e9-d051-4cbf-90b9-9d1cfb0d65fb","name":"C.1 non-preg U.S. MSB Exams","custparents":[{"idx":"MY7f17b0d6-1149-4cea-b168-87f2194f1a19"}],"NodeDescription":"<p>///t</p><p>///s</p><p><br></p><p>/*VX2C0. prepare data*/</p><p>/*VX2C1a. get all nonpreg-related u/s events</p><p>Note: the A5_FSC was copied from /sasdata/hisc/shared_data/HQC_share/Ultrasound_AdamsS/Source</p><p>The list A5_FSC was made by old programs. A copy of A5_FSC was saved at</p><p>P:\\UltraSound1418(SAdams)_Bio18-71\\Documentation\\Literature Reviews\\</p><p>It contains ultra sound Fee Schedule Code provided by Scott and Sonia in the xls file </p><p>(P:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\Appendix 1 - General Diagnostic (Non-Obstetric) Exam Codes.xlsx)</p><p>*/</p><p>%sqljoinv2(</p><p>    t1=master_msb,</p><p>    t2=localt.A5_FSC,</p><p>    target=VX2C1,</p><p>    vars=%str(monotonic() as obs, t1.*, t2.category, t2.disease, t2.description),</p><p>    jtype=inner,</p><p>    jterm=%str(t1.fsc=t2.code)</p><p>);</p><p><br></p><p>/*VX2C1 contains all ultrasound exams (preg or non-preg related). Save it for future use*/</p><p>%vbsZip(</p><p>\t\ttgtDir=&amp;localtargetPath, </p><p>\t\tzipFile=VX2C1.zip, </p><p>\t\tsrcFile=VX2C1, </p><p>\t\tsrcDir=</p><p>);</p><p><br></p><p>s///</p><p>t///</p>"},{"idx":"MY5078b8be-5386-4512-b24a-47401a85f25f","name":"C.2. Map MSB US Code to RIS Code","custparents":[{"idx":"MY7f17b0d6-1149-4cea-b168-87f2194f1a19"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*2. To ensure consistent coding between MSB and RIS files, map each of the MSB Procedure Codes to a general exam code (MSB Mapped General Exam Code) as per Appendix 1 - General Diagnostic (Non-Obstetric) Exam Codes */</p><p><strong>How? Need an mapping table</strong></p><p>s///</p><p>t///</p><p><br></p><p>[to do]</p><p><br></p>"},{"idx":"MYaf9f1b88-0cd0-4bda-b879-872700487b33","name":"C.3 NonPreg U.S. Sum by Exam code","custparents":[{"idx":"MY7f17b0d6-1149-4cea-b168-87f2194f1a19"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VX2C3a. count the number of exams by code */</p><p>%freq(data=VX2C1, table=fsc, option = %str(nopct norow nocol out =VX2C3a), order=freq );</p><p><br></p><p>/*VX2C3b. count the number of distinct patients*/</p><p>%distinct(data=VX2C3a, target=VX2C3b, vars=%str(key_hsn, fsc));</p><p>%freq(data=VX2C3b, table=fsc, option = %str(nopct norow nocol out =VX2C3b), order=freq );</p><p><br></p><p>s///</p><p>t///</p>"}]},{"idx":"73a7ddf9-bb21-40e8-8af1-7f59fdad6dc9","name":"C. US NonPreg RIS (VX2C)","custparents":[{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"},{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/n3h_mcD1Xcc?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p><br></p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"63bd5929-74b6-4b90-a9ff-4f3ac5a5238b","name":"C.4 non-preg U.S. RIS Exams","custparents":[{"idx":"73a7ddf9-bb21-40e8-8af1-7f59fdad6dc9"}],"NodeDescription":"<p>///t</p><p>///s</p><p><br></p><p><br></p><p>/*VX2C4. prepare RIS data*/</p><p>%vbsUnzip(</p><p>    tgtDir=,</p><p>    zipFile=%str(&amp;localDataPath.\\master_RIS.zip),</p><p>    srcFile=%str(master_RIS.sas7bdat)</p><p>);</p><p>%print(data=master_RIS);</p><p><br></p><p><br></p><p>/*Q. In RIS data, there is no variable to indicate the exam code</p><p>see the var table by the following code</p><p>*/</p><p>proc datasets ;</p><p>\tcontents data=master_RIS order=varnum;</p><p>run;</p><p><br></p><p>/*A distinct list of RIS exam name was generated for Scott to prepare an xls file on</p><p>1. RIS exam code corresponding to these exam names</p><p>2. Whether the code is pregnant related or not ('PREG', or 'NON-PREG')</p><p>3. The corresponding FSC code in the MSB file</p><p>*/</p><p>%distinct(data=master_RIS, target=VX2C4a, vars=exam_name);</p><p><br></p><p><br></p><p>/*VX2C4a. get all nonpreg-related u/s events from RIS file*/</p><p>%sqljoinv2(</p><p>    t1=master_RIS,</p><p>    t2=&lt;What file&gt;,</p><p>    target=VX2C4a,</p><p>    vars=%str(monotonic() as obs, t1.*, t2.category, t2.disease, t2.description),</p><p>    jtype=inner,</p><p>    jterm=%str(t1.&lt;what code&gt;=t2.&lt;what code&gt;)</p><p>);</p><p><br></p><p>/*VX2C4. # number of non-preg related ultrasound exams by code */</p><p>data VX2C4;</p><p>    set VX2C4a;</p><p>    if category='NON_PREG' and dos &gt;=&amp;InclusionStart and dos &lt;=&amp;InclusionEnd;</p><p>run;</p><p><br></p><p>s///</p><p>t///</p><p><br></p><p>[to do]</p><p><strong>Need to determine the code file, and fields for exam code </strong></p>","children":[{"idx":"MY41224208-b6b8-454e-b267-8f18e46dafcb","name":"Q_VX2C4a","custparents":[{"idx":"63bd5929-74b6-4b90-a9ff-4f3ac5a5238b"}],"NodeDescription":"<p>///t</p><p>t///</p><p>[to do]</p><p>There is no exam code in the RIS file</p><p>A distinct list of exam name was prepared for Scott to provide:</p><ol><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Corresponding RIS code</li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Whether or not preg related, <strong>strictly either = 'PREG' or 'NON-PREG'</strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span>The corresponding FSC code (for mapping with MSB exams)</li></ol>"}]},{"idx":"a8758704-d137-445f-bc7f-8c230079bc87","name":"C.5. Map MSB US Code to RIS Code_copy","custparents":[{"idx":"73a7ddf9-bb21-40e8-8af1-7f59fdad6dc9"}],"NodeDescription":"<p>///t</p><p>///s</p><p><br></p><p><br></p><p>/*2. To ensure consistent coding between MSB and RIS files, map each of the MSB Procedure Codes to a general exam code (MSB Mapped General Exam Code) as per Appendix 1 - General Diagnostic (Non-Obstetric) Exam Codes */</p><p>/*&lt;Need a mapping file for codes from MSB and codes from RIS&gt;*/</p><p><br></p><p>s///</p><p>t///</p><p><br></p><p>[to do]</p><p>How?</p>"},{"idx":"93fc323f-8864-4614-9fa2-dcc0ad89293f","name":"C.6. NonPreg U.S. RIS Sum by Exam code","custparents":[{"idx":"73a7ddf9-bb21-40e8-8af1-7f59fdad6dc9"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*VX2C6a. count the number of exams by code */</p><p>%freq(data=VX2C1, table=&lt;what code&gt;, option = %str(nopct norow nocol out =VX2C6a), order=freq );</p><p><br></p><p>/*VX2C6b. count the number of distinct patients*/</p><p>%distinct(data=VX2C6a, target=VX2C6b, vars=%str(key_hsn, &lt;what code&gt;));</p><p>%freq(data=VX2C6b, table=&lt;what code&gt;, option = %str(nopct norow nocol out =VX2C6b), order=freq );</p><p><br></p><p>s///</p><p>t///</p>"}]},{"idx":"MY843d877e-c4ba-48cf-af4f-1a168512cf94","name":"D. Assess duplication MSB RIS","custparents":[{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/j0n7wD_Huz8?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p>///t</p><p>///s</p><p>/*</p><p>To assess for duplication between MSB and RIS exams:</p><p>1. Flag all MSB Mapped General Exam Codes and RIS Mapped General Exam Codes which are equal and within ±1 day for each individual.</p><p><strong>This part is not clear, how? Need to have an explicit description on what table, what variable, and how to join.</strong></p><p><br></p><p>2. For all flagged exams, if Location of Service (MSB) = Institution/hospital where exam was completed (RIS equivalent), flag as overlap between RIS and MSB data</p><p><strong>Also not clear. It seems that the LOS field in the MSB is to be used. But how to define ' Institution/hospital'? What value in LOS refers to such places?</strong></p><p><br></p><p>3. Exclude RIS Mapped General Exam Codes which have been flagged as a duplicate in further analysis.</p><p><strong>This part is also clear, exclude from which table? the MSB exam table? the RIS exam table? a joined table?</strong></p><p>*/</p><p><br></p><p>s///</p><p>t///</p><p>[to do]</p>"},{"idx":"MYbb2a719a-c97c-4ab8-aaf6-6811ba8a1e17","name":"E. The unclear part (for output table)","custparents":[{"idx":"MY3c0c0ac7-9c21-4a36-9671-ee3791ee881e"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/zlxUHOlvtWM?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p>/*</p><p>Output Table (linking variables from PHRS, MSB, RIS, and DAD using Patient Identification Number):</p><p><br></p><p>·Patient Identification Number (Encrypted)</p><p>·Month and Year of Birth</p><p>·Sex</p><p>·Registered Indian status</p><p>·Residence code*</p><p>·Dissemination Area*</p><p>·Full postal code for place of residence*</p><p>·Quintile of annual income per person equivalent*</p><p>·Age at the time of entry into the cohort</p><p>·Time period of coverage</p><p>·Charlson Comorbidity Index</p><p>·MSB and RIS Exams Combined (n)**</p><p>*Note: location variables must be defined by effective and expiry dates for subsequent analyses.</p><p>**Ultrasound exams must be associated with date of service as each exam will be allocated to a location variable defined by effective and expiry dates.</p><p><br></p><p>*/</p><p><strong>Are these measures to be put in one table? </strong></p><ol><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>if the locations are specific for date of exam, where is the date of exam in this table? </strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>MSB and RIS Exams Combined (n). What is this? # of exam of the whole study period? of each exam date? need examples.</strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Date of preg and date of non-preg related U.S exams are independent to each other. How to put these dates in one table? need examples</strong></li></ol><p><br></p><p>s///</p><p>t///</p><p>[to do]</p><p><br></p>","children":[{"idx":"MY6f42d42e-0717-48d5-b731-a943fc8fb375","name":"Determine the preg pop","custparents":[{"idx":"MYbb2a719a-c97c-4ab8-aaf6-6811ba8a1e17"}]},{"idx":"80104230-cc70-4b15-8d91-c8476ea5255a","name":"Obsteric Comorb Index VFA_OCI_copy","NodeDescription":"///t<br/>///s<br/>/*VFA the obstetrical comobidity score*/<br/>/*get the raw data from H, MSB, and ED*/<br/>/*the cohort file is VCEA*/<br/><br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=vcea,<br/>&nbsp&nbsp&nbsp&nbspzipped=vcea,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=VCEA<br/>)&#59<br/>%print(data=VCEA)&#59<br/><br/><br/><br/>/*get a distinct patient list from VCEA*/<br/>%distinct(data=VCEA, vars=key_hsn, target=VFA1)&#59<br/><br/><br/>/***hospital***************************************************************************************/<br/>/*get the hospitalization records for patients in VFA1<br/>&nbsp&nbsp&nbsp&nbsp? what is the H records in the master file? does it cover at least 3 months prior to the entry?<br/>&nbsp&nbsp&nbsp&nbspyes, the H, MSB files can be traced back to 1994, whie the ED file back to 2012<br/>*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspzipped=master_hosp,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=master_hosp<br/>)&#59<br/><br/>/*from master_hosp, keep records of patients in VFA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspt2=VFA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, monotonic() as hospOBS),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*for each preg episode in VCEA, find thd corresponding hospitalizations within 90 days prior to the conception<br/>&nbsp&nbsp&nbsp&nbspthrough the outcome date<br/>&nbsp&nbsp&nbsp&nbspthis part is did separately, as the hosp/msb file is too large, combining the above steps may cause the system stuck<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA2,<br/>&nbsp&nbsp&nbsp&nbspt2=VCEA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t2.pregOBS,  t2.cohortEntrydt, t2.outcomedt, t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.adm_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.cohortEntrydt-90 and dschg_date > t2.outcomedt)<br/>&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*for each hospitalization records, indicate the OCI conditions if a corresponding ICD code is found<br/>*/<br/>%let theHdata=VFA3&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata _tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theHData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='hp'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are generated by formulas in the excel file: P:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcheck the sheet \"include\" and \"exclude\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following were modified according to Sonia's modification, the doc was save as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspP:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\OCI ICD codes -modified by Sonia 20181006.docx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('4160','4168','4169') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6410','6411') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('2824','2826') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6425','6426') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59 /*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6424','6427') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('401','402','403','404','405','6420','6421','6422','6427') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6423') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('581','582','583','585','587','588','6462') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('412','413','414') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('745','746','7470','7471','7472','7473','7474','6485') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('7100') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('042','V08') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('V272','V273','V274','V275','V276','V277','V278','651') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('304','3052','3053','3054','3055','3056','3057','3058','3059','6483') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('291','303','3050') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('394','395','396','397','424') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('42822','42823','42832','42833','42842','42843') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('493') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('250','6480') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6542') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I270','I272','I278','I279') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O44') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('D56','D57') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O14','O15') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O11','O14','O152Â ') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I10','I11','I12','I13','I15','O10','O11','O152') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O13','O16 ') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('N022','N03','N04','N05','N08','N171','N172','N18','N25','N268','N269') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I20','I25') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('Q20','Q21','Q22','Q23','Q24','Q25','Q26','O994') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('M32') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('B20','B24','O987','Z21') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O30','O31','Z372','Z373','Z374','Z375','Z376','Z377','Z3790') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('F11','F12','F13','F14','F15','F16','F18','F19','O9932') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('F10') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I05','I06','I07','I08','I09','I34','I35','I36','I37','I38','I39') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I500 ','I502','I503','I504') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('J44','J45') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('E10','E11','O243','O245','O246','O247','O249') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O342') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the exclude conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O10','O11','O14','O15','I10','I11','I12','I13','I15') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O14','O150','O159') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6424','6427','6425','6426','401','402','403','404','405','6420','6421','6422') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6425','6426') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep CIHI_REC key_hsn pregOBS hospOBS  code adm_date dschg_date cohortEntryDt outcomeDt condition status&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>/***MSB***************************************************************************************/<br/>/*get the MSB records for patients in VFA1<br/>*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=master_msb,<br/>&nbsp&nbsp&nbsp&nbspzipped=master_msb,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=master_msb<br/>)&#59<br/><br/>/*from master_msb, keep records of patients in VFA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=VFA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA12,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, monotonic() as msbOBS),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*for each preg episode in VCEA, find thd corresponding msbs within 90 days prior to the conception<br/>&nbsp&nbsp&nbsp&nbspthrough the outcome date<br/>&nbsp&nbsp&nbsp&nbspthis part is did separately, as the hosp/msb file is too large, combining the above steps may cause the system stuck<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA12,<br/>&nbsp&nbsp&nbsp&nbspt2=VCEA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA13,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t2.pregOBS,  t2.cohortEntrydt, t2.outcomedt, t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.cohortEntrydt-90 and t2.outcomedt)<br/>)&#59<br/><br/>/*for each MSB records, indicate the OCI conditions if a corresponding ICD code is found<br/>*/<br/>%let theMSBdata=VFA13&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theMSBdata&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are generated by formulas in the excel file: P:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcheck the sheet \"include_MSB\" and \"exclude_MSB\"*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('416','641','282') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642','646') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642','647') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('401','402') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('403','404') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('405','642','642','581','582','583','585','587','588') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('646') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('412','413','414','745','746','747','648') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('710','042','V08') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('V27','651','304','305','648','291','303','305') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('394') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('395','396') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('397','424','428','493','250','648','654') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the exclude conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642','401','402','403','404','405') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep  key_hsn pregOBS msbOBS code dos cohortEntryDt outcomeDt condition status&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/><br/><br/>/***ED***************************************************************************************/<br/>/*get the ED records for patients in VFA1<br/>*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbspzipped=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=master_ed_a2012<br/>)&#59<br/><br/>/*from master_ed_a2012, keep records of patients in VFA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbspt2=VFA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA22,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, monotonic() as edOBS),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*for each preg episode in VCEA, find thd corresponding ed records within 90 days prior to the conception<br/>&nbsp&nbsp&nbsp&nbspthrough the outcome date<br/>&nbsp&nbsp&nbsp&nbspthis part is did separately, as the hosp/msb file is too large, combining the above steps may cause the system stuck<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA22,<br/>&nbsp&nbsp&nbsp&nbspt2=VCEA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA23,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t2.pregOBS,  t2.cohortEntrydt, t2.outcomedt, t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.reg_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.disp_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.reg_date < t2.cohortEntrydt-90 and disp_date > t2.outcomedt)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*for each ED records, indicate the OCI conditions if a corresponding ICD code is found<br/>*/<br/>%let theEDdata=VFA23&#59<br/>%print(data=vfa23)&#59<br/>&nbsp&nbsp&nbsp&nbspdata _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theEDdata&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='ed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are generated by formulas in the excel file: P:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcheck the sheet \"include\" and \"exclude\"*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('4160','4168','4169') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6410','6411') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('2824','2826') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6425','6426') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6424','6277') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('401','402','403','404','405','6420','6421','6422','6427') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6423') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('581','582','583','585','587','588','6462') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('412','413','414') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('745','746','7470','7471','7472','7473','7474','6485') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('7100') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('042','V08') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('V272','V273','V274','V275','V276','V277','V278','651') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('304','3052','3053','3054','3055','3056','3057','3058','3059','6483') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('291','303','3050') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('394','395','396','397','424') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('42822','42823','42832','42833','42842','42843') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('493') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('250','6480') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6542') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I270','I272','I278','I279') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O44') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('D56','D57') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O14','O15') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O11','O14','O152Â ') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I10','I11','I12','I13','I15','O10','O11','O152') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O13','O16 ') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('N022','N03','N04','N05','N08','N171','N172','N18','N25','N268','N269') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I20','I25') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('Q20','Q21','Q22','Q23','Q24','Q25','Q26','O994') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('M32') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('B20','B24','O987','Z21') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O30','O31','Z372','Z373','Z374','Z375','Z376','Z377','Z3790') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('F11','F12','F13','F14','F15','F16','F18','F19','O9932') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('F10') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I05','I06','I07','I08','I09','I34','I35','I36','I37','I38','I39') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I500 ','I502','I503','I504') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('J44','J45') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('E10','E11','O243','O245','O246','O247','O249') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O342') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the exclude conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O10','O11','O14','O15','I10','I11','I12','I13','I15') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O14','O150','O159') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6424','6427','6425','6426','401','402','403','404','405','6420','6421','6422') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6425','6426') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep  key_hsn pregOBS edOBS code adm_date dschg_date cohortEntryDt outcomeDt condition status&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*determin maternal age, which is age on the would-have-been maternal date (concept date + 270 days)*/<br/>&nbsp&nbsp&nbsp&nbspdata _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCEA&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmaternal_age = int(yrdif(birth, cohortEntrydt +270, 'age'))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif maternal_age >=45 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='AGE45'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspweight=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif 40<=maternal_age <45 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='AGE40'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspweight=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif 35<=maternal_age <40 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='AGE35'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspweight=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition ne '' and weight ne '.'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep pregOBS key_hsn condition weight&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*put together all positive conditions from H, MSB, and ED<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe target file contains all codes found related to the OCI conditions. It will be saved as backup*/<br/>&nbsp&nbsp&nbsp&nbspdata remotet._tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp1 _tmp2 _tmp3 _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*keep the distinct record of key_hsn, pregOBS, and condition, */<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=remotet._tmp5, target=_tmp6, vars=%str(key_hsn, pregOBS, condition))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*split the conditions and the conditions to exclude*/<br/>&nbsp&nbsp&nbsp&nbspdata _tmp7a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition not in  ('OCI_GHTN_ex', 'OCI_MPE_ex')&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata _tmp7b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition  ='OCI_GHTN_ex' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='OCI_GHTN'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition  ='OCI_MPE_ex' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='OCI_MPE'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep pregOBS key_hsn condition keep&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif keep=0&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*link the keep indicator back to each episode*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_tmp7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=_tmp7b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_tmp8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.pregOBS, t1.condition, ifn(t2.keep=0, 0, 1) as keep),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregobs key_hsn condition,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype = left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(keep ne 0)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*get the weightings and sum up the OCI index*/<br/>&nbsp&nbsp&nbsp&nbsp/*prepare a table for weighting of the conditions,the syntax is prepared in sheet \"map\" of<br/>&nbsp&nbsp&nbsp&nbspP:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata _tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PulHTN'&#59 Weight = 4&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PP'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_SK'&#59 Weight = 3&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_SPE'&#59 Weight = 5&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_MPE'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PHTN'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_GHTN'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CRD'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CIHD'&#59 Weight = 3&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CHD'&#59 Weight = 4&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_SLE'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_HIV'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_MG'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_DA'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AA'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CVD'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CCHF'&#59 Weight = 5&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_ASM'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PreDM'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PreCD'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AGE45'&#59 Weight = 3&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AGE40'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AGE35'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_tmp8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=_tmp9,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_tmp10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.pregOBs,t1.key_hsn, sum(t2.weight) as OCI),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.pregOBs,t1.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=condition,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype = inner<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*link it back to VCEA*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCEA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=_tmp10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VFA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.OCI=., 0, t2.oci) as OCI),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregOBS,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype = left<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VFA, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VFA.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=VFA, table=OCI)&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"MYbb2a719a-c97c-4ab8-aaf6-6811ba8a1e17"},{"idx":"MYbb2a719a-c97c-4ab8-aaf6-6811ba8a1e17"}]}]}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/GB0JQYr9pKI?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p>"},{"idx":"MYc8af85bd-86ed-4743-94d9-a1025fc1f798","name":"Missing (And should be before Part 3)","custparents":[{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"},{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"}],"NodeDescription":"<p>///t</p><p>///s</p><p>/*</p><p>This part is suppose to deal with determination of pregancy, and obstetric comorbidity index</p><p>*/</p><p><br></p><p>s///</p><p>t///</p><p><br></p><p>[to do]</p>"},{"idx":"MYf0054c59-604b-422a-8b92-74dea8d3593d","name":"Part 3 Data for GIS","custparents":[{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"},{"idx":"MYaa2bed55-461e-4f56-ac9b-bdf5d661633f"}],"NodeDescription":"<iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/jxTND6cdsb4?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>///t</p><p>///s</p><p>/*\tCreate a file with the following variables to transfer to the eHealth GIS analyst</p><p><br></p><p>Patient Identification Number</p><p>Month and Year of Birth</p><p>Sex</p><p>Registered Indian status</p><p>Residence code (and effective time period)</p><p>Full postal code for place of residence (and effective time period)</p><p>Dissemination Area (and effective time period)</p><p>Quintile of annual income per person equivalent (and effective time period)</p><p>Charlson Comorbidity Index</p><p>Obstetric Comorbidity Index</p><p>Time period of public insurance coverage</p><p>Type of ultrasound exam ordered</p><p>Date ultrasound exam completed</p><p>Dates of pregnancy</p><p>*/</p><p><br></p><p>s///</p><p><strong>Q: Are these fields all required for GIS data? </strong></p><ol><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Till this step, it never mentioned data for pregnancy, nor the estimation of Obstetric Comorb. Where are those parts?</strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>It is unclear how to put the time period of public insurance coverage, and the date of ultrasound exam together. Need to show examples.</strong></li><li data-list=\"ordered\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Date of pregnancy can be independent to non pregant related Ultrasound exams. In that case, how to put them together? need examples</strong></li></ol><p><br></p><p>t///</p><p><br></p><p>[to do]</p>"}],"NodeDescription":"<p>///t</p><p>t///</p><p>Introduction to the analyses performed in this project</p><iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/XjHy2X4bbw0?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p><p>Introduction of the SAS Enterprise Guide Project File (EGP file)</p><iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/PtcZG3X-Nuk?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p>"},{"idx":"CodeTask-MFaCVD2HKG8H2ZiE","name":"Tools","children":[{"idx":"CodeTask-xQyDnQoecfpb5iUP","name":"Test_ImportExternalData","NodeDescription":"///t<br/>///s<br/>/*import ultra sound data<br/>do not do it until we have the permission to use it<br/>*/<br/>libname locald \"P:\\Ultrasound(AdamsS)_Bio18-71\\Data\"&#59<br/>filename thecsv \"P:\\Ultrasound(AdamsS)_Bio18-71\\External data\\USD#3627843.csv\"&#59<br/>proc import datafile=thecsv<br/>&nbsp&nbsp&nbsp&nbspdbms=csv<br/>&nbsp&nbsp&nbsp&nbspout=locald.ExternalUSD<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&#59&nbsp&nbsp&nbsp&nbsp<br/>run&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]},{"idx":"CodeTask-46MoQuNJCxeUz4lE","name":"Tools_change zip and file names","NodeDescription":"///t<br/>///s<br/>/*unzip the file*/<br/><br/>%macro changeZip(theCohort=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theCohort theData&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_ed_a2012&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_hosp&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_mds_ltc&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_msb&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_msb_docinfo&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_phrs_cov&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_phrs_info&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData= master_phrs_resi_clean&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=%str(&theData..sas7bdat)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*rename it*/<br/>&nbsp&nbsp&nbsp&nbsp%renameData(source=&theData, target=&theData._&theCohort, lib=work)&#59<br/>&nbsp&nbsp&nbsp&nbsp%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=%str(P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=&theData._&thecohort..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&theData._&thecohort..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete it*/<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=&theData._&thecohort)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*delete the old zip file*/<br/>&nbsp&nbsp&nbsp&nbspx \"del \"\"P:\\VictoriaH_Redesign(TianY)\\tmp\\&theCohort.\\Data\\&theData..zip\"\" \"&#59<br/><br/>%mend changeZip&#59<br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]},{"idx":"CodeTask-nFFfnUzpOAcAde3z","name":"Beep","NodeDescription":"///t<br/>///s<br/>%beep&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]},{"idx":"CodeTask-b3OezYBUd9h9Xqga","name":"escape","NodeDescription":"///t<br/>///s<br/>/*data x&#59a=1&#59run&#59*/<br/>)&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]},{"idx":"CodeTask-zlO9ztVQoMSivIaE","name":"Test_remote","NodeDescription":"///t<br/>///s<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]},{"idx":"CodeTask-q65h3IrNGuXafJ8T","name":"Test_local","NodeDescription":"///t<br/>///s<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]},{"idx":"CodeTask-lm45gKn6MFkGPZo4","name":"Local Settings","NodeDescription":"///t<br/>///s<br/>/*include macro tools in drive S<br/>&nbsp&nbsp&nbsp&nbsp/LRECL to allow the length of a statement line to be 32767 bytes instead of the default 256<br/>*/<br/>%include \"S:\\Collaborative_researchers\\Shenzhen\\My Project\\Projects\\DoNotDelete Common Macros\\MyMacros.sas\" /LRECL=32767&#59<br/><br/>%global settingsXls h_Infoxls AnalyticalReport DataReport dicXls&#59<br/><br/>/*assign the address for the exchange folder between local and remote*/<br/>%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote&#59<br/>libname transLib \"&exchangeDir\"&#59 <br/><br/>/*the xlsx file with import information*/<br/>%let settingsXls =P:\\Ultrasound(AdamsS)_Bio18-71\\Input\\Forms\\InputForm_Ultra_20180525.xlsm&#59<br/>%let h_Infoxls = %str(R:\\Data Warehouse\\Data Manuals\\Hospital %(CIHI DAD%)\\cihi_hosps_master_file.xlsx)&#59<br/><br/>/*the target files in local drive S<br/>&nbsp&nbsp&nbsp&nbspsee A_import_settings<br/>&nbsp&nbsp&nbsp&nbspthe local data, target, reports path are input from the xls file<br/>*/<br/><br/>/*the target files in local drive S*/<br/>/*%let localTargetPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Target&#59*/<br/>/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data&#59 /*the folder to save requested raw data files*/*/<br/>/*libname localT \"&localTargetPath\"&#59*/<br/><br/>/*the report in local drive S*/<br/>%let localReportPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Reports&#59<br/>/*libname localR \"&localReportPath\"&#59*/<br/>%let AnalyticalReport=Analytical Report_UltraS.xlsx&#59<br/>%let DataReport=DataSum_Report_UltraS.xlsx&#59<br/><br/>/*The following steps are to import file and var description in the data dictionary *******/<br/>%let dicXls = S:\\Reference\\Data Warehouse\\Data Manuals\\General Information\\HQC_MOH_DW_data_dictionary.xlsx&#59<br/><br/>%put >>> the local work directory is at %sysfunc(pathname(work))&#59<br/><br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD9_E_CH_dxtype.sas'&#59<br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD9_E_EX_dxtype.sas'&#59<br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD10_CH_dxtype.sas'&#59 <br/>%INCLUDE 'R:\\Macros\\StatAnal\\ICD10_EX_dxtype.sas'&#59<br/>%INCLUDE 'R:\\Macros\\Util\\ExpandLst.sas'&#59<br/>%include 'R:\\Macros\\Util\\VarExist.sas'&#59<br/>%include 'R:\\Macros\\Util\\IsEmptyDS.sas'&#59<br/><br/>%let thexlsFilePath=P:\\Ultrasound(AdamsS)_Bio18-71\\Output\\Reports&#59<br/>%let thexlsFileName=Report_20180821.xlsx&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-oyLU9215za4Elsgd","name":"Copy Macro file to Remote Server","children":[{"idx":"CodeTask-8XQczBciSUyozSiJ","name":"Remote settings","NodeDescription":"///t<br/>///s<br/>/*what is the diff between msb_doctor, and msb_doctor_mobility*/<br/><br/><br/>%include \"/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/DoNotDelete Common Macros/MyMacros.sas\" /LRECL=32767&#59<br/>libname Clean \"/sasdata/hisc/shared_data/HQC_share/Clean\"&#59<br/><br/>libname Clean17 \"/sasdata/hisc/shared_data/HQC_share/Clean/2017 Data/Clean files\"&#59<br/>libname Clean18 \"/sasdata/hisc/shared_data/HQC_share/Clean/2018 Data/Clean files\"&#59<br/>libname preg1 \"/sasdata/hisc/shared_data/HQC_share/Shenzhen/pregnancy/data1\"&#59<br/>/*do not use the folder 'exchange'. That one is quite confusing*/<br/><br/>/*assign the address for the exchange folder between local and remote<br/>&nbsp&nbsp&nbsp&nbsptheexChangeDir is the LOCAL exchange folder<br/>*/<br/>%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote&#59<br/>libname transLib \"&exchangeDir\"&#59 <br/><br/>%let Rexchange =  /sasdata/hisc/shared_data/HQC_share/Shenzhen/FileExchangeBetweenLocalAndRemote&#59<br/>libname RexLib \"&RExchange\"&#59<br/><br/>/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data&#59*/ /* the folder to save requested raw data files*/<br/><br/>/*set raw file names*/<br/>%global<br/>&nbsp&nbsp&nbsp&nbspexchangeDir Rexchange  dp_benefitFile dp_nonbenefitFile dp_specFile ed_a2012File ed_b2012File<br/>&nbsp&nbsp&nbsp&nbsphospitalFile MSBFile MSB_DFile MSB_DocInfoFile PHRS_InfoFile PHRS_CovFile PHRS_RSDCFile PHRS_ArrvFile<br/>&nbsp&nbsp&nbsp&nbspPHRS_ResiFile PHRS_Resi_cleanFile PHRS_retrFile VerfMortFile MDS_LTC_File AnalyticalReport DataReport alldinfile<br/>&#59<br/><br/>%let dp_benefitFile=hqc.dp_claim&#59<br/>%let dp_nonbenefitFile=hqc.dp_claim_non_ben&#59<br/>%let dp_specFile = hqc.dp_drug&#59<br/><br/>%let ed_a2012File=hqc.ED_F_2012&#59<br/>%let ed_b2012File=hqc.nacrs&#59<br/><br/>%let hospitalFile=clean18.cihi_eoc_2_ond17_27apr2018&#59<br/><br/>%let MSBFile=hqc.MSB_BILLING&#59<br/>%let MSB_DFile=hqc.MSB_Doctor&#59<br/>%let MSB_DocInfoFile=hqc.MSB_DOCTOR_MOBILITY&#59<br/><br/>%let PHRS_InfoFile = hqc.PHRS_PERS_INFO&#59<br/>%let PHRS_CovFile = hqc.PHRS_PERS_PROG&#59<br/>%let PHRS_RSDCFile=hqc.phrs_pers_rsdc&#59<br/>%let PHRS_ArrvFile = HQC.phrs_pers_arrv&#59<br/>%let PHRS_ResiFile = HQC.phrs_pers_resc&#59<br/>%let PHRS_Resi_cleanFile=clean17.PHRS_PERS_RESC_3_AMJ17_02NOV2017&#59 /*this is the last file with income quintile, AMJ = Apr, May, and JUn*/<br/>%let PHRS_retrFile = HQC.PHRS.PERS_RETR&#59<br/>%let VerfMortFile = clean18.verf_dths_2_ond17_10may2018&#59<br/>%let MDS_LTC_File = hqc.MDS_ASSESSMENT_F_2015&#59<br/><br/>%let AnalyticalReport=Analytical Report_UltraS.xlsx&#59<br/>%let DataReport=DataSum_Report_UltraS.xlsx&#59<br/><br/>/*see B_remote setting, the folder is defined in and input from the input xls file*/<br/><br/>/*the source files on remote server*/<br/>/*%let remoteSourcePath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Source&#59*/<br/>/*libname remoteS \"&remoteSourcePath\"&#59*/<br/>/*the target files on remote server*/<br/>/*%let remoteTargetPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Target&#59*/<br/>/*libname remoteT \"&remoteTargetPath\"&#59*/<br/><br/>/*the report on remote server*/<br/>/*%let remoteReportPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Reports&#59*/<br/>/*libname remoteR \"&remoteReportPath\"&#59*/<br/><br/>/*include the raw file extracing macros*/<br/>%let alldinfile=clean17.alldin_4_jas17_03oct2017&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_CIHI.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/Addquotes.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/reformat_datevars.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/GEO_INCQTL_assign.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/INCQTL_assign.sas' /LRECL=32767&#59<br/><br/>%put >>> the remote work directory is at %sysfunc(pathname(work))&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"Note-Laa15eTto2l6KdPR","name":"Note (2)","NodeDescription":"///t<br/>A.&nbspImport&nbspsettings&nbspfrom&nbspxls&nbspto&nbspdata&nbspset,&nbspand&nbspupload&nbspto&nbspremote&nbspserver<br/>t///","children":[{"idx":"CodeTask-kdXNatjk26MJ53wd","name":"A_import settings","NodeDescription":"///t<br/>///s<br/>/*Import settings from the setting xls file (&settingXls)*/<br/>data _null_&#59run&#59<br/><br/>%global  localParentFolder localDataFolder localReportFolder localTargetPath localDataPath localReportPath<br/>RemoteParentFolder RemoteSourcePath DataStartDate DataEndDate&#59<br/><br/>Filename setXls \"&settingsXls\"&#59<br/><br/>/*create a folder dedicated for the project (by rem id?)*/<br/>/*copy a back up of the setting xls file in the log directory*/<br/>/*add a file for log (create date, etc)*/<br/><br/>/*1.Import the dates*/<br/>/*always create an empty data set first<br/>&nbsp&nbsp&nbsp&nbspotherwise, when the source excel table contains 0 records, the import proc won't run,<br/>&nbsp&nbsp&nbsp&nbspthe setting file won't be created<br/>&nbsp&nbsp&nbsp&nbsplater, no files were copied to the remote site to overwrite the old files<br/>&nbsp&nbsp&nbsp&nbspAs such, the old setting files will be used in getting data, which is wrong <br/>*/<br/>data translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspformat Items $100. Values $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a1_MasterInput<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"MasterInput\"&#59<br/>run&#59<br/>%print(data=translib.a1_MasterInput)&#59<br/><br/><br/>/*2.Import the sourcefiles and fields*/<br/>data translib.A2_CohortDataVars&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. VarName_in_Raw_File $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.A2_CohortDataVars (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=(Final_status=1) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= final_status file_nick_name VarName_in_Raw_File<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"StudyFields\"&#59<br/>run&#59<br/><br/><br/>/*3 import the case def ICD code list*/<br/>data translib.a3_ICDDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a3_ICDDx (where=(code ne \"\") keep= Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"ICD_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a3_ICDDx)&#59<br/><br/>/*4 import the case def procedure code list*/<br/>data translib.a4_IntvnDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a4_IntvnDx (where=(code ne \"\") keep=Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"Procedure_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a4_IntvnDx)&#59<br/><br/>/*5 import the case def SK fee for service code list*/<br/>data translib.a5_FSC&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Category $20. Disease $100. Description $500.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a5_FSC (where=(code ne \"\") keep=Source_file Code_Version Code Category Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"SK_fee_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a5_FSC)&#59<br/><br/>/*6 import the case def DINPIN list*/<br/>data translib.a6_DINDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Therapeutic_Class $100. Generic_Name $100. DIN $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a6_DINDx (where=(DIN ne \"\") keep=Therapeutic_Class Generic_Name DIN Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"DINs\"&#59<br/>run&#59<br/>%print(data=translib.a6_DINDx)&#59<br/><br/>/*7 import the list of source files for case definition*/<br/>data translib.a7_DxFiles&#59<br/>&nbsp&nbsp&nbsp&nbspformat DxFiles $100. Inclusion 8.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a7_DxFiles (where=(Inclusion =1) )<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"DxFiles\"&#59<br/>run&#59<br/>%print(data=translib.a7_DxFiles)&#59<br/><br/>/*8 import the list of additional request*/<br/>data translib.a8_AddRequest&#59<br/>&nbsp&nbsp&nbsp&nbspformat Class $100. Description $100. SourceData $100. Syntax $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a8_AddRequest  (where=(syntax ne '') )<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"Additional request\"&#59<br/>run&#59<br/>%print(data=translib.a8_AddRequest)&#59<br/><br/>/*9 import cohort exclusion criteria*/<br/>data translib.a9_CohortExclusion&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source $100. Criteria $100. Syntax $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a9_CohortExclusion<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"cohort_exclusion\"&#59<br/>run&#59<br/>%print(data=translib.a9_CohortExclusion)&#59<br/><br/>%put >>> &h_Infoxls&#59<br/><br/>/*<br/>&nbsp&nbsp&nbsp&nbspif the source xls file is open by other users, the import program may report error<br/>&nbsp&nbsp&nbsp&nbspin that case, open the Excel application (do not have to open the source xls file, just the Excel App), <br/>&nbsp&nbsp&nbsp&nbspthen run the following import program<br/>*/<br/>/*10 import hospital info*/<br/>proc import datafile=\"&h_Infoxls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a10_hospInfo<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"facilities\"&#59<br/>run&#59<br/>%print(data=translib.a10_hospInfo)&#59<br/><br/><br/>/*import ed data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp1 (where = (f8='Y')) /*if required by HQC*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"ed (NACRS)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp1)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_ed_a2012'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp1 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf6=strip(upcase(f6))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf7=strip(upcase(f7))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f6='' and f7 ='' and f10 ='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import hospital data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp11<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Hosp (DAD)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp11)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_hosp'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp11 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf5=strip(upcase(f5))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf14=strip(upcase(f14))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf15=strip(upcase(f15))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf16=strip(upcase(f16))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f14&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f16&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f5='' and f14 ='' and f15 ='' and f16='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import phrs data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp21<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"PHRS\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp21)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp22&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_phrs_'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp21 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import drug claim variable description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp31<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Drug plan\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp31)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp32&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_dp_'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp31 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/*import description of msb billing variables*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp41<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Claims (MSB)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp41)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp42&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp41 (firstOBS=4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/*import description of msb mobility doc info variables*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp51<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Mobility (MSB docs)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp52&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp51 (firstOBS=4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*create an emtpy data set for var description*/<br/>&nbsp&nbsp&nbsp&nbspData importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Append  descriptions from source data files*/<br/>&nbsp&nbsp&nbsp&nbspdata importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91 importDIc_tmp2 importDIc_tmp12 importDIc_tmp22 importDIc_tmp32 importDIc_tmp42 importDIc_tmp52&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(varname, ' ')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then varname =substr(varname, 1, pos1-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*Determine the local data/target/reports folder*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value)&#59<br/>run&#59<br/><br/>%let localParentFolder=%sysfunc(strip(&localParentFolder))&#59<br/>%let localTargetPath=&localParentFolder.\\Output\\Result data&#59<br/>%put >>> &localTargetPath&#59<br/>%let localDataPath=&localParentFolder.\\Data&#59 /*the folder to save requested raw data files*/<br/>libname localT \"&localTargetPath\"&#59<br/>%put >>> &localDataPath&#59<br/>/*the report in local drive S*/<br/>%let localReportPath=&localParentFolder.\\Output\\Reports&#59<br/>%put >>> &localReportPath&#59<br/>libname localR \"&localReportPath\"&#59<br/><br/>/*Determine the remote data/target/reports folder*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value)&#59<br/>run&#59<br/>%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder))&#59<br/>%put >>> RemoteParentFolder = &RemoteParentFolder&#59<br/>%let RemoteSourcePath=&RemoteParentFolder./Source&#59<br/>%put >>>RemoteSourcePath= &RemoteSourcePath&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataStartDate=%bquote('&DataStartDate')d&#59<br/>%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate))&#59<br/>%put >>> DataStartDate = &DataStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataEndDate=%bquote('&DataEndDate')d&#59<br/>%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate))&#59<br/>%put >>> DataEndDate = &DataEndDate&#59<br/><br/>/*import data from MDS LTC (MDS_ASSESSMENT_F_2015)  <br/>&nbsp&nbsp&nbsp&nbspfor diagnoses (if in DXFiles, long_term_care =1), <br/>&nbsp&nbsp&nbsp&nbspit is not to get any dxlist (not like the ICD list, etc), rather it is go run a specific macro so as to get the study patients.<br/>&nbsp&nbsp&nbsp&nbspe.g., to have dementia patients by running specific macros,<br/>&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbspto have all who admitted into LTC within a certain period of time (like the Frailty-HRPIM study)<br/><br/>&nbsp&nbsp&nbsp&nbspfor MDS_LTC data requested for a cohort, the fields are from two sources:<br/>&nbsp&nbsp&nbsp&nbsp1) by default, get key_hsn, create_date,  MDS_AB1, AB1b, A3, and R4, these fields has been specified in A2_CohortDataVars<br/>&nbsp&nbsp&nbsp&nbsp2) fields specified in sheet 'vars_MDS_LTC'<br/><br/>&nbsp&nbsp&nbsp&nbspNote that the two sources may have overlapping vars&#59 therefore they are putting together to have a list of distinct vars.<br/>&nbsp&nbsp&nbsp&nbspThe distinct vars are then added to A2_CohortDataVars<br/>*/<br/>/*21 import data vars from sheet 'vars_mds_ltc' LTC file*/<br/>data translib.a2_vars&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status $100. file_nick_name $100. VarName_in_Raw_File $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%print(data=translib.a2_cohortdatavars)&#59<br/>data _tmp201&#59<br/>&nbsp&nbsp&nbsp&nbspformat variable $100.  &#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=_tmp201 (keep=variable where=(variable ne ''))<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"vars_MDS_LTC\"&#59<br/>run&#59<br/>data _tmp202&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. &#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp201&#59<br/>&nbsp&nbsp&nbsp&nbsprename variable = VarName_in_Raw_File&#59<br/>&nbsp&nbsp&nbsp&nbspfinal_status =1&#59<br/>&nbsp&nbsp&nbsp&nbspfile_nick_name='mds_ltc'&#59<br/>run&#59<br/>/*get ltc vars already input into a2 from sheet 'StudyFields'*/<br/>data _tmp203&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars&#59<br/>&nbsp&nbsp&nbsp&nbspif file_nick_name='mds_ltc' &#59<br/>run&#59<br/><br/>/*from _tmp202, remove those already appeared in _tmp203*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_tmp202,<br/>&nbsp&nbsp&nbsp&nbsptarget=_tmp204,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(VarName_in_Raw_File not in (select  VarName_in_Raw_File from _tmp203))<br/>)&#59<br/><br/>/*attach vars in _tmp202 to a2*/<br/>data translib.a2_cohortdatavars&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars &nbsp&nbsp&nbsp&nbsp_tmp204&#59<br/>&nbsp&nbsp&nbsp&nbspVarName_in_Raw_File=upcase(strip(VarName_in_Raw_File))&#59<br/>run&#59<br/>%sort(data =  translib.a2_cohortdatavars, sorter=file_nick_name VarName_in_Raw_File)&#59<br/><br/><br/>/*get dictionary for mds_ltc vars*/<br/>/*import description of variables from mds_ltc */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp205<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"MDS-LTC\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'mds_ltc'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp205 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and trailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc lagvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='') &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*For some of the vars, the description is in two rows. The var name appears in the first row, but not the second row<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp207&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat lagVar1 $100. lagDesc $1000. lagNote $1000. lagMeta $1000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagVar1 = lag(variable)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagdesc = lag(description)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagNotes = lag(notes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagMeta = lag(metadoc)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif variable='' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvariable = lagVar1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription = strip(Lagdesc) || ' ' || description&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes = strip(lagNotes) || ' ' || notes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc = strip(LagMeta) || ' ' || metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sort(data=importDIc_tmp207, sorter=variable obs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp208&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp207&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby variable obs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.variable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop obs lagVar1 lagdesc lagNotes lagMeta&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset  translib.A11_DataVarDic importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(variable, ' ')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then variable =substr(variable, 1, pos1-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/**getting macro file (full path) and command lines for getting dx from MDS_LTC files**/<br/><br/>%macro getLTCMacro&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*by default, always have a empty macro (for a later task, there has to be a file to be transferred)*/<br/>&nbsp&nbsp&nbsp&nbsp/*create an empty sas file. If A12 does not contain a real sas file, transfer the empty sas file*/<br/>&nbsp&nbsp&nbsp&nbspfilename EmpSAS \"&localDataPath.\\empty.sas\"&#59<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfile EmpSAS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspput &#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbspproc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=translib.a12_DxMDSLTC (where = (strip(theFile) ne ''))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Dx_MDS_LTC_Macro\"&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=translib.a12_DxMDSLTC)&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %eval(&nobs=0) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata translib.a12_DxMDSLTC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat thePath $1000. theFile $100. theLines $1000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePath = \"&localDataPath\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheFile =\"empty.sas\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getLTCMacro&#59<br/>%getLTCMacro&#59<br/><br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%delData(data=importDIc_tmp1 importDIc_tmp2 importDIc_tmp11 importDIc_tmp12<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp21 importDIc_tmp22 importDIc_tmp31 importDIc_tmp32<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp41 importDIc_tmp42 importDIc_tmp51 importDIc_tmp52<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp91 importDIc_tmp92<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp205 importDIc_tmp206 importDIc_tmp207 importDIc_tmp208<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_tmp201 _tmp202 _tmp203 _tmp204 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*************************************************************************************/<br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-cWNDcRk2GJkT9UJm","name":"A1_Copy data sets in transLib to Remote Server","children":[{"idx":"CodeTask-CinsaqqKpNiJAroE","name":"A2_at Local, del files in transDir","NodeDescription":"///t<br/>///s<br/>/**/<br/>/*%delData(data=translib.a1_MasterInput translib.a2_vars */<br/>/*translib.a3_icddx translib.a4_intvndx translib.a5_fsc translib.a6_dindx*/<br/>/*translib.a7_dxfiles)&#59*/<br/><br/>Proc delete data=translib._all_&#59<br/>run&#59<br/><br/>s///<br/>t///","children":[{"idx":"Note-uXdW9hyreKb23kGT","name":"Note (3)","NodeDescription":"///t<br/>B.&nbspTransform&nbspsettings&nbspfrom&nbspdata&nbspset&nbspvalues&nbspto&nbspmacro&nbspvariable&nbspvalues&nbspon&nbspremote&nbspside<br/>t///","children":[{"idx":"CodeTask-B7GYeGViHcyJuijA","name":"B_Remote_get settings into macro variables","NodeDescription":"///t<br/>///s<br/>/*get the project start date. It is also the last Xtrc Date*/<br/>data _null_&#59run&#59<br/>%global <br/>&nbsp&nbsp&nbsp&nbspProjectName<br/>&nbsp&nbsp&nbsp&nbspProjectStartDate<br/>&nbsp&nbsp&nbsp&nbspContact<br/>&nbsp&nbsp&nbsp&nbspEmail<br/>&nbsp&nbsp&nbsp&nbspDataStartDate<br/>&nbsp&nbsp&nbsp&nbspDataEndDate<br/>&nbsp&nbsp&nbsp&nbspEntryStartDate<br/>&nbsp&nbsp&nbsp&nbspEntryEndDate<br/>&nbsp&nbsp&nbsp&nbspEntryStartYear<br/>&nbsp&nbsp&nbsp&nbspEntryEndYear<br/>&nbsp&nbsp&nbsp&nbspEntryYears&nbsp&nbsp&nbsp&nbsp<br/><br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_MSB<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_MSB<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_Ben<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_Ben<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_NBen<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_NBen<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_Cover<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_SPEC<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_SPEC<br/>&nbsp&nbsp&nbsp&nbspXtrc_MDS_LTC<br/>&nbsp&nbsp&nbsp&nbspLPath_MDSLTC_DxMacro<br/>&nbsp&nbsp&nbsp&nbspFile_MDSLTC_DxMacro<br/>&nbsp&nbsp&nbsp&nbspCommand_MDSLTC_DxMacro<br/><br/>&nbsp&nbsp&nbsp&nbspRemoteParentFolder<br/>&nbsp&nbsp&nbsp&nbspremoteSourcePath<br/>&nbsp&nbsp&nbsp&nbspremoteReportPath<br/>&nbsp&nbsp&nbsp&nbspremoteTargetPath<br/>&nbsp&nbsp&nbsp&nbsplocalParentFolder<br/>&nbsp&nbsp&nbsp&nbsplocalDataPath<br/>&nbsp&nbsp&nbsp&nbsplocalTargetPath<br/>&#59<br/><br/>/*get remote path*/<br/>%print(data=RexLib.a1_MasterInput)&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value)&#59<br/>run&#59<br/>%put >>> &RemoteParentFolder&#59<br/><br/>%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder))&#59<br/>%put >>> &RemoteParentFolder&#59<br/><br/>/*the source files on remote server*/<br/>%let remoteSourcePath=&RemoteParentFolder./Source&#59<br/>%put >>> &remoteSourcePath&#59<br/>libname remoteS \"&remoteSourcePath\"&#59<br/>/*the target files on remote server*/<br/>%let remoteTargetPath=&RemoteParentFolder./Target&#59<br/>libname remoteT \"&remoteTargetPath\"&#59<br/>/*the report on remote server*/<br/>%let remoteReportPath=&RemoteParentFolder./Reports&#59<br/>libname remoteR \"&remoteReportPath\"&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value)&#59<br/>run&#59<br/>%let localParentFolder=%sysfunc(strip(&localParentFolder))&#59<br/>%put >>> &localParentFolder&#59<br/>%let localDataPath=&localParentFolder.\\Data&#59<br/>%put >>> localDataPath=&localDataPath&#59<br/>%let localTargetPath=&localParentFolder.\\Output\\Result data&#59<br/>%put >>> localTargetPath = &localTargetPath&#59<br/><br/><br/>/*copy all files from remote exchange to remoteS*/<br/>proc datasets lib=Rexlib&#59<br/>&nbsp&nbsp&nbsp&nbspcopy out=remoteS&#59<br/>run&#59<br/><br/>Proc delete data=Rexlib._all_&#59<br/>run&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items='ProjectStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbsp/*in the source data, the date values are characters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the folloiwng steps, the character date values are changed to numberical datavalues, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen put into macro variables<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhy not directly put characters into macro variable values?<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspbecause the original character is like 'yyyymmdd', while the required data format is 'ddmmmyyyy'<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('ProjectStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let ProjectStartDate=%bquote('&ProjectStartDate')d&#59<br/>%let ProjectStartDate=%substr(&ProjectStartDate, 1, %length(&ProjectStartDate))&#59<br/>%put >>> ProjectStartDate = &ProjectStartDate&#59<br/>%let LastXtrcDate=&ProjectStartDate&#59<br/>%put >>> ProjectStartDate = &ProjectStartDate&#59<br/>%put >>> LastXtrcDate=&ProjectStartDate&#59<br/><br/>/*get the data start and end dates*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataStartDate=%bquote('&DataStartDate')d&#59<br/>%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate))&#59<br/>%put >>> DataStartDate = &DataStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataEndDate=%bquote('&DataEndDate')d&#59<br/>%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate))&#59<br/>%put >>> DataEndDate = &DataEndDate&#59<br/><br/>/*get the cohort entrydates*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='EntryStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('EntryStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let EntryStartDate=%bquote('&EntryStartDate')d&#59<br/>%let EntryStartDate=%substr(&EntryStartDate, 1, %length(&EntryStartDate))&#59<br/>%put >>> EntryStartDate = &EntryStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='EntryEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('EntryEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let EntryEndDate=%bquote('&EntryEndDate')d&#59<br/>%let EntryEndDate=%substr(&EntryEndDate, 1, %length(&EntryEndDate))&#59<br/>%put >>> EntryEndDate = &EntryEndDate&#59<br/><br/>%let EntryStartYear = %sysfunc(year(&EntryStartDate))&#59<br/>%put >>> EntryStartYear=&EntryStartYear&#59<br/>%let EntryEndYear = %sysfunc(year(&EntryEndDate))&#59<br/>%put >>> EntryEndYear=&EntryEndYear&#59<br/>%let EntryYears = %eval(&EntryEndYear - &EntryStartYear +1)&#59<br/>%put >>> EntryYears=&EntryYears&#59<br/><br/><br/>/*The  project name, contact, and email*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='ProjectName'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('ProjectName', value)&#59<br/>run&#59<br/>%put >>> ProjectName = &ProjectName&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='Contact'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Contact', value)&#59<br/>run&#59<br/>%put >>> Contact = &Contact&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='Email'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Email', value)&#59<br/>run&#59<br/>%put >>> Email = &Email&#59<br/><br/><br/>/*the following part is to determine the xtrc_date for each sources<br/>&nbsp&nbsp&nbsp&nbspMSB, Drug claims, coverage period (same for demo, resitype)<br/>&nbsp&nbsp&nbsp&nbspThe cleaned hospital file does not require xtrc date<br/>&nbsp&nbsp&nbsp&nbsp?? How about the mortality record file (verfdt), the emergancy file (f_2012)<br/><br/>*/<br/>%put >>> &dataStartDate&#59<br/>/*the xtrc_dates*/<br/>/*determine the msb xtrc_date***********/<br/>%freq(data=clean.xtrc_dates, table=ds)&#59<br/>%sort(data=clean.xtrc_dates, target=b11, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/><br/>data b12&#59<br/>&nbsp&nbsp&nbsp&nbspset b11&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'msb_billing'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b12, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b13&#59<br/>&nbsp&nbsp&nbsp&nbspset b12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_MSB', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_MSB=%str(%')&Xtrc_Start_MSB.%str(%')d&#59<br/>%let Xtrc_Start_MSB= %substr(&Xtrc_Start_MSB, 1, %length(&Xtrc_Start_MSB))&#59<br/>%put >>> &Xtrc_Start_MSB&#59<br/><br/>%sort(data=b12, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b14&#59<br/>&nbsp&nbsp&nbsp&nbspset b12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_MSB', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_MSB=%str(%')&Xtrc_End_MSB.%str(%')d&#59<br/>%let Xtrc_End_MSB= %substr(&Xtrc_End_MSB, 1, %length(&Xtrc_End_MSB))&#59<br/>%put >>> &Xtrc_End_MSB&#59<br/>/******************************************/<br/><br/>/*determine the benefit drug claim xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b21, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b22&#59<br/>&nbsp&nbsp&nbsp&nbspset b21&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b22, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b23&#59<br/>&nbsp&nbsp&nbsp&nbspset b22 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_Ben', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_Ben=%str(%')&Xtrc_Start_DP_Ben.%str(%')d&#59<br/>%let Xtrc_Start_DP_Ben= %substr(&Xtrc_Start_DP_Ben, 1, %length(&Xtrc_Start_DP_Ben))&#59<br/>%put >>> &Xtrc_Start_DP_Ben&#59<br/><br/>%sort(data=b22, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b24&#59<br/>&nbsp&nbsp&nbsp&nbspset b22 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_Ben', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_Ben=%str(%')&Xtrc_End_DP_Ben.%str(%')d&#59<br/>%let Xtrc_End_DP_Ben= %substr(&Xtrc_End_DP_Ben, 1, %length(&Xtrc_End_DP_Ben))&#59<br/>%put >>> &Xtrc_End_DP_Ben&#59<br/>/******************************************/<br/><br/>/*determine the non-benefit drug claim xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b31, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b32&#59<br/>&nbsp&nbsp&nbsp&nbspset b31&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim_non_ben'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b32, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b33&#59<br/>&nbsp&nbsp&nbsp&nbspset b32 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_NBen', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_NBen=%str(%')&Xtrc_Start_DP_NBen.%str(%')d&#59<br/>%let Xtrc_Start_DP_NBen= %substr(&Xtrc_Start_DP_NBen, 1, %length(&Xtrc_Start_DP_NBen))&#59<br/>%put >>> &Xtrc_Start_DP_NBen&#59<br/><br/>%sort(data=b32, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b34&#59<br/>&nbsp&nbsp&nbsp&nbspset b32 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_NBen', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_NBen=%str(%')&Xtrc_End_DP_NBen.%str(%')d&#59<br/>%let Xtrc_End_DP_NBen= %substr(&Xtrc_End_DP_NBen, 1, %length(&Xtrc_End_DP_NBen))&#59<br/>%put >>> &Xtrc_End_DP_NBen&#59<br/>/******************************************/<br/><br/>*&xtrc_cover&#59<br/>/*determine the coverage xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b41, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>/*%freq(data=b41, table=ds)&#59*/<br/>data b42&#59<br/>&nbsp&nbsp&nbsp&nbspset b41&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'phrs_pers_prog'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>%sort(data=b42, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b43&#59<br/>&nbsp&nbsp&nbsp&nbspset b42 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_Cover', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_Cover=%str(%')&Xtrc_Start_Cover.%str(%')d&#59<br/>%let Xtrc_Start_Cover= %substr(&Xtrc_Start_Cover, 1, %length(&Xtrc_Start_Cover))&#59<br/>%put >>> &Xtrc_Start_Cover&#59<br/><br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b44&#59<br/>&nbsp&nbsp&nbsp&nbspset b42 end=last&#59<br/>&nbsp&nbsp&nbsp&nbspif last&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_Cover', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_Cover=%str(%')&Xtrc_End_Cover.%str(%')d&#59<br/>%let Xtrc_End_Cover= %substr(&Xtrc_End_Cover, 1, %length(&Xtrc_End_Cover))&#59<br/>%put >>> &Xtrc_End_Cover&#59<br/>/******************************************/<br/><br/>/*determine the drug spec xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b51, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b52&#59<br/>&nbsp&nbsp&nbsp&nbspset b51&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim' or ds = 'dp_claim_non_ben'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>%sort(data=b52, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b53&#59<br/>&nbsp&nbsp&nbsp&nbspset b52 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_SPEC', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_SPEC=%str(%')&Xtrc_Start_DP_SPEC.%str(%')d&#59<br/>%let Xtrc_Start_DP_SPEC= %substr(&Xtrc_Start_DP_SPEC, 1, %length(&Xtrc_Start_DP_SPEC))&#59<br/>%put >>> &Xtrc_Start_DP_SPEC&#59<br/><br/>%sort(data=b52, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b54&#59<br/>&nbsp&nbsp&nbsp&nbspset b52 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_SPEC', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_SPEC=%str(%')&Xtrc_End_DP_SPEC.%str(%')d&#59<br/>%let Xtrc_End_DP_SPEC= %substr(&Xtrc_End_DP_SPEC, 1, %length(&Xtrc_End_DP_SPEC))&#59<br/>%put >>> &Xtrc_End_DP_SPEC&#59<br/>/******************************************/<br/><br/>/***get xtrc_date for mds_ltc data****************************/<br/>data b61&#59<br/>&nbsp&nbsp&nbsp&nbspset clean.xtrc_dates&#59<br/>&nbsp&nbsp&nbsp&nbspif xtrc_date < = &LastXtrcDate  and ds='mds_assessment_f_2015'&#59<br/>run&#59<br/>%sort(data=b61, sorter=descending xtrc_date)&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset b61 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_MDS_LTC',  put(xtrc_date, date9.))&#59 <br/>run&#59<br/>%let XTRC_MDS_LTC=%str(%')&XTRC_MDS_LTC.%str(%')d&#59<br/>%let XTRC_MDS_LTC= %substr(&XTRC_MDS_LTC, 1, %length(&XTRC_MDS_LTC))&#59<br/>%put >>> &XTRC_MDS_LTC&#59<br/><br/>/****************************************************/<br/><br/>/*get the file (full path) and macro command for getting dx info from MDS_LTC*/<br/>%macro getMDSMacro&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*initially, let the following variables = nothing*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let File_MDSLTC_DxMacro=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let Command_MDSLTC_DxMacro =&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data =remoteS.A12_DXMDSLTC )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the path, file name and command lines*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remoteS.A12_DXMDSLTC (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('LPath_MDSLTC_DxMacro',  thePath)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('File_MDSLTC_DxMacro',  theFile)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('Command_MDSLTC_DxMacro',  theLines)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*remove the slash at the end of the path*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%sysfunc(strip(&LPath_MDSLTC_DxMacro))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %substr(&LPath_MDSLTC_DxMacro, %length(&LPath_MDSLTC_DxMacro), 1) = \\ %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%substr(&LPath_MDSLTC_DxMacro, 1, %eval(%length(&LPath_MDSLTC_DxMacro)-1))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro= %sysfunc(strip(&LPath_MDSLTC_DxMacro))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the local macro file to get dx data from MDS_LTC = %str(&LPath_MDSLTC_DxMacro.\\&File_MDSLTC_DxMacro)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the remote macro file to get dx data from MDS_LTC = %str(&remoteSourcePath.\\&File_MDSLTC_DxMacro)&#59<br/>%mend getMDSMacro&#59<br/>%getMDSMacro&#59<br/><br/>%freq(source=clean.xtrc_dates, table=ds)&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-yUjgFuvpaSgEzUDM","name":"Copy LTCMacro to Remote","children":[{"idx":"Note-HBxSQt5k8cYhDOrZ","name":"Note (4)","NodeDescription":"///t<br/>C.&nbspGet&nbspdata&nbspfrom&nbspeach&nbspsource<br/>t///","children":[{"idx":"CodeTask-iBm3TnsewjoXmFMA","name":"C_dx from all sources","NodeDescription":"///t<br/>///s<br/>/*C. Getting data from each sources*/<br/><br/>/*Note!!!<br/>&nbsp&nbsp&nbsp&nbspIf a new source file is added (e.g., the home care or long term care file), the <br/>&nbsp&nbsp&nbsp&nbspAddRequest_&theSourceFile must be added into the %global statement<br/>&nbsp&nbsp&nbsp&nbspIn addition, in the macro makingAddRequest, a line must be added to initialize null value for the variable&nbsp&nbsp&nbsp&nbspAddRequest_&theSourceFile:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi.e., %let AddRequest_&theSourceFile =&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>*/<br/><br/>%global <br/>&nbsp&nbsp&nbsp&nbspCCP_ CCI_ ICD9_ ICD10_ ICDDxList IntVNDxList ICD9Left3_ ICD9DxListLeft3 FSCDxList<br/>&nbsp&nbsp&nbsp&nbspFSC_ EDF2012DxList DINDxStr DINDxList DxMethod<br/>&nbsp&nbsp&nbsp&nbspAddRequest_hospital AddRequest_msb AddRequest_ed_a2012 AddRequest_dp_benefit <br/>&nbsp&nbsp&nbsp&nbspAddRequest_dp_NonBenefit AddRequest_PHRS<br/>&#59<br/><br/>/*make syntax for additional request when preparing c_dx_&sourceFile*/<br/>%macro makingAddRequest&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theSource nRec i theSyntaxSeg&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*clean up the values in the syntax variables*/<br/>&nbsp&nbsp&nbsp&nbsp%let AddRequest_hospital=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let AddRequest_msb=&#59 <br/>&nbsp&nbsp&nbsp&nbsp%let AddRequest_ed_a2012=&#59 <br/>&nbsp&nbsp&nbsp&nbsp%let  AddRequest_dp_benefit=&#59 <br/>&nbsp&nbsp&nbsp&nbsp%let AddRequest_dp_NonBenefit=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let AddRequest_PHRS=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get the number of obs in a8_AddRequest*/<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=remotes.a8_addRequest)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nRec = &nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp/*loop and get the soureData name and syntax for each row in a8_addRequest*/<br/>&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nRec&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.a8_addRequest (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theSource', SourceData)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theSyntaxSeg', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &theSource, &theSyntaxSeg&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> AddRequest_&theSource = &&AddRequest_&theSource&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*assemble the syntaxsegments into the condition segment*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&&AddRequest_&theSource) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the AddRequest syntax is blank, make it like: if <syntaxseg>*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let AddRequest_&theSource = if &theSyntaxSeg&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the addRequest syntax is not blank, attach the syntax seg with 'AND'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let AddRequest_&theSource = &&AddRequest_&theSource AND &theSyntaxSeg&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> AddRequest_&theSource = &&AddRequest_&theSource&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend makingAddRequest&#59<br/>%makingAddRequest&#59<br/><br/>/*prepare strings for ICD codes*/<br/>/*get icd-9 list*/<br/>%macro makingDxLists&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makingDxLists_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A3_ICDDX&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif code_version='ICD_9'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToStr(data=makingDxLists_tmp1, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD9_=&valuesToStr_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &ICD9_ = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD9_=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> ICD9 list = &ICD9_&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get icd-10-ca list*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makingDxLists_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A3_ICDDX&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif code_version='ICD_10_CA'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToStr(data=makingDxLists_tmp2, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD10_=&valuesToStr_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &ICD10_ = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD10_=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> ICD10 list = &ICD10_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get CCP list*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makingDxLists_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A4_INTVNDX&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif code_version='CCP'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToStr(data=makingDxLists_tmp3, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CCP_=&valuesToStr_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CCP_ = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CCP_=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> CCP list = &CCP_&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get CCI list*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makingDxLists_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A4_INTVNDX&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif code_version='CCI'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToStr(data=makingDxLists_tmp4, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CCI_=&valuesToStr_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CCI_ = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CCI_=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> CCI list = &CCI_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the ICD 9 codes may have 4 digitis or more<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor MSB file, only check the first digits, therefore a truncated 3-digit code list should be prepared separately<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makingDxLists_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A3_ICDDX&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif code_version='ICD_9'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode_Left3=substr(code, 1,3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToStr(data=makingDxLists_tmp5, var=code_Left3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD9Left3_=&valuesToStr_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &ICD9Left3_ = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD9Left3_=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> For MSB, ICD9 (left 3 digits) list = &ICD9Left3_&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*from MSB file get list of Fee Schedule Code (SK proc codes)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makingDxLists_tmp6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A5_FSC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToStr(data=makingDxLists_tmp6, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FSC_=&valuesToStr_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &FSC_ = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FSC_=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> For MSB, Fee schedule code (FSC) list = &FSC_&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a list of diag codes, delimited by ,*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToList(data=remotes.A3_ICDDX, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICDDxList=&valuesToList_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToList_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &ICDDxList = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICDDxList=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> All ICD codes, delimited by comma = &ICDDxList&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a list of diag codes from the ICD_9 codes, for MSB files only*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToList(data=makingDxLists_tmp5, var=code_Left3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD9DxListLeft3=&valuesToList_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToList_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &ICD9DxListLeft3 = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let ICD9DxListLeft3=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> ICD_9 codes of first 3 charater, delimited by comma = &ICD9DxListLeft3&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToList(data=remotes.A4_IntVNDx, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let IntVNDxList=&valuesToList_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToList_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &IntVNDxList = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let IntVNDxList=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> Interveniton codes, delimted by comman = &IntVNDxList&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*from MSB file get list of Fee Schedule Code (SK proc codes)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToList(data=remotes.A5_FSC, var=code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FSCDxList=&valuesToList_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToList_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &FSCDxList = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FSCDxList=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> Fee Schedule Codes, delimted by comman = &FSCDxList&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a list of codes for ED_after 2012 file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makingDxLists_tmp7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A3_ICDDX&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif code_version='ICD_9' then EDCode =substr(code, 1,3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse EDCode=Code&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToList(data=makingDxLists_tmp7, var=EDCode)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let EDF2012DxList=&valuesToList_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToList_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &EDF2012DxList = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let EDF2012DxList=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> diagnostic list for ED file (after 2012) = &EDF2012DxList&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a DIN list like xxx yyy (for drug extraction macro)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToStr(data=remotes.A6_DINDx, var=DIN)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let DINDxStr=&valuesToStr_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &DINDxStr = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let DINDxStr=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> All DIN codes, delimited by space = &DINDxStr&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a DIN list like 'xxx', 'yyy', for determination of dx source*/&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%valuesToList(data=remotes.A6_DINDx, var=DIN)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let DINDxList=&valuesToList_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &DINDxList&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToList_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &DINDxList = '[ThereIsNoValue]' %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let DINDxList=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> All DIN codes, delimited by comma = &DINDxList&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%deldata(data=makingDxLists_tmp1 makingDxLists_tmp2 makingDxLists_tmp3 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmakingDxLists_tmp4 makingDxLists_tmp5 makingDxLists_tmp6 makingDxLists_tmp7)&#59<br/><br/>%mend makingDxLists&#59<br/>%makingDxLists&#59<br/><br/>/*macro to get data from hopsital*/<br/>/*<br/>Get hospital record, with record N, adm/dschg date,<br/>&nbsp&nbsp&nbsp&nbsptype of dx (dx, cdx, intvn, cintvn), position of dx (main, others)<br/>*/<br/><br/>%macro getDxData_hospital&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local LogicCondition&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*By default, the code_Logic = AND (in macro Extract_CIHI)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif only ICD codes  OR CCP/CCI codes were specified, let code_logic = AND<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIf both were specified, use the logic OR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsuch that ANY records with 1+ diag codes from ICD/CCP/CCI will be included<br/>&nbsp&nbsp&nbsp&nbsp*/<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%if (%length(&ICD9_) ne 0 or %length(&ICD10_) ne 0 ) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (%length(&CCP_) ne 0 or %length(&CCI_) ne 0 ) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LogicCondition = OR&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LogicCondition = AND&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%put >>> LogicCondition = &LogicCondition&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%Extract_CIHI( <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_in =&hospitalFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=c_hospital, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadms_start_date=&DataStartDate,      <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadms_end_date=&EntryEndDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspICD9_list=&ICD9_,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspICD10_list=&ICD10_,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCP_List=&CCP_,<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCP_Exact_list=,*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCI_list=&CCI_,<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCI_Exact_list=,*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode_logic=&LogicCondition,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file= <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp )&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&AddRequest_hospital) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> applying additional request: &AddRequest_hospital&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_hospital&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_hospital&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&AddRequest_hospital&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /*if none of the ICDDxlist and IntVnDxList contains any code, keep all distinct records*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %if %length(&ICDDxList )=0 and %length(&IntVNDxList) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp%put >>> no ICD or IntVn codes specified&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=c_hospital,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_dx_hospital,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCIHI_REC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspKEY_HSN,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspADM_DATE,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDSCHG_DATE,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'hp' as src,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'NA' as type,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'NA' as code,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmonotonic() as obs,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1 as dxN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) <= &LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>>  ICD or IntVn codes specified&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_dx_hospital&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_hospital&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='hp'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif datepart(xtrc_date) <= &LastXtrcDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray intvns $ intvn_code_1 - intvn_code_20&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cintvns $ conv_proc_code_1 - conv_proc_code_20&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat type $5.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&ICDDxList )  ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> ICDDxList = &ICDDxList&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&ICDDxList) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='dx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=dxs(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&ICDDxList)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='cdx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=cdxs(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i <21 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&IntVNDxList ) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> IntVNDxList = &IntVNDxList&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif intvns(i) in: (&IntVNDxList)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='intvn'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=intvns(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Cintvns(i) in: (&IntVNDxList)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='cintvn'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=cintvns(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep CIHI_REC key_hsn obs type dxN code adm_date dschg_date src&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getDxData_hospital&#59<br/>/*%getDxData_hospital&#59*/<br/>/*************************************/<br/><br/><br/>/*macro to get data from MSB*/<br/>/**/<br/>/*%let ICD9Left3_=361 714&#59*/<br/>/*%let ICD9DxListLeft3=%str('361', '714')&#59*/<br/>/*%let FSC_= B00 A79&#59*/<br/>/*%let FSCDxList=%str('B00', 'A79')&#59*/<br/>%macro getDxData_MSB&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*the problem is that when both diagcode and FSC code are specified<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following macro returns only records of diagcode AND FSC<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt seems that, unlike the Extract_CIHI macro, there is no option to <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchange the logic to OR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTherefore in the following step, FSCcode is never specified, such that <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspall records regardless will be extracted, regardless of FSC code. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspScreening of FSC code will be done in later steps<br/>&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%Extract_MSB(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_MSB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out= c_MSB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file= , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdiagcode=&ICD9Left3_, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdostart=&DataStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdosend=&EntryEndDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfscode=<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&AddRequest_MSB) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> applying additional request: &AddRequest_MSB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_MSB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_MSB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&AddRequest_MSB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*if the ICD9DxListLeft3 code contains no codes, keep all distinct records*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %if %length(&ICD9DxListLeft3 )=0  %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=c_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_dx_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspKEY_HSN,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_doc_num,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdos_1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'mb' as src,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'NA' as type,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'NA' as code,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmonotonic() as OBS,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1 as dxN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_dx_MSB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_MSB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat type $5. code $10. &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='mb'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&ICD9DxListLeft3 ) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: (&ICD9DxListLeft3) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='dx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=diag&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&FSCDxList ) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &nbsp&nbsp&nbsp&nbspfsc in: (&FSCDxList) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='fsc'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=fsc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn key_doc_num dos_1 obs type code dxN src&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getDxData_MSB&#59<br/>/*%getDxData_MSB&#59*/<br/>/*************************************/<br/><br/>/*macro to get data from ED_F_2012*/<br/>%macro getDxData_ED_A2012&#59<br/>&nbsp&nbsp&nbsp&nbsp%getED_A2012(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&ed_a2012file,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_ED_A2012,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinctRecord=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPatientList=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = %str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(DatePart(reg_date) >= &DataStartDate and DatePart(reg_date) <= &EntryEndDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor (DatePart(disp_date) >= &DataStartDate and DatePart(disp_date) <= &EntryEndDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor (DatePart(reg_date) < &DataStartDate and DatePart(disp_date) > &EntryEndDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp%if %length(&AddRequest_ED_A2012) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> applying additional request: &AddRequest_ED_A2012&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_ED_A2012&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_ED_A2012&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&AddRequest_ED_A2012&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspdata c_dx_ED_A2012&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_ED_A2012 &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadm_date = datepart(reg_date)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdschg_date = datepart(disp_date)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the EDDxlist is not specified, have all records*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&EDF2012DxList) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: (&EDF2012DxList) &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='dx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=mp_dx&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='ea'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat adm_date date9. dschg_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn adm_date dschg_date obs type code dxN src &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif datepart(xtrc_date) <= &LastXtrcDate&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>%mend getDxData_ED_A2012&#59<br/>/*%getDxData_EDA2012&#59*/<br/><br/>/*************************************/<br/><br/>/*macro to get data from Drug_ben*/<br/>/*get drug claims*/<br/>%macro getDxData_DP_Benefit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%Extract_Drug(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_DP_Ben, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_DP_Ben, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=c_DP_Benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_list=&DINDxStr,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_file= ,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrt_dt=&DataStartDate ,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend_dt=&EntryEndDate  <br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=_drgtmp _fileout _allDIn)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&AddRequest_DP_Benefit) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> applying additional request: &AddRequest_DP_Benefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_DP_Benefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_DP_Benefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&AddRequest_ED_DP_Benefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59&nbsp&nbsp&nbsp&nbsp<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*if the DINDxList code contains nothing, keep all distinct records*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %if %length(&DINDxList )=0  %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=c_DP_Benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_dx_DP_Benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspKEY_HSN,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprx_ddddd as rxd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'db' as src,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'din' as type,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'NA' as code,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmonotonic() as OBS,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1 as dxN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) <= &LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_dx_DP_Benefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c_DP_Benefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif din in (&DINDxList)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='din'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=din&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='db'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprxd=rx_ddddd&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat rxd date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn rxd obs type code dxN src&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getDxData_DP_Benefit&#59<br/>/*%getDxData_DP_Benefit&#59*/<br/>/*************************************/&nbsp&nbsp&nbsp&nbsp<br/><br/>/*macro to get data from Drug_nonBen*/<br/>%macro getDxData_DP_NonBenefit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%Extract_Drug_non_ben_test(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_DP_NBen, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_DP_NBen, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=getDxData_DP_NonBenefit_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_list=&DINDxStr,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_file=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrt_dt=&DataStartDate ,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend_dt=&EntryEndDate <br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*to be alined with the columns in dp_benefit*/<br/>&nbsp&nbsp&nbsp&nbspdata C_DP_NonBenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getDxData_DP_NonBenefit_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop birth_year birth_month hc_mjr_clss hc_MNR_clss hc_sub_clss&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAMNT_PAY_DRUG_PLAN=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename total_cost=TOTAL_APPRV&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename UNT_PR_cost =UNT_PR_PAY&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFormat XMPT_IND $1.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspXMPT_IND ='N'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=_drgtmp _fileout _allDIn getDxData_DP_NonBenefit_tmp1)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp%if %length(&AddRequest_DP_NonBenefit) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> applying additional request: &AddRequest_DP_NonBenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata C_DP_NonBenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset C_DP_NonBenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&AddRequest_ED_DP_NonBenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*if the DINDxList code contains nothing, keep all distinct records*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %if %length(&DINDxList )=0  %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=C_DP_NonBenefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_dx_DP_NonBenefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspKEY_HSN,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprx_ddddd as rxd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'dn' as src,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'din' as type,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'NA' as code,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmonotonic() as OBS,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1 as dxN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) <= &LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp %else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata c_dx_DP_NonBenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset C_DP_NonBenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif din in: (&DINDxList)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='din'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=din&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='dn'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename rx_ddddd=rxd&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn rx_ddddd obs type code dxN src&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>%mend getDxData_DP_NonBenefit&#59<br/>/*%getDxData_DP_NonBenefit&#59*/<br/><br/>/*<br/>&nbsp&nbsp&nbsp&nbspget MDSLTC data*/<br/>%put >>> &remoteSourcePath./&File_MDSLTC_DxMacro&#59<br/><br/>%macro getDxData_MDS_LTC&#59<br/>&nbsp&nbsp&nbsp&nbsp%include \"&remoteSourcePath./&File_MDSLTC_DxMacro\"&#59<br/>&nbsp&nbsp&nbsp&nbsp%if &File_MDSLTC_DxMacro ne empty.sas %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&Command_MDSLTC_DxMacro&#59 <br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getDxData_MDS_LTC&#59<br/><br/><br/>/*get cohort population from PHRS files (e.g., from a particular area, of a study period, etc)*/<br/>%macro getDxData_phrs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the population between the cohort entry period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SKPopulation(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfilePath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfoPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfoFile=&PHRS_InfoFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProgPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProgFile=&PHRS_CovFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfoXtrc=&lastXtrcDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverXtrc=&Xtrc_End_Cover, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartDate=&EntryStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendDate=&EntryEndDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getDxData_phrs_tmp1)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*From above, the data set SKPopulation_Poplist contains all key_hsns ever appeared in the interested period<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor the following, add two columns to indicate the start and end dates)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=SKPopulation_Poplist,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getDxData_phrs_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, &EntryStartDate format date9. as startD, &EntryEndDate format date9. as endD)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get geologic information (in the result set, RHA=RHA_A_Number)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%demog_assign(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprs_xtrc_dt=&Xtrc_End_Cover,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         ds_in =getDxData_phrs_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         ds_out=getDxData_phrs_tmp3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         strt_dt_var=startD,   <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         end_dt_var=endD,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         geo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         incl_full_info=N,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         incl_incqtl_var=N,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         debug=N<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp         )&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*apply additional conditions<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe conditions can be set for the following variables&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp RHA (0-9), URB_RUR, BORN_MONTH, BORN_YEAR, SEX_DESC, MARI_STAT_CODE*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&AddRequest_phrs) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> applying additional request: &AddRequest_phrs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getDxData_phrs_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getDxData_phrs_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&AddRequest_PHRS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getDxData_phrs_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_dx_phrs,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, 'ph' as src, 'ph' as code, monotonic() as dxN, 'ph' as type, &EntryStartDate as DxDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getDxData_phrs_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_dx_phrs,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, 'ph' as src, 'ph' as code, monotonic() as dxN, 'ph' as type, &EntryStartDate as DxDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getDxData_phrs_tmp:&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59*/<br/>%mend getDxData_phrs&#59<br/><br/><br/><br/>/*****End of macros for getting data from individual sources********************************************/<br/><br/>%macro NewPop_GetDxData&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theSources theFileSource i dlmt&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*let dlmt=space*/<br/>&nbsp&nbsp&nbsp&nbsp%let dlmt=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*the files for defining the study cohort*/<br/>&nbsp&nbsp&nbsp&nbsp%ValueToString(Data=remoteS.A7_DXFILES, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=dxFiles, theStrVarName=, DLMT=&dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theSources=&theStrVar_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%put >>> theSources are &theSources&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*create an empty data set, later dx data from each src will be appendied to the dataset<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspit'll report in the log that the variable key_hsn is uninitialized<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspit is fine. SAS pops warnings if the variable has no value yet is formated (as in this case). <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is to warn users<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthat the variable is never used (e.g., the var name is misspelled)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHere it is fine, as the purpose IS to create an empty data set without any values. <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata NewPop_GetDxData_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat Key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let i=1&#59<br/>&nbsp&nbsp&nbsp&nbsp/*loop to get the sources*/<br/>&nbsp&nbsp&nbsp&nbsp/*loop unitl %scan has a null value, i.e., a null value after the last element*/<br/>&nbsp&nbsp&nbsp&nbsp%do %until (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%length(%scan(%quote(&theSources), &i &dlmt)) =0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the current file source*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> i = &i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the source is PHRS_INFO or PHRS_PROG, change the source name to PHRS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(because such set is to use the same macro gexDxData_PHRS)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theFileSource=%scan(%quote(&theSources), &i &dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %index(%upcase(&theFileSource), PHRS_INFO) ne 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor  %index(%upcase(&theFileSource), PHRS_PROG) ne 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%then %let theFileSource=PHRS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theFileSource= &theFileSource&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*run the specific data-getting macro for each file source*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> run macro getDxData_&theFileSource&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getDxData_&theFileSource&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*append the records to _tmp1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata NewPop_GetDxData_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset NewPop_GetDxData_tmp1 c_dx_&theFileSource&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let i = %eval(&i+1)&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*determine the diagnosis date (e.g., by adm date or by ds_chg date*/<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif items= 'DiagnosisDate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('DxMethod', value)&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*note the following settings does not account for<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata from ED before 2012 (ea), or phrs */<br/>&nbsp&nbsp&nbsp&nbspdata c_dxAll&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset NewPop_GetDxData_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat dxDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif src in ('hp', 'ea', 'eb') then  dxDate=&DxMethod&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif src = 'mb'  then dxDate = dos_1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif src in ('db', 'dn')  then dxDate = rxd&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif src in ('ml', 'ph') then dxDate=dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxYear=year(dxDate)&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59 <br/>&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=c_dxAll, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=c_dxAll.zip, <br/>&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%sort(data=c_dxAll, sorter=key_hsn dxDate src)&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=c_dxAll, table =dxyear* src)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=NewPop_GetDxData_tmp1)&#59<br/><br/>%mend NewPop_GetDxData&#59<br/>%NewPop_GetDxData&#59<br/>/*************************************/<br/><br/><br/>/*cohort*/<br/>data c6a&#59<br/>&nbsp&nbsp&nbsp&nbspset c_dxAll&#59<br/>&nbsp&nbsp&nbsp&nbspif dxDate >= &entryStartDate and dxDate <= &entryEndDate&#59<br/>run&#59<br/>data remoteT.c_cohort&#59<br/>&nbsp&nbsp&nbsp&nbspset c6a&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dxDate src&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ne . and dxdate ne . &#59<br/>&nbsp&nbsp&nbsp&nbsprename dxDate = dQDate&#59<br/>run&#59<br/><br/><br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"Note-Socc4PxOYVJEikW2","name":"Note (5)","NodeDescription":"///t<br/>D.&nbspApply&nbspexclusion&nbspcriteria<br/>t///","children":[{"idx":"CodeTask-B1XbbPwYZKjWPVJM","name":"D_Patient Flow","NodeDescription":"///t<br/>///s<br/>/*D. Apply exclusion criteria and prepare patient flow report*/<br/>/*%print(data=&PHRS_CovFile)&#59*/<br/><br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=c_dxall,<br/>&nbsp&nbsp&nbsp&nbspzipped=c_dxall,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=c_dxall<br/>)&#59<br/><br/><br/>/*D1. Pop between the entry period*/<br/>%SKPopulation(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfilePath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfoPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfoFile=&PHRS_InfoFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProgPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProgFile=&PHRS_CovFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfoXtrc=&lastXtrcDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverXtrc=&Xtrc_End_Cover, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartDate=&EntryStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendDate=&EntryEndDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=D1a)&#59<br/><br/>%minmax(data=d1a, <br/>&nbsp&nbsp&nbsp&nbspvar=count, format=, target=d1b, m=sum)&#59<br/>&nbsp&nbsp&nbsp&nbspdata remoteT.d1_pop&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='pop'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d1b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_sum = N&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/><br/><br/><br/><br/><br/>%macro notrun&#59<br/>/*D2. Number of cases in c_cohort*/<br/>%minmax(data=remoteT.c_cohort, <br/>&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d2a, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbspdata d2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='study_pop'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*D3. get age sex natv_flag info of all patients in c_cohort*/<br/>%getPHRSInfo(<br/>&nbsp&nbsp&nbsp&nbsprawFile=&phrs_infoFile, <br/>&nbsp&nbsp&nbsp&nbspsourceFile=remoteT.c_cohort, <br/>&nbsp&nbsp&nbsp&nbsptargetFile=d3a, <br/>&nbsp&nbsp&nbsp&nbspindexCol=dQDate, <br/>&nbsp&nbsp&nbsp&nbspBornDay=15, <br/>&nbsp&nbsp&nbsp&nbspageCut=,<br/>&nbsp&nbsp&nbsp&nbspincldNative=1, /*the source file &PHRSINFOZIP have a column of native_flag&#59 we will include the first nations, but<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnot analyze as a specific group*/<br/>&nbsp&nbsp&nbsp&nbspstartDt=&EntryStartDate,<br/>&nbsp&nbsp&nbsp&nbspendDt=&EntryEndDate,<br/>&nbsp&nbsp&nbsp&nbspcohortGroup=,<br/>&nbsp&nbsp&nbsp&nbspxtrc=&lastXtrcDate,<br/>&nbsp&nbsp&nbsp&nbspkeepTMP=,<br/>&nbsp&nbsp&nbsp&nbspnoprint=noprint<br/>)&#59<br/><br/>/*# patients excluding those missing info*/<br/>%minmax(data=d3a, <br/>&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d3b, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbspdata d3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='excld_miss'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d3b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*get the exclusion critera*/<br/><br/>/*D4 excluding registered Indians if specified*/<br/>%macro applyNatvCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local NatvCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let NatvCondition=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Registered Indian'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('NatvCondition', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&NatvCondition) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let NatvCondition = if &NatvCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> NatvCondition is: &NatvCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d4a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&NatvCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%minmax(data=d4a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d4b, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='excld_RegIndian'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d4b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>%mend applyNatvCondition&#59<br/>%applyNatvCondition&#59<br/><br/>/*D5 apply age exclusion criteria*/<br/>%macro ApplyAgeCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local AgeCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let AgeCondition=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Age'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('AgeCondition', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&AgeCondition) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let AgeCondition = If &AgeCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> AgeCondition is: &AgeCondition&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d4a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&AgeCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%minmax(data=d5a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d5b, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&AgeCondition) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar=symget('AgeCondition')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar = 'If Age >=0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d5b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>%mend ApplyAgeCondition&#59<br/>%ApplyAgeCondition&#59<br/><br/><br/>/*6. excluding those with coverage gaps within the look-back window*/<br/>%Macro ApplyPriorCoverCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local PriorCovCondition CoverDef CoverDefValue&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let PriorCovCondition=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincase in the following steps, nothing to be created for table d6c, let it be an empty set<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif the empty data set was not created, the old d6c from last run will be kept and causing wrong results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11. DQDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Coverage prior to the first diagnosis'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('PriorCovCondition', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> PriorCovCondition is: &PriorCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is no Conditions, have all patients in d6a*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&PriorCovCondition) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let PriorCovCondition = PriorCovCondition not set, all patients retained&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = by nothing&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue = nothing&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 1*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*else have only those continuously covered*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Have the cover days, gaps, and PCT<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote, if there are multiple disease cohorts, specify 'cohortGroup'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=&PHRS_Covfile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=d5a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=%str(&Xtrc_End_Cover), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=%str(dQdate - &PriorCovCondition), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= %str(dQdate - 1), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d6a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the type of continuous coverage definition*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the type of coverage definition*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Definition of loss of cover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('CoverDef', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> The continuous coverage is defined: &CoverDef&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the value of coverage definition (e.g., min gap = 7 days, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Threshold value for loss of cover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('CoverDefValue', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> The continuous coverage threshold value is: &CoverDefValue&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by min gap<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(if the coverage status is not defined, use the default: min gap =1 day)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 3*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDef) =0 or &CoverDef=by minimum gap in days %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min gap as 1 day*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 4*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&coverDef) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef= CoverDef not defined, use default setting min gap =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (min gap = 1 days )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> Coverage threshold value not defined. change CoverDefValue to &CoverDefValue&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 4*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbspget patients ever had a gap > &CoverDefValue days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=d6a, target=d6c, vars=%str(key_hsn, dQdate), filters=%str(gaps > &CoverDefValue))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 3*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 5*/<br/> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by coverage days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 6*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CoverDef = by cover days %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min cover days as &PriorCovCondition<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., if PriorCovCondition=365, let the min cover days =365*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 7*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=&PriorCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (same length as the priorCovCondition)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 7*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*sum the cover days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d6a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d6b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, dqDate, sum(days) as cumuCover, sum(coverPCT) as coverPCT),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, dqDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dqDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the patients whose cumulative covering days < &CoverDefValue*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d6b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cumuCover < &CoverDefValue &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 6*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 8*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by cover-percentage*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 9*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CoverDef = by cover percentage %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min PCT = 100<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., if PriorCovCondition=365, let the min cover days =365*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 10*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=100&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (100%)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 10*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*sum the cover PCT*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d6a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d6b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, dqDate, sum(days) as cumuCover, sum(coverPCT) as coverPCT),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, dqDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dqDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the patients whose cumulative covering days < &CoverDefValue*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d6b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif coverPCT < &CoverDefValue &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 9*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 11*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDef is not by gap, coverdays, or cover PCT, it must be a wrong setting<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo not exclude any patient*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let coverDef = None of the patient will be excluded. No such coverage setting - &coverDef&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 11*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 8*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 5*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*d6c contains key_hsn and Dqdate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif there are multiple disease cohorts, the same patient may have different DQdates<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppatient may lost coverage only for a particular disease dqdate, but not for another<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d5a1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn_DQDate = key_hsn || DQDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if d6c does not have records, d6c1 won't have any records as well*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6c1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn_DQDate = key_hsn || DQDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*patients in d5a, but not in d6c*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d5a1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d6d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.key_hsn_DQDate not in (select key_hsn_DQDate from d6c1))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59&nbsp&nbsp&nbsp&nbsp<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%minmax(data=d6d, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d6e, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='excld_PriorCovGap'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d6e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=d6)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> priorCovCondition = &PriorCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the coverage status is defined &CoverDef&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the threshold value is &CoverDefValue&#59<br/><br/>%mend ApplyPriorCoverCondition&#59<br/>%ApplyPriorCoverCondition&#59<br/><br/>/*7. excluding those with coverage gaps since the diagnosis date*/<br/>%Macro ApplyFollowCoverCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local FollowCovCondition CoverDef CoverDefValue&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FollowCovCondition=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincase in the following steps, nothing to be created for table d7c, let it be an empty set<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif the empty data set was not created, the old d7c from last run will be kept and causing wrong results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Coverage since the first diagnosis'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('FollowCovCondition', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> FollowCovCondition is: &FollowCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is no Conditions, have all patients in d6d*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&FollowCovCondition) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FollowCovCondition = FollowCovCondition not set, all patients retained&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = by nothing&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue = nothing&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 1*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*else have only those continuously covered*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Have the cover days, gaps, and PCT*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=&PHRS_Covfile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=d6d, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=%str(&Xtrc_End_Cover), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=%str(dQdate ), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= %str(dQdate + &FollowCovCondition -1), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d7a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the type of continuous coverage definition*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the type of coverage definition*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Definition of loss of cover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('CoverDef', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> The continuous coverage is defined: &CoverDef&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the value of coverage definition (e.g., min gap = 7 days, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Threshold value for loss of cover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('CoverDefValue', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> The continuous coverage threshold value is: &CoverDefValue&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by min gap<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(if the coverage status is not defined, use the default: min gap =1 day)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 3*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDef) =0 or &CoverDef=by minimum gap in days %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min gap as 1 day*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 4*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&coverDef) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef= CoverDef not defined, use default setting min gap =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (min gap = 1 days )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> Coverage threshold value not defined. change CoverDefValue to &CoverDefValue&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 4*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbspget patients ever had a gap > &CoverDefValue days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=d7a, target=d7c, vars=%str(key_hsn, dqdate), filters=%str(gaps > &CoverDefValue))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 3*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 5*/<br/> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by coverage days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 6*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CoverDef = by cover days %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min cover days as &FollowCovCondition<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., if FollowCovCondition=365, let the min cover days =365*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 7*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=&FollowCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (same length as the FollowCovCondition)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 7*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*sum the cover days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d7b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, dqDate, sum(days) as cumuCover, sum(coverPCT) as coverPCT),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, dqDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dqDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the patients whose cumulative covering days < &CoverDefValue*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d7b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cumuCover < &CoverDefValue &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 6*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 8*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by cover-percentage*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 9*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CoverDef = by cover percentage %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min PCT = 100<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., if FollowCovCondition=365, let the min cover days =365*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 10*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=100&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (100%)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 10*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*sum the cover PCT*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d7b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, dqDate, sum(days) as cumuCover, sum(coverPCT) as coverPCT),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, dqDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dqDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the patients whose cumulative covering days < &CoverDefValue*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d7b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif coverPCT < &CoverDefValue &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 9*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 11*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDef is not by gap, coverdays, or cover PCT, it must be a wrong setting<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo not exclude any patient*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let coverDef = None of the patient will be excluded. No such coverage setting - &coverDef&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 11*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 8*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 5*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*d7c contains key_hsn and Dqdate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif there are multiple disease cohorts, the same patient may have different DQdates<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppatient may lost coverage only for a particular disease dqdate, but not for another<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d6d1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d6d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn_DQDate = key_hsn || DQDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if d7c does not have records, d6c1 won't have any records as well*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d7c1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn_DQDate = key_hsn || DQDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*patients in d6d, but not in d7c*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d6d1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d7d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.key_hsn_DQDate not in (select key_hsn_DQDate from d7c1))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59&nbsp&nbsp&nbsp&nbsp<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%minmax(data=d7d, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d7e, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='excld_FollowCovGap'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d7e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=d7)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> FollowCovCondition = &FollowCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the coverage status is defined &CoverDef&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the threshold value is &CoverDefValue&#59<br/><br/>%mend ApplyFollowCoverCondition&#59<br/>%ApplyFollowCoverCondition&#59<br/><br/>/*8. excluding with diagnosis or procedure code in the defined window*/<br/>%macro ApplyPriorDxDaysExclusion&#59<br/>&nbsp&nbsp&nbsp&nbsp%local PriorDxDays&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincase in the following steps, nothing to be created for table d8c, let it be an empty set<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif the empty data set was not created, the old d8c from last run will be kept and causing wrong results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Prior diagnosis'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('PriorDxDays', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> PriorDxDays is: &PriorDxDays&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is no Conditions, have all patients in d7d*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&PriorDxDays) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let PriorDxDays = PriorDxDays not set, all patients retained&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 1*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*else have only those not having dx codes in the defined period prior to the dQdate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=C_dxAll,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=d7d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d8c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*source is not benifit/nonbenifit drug claims */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dxdate between t2.dqDate - &PriorDxDays and t2.dqDate-1 and t1.src ne 'db' and t1.src ne 'dn' )<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*patients not in d8c*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d7d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d8d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.key_hsn not in (select key_hsn from d8c))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%minmax(data=d8d, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d8e, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='excld_PriorDx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d8e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=d8)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> PriorDxDays = &PriorDxDays&#59<br/><br/>%mend ApplyPriorDxDaysExclusion&#59<br/>%ApplyPriorDxDaysExclusion&#59<br/><br/>/*9. excluding patients receiving study medications within the defined window*/<br/>%macro ApplyPriorRxDaysExclusion&#59<br/>&nbsp&nbsp&nbsp&nbsp%local PriorRxDays&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincase in the following steps, nothing to be created for table d9c, let it be an empty set<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif the empty data set was not created, the old d9c from last run will be kept and causing wrong results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d9c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Prior study medication'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('PriorRxDays', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> PriorRxDays is: &PriorRxDays&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is no Conditions, have all patients in d8d*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&PriorRxDays) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let PriorRxDays = PriorRxDays not set, all patients retained&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d9c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 1*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*else have only those not having dx codes in the defined period prior to the dQdate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=C_dxAll,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=d8d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d9c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*source is benifit/nonbenifit drug claims */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dxdate between t2.dqDate - &PriorRxDays <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand t2.dqDate-1 and (t1.src = 'db' or t1.src = 'dn' ))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*patients not in d9c*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=d8d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=d9d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.key_hsn not in (select key_hsn from d9c))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%minmax(data=d9d, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvar=key_hsn, format=, target=d9e, m=count)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata d9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspVar='excld_PriorRx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d9e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var_count = N&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=d9)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> PriorRxDays = &PriorRxDays&#59<br/><br/>%mend ApplyPriorRxDaysExclusion&#59<br/>%ApplyPriorRxDaysExclusion&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata remoteT.R1_Flow&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat Var $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset  remoteT.d1_pop d2 - d9&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata remoteT.D&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset d9d&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%mend notrun&#59<br/>s///<br/>t///","children":[{"idx":"Note-rkMKpRgXMgNO1fmS","name":"Note (6)","NodeDescription":"///t<br/>EA.&nbspAdd&nbspResi&nbsptype&nbsp(urban/rural),&nbspand&nbspincomequintile<br/>t///","children":[{"idx":"CodeTask-OZhXRTIAuUI8so1K","name":"EA_get resi income","NodeDescription":"///t<br/>///s<br/>/*EA&nbsp&nbsp&nbsp&nbspexclusion criteria<br/>*/<br/><br/>&nbsp&nbsp&nbsp&nbsp/*adding resi info*/<br/>&nbsp&nbsp&nbsp&nbsp%getResiType(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspResiFile=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=&xtrc_end_cover,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPtList=remoteT.D1_Pop,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=dqdate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=EA1<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp/*adding income quintile info*/<br/><br/>%GEO_INCQTL_assign(ds_in =EA1,<br/>&nbsp&nbsp&nbsp&nbspds_out=EA2, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=dQdate,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=dQdate,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>data remoteT.EA_Cohort_Final&#59<br/>&nbsp&nbsp&nbsp&nbspset EA2&#59<br/>run&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"Note-hJBBgAcdoP3zxtOb","name":"Note (12)","NodeDescription":"///t<br/>IB.&nbspPrepare&nbspa&nbsplist&nbspof&nbsppatient&nbspwho&nbspdeceased<br/>t///","children":[{"idx":"CodeTask-7akhfpgFObKpWa2P","name":"IB_Mortality","NodeDescription":"///t<br/>///s<br/>/*IB, get mortality record from rsdc file*/<br/><br/>%put >>> &VerfMortFIle&#59<br/>%put >>>  &LastXtrcDate&#59<br/>%print(data=&VerfMortFIle)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=&VerfMortFIle,<br/>&nbsp&nbsp&nbsp&nbspt2=remoteT.EA_cohort_final,<br/>&nbsp&nbsp&nbsp&nbsptarget=IB1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.Key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspddt_NoVit),<br/>&nbsp&nbsp&nbsp&nbspjtype =inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.ddt_NoVit ne .)<br/>)&#59<br/><br/>data remoteT.IB&#59<br/>&nbsp&nbsp&nbsp&nbspset IB1&#59<br/>&nbsp&nbsp&nbsp&nbsp rename ddt_NoVit=MortDate&#59<br/>run&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"Note-EYzMxq1RRXaklRgQ","name":"Note (13)","NodeDescription":"///t<br/>IC.&nbspPrepare&nbspa&nbsplist&nbspof&nbsppatient&nbspwho&nbsplost&nbspcoverage&nbspbetween&nbspdqdate&nbspand&nbspDataEndDate<br/>t///","children":[{"idx":"CodeTask-1F53xJJrBEJqHkyM","name":"IC_LostCov","NodeDescription":"///t<br/>///s<br/>/*IC, lost coverage after DQ<br/>*/<br/>%macro notrun&#59<br/>&nbsp&nbsp&nbsp&nbsp%getCoverGAPs(rawfile=remoteT.I_covAllYears, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=remoteT.EA_cohort_final, theCovXtrc=%str(&xtrc_end_cover), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=DQDate, end= %str(&DataEndDate), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=IC1, cohortgroup=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%print(data=IC1)&#59<br/>&nbsp&nbsp&nbsp&nbspdata IC2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn dQdate start end coverStart coverEnd gaps&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%sort(data = IC2, sorter=%str(key_hsn coverStart coverEnd))&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif gaps > 7 &#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata remoteT.IC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_hsn dQdate start end coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename coverStart = LostCoverDate&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>%mend notrun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%Macro CoverageInFollowup&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local FollowCovCondition CoverDef CoverDefValue&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FollowCovCondition=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincase in the following steps, nothing to be created for table remoteT.IC, let it be an empty set<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif the empty data set was not created, the old remoteT.IC from last run will be kept and causing wrong results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11. coverStart date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the type of coverage definition*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Coverage since the first diagnosis'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('FollowCovCondition', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> FollowCovCondition is: &FollowCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is no Conditions, have all patients in remoteT.EA_cohort_final*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&FollowCovCondition) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let FollowCovCondition = FollowCovCondition not set, all patients retained&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &FollowCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = by nothing&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue = nothing&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11. LostCoverDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 1*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*else have only those continuously covered*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Have the cover days, gaps, and PCT<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHere, the coverage period is not &FollowCovCondition days since the DQDate. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspInstead, it is from dqDate to dataEndDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=remoteT.I_covAllYears, /*&PHRS_Covfile,*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=remoteT.EA_cohort_final, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=%str(&Xtrc_End_Cover), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=%str(dQdate ), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= %str(&DataEndDate), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=IC1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the type of continuous coverage definition*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the type of coverage definition*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Definition of loss of cover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('CoverDef', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> The continuous coverage is defined: &CoverDef&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the value of coverage definition (e.g., min gap = 7 days, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotes.A9_COHORTEXCLUSION&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif criteria = 'Threshold value for loss of cover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('CoverDefValue', Syntax)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> The continuous coverage threshold value is: &CoverDefValue&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by min gap*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 3*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDef) =0 or &CoverDef=by minimum gap in days %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min gap as 1 day*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 4*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&coverDef) = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef= CoverDef not defined, use default setting min gap =1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (min gap = 1 days )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> Coverage threshold value not defined. change CoverDefValue to &CoverDefValue&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 4*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbspget patients ever had a gap > &CoverDefValue days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the records with Gap >  &CoverDefValue days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=IC1, target=IC2a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdqdate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverStart, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(gaps > &CoverDefValue),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(dQdate, key_hsn, coverStart, coverEnd)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*From above, for each patient, keep the first record with Gap >  &CoverDefValue days */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby dQdate key_hsn start end coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename coverStart = LostCoverDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 3*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 5*/<br/> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by coverage days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 6*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CoverDef = by cover days %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min cover days as &FollowCovCondition<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., if FollowCovCondition=365, let the min cover days =365*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 7*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=&FollowCovCondition&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (same length as the FollowCovCondition)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 7*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*sum the cover days*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=IC1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=IC2b1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, dqDate, sum(days) as cumuCover, sum(coverPCT) as coverPCT),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, dqDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dqDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the patients whose cumulative covering days < &CoverDefValue*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC2b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC2b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cumuCover < &CoverDefValue &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if lost of coverage is defined by coverage days, which date should be treated as lost of coverage?<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphere, the first gap >1 day is considered the date lost coverage<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspit is the simpliest, but may have problem, need to further analyze*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*IC2b2 contains patients lost coverage, now get their coverage records in IC1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%Sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=IC1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=IC2b2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=IC2b3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdqdate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverStart, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn dqdate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(gaps >0),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(dQdate, key_hsn, coverStart, coverEnd)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*From above, for each patient, keep the first record with Gap >  &CoverDefValue days */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC2b3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby dQdate key_hsn start end coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename coverStart = LostCoverDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 6*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 8*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the coverage status is defined by cover-percentage*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 9*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &CoverDef = by cover percentage %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDefValue is not specified, set the default min PCT = 100<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., if FollowCovCondition=365, let the min cover days =365*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 10*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CoverDefValue) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDefValue=100&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let CoverDef = &CoverDef CoverDefValue not set, use default (100%)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 10*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*sum the cover PCT*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=IC1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=IC2C1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, dqDate, sum(days) as cumuCover, sum(coverPCT) as coverPCT),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, dqDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, dqDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the patients whose cumulative covering days < &CoverDefValue*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC2C2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC2C1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif coverPCT < &CoverDefValue &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if lost of coverage is defined by coverage days, which date should be treated as lost of coverage?<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphere, the first gap >1 day is considered the date lost coverage<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspit is the simpliest, but may have problem, need to further analyze*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*IC2b2 contains patients lost coverage, now get their coverage records in IC1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%Sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=IC1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=IC2C2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=IC2C3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkey_hsn, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdqdate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverStart, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn dqdate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(gaps >0),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(dQdate, key_hsn, coverStart, coverEnd)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*From above, for each patient, keep the first record with Gap >  &CoverDefValue days */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC2C3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby dQdate key_hsn start end coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep key_hsn coverStart&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename coverStart = LostCoverDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 9*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*do-end 11*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the CoverDef is not by gap, coverdays, or cover PCT, it must be a wrong setting<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo not exclude any patient*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let coverDef = None of the patient will be excluded. No such coverage setting - &coverDef&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty data set (no patients to exclude)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_hsn $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 11*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 8*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 5*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59/*do-end 2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata remoteT.IC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset IC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>%mend CoverageInFollowup&#59<br/>%CoverageInFollowup&#59<br/><br/>s///<br/>t///","children":[{"idx":"Note-KnFuBoceH4aAjLA7","name":"Note (14)","NodeDescription":"///t<br/>ID.&nbspIndicate&nbspthe&nbspdecease&nbspdate,&nbspor&nbspdate&nbspof&nbsplost&nbspcoverage&nbspin&nbspthe&nbspfinal&nbspcohort<br/>t///","children":[{"idx":"CodeTask-kyenvWsNUN9pBHaB","name":"ID_FollowUpStatus","NodeDescription":"///t<br/>///s<br/>/*ID, patient deceased or loss of coverage*/<br/>/*Get lost cover date*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=remotet.EA_cohort_final,<br/>&nbsp&nbsp&nbsp&nbspt2=remotet.IC,<br/>&nbsp&nbsp&nbsp&nbsptarget=ID1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.LostCoverDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*get decease date*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=ID1,<br/>&nbsp&nbsp&nbsp&nbspt2=remotet.IB,<br/>&nbsp&nbsp&nbsp&nbsptarget=ID2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.MortDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>data remoteT.ID_cohort&#59<br/>&nbsp&nbsp&nbsp&nbspset ID2&#59<br/>&nbsp&nbsp&nbsp&nbsp/*if both lostcover/Mort date is missing, 'FollowEnd', FollowEndDate = DataEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif only has lostcover, 'LostCover', FollowEndDate = LostCoverDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif only has Mort date, 'Deceased',FollowEndDate = MortDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIf has both:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif MortDate < = LostCover, 'Deceased', FollowEndDate=MortDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LostCover < MortDate, 'LostCover', FollowEndDate = LostCoverDate&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif LostCoverDate =. and MortDate =. then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowStatus = 'FollowEnd'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowEndDate=&DataEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspElse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LostCoverDate =. or MortDate =. then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif LostCoverDate =. then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowStatus = 'Deceased'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowEndDate=MortDate&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowStatus = 'LostCover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowEndDate=LostCoverDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif MortDate <= LostCoverDate then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowStatus = 'Deceased'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowEndDate=MortDate&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowStatus = 'LostCover'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFollowEndDate=LostCoverDate&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat FollowEndDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspFollowYears = Int((FollowEndDate-DQdate) / 365)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*as in this case, if the record is wrong (patient is reported deceased in verif mort file yet having claims in MSB ),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheFollowYears would be negative.<br/>&nbsp&nbsp&nbsp&nbspIn that case, let's make the follow years super large<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif FollowYears <0 then FollowYears=FollowYears+1000&#59<br/>run&#59<br/><br/>s///<br/>t///","children":[{"idx":"Note-atHx9MAuv3mpYMAl","name":"Note (15)","NodeDescription":"///t<br/>IE.&nbspReport&nbsp#&nbsppatients&nbspby&nbspfollow&nbspup&nbspstatus<br/>t///","children":[{"idx":"CodeTask-sn8jH8iiFqgnr9tW","name":"IE_FollowStatusReport","NodeDescription":"///t<br/>///s<br/>/*IE report the follow up status by type (FollowEnd, Lost, Death) and by length (years)*/<br/>%print(data=remoteT.ID_cohort)&#59<br/><br/>%freq(data=remoteT.ID_cohort, table = FollowYears * FollowStatus,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoption=%str(out = IE1))&#59<br/><br/>data IE2&#59<br/>&nbsp&nbsp&nbsp&nbspset IE1&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>&nbsp&nbsp&nbsp&nbspfollowYearsC=  'years_' || compress(followYears, ' ')&#59<br/>run&#59<br/><br/>%transpose(data=IE2, target=RemoteT.R7_Follow, <br/>&nbsp&nbsp&nbsp&nbspRowHead=FollowStatus, <br/>&nbsp&nbsp&nbsp&nbspColHead=FollowYearsC, <br/>&nbsp&nbsp&nbsp&nbspContents=count, <br/>&nbsp&nbsp&nbsp&nbspkeepAllCol=)&#59<br/><br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"Note-kwdDkpBop4kvOjCp","name":"Note (20)","NodeDescription":"///t<br/>Q.&nbspGet&nbspCohort&nbspData<br/>t///","children":[{"idx":"CodeTask-tyupk9qkvIjdVjPX","name":"Q Get Data","NodeDescription":"///t<br/>///s<br/>/*get cohort data, it is similar to program C, getCohortData*/<br/><br/>/*%print(data=remoteS.A2_CohortDataVars)&#59*/<br/>/**/<br/><br/>/*Note!!!<br/>&nbsp&nbsp&nbsp&nbspIf a new source file is added (e.g., the home care or long term care file), <br/>&nbsp&nbsp&nbsp&nbspa new macro like getCohortData_&theSourceFile must be created. <br/>&nbsp&nbsp&nbsp&nbspsuch macro is to get data from the specific source. <br/>*/<br/><br/>%global theDataVars&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*delete all existing Q_file zips (cohort data from each sources) in the remoteT folder<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsuch to delete old files<br/>&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcommand2 =trim(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\"rm -f \" ||trim(symget('remotetargetpath')) || \"/master_*.zip\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcommand1 = 'rm -f /sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Target/master_*.zip'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif command1 = command2 then check =1&#59 else check =0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall system(command2)&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*select unique patient ids from the final cohort*/<br/>%distinct(source=remoteT.C_Cohort, target=Q1, vars=%str(key_hsn))&#59<br/><br/>/*make a master_cohort file*/<br/>data master_cohort&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteT.C_Cohort&#59<br/>run&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_cohort, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_cohort.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbspdata=Master_cohort,*/<br/>/*&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/><br/>/*get drug claims not covered by drug plan benefits*/<br/>%macro getCohortData_DP_Benefit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%Extract_Drug(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_DP_Ben, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_DP_Ben, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=getCohortData_DP_Benefit_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_file= ,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrt_dt=&DataStartDate ,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend_dt=&DataEndDate  <br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_DP_Benefit_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_DP_Benefit_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop sgt_id&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the data contains the var key_prscr_num, indicate key_prscr_num values that are sluch codes*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %index(%sysfunc(lowcase(&theDataVars)), key_prscr_num) >0 and %length(&theDataVars)>0 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a list of doc slush codes according to the txt files in the Clean folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getDocSlushCodes(target=getCohortData_DP_Benefit_tmp3, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_DP_Benefit_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_DP_Benefit_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.DocSlushCode ='', 'N', t2.DocSlushCode) as DocSlushCode),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_prscr_num=t2.key_doc_num)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the data does not contain the varkey_doc_num, let all DocSlushCode values be 'N'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata Master_dp_benefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_DP_Benefit_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocSlushCode=\"N\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_dp_benefit, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_dp_benefit.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_dp_benefit,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%deldata(data=_drgtmp _fileout _allDIn getCohortData_DP_Benefit_tmp1)&#59<br/><br/>%mend getCohortData_DP_Benefit&#59<br/>/*%getCohortData_DP_Benefit&#59*/<br/>/*************************************/&nbsp&nbsp&nbsp&nbsp<br/><br/>/*get drug claims not covered by drug plan benefits*/<br/>%macro getCohortData_DP_NonBenefit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%Extract_Drug_non_ben_test(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_DP_NBen, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_DP_NBen, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=getCohortData_DP_NB_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin_file= ,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrt_dt=&DataStartDate ,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend_dt=&DataEndDate  <br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*apply the additional request conditions*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_DP_NB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_DP_NB_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop sgt_id&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the data contains the var key_prscr_num, indicate key_prscr_num values that are sluch codes*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %index(%sysfunc(lowcase(&theDataVars)), key_prscr_num) >0 and %length(&theDataVars)>0 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a list of doc slush codes according to the txt files in the Clean folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getDocSlushCodes(target=getCohortData_DP_NB_tmp3, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_DP_NB_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_DP_NB_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.DocSlushCode ='', 'N', t2.DocSlushCode) as DocSlushCode),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_prscr_num=t2.key_doc_num)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the data does not contain the varkey_doc_num, let all DocSlushCode values be 'N'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata Master_dp_nonbenefit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_DP_NB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocSlushCode=\"N\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_dp_nonbenefit, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_dp_nonbenefit.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_dp_nonbenefit,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%deldata(data=_drgtmp _fileout _allDIn getCohortData_DP_NB_tmp1)&#59<br/><br/>%mend getCohortData_DP_NonBenefit&#59<br/>/*%getCohortData_DP_NonBenefit&#59*/<br/>/*************************************/&nbsp&nbsp&nbsp&nbsp<br/>/*get drug specifications*/<br/>%macro getCohortData_DP_Spec&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbspget DINs from both benefit and nonbenefit drug claim files*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%if %sysfunc(fileexist(&remoteTargetPath./master_dp_benefit.zip)) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzip=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipped=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=master_dp_benefit<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(source=master_dp_benefit, target=getCohortData_DP_Spec_tmp1, vars=din)<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty, dummy DIN file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_DP_Spec_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat DIN $8.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if %sysfunc(fileexist(&remoteTargetPath./master_dp_nonbenefit.zip)) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzip=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipped=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=master_dp_nonbenefit<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(source=master_dp_nonbenefit, target=getCohortData_DP_Spec_tmp2, vars=din)<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty, dummy DIN file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_DP_Spec_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat DIN $8.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*prepare a unique din list*/<br/>&nbsp&nbsp&nbsp&nbspproc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getCohortData_DP_Spec_tmp3 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin from<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(select distinct DIN from getCohortData_DP_Spec_tmp1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspunion  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct DIN from getCohortData_DP_Spec_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere din ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspquit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&dp_specFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_DP_Spec_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_DP_Spec_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=din, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) <=&lastXtrcDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(din, xtrc_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata Master_dp_spec&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_DP_Spec_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby DIN xtrc_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop sgt_id&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.DIN&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>/*&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_dp_spec,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_dp_spec, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_dp_spec.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_DP_Spec_tmp1 getCohortData_DP_Spec_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_DP_Spec_tmp3 getCohortData_DP_Spec_tmp4 )&#59<br/><br/>%mend getCohortData_DP_Spec&#59<br/>/*%getCohortData_DP_Spec&#59*/<br/>/*************************************/&nbsp&nbsp&nbsp&nbsp<br/><br/><br/>/*get ED data (after 2012)*/<br/>%macro getCohortData_ED_A2012&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%getED_A2012(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&ed_a2012file,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_ED_A2012_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinctRecord=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPatientList=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = %str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(DatePart(reg_date) >= &DataStartDate and DatePart(reg_date) <= &DataEndDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor (DatePart(disp_date) >= &DataStartDate and DatePart(disp_date) <= &DataEndDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor (DatePart(reg_date) < &DataStartDate and DatePart(disp_date) > &DataEndDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_ED_A2012_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_ED_A2012_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif datepart(xtrc_date) <= &lastXtrcDate&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_ED_A2012_tmp2, target = Master_ED_A2012, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>/*&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_ED_A2012,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_ED_A2012, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_ED_A2012.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_ED_A2012_tmp1 getCohortData_ED_A2012_tmp2)&#59<br/><br/>%mend getCohortData_ED_A2012&#59<br/>/*%getCohortData_ED_A2012&#59*/<br/>/*************************************/&nbsp&nbsp&nbsp&nbsp<br/><br/><br/>/*Get hospital record, with record N, adm/dschg date,<br/>&nbsp&nbsp&nbsp&nbsptype of dx (dx, cdx, intvn, cintvn), position of dx (main, others)*/<br/>%macro getCohortData_hosp&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local LogicCondition&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%Extract_CIHI( <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_in =&hospitalFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=getCohortData_hosp_tmp1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadms_start_date=&DataStartDate,      <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadms_end_date=&DataEndDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspICD9_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspICD10_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCP_List=,<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCP_Exact_list=,*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCI_list=,<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCCI_Exact_list=,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode_logic=,*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file= Q1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp )&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp /*apply the additional request conditions, force to have the facility num*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata Master_hosp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_hosp_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_hosp, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_hosp.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_hosp,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%delData(data=getCohortData_hosp_tmp1)&#59<br/><br/>%mend getCohortData_hosp&#59<br/>/*%getCohortData_hosp&#59*/<br/>/**********************************************************/<br/><br/>/*macro to get data from MSB*/<br/>%macro getCohortData_MSB&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*the problem is that when both diag code and FSC code are specified<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following macro returns only records of diagcode AND FSC<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt seems that, unlike the Extract_CIHI macro, there is no option to <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchange the logic to OR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTherefore in the following step, FSCcode is never specified, such that <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspall records will be extracted, regardless of FSC code. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspScreening of FSC code will be done in later steps<br/>&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%Extract_MSB(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_MSB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out= getCohortData_MSB_tmp1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file= Q1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdiagcode=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdostart=&DataStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdosend=&DataEndDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfscode=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*apply the additional request conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_MSB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_MSB_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdos = dos_1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat dos date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_MSB_tmp2, target = getCohortData_MSB_tmp3, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the data contains the var key_doc_num, indicate key_doc_num values which are sluch codes*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %index(%sysfunc(lowcase(&theDataVars)), key_doc_num) >0 and %length(&theDataVars)>0 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*prepare a list of doc slush codes according to the txt files in the Clean folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getDocSlushCodes(target=getCohortData_MSB_tmp4, debug=1)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_MSB_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_MSB_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.DocSlushCode ='', 'N', t2.DocSlushCode) as DocSlushCode),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the data does not contain the varkey_doc_num, change the temp file's name to Master_MSB*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata Master_MSB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_MSB_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDocSlushCode=\"N\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_MSB,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_MSB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_MSB.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getCohortData_MSB_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>%mend getCohortData_MSB&#59<br/>/*%getCohortData_MSB&#59*/<br/>/*************************************/<br/><br/>/*macro to get data from MDS_LTC*/<br/>%macro getCohortData_MDS_LTC&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*the problem is that when both diagcode and FSC code are specified<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following macro returns only records of diagcode AND FSC<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt seems that, unlike the Extract_CIHI macro, there is no option to <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchange the logic to OR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTherefore in the following step, FSCcode is never specified, such that <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspall records will be extracted, regardless of FSC code. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspScreening of FSC code will be done in later steps<br/>&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%get_MDS_LTC(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&MDS_LTC_File,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_MDS_LTC_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=&theDataVars,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=&xtrc_MDS_LTC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartDate =&dataStartDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendDate = &dataEndDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_MDS_LTC_tmp1, target = Master_MDS_LTC, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_MDS_LTC, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_MDS_LTC.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_MDS_LTC,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_MDS_LTC_tmp1)&#59<br/><br/>%mend getCohortData_MDS_LTC&#59<br/>/*%getCohortData_MDS_LTC&#59*/<br/>/*************************************/<br/><br/><br/>%macro getCohortData_PHRS_COV&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&PHRS_CovFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_COV_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) = &xtrc_End_Cover),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, xtrc_date, eff_date, exp_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_COV_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_COV_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif eff_date =. then eff_date = report_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exp_date =. then exp_date = report_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_PHRS_COV_tmp2, target = Master_PHRS_Cov, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Cov, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_PHRS_Cov.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Cov,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_PHRS_COV_tmp1 getCohortData_PHRS_COV_tmp2)&#59<br/>%mend getCohortData_PHRS_COV&#59<br/>/*%getCohortData_PHRS_COV&#59*/<br/>/*************************************/<br/><br/><br/>/*get personal info of the cohort patients*/<br/>%macro getCohortData_PHRS_INFO&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&PHRS_InfoFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_INFO_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) <= &xtrc_End_Cover),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, xtrc_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for each person, get distinct combination of id-xtrcDate*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data = getCohortData_PHRS_INFO_tmp1, target=getCohortData_PHRS_INFO_tmp2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, xtrc_date), orderby=%str(key_hsn, xtrc_date))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/* For each patient, get the latest xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_INFO_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_INFO_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_hsn xtrc_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*from tmp1, select records of the last xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_PHRS_INFO_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_PHRS_INFO_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_INFO_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn xtrc_date<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*deal with missing eff/exp_date, keep requested vars*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_INFO_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_INFO_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_PHRS_INFO_tmp5, target = Master_PHRS_Info, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Info, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_PHRS_Info.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Info,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_PHRS_INFO_tmp1 getCohortData_PHRS_INFO_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_PHRS_INFO_tmp3 getCohortData_PHRS_INFO_tmp4 getCohortData_PHRS_INFO_tmp5)&#59<br/>%mend getCohortData_PHRS_INFO&#59<br/>/*%getCohortData_PHRS_INFO&#59*/<br/>/*************************************/<br/><br/>/*get resi info of the cohort patients from the raw file under the path HQC*/<br/>%macro getCohortData_PHRS_RESI&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&PHRS_ResiFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_RESI_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) <= &lastXtrcDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, xtrc_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for each person, get distinct combination of id-xtrcDate*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data = getCohortData_PHRS_RESI_tmp1, target=getCohortData_PHRS_RESI_tmp2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, xtrc_date), orderby=%str(key_hsn, xtrc_date))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/* For each patient, get the latest xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_RESI_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_RESI_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_hsn xtrc_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*from tmp1, select records of the last xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_PHRS_RESI_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_PHRS_RESI_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_RESI_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn xtrc_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(key_hsn, xtrc_date, eff_date, exp_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*deal with missing eff/exp_date, keep requested vars*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_RESI_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_RESI_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif eff_date =. then eff_date = report_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exp_date =. then exp_date = report_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_PHRS_RESI_tmp5, target = Master_PHRS_Resi, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Resi, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_PHRS_Resi.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Resi,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_PHRS_RESI_tmp1 getCohortData_PHRS_RESI_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_PHRS_RESI_tmp3 getCohortData_PHRS_RESI_tmp4 getCohortData_PHRS_RESI_tmp5)&#59<br/>%mend getCohortData_PHRS_RESI&#59<br/>/*%getCohortData_PHRS_RESI&#59*/<br/>/*************************************/<br/><br/>/*get resi info of the cohort patients from the clean file under the path cleanYY*/<br/>%macro getCohortData_PHRS_RESI_CLEAN&#59<br/>/*in clean file, all dates are in date9 format*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_RESI_Ctmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(xtrc_date <= &lastXtrcDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, xtrc_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*for each person, get distinct combination of id-xtrcDate*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data = getCohortData_PHRS_RESI_Ctmp1, target=getCohortData_PHRS_RESI_Ctmp2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, xtrc_date), orderby=%str(key_hsn, xtrc_date))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/* For each patient, get the latest xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_RESI_Ctmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_RESI_Ctmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_hsn xtrc_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*from tmp1, select records of the last xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_PHRS_RESI_Ctmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_PHRS_RESI_Ctmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_RESI_Ctmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn xtrc_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(key_hsn, xtrc_date, eff_date, exp_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*deal with missing eff/exp_date, keep requested vars*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_RESI_Ctmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_RESI_Ctmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif eff_date =. then eff_date = report_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exp_date =. then exp_date = report_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_PHRS_RESI_Ctmp5, target = Master_PHRS_Resi_Clean, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Resi_Clean, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_PHRS_Resi_Clean.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_Resi_Clean,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_PHRS_RESI_Ctmp1 getCohortData_PHRS_RESI_Ctmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_PHRS_RESI_Ctmp3 getCohortData_PHRS_RESI_Ctmp4 getCohortData_PHRS_RESI_Ctmp5)&#59<br/>%mend getCohortData_PHRS_RESI_CLEAN&#59<br/>/*%getCohortData_PHRS_RESI_CLEAN&#59*/<br/>/*************************************/<br/><br/><br/>/*get RSDC info of the cohort patients*/<br/>%macro getCohortData_PHRS_RSDC&#59<br/>/*in clean file, all dates are in date9 format*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&PHRS_RSDCFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_RSDC_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(xtrc_date <= &lastXtrcDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, xtrc_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*for each person, get distinct combination of id-xtrcDate*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data = getCohortData_PHRS_RSDC_tmp1, target=getCohortData_PHRS_RSDC_tmp2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, xtrc_date), orderby=%str(key_hsn, xtrc_date))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/* For each patient, get the latest xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_RSDC_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_RSDC_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_hsn xtrc_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*from tmp1, select records of the last xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_PHRS_RSDC_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_PHRS_RSDC_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_PHRS_RSDC_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn xtrc_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(key_hsn, xtrc_date, eff_date, exp_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*deal with missing eff/exp_date, keep requested vars*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_PHRS_RSDC_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_PHRS_RSDC_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif eff_date =. then eff_date = report_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exp_date =. then exp_date = report_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_PHRS_RSDC_tmp5, target = Master_PHRS_RSDC, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_RSDC, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_PHRS_RSDC.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_PHRS_RSDC,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_PHRS_RSDC_tmp1 getCohortData_PHRS_RSDC_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_PHRS_RSDC_tmp3 getCohortData_PHRS_RSDC_tmp4 getCohortData_PHRS_RSDC_tmp5)&#59<br/>%mend getCohortData_PHRS_RSDC&#59<br/>/*%getCohortData_PHRS_RSDC&#59*/<br/>/*************************************/<br/><br/><br/>/*get verified mortality info of the cohort patients*/<br/>%macro getCohortData_verif_mort&#59<br/>/*in clean file, all dates are in date9 format*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&VerfMortFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=Q1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_mort_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=key_hsn<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*keep requested vars*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_mort_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_mort_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif ddt_novit ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_mort_tmp2, target = Master_verif_mort, debug=)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_verif_mort, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_verif_mort.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_verif_mort,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_mort_tmp1 getCohortData_mort_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_mort_tmp3 getCohortData_mort_tmp4 getCohortData_mort_tmp5)&#59<br/>%mend getCohortData_verif_mort&#59<br/>/*%getCohortData_verif_mort&#59*/<br/>/*************************************/<br/>/*get MSB Doc info*/<br/>%macro getCohortData_MSB_DOCINFO&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbspget doc ID from MSB billing file*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%if %sysfunc(fileexist(&remoteTargetPath./master_msb.zip)) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzip=master_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipped=master_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=master_MSB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(source=master_MSB, target=getCohortData_MSB_DOCINFO_tmp1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=key_doc_num, filters=%str(key_doc_num ne ''))<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty, dummy DIN file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_MSB_DOCINFO_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat key_doc_num $11.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp/*get Doc Info*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&MSB_DocInfoFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_MSB_DOCINFO_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_MSB_DOCINFO_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(datepart(xtrc_date) <=&lastXtrcDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num, xtrc_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp/*have a unique list of doc- xtrcDate*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=getCohortData_MSB_DOCINFO_tmp2, target =getCohortData_MSB_DOCINFO_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(key_doc_num, xtrc_date),orderby = %str(key_doc_num, xtrc_date) )<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for each doc, keep the latest xtrc_date*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_MSB_DOCINFO_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_MSB_DOCINFO_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_doc_num xtrc_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*from tmp2, keep records of doc and xtrc_date in tmp4 (records of the most recent data cut)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getCohortData_MSB_DOCINFO_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_MSB_DOCINFO_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_MSB_DOCINFO_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_doc_num xtrc_date, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(key_doc_num, xtrc_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*keep requested fields*/<br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_MSB_DOCINFO_tmp6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_MSB_DOCINFO_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_doc_num xtrc_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars report_start report_end&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_MSB_DOCINFO_tmp6, target = Master_MSB_DocInfo, debug=)&#59 <br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_MSB_DocInfo, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_MSB_DocInfo.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_MSB_DocInfo,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_MSB_DOCINFO_tmp1 getCohortData_MSB_DOCINFO_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_MSB_DOCINFO_tmp3 getCohortData_MSB_DOCINFO_tmp4 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_MSB_DOCINFO_tmp5 getCohortData_MSB_DOCINFO_tmp6)&#59<br/><br/>%mend getCohortData_MSB_DOCINFO&#59<br/>/*%getCohortData_MSB_DOCINFO&#59*/<br/>/*************************************/&nbsp&nbsp&nbsp&nbsp<br/><br/>/*get hospital info*/<br/>%macro getCohortData_hosp_info&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbspget facility number from both hospital and emergency files*/<br/>&nbsp&nbsp&nbsp&nbsp%if %sysfunc(fileexist(&remoteTargetPath./master_hosp.zip)) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzip=master_hosp,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipped=master_hosp,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=master_hosp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in hospital file, the inst_num is character type, length of 4 (lik 8???) select from the second position, for a length of 3*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(source=master_hosp, target=getCohortData_hosp_info_tmp1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(substr(inst_num, 2, 3)) as hosp_num, filters=%str(inst_num ne ''))&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty, dummy DIN file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_hosp_info_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat hosp_num $8.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if %sysfunc(fileexist(&remoteTargetPath./master_ed_a2012.zip)) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzip=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipped=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=master_ed_a2012<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in ED file, the inst_num is character type, length of 5 (lik 71???) select from the 3rd position, for a length of 3*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(source=master_ed_a2012, target=getCohortData_hosp_info_tmp2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(substr(inst_num, 3, 3)) as hosp_num, filters=%str(inst_num ne ''))&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty, dummy DIN file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getCohortData_hosp_info_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat hosp_num $8.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*prepare a unique din list*/<br/>&nbsp&nbsp&nbsp&nbspproc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getCohortData_hosp_info_tmp3 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphosp_num from<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(select distinct hosp_num from getCohortData_hosp_info_tmp1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspunion  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct hosp_num from getCohortData_hosp_info_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere hosp_num ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspquit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=remoteS.A10_HOSPINFO,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getCohortData_hosp_info_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getCohortData_hosp_info_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=hosp_num, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby = %str(hosp_num)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata getCohortData_hosp_info_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getCohortData_hosp_info_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theDataVars &#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*transform all datetime20. format variables to date9. format*/<br/>&nbsp&nbsp&nbsp&nbsp%DateTime20VarsToDate9(data=getCohortData_hosp_info_tmp5, target = Master_HOSP_INFO, debug=)&#59 <br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*zip it into the RemoteT folder*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_HOSP_INFO, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_HOSP_INFO.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixSplitZips(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_HOSP_INFO,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTargetLib=remoteT, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsizeCutoff_GB=)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%deldata(data=getCohortData_hosp_info_tmp1 getCohortData_hosp_info_tmp2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetCohortData_hosp_info_tmp3 getCohortData_hosp_info_tmp4 getCohortData_hosp_info_tmp5)&#59<br/><br/>%mend getCohortData_hosp_info&#59<br/>/*%getCohortData_hosp_info&#59*/<br/>/*************************************/&nbsp&nbsp&nbsp&nbsp<br/><br/>/*********************************************************************************************/<br/>/*the master macro to call each sub macro and get data from each source*/<br/>%macro NewPop_getCohortData (DataVarList=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local DataVarList theSources theFileSource i dlmt&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*let dlmt=space*/<br/>&nbsp&nbsp&nbsp&nbsp%let dlmt=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get a list of source names*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=&DataVarList, target=NewPop_getCohortData_tmp1, vars=file_nick_name)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ValueToString(Data=NewPop_getCohortData_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=file_nick_name, theStrVarName=, DLMT=&dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theSources=&theStrVar_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%put >>> the sources are &theSources&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*loop by each source to get data*/<br/>&nbsp&nbsp&nbsp&nbsp%let i=1&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*loop unitl %scan has a null value, i.e., a null value after the last element*/<br/>&nbsp&nbsp&nbsp&nbsp%do %until (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%length(%scan(%quote(&theSources), &i &dlmt)) =0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the current file source*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> i = &i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theFileSource=%scan(%quote(&theSources), &i &dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theFileSource= &theFileSource&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the variables to be extracted from the source data*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data = &DataVarList, target=NewPop_getCohortData_tmp2, vars=%str(varname_in_raw_file),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(file_nick_name = symget('theFileSource')))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%ValueToString(Data=NewPop_getCohortData_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=varname_in_raw_file, theStrVarName=, DLMT=&dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theDataVars=&theStrVar_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theDataVars=&theDataVars&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the current source is &theSources, theDataVars are &theDataVars&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*run the specific data-getting macro for each file source*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> run macro getCohortData_&theFileSource&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getCohortData_&theFileSource&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let i = %eval(&i+1)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%delData(data=NewPop_getCohortData_tmp1 NewPop_getCohortData_tmp2)&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend NewPop_getCohortData&#59<br/>%NewPop_getCohortData(DataVarList =  remoteS.A2_CohortDataVARS)&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"Note-HfvXWI759bEISn4j","name":"Note (21)","NodeDescription":"///t<br/>Prepare&nbspdata&nbspsummary<br/>t///","children":[{"idx":"CodeTask-zUCuLGc5Xv9jVBhJ","name":"R_Data SUm","NodeDescription":"///t<br/>///s<br/>/*Data Report<br/>&nbsp&nbsp&nbsp&nbsp1. List of data files<br/>&nbsp&nbsp&nbsp&nbsp2. List of variables per file<br/>*/<br/>/*the dic is prepared, however, the filenames cannot be entirely matched<br/>&nbsp&nbsp&nbsp&nbspe.g., <br/>&nbsp&nbsp&nbsp&nbspin remoteS.A11_DataVarDic:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspphrs_,  BORN_YEAR<br/>&nbsp&nbsp&nbsp&nbspin datasum_2:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspphrs_info, BORN_YEAR<br/>*/<br/><br/>/*Make a Decartes join, and keep those:<br/>&nbsp&nbsp&nbsp&nbspof same var names<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof same filename or same start of filename<br/>&nbsp&nbsp&nbsp&nbspthe following is to link the descriptions to the requested variables<br/>*/<br/>%macro NewCohort_GetVarDesc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=remoteT.datasum_2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=remoteS.A11_DataVarDic,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=NewCohort_GetVarDesc_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinction=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.filename, t1.variable, t2.description, t2.notes, t2.metadoc),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype = cross,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.variable = t2.variable<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.filename = t2.filename<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsubstr(t1.filename, 1, length(t2.filename))=t2.filename<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(filename, variable)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Link the desc info to the variables in datasum_2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=remoteT.datasum_2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=NewCohort_GetVarDesc_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=remoteT.datasum_3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.filename, t1.variable, t2.description, t2.notes, t2.metadoc, ifc(t2.filename='', 'N', 'Y') as Matched),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars= filename variable<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%delData(data=NewCohort_GetVarDesc_tmp1)&#59<br/><br/>%mend NewCohort_GetVarDesc&#59<br/><br/><br/><br/>%macro NewCohort_DataSum (DataVarList=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local DataVarList theSources theFileSource i dlmt nrows personCol theDataVars&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*let dlmt=space*/<br/>&nbsp&nbsp&nbsp&nbsp%let dlmt=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get a list of source names*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=&DataVarList, target=NewCohort_DataSum_tmp1, vars=file_nick_name)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ValueToString(Data=NewCohort_DataSum_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=file_nick_name, theStrVarName=, DLMT=&dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theSources=&theStrVar_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%put >>> the sources are &theSources&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*create an empty file-summary table*/<br/>&nbsp&nbsp&nbsp&nbspdata remotet.dataSum_1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat location $200. filename $100. nobs 8. createTime datetime20. projectName $100. programName $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*create an emtpy missing value report table*/<br/>&nbsp&nbsp&nbsp&nbspdata NewCohort_DataSum_tmp0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename $50. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvariable $50.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs_total 8.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspn_persons_total 8.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs_Missing 8.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspn_persons_Missing 8.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPCT_OBS_Missing&nbsp&nbsp&nbsp&nbspPERCENT10.1&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspspecialValue $30.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs_SpecV 8.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspn_persons_SpecV 8.&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPCT_OBS_SpecV PERCENT10.1&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCreateTime&nbsp&nbsp&nbsp&nbspDATETIME20.&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProjectName&nbsp&nbsp&nbsp&nbsp$50.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspProgramName $50.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*prepare a list of requested vars of all requested files*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(source= &dataVarList, target =NewCohort_DataSum_tmp2, vars= %str(file_nick_name, VarName_in_Raw_file))&#59<br/>&nbsp&nbsp&nbsp&nbspdata remotet.DataSum_2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat filename $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset NewCohort_DataSum_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename VarName_in_Raw_file = variable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename='master_' || file_nick_name&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreateTime = datetime()&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat createTime datetime20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprojectName = &_clientprojectname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprogramName = &_clientTaskLabel&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop file_nick_name&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*link descriptions to the selected vars*/<br/>&nbsp&nbsp&nbsp&nbsp%NewCohort_GetVarDesc&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*loop by each source to get data*/<br/>&nbsp&nbsp&nbsp&nbsp%let i=1&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*loop unitl %scan has a null value, i.e., a null value after the last element*/<br/>&nbsp&nbsp&nbsp&nbsp%do %until (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%length(%scan(%quote(&theSources), &i &dlmt)) =0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the current file source*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> i = &i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theFileSource=%scan(%quote(&theSources), &i &dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theFileSource= &theFileSource&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the file ready*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if not %sysfunc(exist(master_&theFileSource)) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> master_&theFileSource does not exist in work directory, try to unzip &remoteTargetPath./master_&theFileSource..zip&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*check if the zip file exist*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %sysfunc(fileexist(&remoteTargetPath./master_&theFileSource..zip)) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> unzipping &remoteTargetPath./master_&theFileSource..zip ...&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzip=master_&theFileSource,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipped=master_&theFileSource,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=master_&theFileSource<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the file does not exist, skip this file source*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put the file master_&theFileSource does not exist in the work directory, nor in the zip file in &remoteTargetPath. Information of the file cannot be reported.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theFileSource=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%goto skipTheFile&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the number of obs in the file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=master_&theFileSource)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nrows=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*attache to the file sum table,  the current file's location, name, nobs<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe location is where the data files are to be saved in local drive<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspit is set in the program 'Remote Settings'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata NewCohort_DataSum_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocation = symget('localDataPath')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_' || compress(symget('theFileSource'), ' ')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnobs= &nrows&#59 /*to input nrows as a numeric value, in such cases, do not use symget()*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreateTime = datetime()&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprojectName = &_clientprojectname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprogramName = &_clientTaskLabel&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata remotet.DataSum_1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remotet.DataSum_1 NewCohort_DataSum_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for each file, run getDataSum to have missing value reports*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theFileSource ne dp_spec and &theFileSource ne hosp_info  %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &theFileSource=msb_docinfo %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let personCol = key_doc_num&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %let personCol = key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getMissingSum(data=MASTER_&theFileSource, ptCol = &personCol, target=NewCohort_DataSum_tmp4, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*attach report to the all_var summary table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata  NewCohort_DataSum_tmp0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset  NewCohort_DataSum_tmp0 NewCohort_DataSum_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the variables extracted from the source data*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data = &DataVarList, target=NewCohort_DataSum_tmp5, vars=%str(varname_in_raw_file),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(file_nick_name = symget('theFileSource')))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%ValueToString(Data=NewCohort_DataSum_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=varname_in_raw_file, theStrVarName=, DLMT=&dlmt)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theDataVars=&theStrVar_0824&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let valuesToStr_0824=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theDataVars=&theDataVars&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the current source is &theSources, theDataVars are &theDataVars&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*run the specific data-getting macro for each file source*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> run macro getCohortData_&theFileSource&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*%getCohortData_&theFileSource&#59<br/>%skipTheFile:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let i = %eval(&i+1)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%delData(data=NewCohort_DataSum_tmp1 NewCohort_DataSum_tmp2)&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*rename the names*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata remoteT.DataSum_4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset NewCohort_DataSum_tmp0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreateTime = datetime()&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprojectName = &_clientprojectname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspprogramName = &_clientTaskLabel&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%delData(data=NewCohort_DataSum_tmp0)&#59<br/>%mend NewCohort_DataSum&#59<br/>%NewCohort_DataSum(DataVarList=remoteS.A2_CohortDataVARS)&#59<br/><br/>/*get slushcode sum for master data sets with doc numbers (MSB, DP_benefit, DP_nonbenefit*/<br/>%getDocSlushCodeSum(data = MASTER_MSB, target=r1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocid=key_doc_num, debug=)&#59<br/>%getDocSlushCodeSum(data = MASTER_DP_BENEFIT, target=r2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocid=key_prscr_num, debug=)&#59<br/>%getDocSlushCodeSum(data = MASTER_DP_NonBENEFIT, target=r3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdocid=key_prscr_num, debug=)&#59<br/><br/>data remotet.dataSum_DocSlushCodes&#59<br/>&nbsp&nbsp&nbsp&nbspset r1 r2 r3&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>proc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbspdelete r1 r2 r3&#59<br/>run&#59<br/><br/><br/>/*Make the cover table*/<br/>data remotet.dataSum_Cover&#59<br/>&nbsp&nbsp&nbsp&nbspset&nbsp&nbsp&nbsp&nbspremotes.a1_masterinput end=eof &#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspif eof then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspItems='DataCreateTime'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspValue =strip(put( datetime(), datetime20.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspitems='DataCreateProject'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvalue=&_clientProjectName&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>s///<br/>t///","children":[{"idx":"EGTask-TmIx3Xy8T1UxrKr6","name":"S1 Copy zip files from SAS server","children":[{"idx":"EGTask-jmwuujYzzFA6crDn","name":"S2 Copy data sum files from SAS server","children":[{"idx":"CodeTask-vCOpZE73OY9t79ol","name":"T_Report DataSum into Xls","NodeDescription":"///t<br/>///s<br/>/*S export*/<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_cover,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=cover, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=files, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=vars, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=missing, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&localReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&DataReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.datasum_docslushcodes,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=docslushcodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>s///<br/>t///","custparents":[{"idx":"EGTask-jmwuujYzzFA6crDn"}]}],"custparents":[{"idx":"EGTask-TmIx3Xy8T1UxrKr6"}]}],"custparents":[{"idx":"CodeTask-zUCuLGc5Xv9jVBhJ"}]}],"custparents":[{"idx":"Note-HfvXWI759bEISn4j"}]}],"custparents":[{"idx":"CodeTask-tyupk9qkvIjdVjPX"}]}],"custparents":[{"idx":"Note-kwdDkpBop4kvOjCp"}]}],"custparents":[{"idx":"CodeTask-sn8jH8iiFqgnr9tW"}]}],"custparents":[{"idx":"Note-atHx9MAuv3mpYMAl"}]}],"custparents":[{"idx":"CodeTask-kyenvWsNUN9pBHaB"}]}],"custparents":[{"idx":"Note-KnFuBoceH4aAjLA7"}]}],"custparents":[{"idx":"CodeTask-1F53xJJrBEJqHkyM"}]}],"custparents":[{"idx":"Note-EYzMxq1RRXaklRgQ"}]}],"custparents":[{"idx":"CodeTask-7akhfpgFObKpWa2P"}]}],"custparents":[{"idx":"Note-hJBBgAcdoP3zxtOb"}]}],"custparents":[{"idx":"CodeTask-OZhXRTIAuUI8so1K"}]}],"custparents":[{"idx":"Note-rkMKpRgXMgNO1fmS"}]}],"custparents":[{"idx":"CodeTask-B1XbbPwYZKjWPVJM"}]}],"custparents":[{"idx":"Note-Socc4PxOYVJEikW2"}]}],"custparents":[{"idx":"CodeTask-iBm3TnsewjoXmFMA"}]}],"custparents":[{"idx":"Note-HBxSQt5k8cYhDOrZ"}]}],"custparents":[{"idx":"EGTask-yUjgFuvpaSgEzUDM"}]}],"custparents":[{"idx":"CodeTask-B7GYeGViHcyJuijA"}]}],"custparents":[{"idx":"Note-uXdW9hyreKb23kGT"}]}],"custparents":[{"idx":"CodeTask-CinsaqqKpNiJAroE"}]}],"custparents":[{"idx":"EGTask-cWNDcRk2GJkT9UJm"}]}],"custparents":[{"idx":"CodeTask-kdXNatjk26MJ53wd"}]}],"custparents":[{"idx":"Note-Laa15eTto2l6KdPR"}]}],"custparents":[{"idx":"CodeTask-8XQczBciSUyozSiJ"}]}],"custparents":[{"idx":"EGTask-oyLU9215za4Elsgd"}]}],"custparents":[{"idx":"CodeTask-lm45gKn6MFkGPZo4"}]}],"custparents":[{"idx":"Note-DQP9zFTPng4Ckh6G"},{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]},{"idx":"CodeTask-mQwTT8L9J3tPvTEp","name":"Existing Analysis","NodeDescription":"///t<br/>///s<br/>a<br/>s///<br/>t///","children":[{"idx":"CodeTask-Od9wGolfHlWGkQCq","name":"VGA_Pop Final dataset","NodeDescription":"///t<br/>///s<br/>/*VGA, final data set pop*/<br/><br/>/*the file VD0 contains all relevant info*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VD0.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VD0.sas7bdat)<br/>)&#59<br/><br/>/*VGA1<br/>&nbsp&nbsp&nbsp&nbspfrom VD0, rename the variables according to the specifications in <br/>P:\\Ultrasound(AdamsS)_Bio18-71\\Output\\Reports\\US in SK - data table elements.xlsx<br/>*/<br/>/*%print(data=vd0)&#59*/<br/>data VGA1&#59<br/>&nbsp&nbsp&nbsp&nbspset VD0&#59<br/>&nbsp&nbsp&nbsp&nbsprename resitype = URB_RUR_CMA &#59<br/>&nbsp&nbsp&nbsp&nbspdrop ageGroup&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='miss' then resiType='AMiss'&#59<br/>&nbsp&nbsp&nbsp&nbspif QAIPPE=. then QAIPPE=9&#59<br/>&nbsp&nbsp&nbsp&nbspif Charlson_Index=. then Charlson_Index=0&#59<br/>&nbsp&nbsp&nbsp&nbspif coverYears <1 then Charlson_Index=99&#59 /*if the patient is covered for < 1 year, treat it as missing*/<br/>run&#59<br/><br/>/*add a new agegroup */<br/>%MakeCategories(<br/>    Data=VGA1, <br/>    theVar=age,<br/>    theTargetVar=EntryAgeGroupA,<br/>    theCutOffs=17 65, <br/>    dlmt=, <br/>    debug=, <br/>    closeSide=left,<br/>    target=VGA2a<br/>)&#59<br/>%MakeCategories(<br/>    Data=VGA2a, <br/>    theVar=age,<br/>    theTargetVar=EntryAgeGroupB,<br/>    theCutOffs=11 26 41 57, <br/>    dlmt=, <br/>    debug=, <br/>    closeSide=left,<br/>    target=VGA2b<br/>)&#59<br/><br/>/*make categories for charlson index*/<br/>%MakeCategories(<br/>    Data=VGA2b, <br/>    theVar=Charlson_Index,<br/>    theTargetVar=Charlson_Index_Cat,<br/>    theCutOffs= 1 3 5 7 9 11 98, <br/>    dlmt=, <br/>    debug=, <br/>    closeSide=left,<br/>    target=VGA2<br/>)&#59<br/><br/><br/>/*where to have the # of US exams? It is in the set ultras_msb*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\ultras_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(ultras_msb.sas7bdat)<br/>)&#59<br/>/*%print(data=ultras_msb)&#59*/<br/>/*for each person, count the number of exams by non-preg/preg category*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=ultras_msb,<br/>&nbsp&nbsp&nbsp&nbsptarget=VGA3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, category, count(key_hsn) as NExams),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(key_hsn, category),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(dos between '01Jan2013'd and '31Dec2017'd)<br/>)&#59<br/>%transpose(data=VGA3, target=VGA4, rowhead=key_hsn, colhead=category, contents=NExams)&#59<br/><br/>/*link VGA4 back to VGA2*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VGA2,<br/>&nbsp&nbsp&nbsp&nbspt2=VGA4,<br/>&nbsp&nbsp&nbsp&nbsptarget=%str(VGA (drop=incqtl)), /*it is quite misleading as the incqtl is empty*/<br/> &nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.non_preg=., 0, t2.non_preg) as Num_US_NonPreg, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.preg=., 0, t2.preg) as Num_US_Preg),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=VGA.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=VGA.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-AmnldQ3zcyj3uKZY","name":"VGB, sum pts exams_nonpreg","NodeDescription":"///t<br/>///s<br/>/*VFB, univiate Poisson*/<br/><br/>/*select a var, group by level, and get the following<br/>&nbsp&nbsp&nbsp&nbsp# patients<br/>&nbsp&nbsp&nbsp&nbspSum of person years<br/>&nbsp&nbsp&nbsp&nbspsum of num_us_nonPreg<br/>*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VGA.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VGA.sas7bdat)<br/>)&#59<br/>%macro reportit(data=, theVar=, theReport=, order=, startRow=, theRef=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data theVar theReport order startRow theRef&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theVar=sex_desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let thereport=Univariable Analysis_20180906.xlsx&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let order=desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let startRow=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRef=%str('M')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=&data)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&data,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theVar, count(key_hsn) as Num_Patients, sum(coverYears) as Person_Years,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(num_us_nonpreg) as num_us_nonpreg&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(&theVar),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=&thevar &order&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report it*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>%mend reportit&#59<br/>%reportit(data=VGA, theVar=sex_desc, theReport=Univariable Analysis_20180906.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=desc, startRow=5, theRef=%str('M'))&#59<br/>%reportit(data=VGA, theVar=EntryAgeGroupA, theReport=Univariable Analysis_20180906.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=8, theRef=%str('-01 - 016'))&#59<br/>%reportit(data=VGA, theVar=EntryAgeGroupB, theReport=Univariable Analysis_20180906.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=12, theRef=%str('-01 - 010'))&#59<br/>%reportit(data=VGA, theVar=natv_stat_flag, theReport=Univariable Analysis_20180906.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=18, theRef=%str('0'))&#59<br/>%reportit(data=VGA, theVar=urb_rur_cma, theReport=Univariable Analysis_20180906.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=desc, startRow=21, theRef=%str('URBAN'))&#59<br/>%reportit(data=VGA, theVar=QAIPPE, theReport=Univariable Analysis_20180906.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=25, theRef=%str('1'))&#59<br/>%reportit(data=VGA, theVar=Charlson_Index_Cat, theReport=Univariable Analysis_20180906.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=32, theRef=%str('00 - 00'))&#59<br/><br/>/**/<br/>/**/<br/>/*proc genmod data=_tmp4&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspclass sex_desc  (ref='M') /param=reference &#59*/<br/>/*&nbsp&nbsp&nbsp&nbspmodel Num_US_NonPreg = sex_desc /type3 dist=poisson offset=log_timeInCohort &#59*/<br/>/*&nbsp&nbsp&nbsp&nbspestimate \"sex females vs males \" sex_desc 1 /exp &#59 */<br/>/*run&#59*/<br/>s///<br/>t///","children":[{"idx":"CodeTask-ki84jQDislMhc8ds","name":"VGC. univariate Poi nonpreg","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/><br/>/*VGC. get results from the univariate poisson model and report to the xls file<br/><br/>&nbsp&nbsp&nbsp&nbspto highlight:<br/><br/>&nbsp&nbsp&nbsp&nbsp1) Report of mean and 95%CI is by statements like:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. General syntax to have mean of predicted values<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income quintile = 2\" intercept 1 qaippe 0 1 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe income var has 6 levels (i.e, 1 to 5, and missing) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby default, SAS automatically creates 5 dummy vars each for a level except the reference level, like<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp+beta1 * incomeLevel1 + beta2 * incomeLevel2 ... beta5 * incomeLevel5 (each for income level 1 to 5).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not specified, the last level (income = missing) will be the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs such the digits after 'qaippe' (i.e, 0 1 0 0 0) each represents a level of income (i.e., income levels 1 to 5)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo estimate the mean of income level 2, make the 2nd digit as 1, while keeping the rest as 0 (i.e., 'qaippe 0 1 0 0 0') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo estimate the mean of income level 3, make the 3rd digit as 1, while keeping the rest as 0 (i.e., 'qaippe 0 0 1 0 0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. Specifying the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn this case, the income level =1 is expected to be the reference level.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThere are two ways to set reference level, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspone is by (ref='') and /param=ref,e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass qaippe (ref='1') /param=ref&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe other is by sorting the values and using the last in the sort as the reference, e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass qaippe / param=effect descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspc. Estimate mean predict value of the referecen level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that the following two is quite different from each other (given that income=1 as reference):<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of ALL income levels\" intercept 1 qaippe 0 0 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of income quintile = 1 (reference)\" intercept 1 qaippe -1 -1 -1 -1 -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe first is to estimate the mean of ALL levels. The second is to truly estimate the mean of the reference level.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe second Estimate statement has to be used within the second method of setting reference. Specifically, it only works<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen the option is specified as Class ... /param = effect.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt won't work if setting as Class ... /param = ref.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis means that the levels of income has to be sorted, instead of specifying the reference level. In this case, the levels <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphas to be sorted in descending order, such to have level=1 as the last, and as the reference.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhen in descending order, the model is different in that the levels appearing in the model in descending order:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp+beta1 * incomeLevel_missing + beta2 * incomeLevel5 ... beta2 * incomeLevel1 (each for income level 'missing', and 5 to 2)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis time there is no level 1 (as it is the reference)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that the report also follow the descending order (i.e., mean of incomelevel _missing comes first), check the label in the<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreport table.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) Report of OR and 95%CI is easier as it does not involve the estimate of the reference level, e.g., <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"IR of income quintile = 2\" qaippe 0 1 0 0 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"IR of income quintile = 3\" qaippe 0 0 1 0 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that to estimate the OR, there is no terms and arguments for 'intercept'<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) Discrepancy of the orders in analyses and in reports<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs aforementioned, the levels of an interested var is ordered descendingly. However, the results are requested to be in ascending<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder. This are taken into account in the following macro.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4) Customizing orders of the levels in the report. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFor most variables, the levels are reported in ascending order, the ref either the first or the last level. However there is always <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexceptions. To make the ordering more flexibile, the orders can be specified by the following macro.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp5) Each var may have different levels. As such, the estimate arguments need to be determined. e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor EntryAgeGroupA (3 levels, 1 as ref, 2 as non-ref levels)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp Estimate \"mean of age groupA = '65+ '\" intercept 1 qaippe 1 0 &#59 (the argument is '1 0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor income (6 levels, 1 as ref, 5 as non-ref levels)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of income quintile = 2 \" intercept 1 qaippe 0 0 0 0 1 &#59 (the argument is '0 0 0 0 1')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(Note that the levels are all sorted in descending order. The hightest level comes first as 1 0, while the second lowest comes<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspat the last)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe following macro enables:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. determine the number of digits in the argument (e.g., wether it is 1 0 or 1 0 0 0 0, depending on the levels of the var)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. determine where the number '1' and '0's should be positioned in the argument (e.g., '0 0 1', or '0 1 0')<br/>*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VGA.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VGA.sas7bdat)<br/>)&#59<br/>%print(data=VGA)&#59<br/>/*Note that the genmod will run for twice. The first is to get the mean of all levels (using param=effect, the ref is the average<br/>&nbsp&nbsp&nbsp&nbspof all levels)<br/>&nbsp&nbsp&nbsp&nbspThe second to get the ORs comparing to the specified reference level */<br/>%macro getUniPoi(data=, theVar=, theRef=, customizedOrder=, theReport=, startRow=, theSheet=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local data theVar theReport theSheet startRow theRef<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnLevels i refMeanArg j theLevelValue theLevelArg levelMeanEst levelOREst LEVELMEANESTSTR LEVELORESTSTR <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcurLevel customizedOrder nZerosBefore nZerosAfter debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1. from the source data set, change data format, and add a log term (to be used for offset in the Poisson model)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoi_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theVar._tmp $100.&#59 /*make the length long enough to avoid truncate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*change numeric values to chars<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is to be conformed with the report.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhen creating the statistical results form models, SAS changes numeric values into labels. Labels are in character format.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLater we'll need to match the result levels (in labels) with the levels in the source table (in numeric values).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuch matching requires both to be in the same type, preferred to be in character type.*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVarType=vType(&theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theVarType='N' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theVar._tmp = strip(put(&theVar, 8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theVar._tmp = &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theVar._tmp = &theVar&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_thsd = coverYears /1000&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_timeInCohort= log(coverYears)&#59 /*creating the offset term*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_timeInCohort= log(N_thsd)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the levels of the selected var<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe number of levels is to be used later for determining the number of digits in the estimate argument. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspeach particular level is to be used later for determining the position of 1 in the estmiate argument.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe order of the levels takes into accound of the reference level, and the order to report in the final xls file<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the distinct levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=getUniPoi_tmp3, target=getUniPoi_tmp4, vars=&theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoi_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoi_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheLevel=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&customizedOrder&#59 /*the levels and the references can be customozed for order*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*from above, the order of the orginal levels are determined, and transferred into standard levels in numeric values.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe standard levels are saved in the new variable 'theLevel'. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThat way, no matter the original values are, the standard levels are always in numbers (1, 2, ....) with the reference<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplevel as 'theLevel=1'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext, the levels are ordered by the standard level. Such order is conformed with the order in the final xls report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sort(data=getUniPoi_tmp5, sorter=theLevel)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Adding theLevel back to the original dataset, for the following Poisson analyses, the standard level will be used<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinstead of the original values<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn the following, the variable 'URB_RUR_CMA', and qaippe are always kept for checking random effects later<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoi_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoi_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoi_tmp6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.num_us_nonpreg, t1.log_timeInCohort , t1.&theVar, t2.theLevel, t1.urb_rur_cma, t1.qaippe),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theVar<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*2. construct estimate statements*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The arguments (e.g., -1 -1 depends on the number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor example, for sex_desc, there is only 1 non-ref levels, therefore the argument is ... theLevel -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor EntryAgeGroupA, however, there are 2 non-ref levels, therefore the argement is ... theLevel -1 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following is to make dynamic arguments based on number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get number of levels of the interested variable*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=getUniPoi_tmp5)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the number of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nLevels=%eval(&nobs-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the number of  -1 in the argument (for estimating mean of reference level) = the number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following is to get a string with the repeating '-1' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., for the reference income level, make it -1 -1 -1 -1 -1 (repeat for 5 times, corresponding to 5 non-ref levles*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nLevels&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let refMeanArg= &refMeanArg -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevel &refMeanArg&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*make the complete Estimate statment for estimate the mean at reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =1 (ref\") intercept 1 theLevel -1 -1 -1 -1 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that we'll no longer use the original values (QAIPPE=1), instead we'll use the standard levels (in the var 'theLevel')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let estRefMean=%str(estimate &theRef intercept 1 theLevel &refMeanArg&#59)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>>estRefMean= &estRefMean&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in the following proc genmod, the levels are no longer sorted descendingly <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt is kind of noticed that, in previous SAS versions,  when param=effect, the ref specification does not work<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=effect &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs 'param=effect' is specified instead of 'param=ref', the reference level of theLevel would be the <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplast level of theLevel in the ascending order (i.e., the ref level is 6). Even if (ref='1') was specified, SAS neglects it.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, such situation was for old version of SAS.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAt least since SAS 9.3, the ref specification works for param=effect)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following is to determine the values for argument<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor theLevel=2 out of 6 levels, make the argument as 1 0 0 0 0 (if the ref level = 1)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor theLevel =3, make the argument as 0 1 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBasically, to determine the number of '0's before 1, and the number of '0's after 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i =2 %to &nobs &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the value of the standard level, in the case of income level, it is the 6th row, theLevelValue = 6*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoi_tmp5 (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theLevelValue', &theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelValue = %sysfunc(strip(&theLevelValue))&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevelValue = &theLevelValue&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The lowest level is picked up first (income =1 as reference level), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =2 \" intercept 1 theLevel 1 0 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =3 \" intercept 1 theLevel 0 1 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =4 \" intercept 1 theLevel 0 0 1 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =5 \" intercept 1 theLevel 0 0 0 1 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =6 \" intercept 1 theLevel 0 0 0 0 1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe levels appear in asending order, which is corresponding to the '1' appearing in ascending order. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*to determine the zeros before '1' */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nZerosBefore = %eval(&i - 2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 1 %to &nZerosBefore&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the above generates the 0s before the value 1, e.g., 0 */<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*now add the value 1 into the argument, making it as, e.g., for income =3,  0 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 1&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the levels after '1'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nZerosAfter = %eval(&nobs - &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 1 %to &nZerosAfter&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> levels= &nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> i =&i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> nZerosAfter = &nZerosAfter&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevelArg=&theLevelArg&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*now that the argument is complete, e.g., for income=3:  0 1 0 0 0*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevel &theLevelArg&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the complete estimate statements for mean of each level*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelMeanEst=%str(estimate \"&theLevelValue\" intercept 1 theLevel &theLevelArg&#59)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &levelMeanEst&#59 */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelMeanEstStr=&levelMeanEstStr &levelMeanEst&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the complete estimate statements for OR of each level*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelOREst=%str(estimate \"&theLevelValue\" theLevel &theLevelArg /exp&#59)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &levelMeanEst&#59 */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelOREstStr=&levelOREstStr &levelOREst&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*clear the value of theLevelArg, as it is level-specific. If it is not cleared, it'll cause error when making argument strings for<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> levelMeanEstStr= &levelMeanEstStr&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> levelOREstStr= &levelOREstStr&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Performe the poisson analyses, param=effect, i.e., the reference is the average of all levels. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthis is to have means of all levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> ods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"genmod param=effect\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoi_tmp6 &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") URB_RUR_CMA qaippe / param=effect &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*it'll still be necessary to specify the ref level, this is to ensure that the terms<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor mean estimate is correct (i.e.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor the reference level, it is -1 -1 -1 -1 -1 (given that there are 6 levels includng the ref level)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor the rest levels in ascending order:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1 0 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   &nbsp&nbsp&nbsp&nbsp0 1 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the ordering of levels can be specified by individual vars. e.g.:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" descending) resitype   qaippe / param=ref &#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, the var 'theLevel' is ordered descendingly, restitype and qaippe ascendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe ordering of levels can also be set gloablly for all vars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" ) resitype   qaippe / param=ref  descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, all vars are ordered descendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_nonpreg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=getUniPoi_tmp7 p=fitted lower=lower upper=uper stdresdev=resid_deviance stdreschi=resid_pearson cookd=cookd &#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the estimate statements, each for the mean of reference level, the means of non-referenc levels, and the ORs of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&estRefMean<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&levelMeanEstStr&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output &nbsp&nbsp&nbsp&nbspestimates=getUniPoi_tmp8a&#59 /*output the result means and ORs*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in the output table getUniPoi_tmp8, the first nLevels rows are for means*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoi_tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoi_tmp8a (obs=&nobs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep label MeanEstimate MeanLowerCL MeanUpperCL&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*follow the order in getUniPoi_tmp5, such to be conformed with the orders in the report xls file<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe standard levels are used as the bridge for joining tables, while the orignal values are used<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspto display the true levels in the orignal file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoi_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoi_tmp9,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoi_tmp10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theVar, MeanEstimate, MeanLowerCL, MeanUpperCL),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(strip(t1.&theVar) =strip(t2.label)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=t1.theLevel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the format required in the final report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoi_tmp11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoi_tmp10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCL='(' || strip(put(MeanLowerCL, 8.4)) || ',' ||  strip(put(MeanUpperCL, 8.4)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep MeanEstimate CL&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Performe the poisson analyses, param=reference. This is to have effect ORs as oppsed to the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCheck SAS codes for assignment 3 of course PUBH 842*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"genmod param=reference\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoi_tmp6 &#59 /*for poisson models, it does not matter whether or not specifying the descindg order*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") URB_RUR_CMA qaippe  / param=ref &#59 /*the level of the covariate is ordered descendingly so that the lowest value is set as ref*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the ordering of levels can be specified by individual vars. e.g.:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" descending) resitype   qaippe / param=ref &#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, the var 'theLevel' is ordered descendingly, restitype and qaippe ascendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe ordering of levels can also be set gloablly for all vars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" ) resitype   qaippe / param=ref  descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, all vars are ordered descendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_nonpreg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=getUniPoi_tmp7 p=fitted lower=lower upper=uper stdresdev=resid_deviance stdreschi=resid_pearson cookd=cookd &#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the estimate statements, each for the mean of reference level, the means of non-referenc levels, and the ORs of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&levelOREstStr &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output &nbsp&nbsp&nbsp&nbspestimates=getUniPoi_tmp8b&#59 /*output the result means and ORs*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results on&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptitle&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro notrun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The following is a handy way to get estimates and OR/IRR, instead of repeatedly state the estimates.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, the 95%CI need to be calculated mannually<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRef: https://stats.idre.ucla.edu/sas/dae/poisson-regression<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoi_tmp6 &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=reference &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_nonpreg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstore out=getUniPoi_tmp8e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*getUniPoi_tmp8e contains all estimates. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIf the path is not specified, it is saved in the work directory<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, the extension of the table file is '.sas7bitm'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsuch files won't show up in the file list under work directory in the 'sever' explorer panel*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output ParameterEstimates = getUniPoi_tmp8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc plm source=getUniPoi_tmp8e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspshow parameters&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoi_tmp8d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoi_tmp8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIRRs=exp(estimate)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif parameter ne 'Intercept'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend notrun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the rows after nLevels rows are for OR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoi_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoi_tmp8b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep label MeanEstimate MeanLowerCL MeanUpperCL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif label in: ('Exp') then delete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are similar, only that these are for OR results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoi_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoi_tmp12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoi_tmp13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theVar, MeanEstimate, MeanLowerCL, MeanUpperCL,probChisq),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(strip(t1.&theVar) = strip(t2.label)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=t1.theLevel,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters =%str(t1.&theVar ne &theRef)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*why tmp12 instead of tmp13, what is tmp13 for if not used in the follow steps*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoi_tmp15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain MeanEstimate CL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoi_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCL='(' || strip(put(MeanLowerCL, 8.4)) || ',' ||  strip(put(MeanUpperCL, 8.4)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep MeanEstimate CL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report the final results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getUniPoi_tmp11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getUniPoi_tmp15,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=%eval(&startRow+1), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getUniPoi_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getUniPoi&#59<br/><br/><br/>%getUniPoi(data=VGA, theVar=sex_desc, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=5, theRef=%str('M'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=%str(if sex_desc='M' then theLevel=1&#59 else theLevel=2&#59),<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>%getUniPoi(data=VGA, theVar=EntryAgeGroupA, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=8, theRef=%str('-01 - 016'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%getUniPoi(data=VGA, theVar=EntryAgeGroupB, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=12, theRef=%str('-01 - 010'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/><br/><br/>%getUniPoi(data=VGA, theVar=natv_stat_flag, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=18, theRef=%str('0'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%getUniPoi(data=VGA, theVar=urb_rur_cma, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=21, theRef=%str('URBAN'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=%str(if urb_rur_cma='URBAN' then theLevel=1&#59if urb_rur_cma='RURAL' then theLevel=2 &#59if urb_rur_cma='AMiss' then theLevel=3),<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>%getUniPoi(data=VGA, theVar=qaippe, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=25, theRef=%str('1'),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>%getUniPoi(data=VGA, theVar=Charlson_Index_Cat, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=SK Registered_Population, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=32, theRef=%str('00 - 00'),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-AmnldQ3zcyj3uKZY"}]}],"custparents":[{"idx":"CodeTask-Od9wGolfHlWGkQCq"}]}],"custparents":[{"idx":"CodeTask-mQwTT8L9J3tPvTEp"}]},{"idx":"CodeTask-xIdiT1RPU7iIRXkg","name":"VA_PregTrimester","NodeDescription":"///t<br/>///s<br/>/*<br/>&nbsp&nbsp&nbsp&nbsp# of preg-related ultrasound exams by fee code and by trimesters<br/>*/<br/>data _null_&#59run&#59<br/>%print(data=remoteT.pregData)&#59<br/><br/>/*1. get the preg data and give IDs for each record*/<br/>%sort(data=remoteT.pregData, sorter=key_hsn cohortentrydt outcomedt)&#59<br/>data VA1&#59<br/>&nbsp&nbsp&nbsp&nbsppregOBS=_n_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteT.pregData&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn cohortentrydt outcomedt outcometype pregOBS&#59<br/>run&#59<br/>%print(data=VA1)&#59<br/><br/>/*2. split the data into first, second and third trimesters<br/>&nbsp&nbsp&nbsp&nbsp0-97, 98-195, 196+<br/>&nbsp&nbsp&nbsp&nbspIn VA1, the cohortentrydt is the estimated last menstrual period<br/>*/<br/>data Va2&#59<br/>&nbsp&nbsp&nbsp&nbspset VA1&#59<br/>&nbsp&nbsp&nbsp&nbspformat triMstartDate date9. triMendDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif outcomedt - cohortEntryDt > 195 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrimester=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMstartDate=cohortEntryDt &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMendDate=cohortEntryDt + 97&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrimester=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMstartDate=cohortEntryDt + 98&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMendDate=cohortEntryDt + 195&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrimester=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMstartDate=cohortEntryDt + 196&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMendDate=outcomeDt&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif outcomedt - cohortEntryDt > 97 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrimester=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMstartDate=cohortEntryDt &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMendDate=cohortEntryDt + 97&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrimester=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMstartDate=cohortEntryDt + 98&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMendDate=cohortEntryDt + 195&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif outcomedt - cohortEntryDt >= 0 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrimester=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMstartDate=cohortEntryDt &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptriMendDate=cohortEntryDt + 97&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse trimester=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>%print(data=VA2)&#59<br/><br/>/*3. get all preg-related u/s events*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=ultras_msb,<br/>&nbsp&nbsp&nbsp&nbspzipped=ultras_msb,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=VA3a<br/>)&#59<br/>data va3&#59<br/>&nbsp&nbsp&nbsp&nbspset va3a&#59<br/>&nbsp&nbsp&nbsp&nbspif category='PREG' and dos >= '01jan2013'd  and dos <='31dec2017'd&#59<br/>run&#59<br/>%print(data=va3)&#59<br/><br/>/*4. determin the exam's trimester*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=va3,<br/>&nbsp&nbsp&nbsp&nbspt2=va2,<br/>&nbsp&nbsp&nbsp&nbsptarget=va4,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.obs,t1.key_hsn, t1.key_doc_num, t1.fsc,t1.dos,t1.category, t1.disease, t1.description,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.trimester= ., 0, t2.trimester) as trimester,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.pregOBS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t1.dos between t2.triMstartDate and t2.triMendDate),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(fsc ne 'W446' and fsc ne 'W150' and fsc ne 'W045' and fsc ne 'W051'), /*these are additional codes to existing exams<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif included, the exams will be double counted*/<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, obs, pregobs)<br/>)&#59<br/>%print(data=vA4)&#59<br/>/*n=245173*/<br/><br/>/*the above contains double counted U/S exams. This is because that the preg data is not fully cleaned<br/>&nbsp&nbsp&nbsp&nbspin which there are yet overlapping preg periods. <br/>&nbsp&nbsp&nbsp&nbspIn the follow step, one the first preg preiod is applied<br/>*/<br/>data VA5&#59<br/>&nbsp&nbsp&nbsp&nbspset VA4&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn obs pregobs&#59<br/>&nbsp&nbsp&nbsp&nbspif first.obs&#59<br/>run&#59<br/><br/>%distinct(data=VA5, target=VA6, vars=%str(key_hsn, dos))&#59<br/><br/>%getPHRSInfo(rawFile=&PHRS_InfoFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsourceFile=VA6, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=VA7, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=dos, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBornDay=15, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspageCut=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldNative=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartDt='01Jan2013'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendDt='31dec2017'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=&Xtrc_End_Cover,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnoprint=noprint<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*for each person, have a unique record of the demo info*/<br/>%sort(data=VA7, sorter=key_hsn dos)&#59<br/>data VA8&#59<br/>&nbsp&nbsp&nbsp&nbspset VA7&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dos&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspdrop dos age born_month born_year&#59<br/>run&#59<br/><br/>/*link the demo info back to VA5*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vA5,<br/>&nbsp&nbsp&nbsp&nbspt2=VA8,<br/>&nbsp&nbsp&nbsp&nbsptarget=VA_PregUSExams,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBirth,&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspint(yrdif(birth, dos, 'age')) as ageAtExam,&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSEX_DESC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMARI_STAT_CODE,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNATV_STAT_FLAG,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMARI_STAT_DESC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFAM_NO<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn <br/>)&#59<br/><br/>/*zip it*/<br/>%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VA_PregUSExams, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VA_PregUSExams.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/><br/>/*count the number of exams by code and by trimester*/<br/>%freq(data=VA_PregUSExams, table=fsc * trimester, option = %str(nopct norow nocol out =VA5) )&#59<br/><br/>/*counting number of patients*/<br/>%distinct(data=VA_PregUSExams, target=va6, vars=%str(key_hsn, fsc, trimester))&#59<br/>%freq(data=va6, table=fsc * trimester, option = %str(nopct norow nocol out =VA7) )&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-jAfRCVgnpfYlla1u","name":"VB_NonPregUS","NodeDescription":"///t<br/>///s<br/>/*<br/>&nbsp&nbsp&nbsp&nbsp#number of non-preg related ultrasound exams by code<br/>*/<br/><br/>/*1. get all nonpreg-related u/s events*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=ultras_msb,<br/>&nbsp&nbsp&nbsp&nbspzipped=ultras_msb,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=VB1a<br/>)&#59<br/>data VB1&#59<br/>&nbsp&nbsp&nbsp&nbspset VB1a&#59<br/>&nbsp&nbsp&nbsp&nbspif category='NON_PREG'  and dos >= '01jan2013'd  and dos <='31dec2017'd&#59<br/>run&#59<br/>%print(data=VB1)&#59<br/><br/>/*count the number of exams by code and by trimester*/<br/>%freq(data=VB1, table=fsc, option = %str(nopct norow nocol out =Vb2 ), order=freq )&#59<br/><br/>/*count the number of distinct patients*/<br/>%distinct(data=vb1, target=vb3, vars=%str(key_hsn, fsc))&#59<br/>%freq(data=VB3, table=fsc, option = %str(nopct norow nocol out =Vb4 ), order=freq )&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-s34ZjNtgXBNJaALV","name":"VC_Descriptive1","NodeDescription":"///t<br/>///s<br/>/*VC the descriptives for the population<br/>&nbsp&nbsp&nbsp&nbspThis is to make the descriptive report of meaures related to pregnant<br/>&nbsp&nbsp&nbsp&nbspsuch measures can be generated once for both preg/non-preg population<br/>*/<br/><br/>/*1. unzip the u/s exam file*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=ultras_msb,<br/>&nbsp&nbsp&nbsp&nbspzipped=ultras_msb,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=VC1<br/>)&#59<br/>/*2.determine their coverage info, and determine the first date of coverage since 2013*/<br/>/*2.a, get a list of distinct patient from VC1<br/>&nbsp&nbsp&nbsp&nbspfirst, assuming that for everyone the firstDate is '01Jan2013'd*/<br/>%distinct(data=VC1, target=vc2a, vars=%str(key_hsn))&#59<br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsprawfile=&PHRS_CovFile, ptFile=vc2a, theCovXtrc=&Xtrc_End_Cover, keyDateCol=,<br/>&nbsp&nbsp&nbsp&nbspstart='01Jan2013'd, end= '31Dec2017'd, <br/>&nbsp&nbsp&nbsp&nbsptarget=VC2b, cohortgroup=, debug=)&#59<br/>/*the file VC2b is like this<br/>&nbsp&nbsp&nbsp&nbsp1. it contains all coverage/cover gaps between 2013 and 2017<br/>&nbsp&nbsp&nbsp&nbsp2. each person may have multiple records. Those of gap=0 are covered days. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspOf those covered records, the earliest 'coverstart' is the earliest enrolment date into PHRS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSummarizing the covered records, we'll have the total # of days covered between 2013 and 2017<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>data VC2c&#59<br/>&nbsp&nbsp&nbsp&nbspset VC2b&#59<br/>&nbsp&nbsp&nbsp&nbspif gaps = 0&#59<br/>run&#59<br/><br/>/*determine the index date (the earliset date enrolled in PHRS)*/<br/>data VC2d&#59<br/>&nbsp&nbsp&nbsp&nbspset vc2c&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn coverstart&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn coverstart&#59<br/>&nbsp&nbsp&nbsp&nbsprename coverstart = indexDate&#59<br/>run&#59<br/>/*sum the # of days covered by PHRS between 2013 and 2017*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VC2C,<br/>&nbsp&nbsp&nbsp&nbspt2=VC2d,<br/>&nbsp&nbsp&nbsp&nbsptarget=VC2,<br/>&nbsp&nbsp&nbsp&nbspvars=%Str(t1.key_hsn, t2.indexDate, sum(t1.days) / 365 as coverYears),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.key_hsn, indexDate),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.key_hsn, indexDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*note some of the patients in VC1 is missing in VC2. The missing patients are those having MSB fsa records,<br/>&nbsp&nbsp&nbsp&nbspbut not covered in PHRS between 2013 and 2017. They should be excluded*/<br/><br/>/*3. get demographic info of these patients (sex, and age on indexDate*/<br/>%getPHRSInfo(rawFile=&PHRS_InfoFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsourceFile=vc2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=vc3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=indexDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBornDay=15, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspageCut=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldNative=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartDt='01Jan2013'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendDt='31dec2017'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=&Xtrc_End_Cover,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnoprint=noprint<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*make age groups*/<br/>data vc3a&#59<br/>&nbsp&nbsp&nbsp&nbspset vc3&#59<br/>&nbsp&nbsp&nbsp&nbspformat ageGroup $10.&#59<br/>&nbsp&nbsp&nbsp&nbspif age < =16 then ageGroup='<=16'&#59<br/>&nbsp&nbsp&nbsp&nbspif 16 < age <= 64 then ageGroup = '17-64'&#59<br/>&nbsp&nbsp&nbsp&nbspif age > 64 then ageGroup='>=65'&#59<br/>run&#59 <br/><br/>/*4. get resitype*/<br/>%getResiType(<br/>&nbsp&nbsp&nbsp&nbspResiFile=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspxtrc=%str('08Jul2019'd),<br/>&nbsp&nbsp&nbsp&nbspPtList=vc3a,<br/>&nbsp&nbsp&nbsp&nbspindexCol=indexDate,<br/>&nbsp&nbsp&nbsp&nbsptarget=vc4<br/>)&#59<br/><br/>/*5. get income quintile*/<br/>%put >>> &PHRS_Resi_cleanFile&#59<br/>%INCQTL_assign(ds_in =vc4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=vc5a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrt_dt_var=indexDate,&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend_dt_var=indexDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincqtl_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincl_full_info=N,<br/>         &nbsp&nbsp&nbsp&nbspdebug=N<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%freq(data=vc5a, table=incqtl)&#59<br/>/*remove the columns that are not to be used*/<br/>%print(data=vc5a)&#59<br/>data vc5&#59<br/>&nbsp&nbsp&nbsp&nbspset vc5a&#59 <br/>&nbsp&nbsp&nbsp&nbspdrop INCQTLdays mindiff_INCQTL INCQTLdiff tot_days born_month born_year fsa &#59<br/>run&#59<br/>data remotet.vc_tmp&#59<br/>&nbsp&nbsp&nbsp&nbspset vc5&#59<br/>run&#59<br/><br/>/*6. get charlson score*/<br/>%Charlson_Elixhauser_Score_local(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcharlson=Y, <br/>                                 elixhauser=, <br/>                                 msb_xtrc_start_dt=&Xtrc_Start_MSB,<br/>                                 msb_xtrc_end_dt=&Xtrc_End_MSB,<br/>                                 hosp_file=&hospitalfile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp msb_file=&msbfile, <br/>                                 hsn_file=vc5, <br/>                                 ref_date_var=indexDate, <br/>                                 charlson_var_out=, <br/>                                 elix_postfix=,<br/>                                 additionalByVar=, <br/>                                 ds_out=remotet.vc_tmp,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp days_lookback=1825,<br/>                                 debug=N<br/>)&#59<br/><br/><br/><br/>data vc6&#59<br/>&nbsp&nbsp&nbsp&nbspset vc6a&#59<br/>run&#59<br/><br/>/***the following should be estimated by preg/nonpreg groups***/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=vc1,<br/>&nbsp&nbsp&nbsp&nbspt2=vc6,<br/>&nbsp&nbsp&nbsp&nbsptarget=VCA,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/><br/>%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VCA, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCA.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-jAfRCVgnpfYlla1u"}]},{"idx":"CodeTask-XfKL1iLHoxoxrczc","name":"VCC_DescSKPop","NodeDescription":"///t<br/>///s<br/>/*VCC the descriptives for SK population registered in SK<br/>&nbsp&nbsp&nbsp&nbspwithin 2013-2017<br/>*/<br/><br/>/*which file contains the whole population?<br/>&nbsp&nbsp&nbsp&nbspSounds like remoteT.c_cohort is<br/>*/<br/><br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsprawfile=&PHRS_CovFile, ptFile=RemoteT.c_cohort, theCovXtrc=&Xtrc_End_Cover, keyDateCol=,<br/>&nbsp&nbsp&nbsp&nbspstart='01Jan2013'd, end= '31Dec2017'd, <br/>&nbsp&nbsp&nbsp&nbsptarget=VCC1, cohortgroup=, debug=)&#59<br/>/*the file VCC1 is like this<br/>&nbsp&nbsp&nbsp&nbsp1. it contains all coverage/cover gaps between 2013 and 2017<br/>&nbsp&nbsp&nbsp&nbsp2. each person may have multiple records. Those of gap=0 are covered days. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspOf those covered records, the earliest 'coverstart' is the earliest enrolment date into PHRS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSummarizing the covered records, we'll have the total # of days covered between 2013 and 2017<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>data VCC2c&#59<br/>&nbsp&nbsp&nbsp&nbspset VCC1&#59<br/>&nbsp&nbsp&nbsp&nbspif gaps = 0&#59<br/>run&#59<br/><br/>/*determine the index date (the earliset date enrolled in PHRS)*/<br/>data VCc2d&#59<br/>&nbsp&nbsp&nbsp&nbspset vcc2c&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn coverstart&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn coverstart&#59<br/>&nbsp&nbsp&nbsp&nbsprename coverstart = indexDate&#59<br/>run&#59<br/>/*sum the # of days covered by PHRS between 2013 and 2017*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VCC2c,<br/>&nbsp&nbsp&nbsp&nbspt2=VcC2d,<br/>&nbsp&nbsp&nbsp&nbsptarget=VCc2,<br/>&nbsp&nbsp&nbsp&nbspvars=%Str(t1.key_hsn, t2.indexDate, sum(t1.days) / 365 as coverYears),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.key_hsn, indexDate),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.key_hsn, indexDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*note some of the patients in VCC1 is missing in VCC2. The missing patients are those having MSB fsa records,<br/>&nbsp&nbsp&nbsp&nbspbut not covered in PHRS between 2013 and 2017. They should be excluded*/<br/><br/>/*3. get demographic info of these patients (sex, and age on indexDate*/<br/>%getPHRSInfo(rawFile=&PHRS_InfoFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsourceFile=vcc2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=vcc3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=indexDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBornDay=15, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspageCut=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldNative=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartDt='01Jan2013'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendDt='31dec2017'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=&Xtrc_End_Cover,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnoprint=noprint<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*make age groups*/<br/>data vcc3a&#59<br/>&nbsp&nbsp&nbsp&nbspset vcc3&#59<br/>&nbsp&nbsp&nbsp&nbspformat ageGroup $10.&#59<br/>&nbsp&nbsp&nbsp&nbspif age < =16 then ageGroup='<=16'&#59<br/>&nbsp&nbsp&nbsp&nbspif 16 < age <= 64 then ageGroup = '17-64'&#59<br/>&nbsp&nbsp&nbsp&nbspif age > 64 then ageGroup='>=65'&#59<br/>run&#59 <br/><br/>/*4. get resitype*/<br/>%getResiType(<br/>&nbsp&nbsp&nbsp&nbspResiFile=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspxtrc=%str('08Jul2019'd),<br/>&nbsp&nbsp&nbsp&nbspPtList=vcc3a,<br/>&nbsp&nbsp&nbsp&nbspindexCol=indexDate,<br/>&nbsp&nbsp&nbsp&nbsptarget=vcc4<br/>)&#59<br/><br/>/*5. get income quintile*/<br/>%put >>> &PHRS_Resi_cleanFile&#59<br/>%INCQTL_assign(ds_in =vcc4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=vcc5a, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstrt_dt_var=indexDate,&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend_dt_var=indexDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincqtl_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincl_full_info=N,<br/>         &nbsp&nbsp&nbsp&nbspdebug=N<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%freq(data=vcc5a, table=incqtl)&#59<br/>/*remove the columns that are not to be used*/<br/>%print(data=vcc5a)&#59<br/>data VCCA&#59<br/>&nbsp&nbsp&nbsp&nbspset vcc5a&#59 <br/>&nbsp&nbsp&nbsp&nbspdrop INCQTLdays mindiff_INCQTL INCQTLdiff tot_days born_month born_year fsa &#59<br/>run&#59<br/><br/>%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VCCA, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCCA.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/>/*6. too slow, calculate it in local disk get charlson score<br/>%Charlson_Elixhauser_Score_local(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcharlson=Y, <br/>                                 elixhauser=, <br/>                                 msb_xtrc_start_dt=&Xtrc_Start_MSB,<br/>                                 msb_xtrc_end_dt=&Xtrc_End_MSB,<br/>                                 hosp_file=&hospitalfile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp msb_file=&msbfile, <br/>                                 hsn_file=vcc5, <br/>                                 ref_date_var=indexDate, <br/>                                 charlson_var_out=, <br/>                                 elix_postfix=,<br/>                                 additionalByVar=, <br/>                                 ds_out=VCCA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp days_lookback=1825,<br/>                                 debug=N<br/>)&#59<br/>*/<br/><br/><br/><br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>s///<br/>t///","children":[{"idx":"EGTask-X8YIcXSI4u2V7lyZ","name":"VCc1 Copy VcCA files from SAS server","children":[{"idx":"CodeTask-yLApXgshPqJbpMVY","name":"VD_descriptive local","NodeDescription":"///t<br/>///s<br/>/*report the descriptives*/<br/><br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VCcA.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(vcca.sas7bdat)<br/>)&#59<br/><br/>/*the whole population hospital and MSB data can be found at <br/>S:\\Collaborative_researchers\\JMarkoLOlson\\Chronics_SKPop_Bio142\\Data*/<br/><br/>/*%vbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbspzipFile=%str(S:\\Collaborative_researchers\\JMarkoLOlson\\Chronics_SKPop_Bio142\\Data\\master_hosp.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)*/<br/>/*)&#59*/<br/>/*%vbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbspzipFile=%str(S:\\Collaborative_researchers\\JMarkoLOlson\\Chronics_SKPop_Bio142\\Data\\master_msb.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)*/<br/>/*)&#59*/<br/><br/>/*%Charlson_Elixhauser_Score_local(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcharlson=Y, */<br/>/*                                 elixhauser=, */<br/>/*                                 msb_xtrc_start_dt=,*/<br/>/*                                 msb_xtrc_end_dt=,*/<br/>/*                                 hosp_file=master_hosp, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp msb_file=master_MSB, */<br/>/*                                 hsn_file=VCCA, */<br/>/*                                 ref_date_var=indexDate, */<br/>/*                                 charlson_var_out=, */<br/>/*                                 elix_postfix=,*/<br/>/*                                 additionalByVar=, */<br/>/*                                 ds_out=VD0,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp days_lookback=1825,*/<br/>/*                                 debug=N*/<br/>/*)&#59*/<br/><br/>/*%vbsZip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=VD0.zip, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=VD0, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VD0.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VD0.sas7bdat)<br/>)&#59<br/><br/>%print(data=vd0)&#59<br/><br/>/*1. sex*/<br/>%freq(data=VD0, table=sex_desc, option=%str(nopct norow nocol out=VD1b))&#59<br/>data VD1&#59<br/>&nbsp&nbsp&nbsp&nbspset vD1b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep sex_desc count&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=5, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*2. Age group*/<br/>%freq(data=VD0, table=ageGroup, option=%str(nopct norow nocol&nbsp&nbsp&nbsp&nbspout=VD2b))&#59<br/>data VD2c&#59<br/>&nbsp&nbsp&nbsp&nbspset vD2b&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='<=16' then id=1&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='17-64' then id=2&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='>=65' then id=3&#59<br/>&nbsp&nbsp&nbsp&nbspkeep id ageGroup count&#59<br/>run&#59<br/>%sort(data=vd2c, sorter=id)&#59<br/>data VD2&#59<br/>&nbsp&nbsp&nbsp&nbspset vd2c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop id&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=8, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*3. registered Indian status*/<br/>%freq(data=VD0, table=natv_stat_flag, option=%str(nopct norow nocol out=VD3b))&#59<br/>%sort(data=VD3b, sorter=descending natv_stat_flag)&#59<br/>data VD3&#59<br/>&nbsp&nbsp&nbsp&nbspretain RI&#59<br/>&nbsp&nbsp&nbsp&nbspset vD3b&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=0 then RI='No'&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=1 then RI='Yes'&#59<br/>&nbsp&nbsp&nbsp&nbspkeep RI count&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=12, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*4. rurality*/<br/>%freq(data=VD0, table=resitype, option=%str(nopct norow nocol out=VD4b))&#59<br/>data VD4c&#59<br/>&nbsp&nbsp&nbsp&nbspretain id&#59<br/>&nbsp&nbsp&nbsp&nbspset vD4b&#59<br/>&nbsp&nbsp&nbsp&nbspformat resitype $10.&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='URBAN' then id=1&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='RURAL' then id=2&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='miss' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype='Missing' &#59 id=3&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>%sort(data=VD4C, sorter=id)&#59<br/>data VD4&#59<br/>&nbsp&nbsp&nbsp&nbspset VD4C&#59<br/>&nbsp&nbsp&nbsp&nbspdrop id percent&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=15, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*5.*/<br/>%freq(data=VD0, table=QAIPPE, option=%str(nopct norow nocol out=VD5b))&#59<br/>data VD5c&#59<br/>&nbsp&nbsp&nbsp&nbspset vD5b&#59<br/>&nbsp&nbsp&nbsp&nbspif QAIPPE=. then QAIPPE=9&#59 <br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VD5c,<br/>&nbsp&nbsp&nbsp&nbsptarget=VD5d,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(QAIPPE, sum(count) as count),<br/>&nbsp&nbsp&nbsp&nbspgroupby=QAIPPE<br/>)&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD5d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=20, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*6. Charlson score*/<br/>%freq(data=VD0, table=Charlson_Index, option=%str(nopct norow nocol out=VD6b))&#59<br/>data VD6c&#59<br/>&nbsp&nbsp&nbsp&nbspset vD6b&#59<br/>&nbsp&nbsp&nbsp&nbspif Charlson_Index=. then Charlson_Index=99&#59 <br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VD6c,<br/>&nbsp&nbsp&nbsp&nbsptarget=VD6d,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(Charlson_Index, sum(count) as count),<br/>&nbsp&nbsp&nbsp&nbspgroupby=Charlson_Index<br/>)&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD6d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Charlson Index SK Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*6b. alternatively, those not covered in 12 months will be treated as missing. Charlson score*/<br/>%print(data=VD0)&#59<br/>data VD6E&#59<br/>&nbsp&nbsp&nbsp&nbspset VD0&#59<br/>&nbsp&nbsp&nbsp&nbspif coverYears <1 then coverYrCat='a'&#59<br/>&nbsp&nbsp&nbsp&nbspif coverYears >=1 then coverYrCat='b'&#59<br/>&nbsp&nbsp&nbsp&nbspif Charlson_Index=. then Charlson_Index=0&#59<br/>run&#59<br/>%freq(data=VD6E, table=Charlson_Index*coverYrCat, option=%str(nopct norow nocol out=VD6f))&#59<br/>data VD6g&#59<br/>&nbsp&nbsp&nbsp&nbspset VD6f&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%transpose(data=VD6g, target=VD6h, RowHead=Charlson_Index, ColHead=coverYrCat, Contents=count, keepAllCol=)&#59<br/><br/>data VD6j&#59<br/>&nbsp&nbsp&nbsp&nbspset VD6h&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD6j,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Charlson Index SK Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*7. mean std age*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VD0,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=vd7a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>data VD7&#59<br/>&nbsp&nbsp&nbsp&nbspset vd7a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=36, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*8. mean std coveryears*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VD0,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=coveryears,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median ,<br/>&nbsp&nbsp&nbsp&nbsptarget=vD8a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>data VD8&#59<br/>&nbsp&nbsp&nbsp&nbspset vD8a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=37, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*12. age median IQR*/<br/>data VD12&#59<br/>&nbsp&nbsp&nbsp&nbspretain median&#59<br/>&nbsp&nbsp&nbsp&nbspset vd7a&#59<br/>&nbsp&nbsp&nbsp&nbspdrop mean std N_Patients_Group&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=49, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*13. age quantile*/<br/><br/>/*the following two steps are to manually count the # of individuals within the age range<br/>&nbsp&nbsp&nbsp&nbspit is for privacy requires, not for report itself<br/>*/<br/>data vd13a0&#59<br/>&nbsp&nbsp&nbsp&nbspset VD0&#59<br/>&nbsp&nbsp&nbsp&nbspif age <=10&#59<br/>run&#59<br/>data vd13a1&#59<br/>&nbsp&nbsp&nbsp&nbspset VD0&#59<br/>&nbsp&nbsp&nbsp&nbspif age >=57&#59<br/>run&#59<br/>%rank(data=VD0, groups=5, target=vd13a, vars=age, ranks=age_quintile, debug=)&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=vd13a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=age_quintile,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age,<br/>&nbsp&nbsp&nbsp&nbsptheStats=min max,<br/>&nbsp&nbsp&nbsp&nbsptarget=vd13b,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*make range*/<br/>data vd13&#59<br/>&nbsp&nbsp&nbsp&nbspset vd13b&#59<br/>&nbsp&nbsp&nbsp&nbspformat range $20. npt $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif min<0 then min=0&#59<br/>&nbsp&nbsp&nbsp&nbsprange=strip(min) || ' - ' || strip(max)&#59<br/>&nbsp&nbsp&nbsp&nbspnpt= 'n=' || strip(n_patients_min) || '&#59 n=' || strip(n_patients_max)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep range npt&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=vd13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=52, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*14. Charlson Index quantile*/<br/>%rank(data=VD0, groups=5, target=vd14a, vars=Charlson_Index, ranks=Charlson_quintile, debug=)&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=vd14a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=Charlson_quintile,<br/>&nbsp&nbsp&nbsp&nbsptheVar=Charlson_Index,<br/>&nbsp&nbsp&nbsp&nbsptheStats=min max,<br/>&nbsp&nbsp&nbsp&nbsptarget=vd14b,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*make range*/<br/>data vd14&#59<br/>&nbsp&nbsp&nbsp&nbspset vd14b&#59<br/>&nbsp&nbsp&nbsp&nbspformat range $20. npt $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif min<0 then min=0&#59<br/>&nbsp&nbsp&nbsp&nbsprange=strip(min) || ' - ' || strip(max)&#59<br/>&nbsp&nbsp&nbsp&nbspnpt= 'n=' || strip(n_patients_min) || '&#59 n=' || strip(n_patients_max)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep range npt&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=vd14,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=58, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*15 mean CCI*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VD0,<br/>&nbsp&nbsp&nbsp&nbspwhere=%str(Charlson_Index ne .),<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=Charlson_Index,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=vd15a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>data VD15&#59<br/>&nbsp&nbsp&nbsp&nbspset vd15a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std N_Patients_Group&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VD15,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=39, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*16 mean CCI*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VD0,<br/>&nbsp&nbsp&nbsp&nbspwhere=%str(Charlson_Index ne .),<br/>&nbsp&nbsp&nbsp&nbspgroupVars=ageGroup,<br/>&nbsp&nbsp&nbsp&nbsptheVar=Charlson_Index,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=vd16a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>%print(data=vd16a)&#59<br/><br/>data VD16b&#59<br/>&nbsp&nbsp&nbsp&nbspset vd16a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep ageGroup mean std id N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup ='<=16' then id=1&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='17-64' then id=2&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup = '>=65' then id=3&#59<br/>run&#59<br/>%sort(data=vd16b, sorter=id)&#59<br/>data vd16&#59<br/>&nbsp&nbsp&nbsp&nbspset vd16b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std N_Patients_Group&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=vd16,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=40, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*17CCI by age quintile*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=vd13a,<br/>&nbsp&nbsp&nbsp&nbspwhere=%str(Charlson_Index ne .),<br/>&nbsp&nbsp&nbsp&nbspgroupVars=age_quintile,<br/>&nbsp&nbsp&nbsp&nbsptheVar=Charlson_Index,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=vd17a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>%print(data=vd17a)&#59<br/><br/>data VD17b&#59<br/>&nbsp&nbsp&nbsp&nbspset vd17a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep age_quintile mean std id N_Patients_Group&#59<br/>run&#59<br/><br/>data vd17&#59<br/>&nbsp&nbsp&nbsp&nbspset vd17b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std N_Patients_Group&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=vd17,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Registered_Pop, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=43, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-PM8vS6pnSIq9WQhx","name":"VDD_descriptive loca-preg","NodeDescription":"///t<br/>///s<br/>/*report the descriptives*/<br/><br/><br/>/*%vbsUnzip(*/<br/>/*&nbsp&nbsp&nbsp&nbsptgtDir=,*/<br/>/*&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VCA.zip),*/<br/>/*&nbsp&nbsp&nbsp&nbspsrcFile=%str(vca.sas7bdat)*/<br/>/*)&#59*/<br/><br/>/*nonpreg groups*************************/<br/>%distinct(<br/>&nbsp&nbsp&nbsp&nbspdata=VCA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDD1a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, indexDate, age, ageGroup, sex_desc, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNATV_STAT_FLAG, coverYears, resitype<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(category='PREG')<br/>)&#59<br/><br/><br/>/*1. sex*/<br/>%freq(data=VDD1a, table=sex_desc, option=%str(nopct norow nocol<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=VDD1b))&#59<br/>data VDD1&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD1b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep sex_desc count&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=5, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*2. Age group*/<br/>%freq(data=VDD1a, table=ageGroup, option=%str(nopct norow nocol<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=VDD2b))&#59<br/>data VDD2c&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD2b&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='<=16' then id=1&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='17-64' then id=2&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='>=65' then id=3&#59<br/>&nbsp&nbsp&nbsp&nbspkeep id ageGroup count&#59<br/>run&#59<br/>%sort(data=VDD2c, sorter=id)&#59<br/>data VDD2&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD2c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop id&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=?, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*3. registered Indian status*/<br/>%freq(data=VDD1a, table=natv_stat_flag, option=%str(nopct norow nocol out=VDD3b))&#59<br/>%sort(data=VDD3b, sorter=descending natv_stat_flag)&#59<br/>data VDD3&#59<br/>&nbsp&nbsp&nbsp&nbspretain RI&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD3b&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=0 then RI='No'&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=1 then RI='Yes'&#59<br/>&nbsp&nbsp&nbsp&nbspkeep RI count&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=10, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*4. rurality*/<br/>%freq(data=VDD1a, table=resitype, option=%str(nopct norow nocol out=VDD4b))&#59<br/>data VDD4c&#59<br/>&nbsp&nbsp&nbsp&nbspretain id&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD4b&#59<br/>&nbsp&nbsp&nbsp&nbspformat resitype $10.&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='URBAN' then id=1&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='RURAL' then id=2&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='miss' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype='Missing' &#59 id=3&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>%sort(data=VDD4C, sorter=id)&#59<br/>data VDD4&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD4C&#59<br/>&nbsp&nbsp&nbsp&nbspdrop id percent&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=22, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*5.*/<br/>/*6. */<br/><br/><br/>/*7. mean std age*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDD1a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDD7a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>data VDD7&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD7a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=49, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*8. mean std coveryears*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDD1a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=coveryears,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median ,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDD8a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>data VDD8&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD8a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=50, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*12. age median IQR*/<br/>data VDD12&#59<br/>&nbsp&nbsp&nbsp&nbspretain median&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD7a&#59<br/>&nbsp&nbsp&nbsp&nbspdrop mean std N_Patients_Group&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=58, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*13. age quantile*/<br/>%rank(data=VDD1a, groups=5, target=VDD13a, vars=age, ranks=age_quintile, debug=)&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDD13a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=age_quintile,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age,<br/>&nbsp&nbsp&nbsp&nbsptheStats=min max,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDD13b,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*make range*/<br/>data VDD13&#59<br/>&nbsp&nbsp&nbsp&nbspset VDD13b&#59<br/>&nbsp&nbsp&nbsp&nbspformat range $20. npt $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif min<0 then min=0&#59<br/>&nbsp&nbsp&nbsp&nbsprange=strip(min) || ' - ' || strip(max)&#59<br/>&nbsp&nbsp&nbsp&nbspnpt= 'n=' || strip(n_patients_min) || '&#59 n=' || strip(n_patients_max)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep range npt&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDD13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=obstetrical, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=61, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>/*14*/<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-yLApXgshPqJbpMVY"}]},{"idx":"CodeTask-L3gLZcvyCasPUY8e","name":"VCE_DescPregPop Remote ","NodeDescription":"///t<br/>///s<br/>/*VCE the descriptives for pregpop episodes<br/>&nbsp&nbsp&nbsp&nbspwithin 2013-2017<br/>*/<br/>/*libname preg1 \"/sasdata/hisc/shared_data/HQC_share/Shenzhen/pregnancy/data1\"&#59*/<br/><br/>/*1. get the preg data and give IDs for each record*/<br/>%sort(data=remoteT.pregData, sorter=key_hsn cohortentrydt outcomedt)&#59<br/>data VCE0a&#59<br/>&nbsp&nbsp&nbsp&nbsppregOBS=_n_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteT.pregData&#59<br/>&nbsp&nbsp&nbsp&nbspif cohortentrydt >= '01Jan2013'd and outcomedt <= '31Dec2017'd&#59<br/>run&#59<br/>%sort(data=VCE0a, sorter=key_hsn cohortentrydt outcomedt)&#59<br/>%freq(data=VCE0a, table=entryYear)&#59<br/>/*89375*/<br/>data VCE0b&#59<br/>&nbsp&nbsp&nbsp&nbspset VCE0a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep pregOBS key_hsn cohortEntryDt epi&#59<br/>run&#59<br/><br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsprawfile=&PHRS_CovFile, ptFile=VCE0b, theCovXtrc=&Xtrc_End_Cover, keyDateCol=cohortEntryDt,<br/>&nbsp&nbsp&nbsp&nbspstart='01jan1994'd, end= '31Dec2017'd, <br/>&nbsp&nbsp&nbsp&nbsptarget=VCE1, cohortgroup=epi, debug=)&#59<br/>/*the file VCE1 is like this<br/>&nbsp&nbsp&nbsp&nbsp1. it contains all coverage/cover gaps between 2013 and 2017<br/>&nbsp&nbsp&nbsp&nbsp2. each person may have multiple records. Those of gap=0 are covered days. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspOf those covered records, the earliest 'coverstart' is the earliest enrolment date into PHRS<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSummarizing the covered records, we'll have the total # of days covered between 2013 and 2017<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>data VCE2a&#59<br/>&nbsp&nbsp&nbsp&nbspset VCE1&#59<br/>&nbsp&nbsp&nbsp&nbspif gaps = 0&#59<br/>run&#59<br/><br/>/*the coverage periods before the cohortEntryDt (back to 1994)*/<br/>&nbsp&nbsp&nbsp&nbspdata VCE2b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere cohortEntryDt > coverEnd or cohortEntryDt between coverstart and coverEnd&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*truncate if the coverEnd > cohortEntryDt*/<br/>&nbsp&nbsp&nbsp&nbspdata VCE2c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE2b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cohortEntryDt <= coverEnd then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverEnd= cohortEntryDt -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdays= coverEnd - coverStart +1&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*sum the # of days covered by PHRS between since 1994 to the entry*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE2c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE2d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.key_hsn, t1.epi, t1.cohortEntryDt, sum(t1.days) / 365 as coverYears),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.key_hsn, t1.epi, cohortEntryDt),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(t1.key_hsn, t1.epi, cohortEntryDt)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link it back to VCE0a*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE0a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VCE2d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE2e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.*, t2.coverYears as coverYears_1994),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(t1.key_hsn, epi),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn epi<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*89375*/<br/><br/>/*the coverage periods within the follow up (since cohortEntry to 2017)*/<br/>&nbsp&nbsp&nbsp&nbspdata VCE2f&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere coverstart between '01jan2013'd and '31dec2017'd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor coverEnd between '01jan2013'd and '31dec2017'd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor (coverstart < '01jan2013'd and coverEnd > '31dec2017'd)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*truncate if the coverstart < 2013*/<br/>&nbsp&nbsp&nbsp&nbspdata VCE2g&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE2f&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif coverstart < cohortEntryDt then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverstart=cohortEntryDt&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdays= coverEnd - coverStart +1&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*sum the # of days covered by PHRS between since 1994 to the entry*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE2g,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE2h,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.key_hsn, t1.epi, t1.cohortEntryDt, sum(t1.days) / 365 as coverYears),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.key_hsn, t1.epi, cohortEntryDt),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(t1.key_hsn, t1.epi, cohortEntryDt)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link it back to VCE0a*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE2e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VCE2h,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.*, t2.coverYears as coverYears_AfterEntry),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(t1.key_hsn, epi),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn epi<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*89375*/<br/><br/>/*in VCE2, some of the patients does not have cover years, these are patients not found in PHRS*/<br/><br/>/*3. get demographic info of these patients (sex, and age on indexDate*/<br/>%getPHRSInfo(rawFile=&PHRS_InfoFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsourceFile=VCE2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptargetFile=VCE3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindexCol=cohortEntryDt, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBornDay=15, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspageCut=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldNative=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartDt='01Jan2013'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendDt='31dec2017'd,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortGroup=epi,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc=&Xtrc_End_Cover,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeepTMP=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnoprint=noprint<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*the above only contains those having age and sex info*/<br/>/*the following is to linkback to source and have all records*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VCE3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(VCE3aa (drop=age)), /*the original age is not right*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.*, t2.SEX_DESC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMARI_STAT_CODE,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNATV_STAT_FLAG,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMARI_STAT_DESC,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFAM_NO,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBirth<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(t1.key_hsn, epi),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregOBS<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*recalcuate the age */<br/>&nbsp&nbsp&nbsp&nbspdata VCE3ab&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE3aa&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif birth=. then age=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse age =int(yrdif(birth, cohortEntryDt, 'age'))&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*make age groups*/<br/>data VCE3a&#59<br/>&nbsp&nbsp&nbsp&nbspset VCE3ab&#59<br/>&nbsp&nbsp&nbsp&nbspformat ageGroup $10.&#59<br/>&nbsp&nbsp&nbsp&nbspif age =. then ageGroup='missing'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if age < =16 then ageGroup='<=16'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if 16 < age <= 64 then ageGroup = '17-64'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if age > 64 then ageGroup='>=65'&#59<br/>run&#59 <br/>%freq(data=vce3a, table=agegroup)&#59<br/><br/>/*4. get resitype*/<br/>%getResiType(<br/>&nbsp&nbsp&nbsp&nbspResiFile=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspxtrc=%str('08Jul2019'd),<br/>&nbsp&nbsp&nbsp&nbspPtList=VCE3a,<br/>&nbsp&nbsp&nbsp&nbspindexCol=cohortEntryDt,<br/>&nbsp&nbsp&nbsp&nbsptarget=VCE4<br/>)&#59<br/><br/>Data VCE5&#59<br/>&nbsp&nbsp&nbsp&nbspset VCE4&#59<br/>&nbsp&nbsp&nbsp&nbspif QAIPPE =. then QAIPPE=9&#59<br/>run&#59<br/><br/>/*%UnixUnZip(*/<br/>/*&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,*/<br/>/*&nbsp&nbsp&nbsp&nbspzip=vcea,*/<br/>/*&nbsp&nbsp&nbsp&nbspzipped=vcea,*/<br/>/*&nbsp&nbsp&nbsp&nbsptPath=,*/<br/>/*&nbsp&nbsp&nbsp&nbsptarget=VCE5*/<br/>/*)&#59*/<br/><br/>/*remove the columns that are not to be used*/<br/>%print(data=VCE5)&#59<br/><br/>/*get number of pregnancies before (including) the cohortEntryDate*/<br/>/*the preg data since 1994 is in preg1.PREG94_20180803, link VCE5 and the preg94 data to have all episodes on and before the entry<br/>&nbsp&nbsp&nbsp&nbspdata*/<br/><br/>/*link vce5 with preg*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=preg1.preg94_20180803,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.pregobs, t1.key_hsn, t1.CohortEntryDt, t1.epi, t2.cohortEntryDt as pre_Concept_date),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.cohortEntryDt >= t2.cohortEntryDt)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*count the number of pre conceptions*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(pregobs, key_hsn, CohortEntryDt, epi, count(pre_Concept_date) as N_conceptions),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(pregobs, key_hsn, CohortEntryDt, epi)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*link the n_conceptions back to VCE5*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VCE7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.*, t2.N_conceptions),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregOBS<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*get number of live deliveries before (including) the cohort Entry date<br/>&nbsp&nbsp&nbsp&nbspin the hosp file, there is a variable for previous live births 'prev_live_birth'<br/>&nbsp&nbsp&nbsp&nbspthe idea is to have all hospitalizations before the current cohort Entrydate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspget the value in 'prev_live_birth', and pick up the previouse birth counts of the largest?, or of  the closest? hosp records.<br/>&nbsp&nbsp&nbsp&nbspthis should be trace back to 1994, and it is inappropriate to have all hosp records of the population back to 1994.<br/>&nbsp&nbsp&nbsp&nbspTo resolve it, additionally pull out records of the population since 1994, only keep the adm/dschg date, and the col 'prev_live_birth'<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>/*get H records using the macro*/<br/><br/><br/>%distinct(source=VCE5, target=VCE9, vars=key_hsn)&#59<br/>/*get the H records, the follow only need to do for once*/<br/>/*%Extract_CIHI( */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_in =&hospitalFile,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out=Master_Hosp_PregPop, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadms_start_date='01Jan1994'd,      */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadms_end_date='31Dec2017'd,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file= VCE9*/<br/>/*)&#59*/<br/><br/>/*this file contains all hosp records of the preg pop from 1994 to 2017*/<br/>/*%UnixZip(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Master_Hosp_PregPop, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=Master_Hosp_PregPop.zip, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=*/<br/>/*)&#59*/<br/><br/>/*from VCE8, and Master_Hosp_PregPop, get all Hospitalization records before the cohortEntryDate (e.g., the dschg_date is before<br/>&nbsp&nbsp&nbsp&nbspthe cohortEntryDate)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=Master_Hosp_PregPop,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.pregOBS, t1.key_hsn, t1.cohortEntrydt, t2.adm_date, t2.dschg_date, t2.prev_live_birth, input(t2.prev_live_birth, 8.) as preBirths),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(t1.key_hsn = t2.key_hsn and t1.cohortEntrydt >= t2.dschg_date),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t2.prev_live_birth ne \"\" and t2.prev_live_birth ne 'NA' and input(t2.prev_live_birth, 8.) ne . <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand input(t2.prev_live_birth, 8.) ne 99&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(pregOBS, dschg_date)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get the last record*/<br/>&nbsp&nbsp&nbsp&nbspdata VCE11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby pregOBS dschg_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.pregOBS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename preBirths=preBirths_Last&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*get the max record*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.pregOBS, max(preBirths) as preBirths_max),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(pregOBS),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(pregOBS)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*link the last/max preBirths into the cohort */<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VCE11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE14,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.*, t2.preBirths_Last),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregOBS<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCE14,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=VCE12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCE15,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%Str(t1.*, t2.preBirths_Max),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregOBS<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*check: is preBirths_Last always the same as the preBirths_Max?*/<br/>/*&nbsp&nbsp&nbsp&nbspdata test&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE15&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif preBirths_last ne preBirths_Max&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep pregOBS preBirths_last  preBirths_Max&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsprun&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*yep, for many, last is not the max. Use the max*/<br/><br/>&nbsp&nbsp&nbsp&nbspdata VCEA&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCE15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop preBirths_last&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename preBirths_max = preBirths&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VCEA, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VCEA.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/><br/><br/><br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>s///<br/>t///","children":[{"idx":"CodeTask-u5n8YxpT5gIxAxKS","name":"VFA_OCI","NodeDescription":"///t<br/>///s<br/>/*VFA the obstetrical comobidity score*/<br/>/*get the raw data from H, MSB, and ED*/<br/>/*the cohort file is VCEA*/<br/><br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=vcea,<br/>&nbsp&nbsp&nbsp&nbspzipped=vcea,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=VCEA<br/>)&#59<br/>%print(data=VCEA)&#59<br/><br/><br/><br/>/*get a distinct patient list from VCEA*/<br/>%distinct(data=VCEA, vars=key_hsn, target=VFA1)&#59<br/><br/><br/>/***hospital***************************************************************************************/<br/>/*get the hospitalization records for patients in VFA1<br/>&nbsp&nbsp&nbsp&nbsp? what is the H records in the master file? does it cover at least 3 months prior to the entry?<br/>&nbsp&nbsp&nbsp&nbspyes, the H, MSB files can be traced back to 1994, whie the ED file back to 2012<br/>*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspzipped=master_hosp,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=master_hosp<br/>)&#59<br/><br/>/*from master_hosp, keep records of patients in VFA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspt2=VFA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, monotonic() as hospOBS),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*for each preg episode in VCEA, find thd corresponding hospitalizations within 90 days prior to the conception<br/>&nbsp&nbsp&nbsp&nbspthrough the outcome date<br/>&nbsp&nbsp&nbsp&nbspthis part is did separately, as the hosp/msb file is too large, combining the above steps may cause the system stuck<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA2,<br/>&nbsp&nbsp&nbsp&nbspt2=VCEA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t2.pregOBS,  t2.cohortEntrydt, t2.outcomedt, t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.adm_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dschg_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(&nbsp&nbsp&nbsp&nbspt1.adm_date < t2.cohortEntrydt-90 and dschg_date > t2.outcomedt)<br/>&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*for each hospitalization records, indicate the OCI conditions if a corresponding ICD code is found<br/>*/<br/>%let theHdata=VFA3&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata _tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theHData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='hp'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are generated by formulas in the excel file: P:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcheck the sheet \"include\" and \"exclude\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following were modified according to Sonia's modification, the doc was save as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspP:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\OCI ICD codes -modified by Sonia 20181006.docx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('4160','4168','4169') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6410','6411') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('2824','2826') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6425','6426') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59 /*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6424','6427') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('401','402','403','404','405','6420','6421','6422','6427') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6423') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('581','582','583','585','587','588','6462') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('412','413','414') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('745','746','7470','7471','7472','7473','7474','6485') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('7100') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('042','V08') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('V272','V273','V274','V275','V276','V277','V278','651') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('304','3052','3053','3054','3055','3056','3057','3058','3059','6483') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('291','303','3050') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('394','395','396','397','424') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('42822','42823','42832','42833','42842','42843') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('493') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('250','6480') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6542') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I270','I272','I278','I279') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O44') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('D56','D57') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O14','O15') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O11','O14','O152Â ') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I10','I11','I12','I13','I15','O10','O11','O152') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O13','O16 ') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('N022','N03','N04','N05','N08','N171','N172','N18','N25','N268','N269') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I20','I25') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('Q20','Q21','Q22','Q23','Q24','Q25','Q26','O994') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('M32') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('B20','B24','O987','Z21') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O30','O31','Z372','Z373','Z374','Z375','Z376','Z377','Z3790') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('F11','F12','F13','F14','F15','F16','F18','F19','O9932') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('F10') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I05','I06','I07','I08','I09','I34','I35','I36','I37','I38','I39') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('I500 ','I502','I503','I504') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('J44','J45') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('E10','E11','O243','O245','O246','O247','O249') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O342') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the exclude conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O10','O11','O14','O15','I10','I11','I12','I13','I15') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('O14','O150','O159') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=dxs(i)&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6424','6427','6425','6426','401','402','403','404','405','6420','6421','6422') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('6425','6426') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=cdxs(i)&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep CIHI_REC key_hsn pregOBS hospOBS  code adm_date dschg_date cohortEntryDt outcomeDt condition status&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>/***MSB***************************************************************************************/<br/>/*get the MSB records for patients in VFA1<br/>*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=master_msb,<br/>&nbsp&nbsp&nbsp&nbspzipped=master_msb,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=master_msb<br/>)&#59<br/><br/>/*from master_msb, keep records of patients in VFA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=VFA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA12,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, monotonic() as msbOBS),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*for each preg episode in VCEA, find thd corresponding msbs within 90 days prior to the conception<br/>&nbsp&nbsp&nbsp&nbspthrough the outcome date<br/>&nbsp&nbsp&nbsp&nbspthis part is did separately, as the hosp/msb file is too large, combining the above steps may cause the system stuck<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA12,<br/>&nbsp&nbsp&nbsp&nbspt2=VCEA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA13,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t2.pregOBS,  t2.cohortEntrydt, t2.outcomedt, t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.dos between t2.cohortEntrydt-90 and t2.outcomedt)<br/>)&#59<br/><br/>/*for each MSB records, indicate the OCI conditions if a corresponding ICD code is found<br/>*/<br/>%let theMSBdata=VFA13&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theMSBdata&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are generated by formulas in the excel file: P:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcheck the sheet \"include_MSB\" and \"exclude_MSB\"*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('416','641','282') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642','646') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642','647') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('401','402') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('403','404') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('405','642','642','581','582','583','585','587','588') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('646') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('412','413','414','745','746','747','648') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('710','042','V08') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('V27','651','304','305','648','291','303','305') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('394') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('395','396') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('397','424','428','493','250','648','654') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the exclude conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642','401','402','403','404','405') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: ('642') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=diag&#59 output&#59end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep  key_hsn pregOBS msbOBS code dos cohortEntryDt outcomeDt condition status&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/><br/><br/>/***ED***************************************************************************************/<br/>/*get the ED records for patients in VFA1<br/>*/<br/>%UnixUnZip(<br/>&nbsp&nbsp&nbsp&nbspsPath=&remoteTargetPath,<br/>&nbsp&nbsp&nbsp&nbspzip=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbspzipped=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbsptPath=,<br/>&nbsp&nbsp&nbsp&nbsptarget=master_ed_a2012<br/>)&#59<br/><br/>/*from master_ed_a2012, keep records of patients in VFA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_ed_a2012,<br/>&nbsp&nbsp&nbsp&nbspt2=VFA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA22,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, monotonic() as edOBS),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*for each preg episode in VCEA, find thd corresponding ed records within 90 days prior to the conception<br/>&nbsp&nbsp&nbsp&nbspthrough the outcome date<br/>&nbsp&nbsp&nbsp&nbspthis part is did separately, as the hosp/msb file is too large, combining the above steps may cause the system stuck<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA22,<br/>&nbsp&nbsp&nbsp&nbspt2=VCEA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VFA23,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t2.pregOBS,  t2.cohortEntrydt, t2.outcomedt, t1.*),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.reg_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.disp_date between t2.cohortEntrydt-90 and t2.outcomedt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.reg_date < t2.cohortEntrydt-90 and disp_date > t2.outcomedt)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*for each ED records, indicate the OCI conditions if a corresponding ICD code is found<br/>*/<br/>%let theEDdata=VFA23&#59<br/>%print(data=vfa23)&#59<br/>&nbsp&nbsp&nbsp&nbspdata _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theEDdata&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='ed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are generated by formulas in the excel file: P:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcheck the sheet \"include\" and \"exclude\"*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('4160','4168','4169') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6410','6411') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('2824','2826') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6425','6426') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6424','6277') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('401','402','403','404','405','6420','6421','6422','6427') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6423') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('581','582','583','585','587','588','6462') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('412','413','414') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('745','746','7470','7471','7472','7473','7474','6485') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('7100') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('042','V08') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('V272','V273','V274','V275','V276','V277','V278','651') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('304','3052','3053','3054','3055','3056','3057','3058','3059','6483') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('291','303','3050') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('394','395','396','397','424') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('42822','42823','42832','42833','42842','42843') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('493') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('250','6480') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6542') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I270','I272','I278','I279') then do&#59 condition= 'OCI_PulHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O44') then do&#59 condition= 'OCI_PP'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('D56','D57') then do&#59 condition= 'OCI_SK'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O14','O15') then do&#59 condition= 'OCI_SPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O11','O14','O152Â ') then do&#59 condition= 'OCI_MPE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I10','I11','I12','I13','I15','O10','O11','O152') then do&#59 condition= 'OCI_PHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O13','O16 ') then do&#59 condition= 'OCI_GHTN'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('N022','N03','N04','N05','N08','N171','N172','N18','N25','N268','N269') then do&#59 condition= 'OCI_CRD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I20','I25') then do&#59 condition= 'OCI_CIHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('Q20','Q21','Q22','Q23','Q24','Q25','Q26','O994') then do&#59 condition= 'OCI_CHD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('M32') then do&#59 condition= 'OCI_SLE'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('B20','B24','O987','Z21') then do&#59 condition= 'OCI_HIV'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O30','O31','Z372','Z373','Z374','Z375','Z376','Z377','Z3790') then do&#59 condition= 'OCI_MG'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('F11','F12','F13','F14','F15','F16','F18','F19','O9932') then do&#59 condition= 'OCI_DA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('F10') then do&#59 condition= 'OCI_AA'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I05','I06','I07','I08','I09','I34','I35','I36','I37','I38','I39') then do&#59 condition= 'OCI_CVD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('I500 ','I502','I503','I504') then do&#59 condition= 'OCI_CCHF'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('J44','J45') then do&#59 condition= 'OCI_ASM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('E10','E11','O243','O245','O246','O247','O249') then do&#59 condition= 'OCI_PreDM'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O342') then do&#59 condition= 'OCI_PreCD'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the exclude conditions*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O10','O11','O14','O15','I10','I11','I12','I13','I15') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('O14','O150','O159') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6424','6427','6425','6426','401','402','403','404','405','6420','6421','6422') then do&#59 condition= 'OCI_GHTN_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59/*changed on 20181006*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif mp_dx in: ('6425','6426') then do&#59 condition= 'OCI_MPE_ex'&#59 status=1&#59 code=mp_dx&#59output&#59 end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep  key_hsn pregOBS edOBS code adm_date dschg_date cohortEntryDt outcomeDt condition status&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*determin maternal age, which is age on the would-have-been maternal date (concept date + 270 days)*/<br/>&nbsp&nbsp&nbsp&nbspdata _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset VCEA&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmaternal_age = int(yrdif(birth, cohortEntrydt +270, 'age'))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif maternal_age >=45 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='AGE45'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspweight=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif 40<=maternal_age <45 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='AGE40'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspweight=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif 35<=maternal_age <40 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='AGE35'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspweight=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition ne '' and weight ne '.'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep pregOBS key_hsn condition weight&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*put together all positive conditions from H, MSB, and ED<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe target file contains all codes found related to the OCI conditions. It will be saved as backup*/<br/>&nbsp&nbsp&nbsp&nbspdata remotet._tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp1 _tmp2 _tmp3 _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*keep the distinct record of key_hsn, pregOBS, and condition, */<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=remotet._tmp5, target=_tmp6, vars=%str(key_hsn, pregOBS, condition))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*split the conditions and the conditions to exclude*/<br/>&nbsp&nbsp&nbsp&nbspdata _tmp7a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition not in  ('OCI_GHTN_ex', 'OCI_MPE_ex')&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata _tmp7b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition  ='OCI_GHTN_ex' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='OCI_GHTN'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif condition  ='OCI_MPE_ex' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition='OCI_MPE'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep pregOBS key_hsn condition keep&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif keep=0&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*link the keep indicator back to each episode*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_tmp7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=_tmp7b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_tmp8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.pregOBS, t1.condition, ifn(t2.keep=0, 0, 1) as keep),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregobs key_hsn condition,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype = left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(keep ne 0)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*get the weightings and sum up the OCI index*/<br/>&nbsp&nbsp&nbsp&nbsp/*prepare a table for weighting of the conditions,the syntax is prepared in sheet \"map\" of<br/>&nbsp&nbsp&nbsp&nbspP:\\Ultrasound(AdamsS)_Bio18-71\\Documentation\\Researcher - Analyst Documentation\\ICD codes for Obstetrical Comorbidity Index.xlsx<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata _tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat condition $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PulHTN'&#59 Weight = 4&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PP'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_SK'&#59 Weight = 3&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_SPE'&#59 Weight = 5&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_MPE'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PHTN'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_GHTN'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CRD'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CIHD'&#59 Weight = 3&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CHD'&#59 Weight = 4&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_SLE'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_HIV'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_MG'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_DA'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AA'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CVD'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_CCHF'&#59 Weight = 5&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_ASM'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PreDM'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_PreCD'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AGE45'&#59 Weight = 3&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AGE40'&#59 Weight = 2&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcondition = 'OCI_AGE35'&#59 Weight = 1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_tmp8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=_tmp9,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_tmp10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.pregOBs,t1.key_hsn, sum(t2.weight) as OCI),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.pregOBs,t1.key_hsn),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=condition,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype = inner<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*link it back to VCEA*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=VCEA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=_tmp10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VFA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.OCI=., 0, t2.oci) as OCI),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=pregOBS,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype = left<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VFA, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=VFA.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=VFA, table=OCI)&#59<br/><br/>s///<br/>t///","children":[{"idx":"EGTask-UbyCfPjeMgsN9LxT","name":"VCE1 Copy VFA  files from SAS server - Copy","children":[{"idx":"CodeTask-aggfxF7Luo6iW9cX","name":"VDE_desc Preg local","NodeDescription":"///t<br/>///s<br/>/*report the descriptives*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VFA.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VFA.sas7bdat)<br/>)&#59<br/>%print(data=VFA)&#59<br/><br/>/*Report number of patients with > 1 episode*/<br/>%distinct(data=VFA, target=VDE0a, vars=%str(count(distinct key_hsn) as CT))&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE0a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=4, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*same values*/<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE0a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=4, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*Report number of episodes*/<br/>%distinct(data=VFA, target=VDE0b, vars=%str(count(pregOBS) as CT))&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE0b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=5, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>%distinct(data=VFA, target=VDE0b, vars=%str(count(distinct key_hsn) as CT))&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE0b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=5, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*count number of preg epi during follow up*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE0c,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(key_hsn, count(key_hsn) as nPregs),<br/> &nbsp&nbsp&nbsp&nbspgroupby=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsporderby=key_hsn<br/>)&#59<br/>data VDE0d&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0c&#59<br/>&nbsp&nbsp&nbsp&nbspif nPregs>=4 then nPregs_cat='>=4'&#59<br/>&nbsp&nbsp&nbsp&nbspelse nPregs_cat='  ' || strip(npregs)&#59<br/>run&#59<br/>%freq(data=VDE0d, table=nPregs_cat,option=%str(nopct norow nocol out=VDE0e))&#59<br/>data VDE0f&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0e&#59<br/>&nbsp&nbsp&nbsp&nbspkeep nPregs_cat count&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE0f,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=6, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>/*# distinct patients this one is the same as in column c*/<br/>data VDE0f1&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0f&#59<br/>&nbsp&nbsp&nbsp&nbspkeep count&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE0f1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=6, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*link back to VFA*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VFA,<br/>&nbsp&nbsp&nbsp&nbspt2=VDE0d,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE0,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*,t2.nPregs_cat),<br/> &nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipFile=VDE0.zip, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcFile=VDE0, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcDir=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/><br/>/*age at outcome*/<br/>data VDE1a&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif birth ne .&#59<br/>&nbsp&nbsp&nbsp&nbspage_outcome= int(yrdif(birth, outcomedt, 'age'))&#59<br/>run&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDE1a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age_outcome,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE1b,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%nobs(data=VDE1a)&#59<br/><br/>data VDE1&#59<br/>&nbsp&nbsp&nbsp&nbspretain mean std NOBS N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE1b&#59<br/>&nbsp&nbsp&nbsp&nbspnobs=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std NOBS N_Patients_Group&#59<br/>run&#59<br/>%let nobs=&#59<br/><br/><br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=53, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*2. outcome of preg*/<br/>data VDE2a&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='INDUABOR' then idd=4&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='LIVBIRTH' then idd=1&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='STILLBIR' then idd=2&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='SPONABOR' then idd=3&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='TOPFFA' then idd=5&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype=\"\" then idd=6&#59<br/>run&#59<br/>%freq(data=VDE2a, table=idd, option=%str(nopct norow nocol out=VDE2b))&#59<br/>data VDE2&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE2b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep  count&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=34, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>/*distinct # individuals by group*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE2a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE2c,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(idd, count(distinct key_hsn) as Npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby =idd<br/>)&#59<br/>data VDE2d&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE2c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop idd&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE2d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=34, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*3. registered Indian status*/<br/>data VDE3a&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=. then idd=3&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=0 then idd=2&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=1 then idd=1&#59<br/>run&#59<br/>%freq(data=VDE3a, table=idd, option=%str(nopct norow nocol out=VDE3b))&#59<br/>data VDE3&#59<br/>&nbsp&nbsp&nbsp&nbspretain RI&#59<br/>&nbsp&nbsp&nbsp&nbspformat RI $8.&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE3b&#59<br/>&nbsp&nbsp&nbsp&nbspif idd=1 then RI='Yes'&#59<br/>&nbsp&nbsp&nbsp&nbspif idd=2 then RI='No'&#59<br/>&nbsp&nbsp&nbsp&nbspif idd=3 then RI='Missing'&#59<br/>&nbsp&nbsp&nbsp&nbspkeep RI count&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=10, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*distinct # individuals by group*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE3a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE3c,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(idd, count(distinct key_hsn) as Npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby =idd<br/>)&#59<br/>data VDE3d&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE3c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop idd&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE3d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=10, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*4. rurality*/<br/>%freq(data=VDE0, table=resitype, option=%str(nopct norow nocol out=VDE4b))&#59<br/>data VDE4c&#59<br/>&nbsp&nbsp&nbsp&nbspretain id&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE4b&#59<br/>&nbsp&nbsp&nbsp&nbspformat resitype $10.&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='URBAN' then id=1&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='RURAL' then id=2&#59<br/>&nbsp&nbsp&nbsp&nbspif resitype='miss' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspresitype='Missing' &#59 id=3&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>%sort(data=VDE4C, sorter=id)&#59<br/>data VDE4&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE4C&#59<br/>&nbsp&nbsp&nbsp&nbspdrop id percent&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=23, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*distinct # individuals by group*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE0,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE4m,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(resitype, count(distinct key_hsn) as Npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby =resitype<br/>)&#59<br/>data VDE4n&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE4m&#59<br/>&nbsp&nbsp&nbsp&nbspdrop resitype&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE4n,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=23, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*5. income*/<br/>%freq(data=VDE0, table=QAIPPE, option=%str(nopct norow nocol out=VDE5b))&#59<br/>data VDE5c&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE5b&#59<br/>&nbsp&nbsp&nbsp&nbspif QAIPPE=. then QAIPPE=9&#59 <br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE5c,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE5d,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(QAIPPE, sum(count) as count),<br/>&nbsp&nbsp&nbsp&nbspgroupby=QAIPPE<br/>)&#59<br/>data VDE5e&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE5d&#59<br/>&nbsp&nbsp&nbsp&nbspkeep count&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE5e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=28, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*distinct # individuals by group*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE0,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE5m,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(ifn(QAIPPE=., 9, QAIPPE) as QAIPPE2, count(distinct key_hsn) as Npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby =QAIPPE2<br/>)&#59<br/>data VDE5n&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE5m&#59<br/>&nbsp&nbsp&nbsp&nbspdrop QAIPPE2&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE5n,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=28, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*6. Comorb score*/<br/><br/><br/>/*7. mean std age*/<br/>data VDE7a&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif age ne .&#59<br/>run&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDE7a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE7b,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%nobs(data=VDE7a)&#59<br/><br/>data VDE7&#59<br/>&nbsp&nbsp&nbsp&nbspretain mean std NOBS N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE7b&#59<br/>&nbsp&nbsp&nbsp&nbspnobs=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std NOBS N_Patients_Group&#59<br/>run&#59<br/>%let nobs=&#59<br/><br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=50, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*8. mean std coveryears since entry*/<br/>data VDE8aa&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif coveryears_Afterentry ne .&#59<br/>run&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDE8aa,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=coveryears_Afterentry,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median ,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE8a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%nobs(data=VDE8aa)&#59<br/><br/>data VDE8&#59<br/>&nbsp&nbsp&nbsp&nbspretain mean std NOBS N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE8a&#59<br/>&nbsp&nbsp&nbsp&nbspnobs=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std NOBS N_Patients_Group&#59<br/>run&#59<br/>%let nobs=&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=51, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*1. mean std coveryears before entry*/<br/>data VDE1aa&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif coveryears_1994 ne .&#59<br/>run&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDE1aa,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=coveryears_1994,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median ,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE1a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%nobs(data=VDE1aa)&#59<br/><br/>data VDE1&#59<br/>&nbsp&nbsp&nbsp&nbspretain mean std NOBS N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE1a&#59<br/>&nbsp&nbsp&nbsp&nbspnobs=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std NOBS N_Patients_Group&#59<br/>run&#59<br/>%let nobs=&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=52, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*12. age median IQR*/<br/>%nobs(data=VDE7a)&#59<br/><br/>data VDE12&#59<br/>&nbsp&nbsp&nbsp&nbspretain median qrange NOBS N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE7b&#59<br/>&nbsp&nbsp&nbsp&nbspnobs=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbspdrop  mean std&#59<br/>run&#59<br/>%let nobs=&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=58, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*13. age quantile*/<br/>/*the following two steps are to manually count the # of individuals within the age range<br/>&nbsp&nbsp&nbsp&nbspit is for privacy requires, not for report itself<br/>*/<br/>%rank(data=VDE0, groups=5, target=VDE13a, vars=age, ranks=age_quintile, debug=)&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDE13a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=age_quintile,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age,<br/>&nbsp&nbsp&nbsp&nbsptheStats=min max,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE13b,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*make range*/<br/>data VDE13&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE13b&#59<br/>&nbsp&nbsp&nbsp&nbspformat range $20. npt $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif min<0 then min=0&#59<br/>&nbsp&nbsp&nbsp&nbsprange=strip(min) || ' - ' || strip(max)&#59<br/>&nbsp&nbsp&nbsp&nbspnpt= 'n=' || strip(n_patients_min) || '&#59 n=' || strip(n_patients_max)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep range npt&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=61, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*14. obstetric comorb (OCI) quantile*/<br/>/*the following two steps are to manually count the # of individuals within the age range<br/>&nbsp&nbsp&nbsp&nbspit is for privacy requires, not for report itself<br/>*/<br/>data VDE14a0&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif OCI ne .&#59<br/>run&#59<br/>%rank(data=VDE14a0, groups=5, target=VDE14a, vars=OCI, ranks=OCI_quintile, debug=)&#59<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDE14a,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=OCI_quintile,<br/>&nbsp&nbsp&nbsp&nbsptheVar=OCI,<br/>&nbsp&nbsp&nbsp&nbsptheStats=min max,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE14b,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*make range*/<br/>data VDE14&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE14b&#59<br/>&nbsp&nbsp&nbsp&nbspformat range $20. npt $20.&#59<br/>&nbsp&nbsp&nbsp&nbspif n_patients_min=. then n_patients_min=0&#59<br/>&nbsp&nbsp&nbsp&nbspif min<0 then min=0&#59<br/>&nbsp&nbsp&nbsp&nbsprange=strip(min) || ' - ' || strip(max)&#59<br/>&nbsp&nbsp&nbsp&nbspnpt= 'n=' || strip(n_patients_min) || '&#59 n=' || strip(n_patients_max)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep range npt&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE14,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=68, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*15 mean OCI, no such requirement in the table*/<br/>/*%GetMeanStats(*/<br/>/*&nbsp&nbsp&nbsp&nbspdata=VDE0,*/<br/>/*&nbsp&nbsp&nbsp&nbspwhere=,*/<br/>/*&nbsp&nbsp&nbsp&nbspgroupVars=,*/<br/>/*&nbsp&nbsp&nbsp&nbsptheVar=OCI,*/<br/>/*&nbsp&nbsp&nbsp&nbsptheStats=median,*/<br/>/*&nbsp&nbsp&nbsp&nbsptarget=VDE15a,*/<br/>/*&nbsp&nbsp&nbsp&nbspdebug=*/<br/>/*)&#59*/<br/>/**/<br/>/*data VDE15&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspset VDE15a&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspkeep mean std N_Patients_Group&#59*/<br/>/*run&#59*/<br/>/**/<br/>/*%SASToXlsRange(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE15,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=40, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=*/<br/>/*)&#59*/<br/><br/><br/>16 mean CCI<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VDE0,<br/>&nbsp&nbsp&nbsp&nbspwhere=%str(Charlson_Index ne .),<br/>&nbsp&nbsp&nbsp&nbspgroupVars=ageGroup,<br/>&nbsp&nbsp&nbsp&nbsptheVar=Charlson_Index,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE16a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>%print(data=VDE16a)&#59<br/><br/>data VDE16b&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE16a&#59<br/>&nbsp&nbsp&nbsp&nbspkeep ageGroup mean std id N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup ='<=16' then id=1&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup='17-64' then id=2&#59<br/>&nbsp&nbsp&nbsp&nbspif ageGroup = '>=65' then id=3&#59<br/>run&#59<br/>%sort(data=VDE16b, sorter=id)&#59<br/>data VDE16&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE16b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std N_Patients_Group&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE16,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=40, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*17CCI by age quintile*/<br/>/*%GetMeanStats(*/<br/>/*&nbsp&nbsp&nbsp&nbspdata=VDE13a,*/<br/>/*&nbsp&nbsp&nbsp&nbspwhere=%str(Charlson_Index ne .),*/<br/>/*&nbsp&nbsp&nbsp&nbspgroupVars=age_quintile,*/<br/>/*&nbsp&nbsp&nbsp&nbsptheVar=Charlson_Index,*/<br/>/*&nbsp&nbsp&nbsp&nbsptheStats=median,*/<br/>/*&nbsp&nbsp&nbsp&nbsptarget=VDE17a,*/<br/>/*&nbsp&nbsp&nbsp&nbspdebug=*/<br/>/*)&#59*/<br/>/*%print(data=VDE17a)&#59*/<br/>/**/<br/>/*data VDE17b&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspset VDE17a&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspkeep age_quintile mean std id N_Patients_Group&#59*/<br/>/*run&#59*/<br/>/**/<br/>/*data VDE17&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspset VDE17b&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspkeep mean std N_Patients_Group&#59*/<br/>/*run&#59*/<br/>/**/<br/>/*%SASToXlsRange(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE17,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=43, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=*/<br/>/*)&#59*/<br/><br/><br/>/*18. number of past live delivers*/<br/>%print(data=VFA)&#59<br/>%freq(data=VFA, table=PreBirths,option=%str(nopct norow nocol out=VDE18a))&#59<br/><br/>data VDE18b&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE18a&#59<br/>&nbsp&nbsp&nbsp&nbspif 99 > preBirths > 4 then prebirths=4&#59<br/>&nbsp&nbsp&nbsp&nbspif prebirths=. then prebirths=99&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE18b,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE18c,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(prebirths, sum(count) as npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby=prebirths,<br/>&nbsp&nbsp&nbsp&nbsporderby=prebirths<br/>)&#59<br/>data VDE18d&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE18c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop prebirths&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE18d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=17, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>/*distinct # individuals by group*/<br/>data VDE18k&#59<br/>&nbsp&nbsp&nbsp&nbspset VFA&#59<br/>&nbsp&nbsp&nbsp&nbspif prebirths >4 then prebirths=4&#59<br/>&nbsp&nbsp&nbsp&nbspif prebirths=. then prebirths=99&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE18k,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE18m,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(prebirths, count(distinct key_hsn) as Npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby =prebirths<br/>)&#59<br/>data VDE18n&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE18m&#59<br/>&nbsp&nbsp&nbsp&nbspdrop prebirths&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE18n,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=17, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/><br/>/*19. number of past preg (include this one)*/<br/>%print(data=VFA)&#59<br/>%freq(data=VFA, table=N_conceptions,option=%str(nopct norow nocol out=VDE19a))&#59<br/><br/>data VDE19b&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE19a&#59<br/>&nbsp&nbsp&nbsp&nbspif 99 > N_conceptions > 4 then N_conceptions=4&#59<br/>&nbsp&nbsp&nbsp&nbspif N_conceptions=. then N_conceptions=99&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE19b,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE19c,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(N_conceptions, sum(count) as npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby=N_conceptions,<br/>&nbsp&nbsp&nbsp&nbsporderby=N_conceptions<br/>)&#59<br/>data VDE19d&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE19c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop N_conceptions&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE19d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=13, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*distinct # individuals by group*/<br/>data VDE19k&#59<br/>&nbsp&nbsp&nbsp&nbspset VFA&#59<br/>&nbsp&nbsp&nbsp&nbspif N_conceptions >4 then N_conceptions=4&#59<br/>&nbsp&nbsp&nbsp&nbspif N_conceptions=. then N_conceptions=99&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE19k,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE19m,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(N_conceptions, count(distinct key_hsn) as Npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby =N_conceptions<br/>)&#59<br/>data VDE19n&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE19m&#59<br/>&nbsp&nbsp&nbsp&nbspdrop N_conceptions&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE19n,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=13, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*20 average number of previous delivers*/<br/>data VDE20a0&#59<br/>&nbsp&nbsp&nbsp&nbspset VFA&#59<br/>&nbsp&nbsp&nbsp&nbspif prebirths ne .&#59<br/>run&#59<br/><br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VFA,<br/>&nbsp&nbsp&nbsp&nbspwhere=%str(prebirths ne .),<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=prebirths,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE20a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/><br/>%nobs(data=VDE20a0)&#59<br/><br/>data VDE20b&#59<br/>&nbsp&nbsp&nbsp&nbspretain mean std NOBS N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE20a&#59<br/>&nbsp&nbsp&nbsp&nbspnobs=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std NOBS N_Patients_Group&#59<br/>run&#59<br/>%let nobs=&#59<br/><br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE20b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=55, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*21 average number of past preg (include this one)*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VFA,<br/>&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=N_conceptions,<br/>&nbsp&nbsp&nbsp&nbsptheStats=median,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE21a,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>%nobs(data=VFA)&#59<br/><br/>data VDE21b&#59<br/>&nbsp&nbsp&nbsp&nbspretain mean std NOBS N_Patients_Group&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE21a&#59<br/>&nbsp&nbsp&nbsp&nbspnobs=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbspkeep mean std NOBS N_Patients_Group&#59<br/>run&#59<br/>%let nobs=&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE21b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=54, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>%print(data=VFA)&#59<br/><br/><br/><br/>/*22. number of pregs by age*/<br/>data VDE22a&#59<br/>&nbsp&nbsp&nbsp&nbspset VFA&#59<br/>&nbsp&nbsp&nbsp&nbspageC=put(age, $10.)&#59<br/>&nbsp&nbsp&nbsp&nbspif age=. then ageC = 'Missing'&#59<br/>run&#59<br/>%freq(data=VDE22a, table=agec,option=%str(nopct norow nocol out=VDE22b))&#59<br/><br/>data VDE22c&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE22b&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE22c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Age on entry, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>/*number of patients*/<br/>%distinct(data=VDE22a,target=VDE22k, vars=%str(key_hsn, ageC))&#59<br/>%freq(data=VDE22k, table=agec,option=%str(nopct norow nocol out=VDE22m))&#59<br/><br/>data VDE22n&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE22m&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent agec&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE22n,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Age on entry, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*23 OCI by categroes*/<br/>%MakeCategories(<br/>                Data=VFA, <br/>                theVar=OCI,<br/>                theTargetVar=OCI_Group,<br/>                theCutOffs=0 1 3 5 7 9 11 , <br/>                dlmt=, <br/>                debug=, <br/>                closeSide=left,<br/>                target=VDE23a)&#59<br/><br/>%freq(data=VDE23a, table=OCI_Group, option=%str(nopct norow nocol out=VDE23b))&#59<br/>data VDE23c&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE23b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep count&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE23c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=40, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*distinct # individuals by group*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VDE23a,<br/>&nbsp&nbsp&nbsp&nbsptarget=VDE23m,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(OCI_Group, count(distinct key_hsn) as Npt),<br/>&nbsp&nbsp&nbsp&nbspgroupby =OCI_Group<br/>)&#59<br/>data VDE23n&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE23m&#59<br/>&nbsp&nbsp&nbsp&nbspdrop OCI_Group&#59<br/>run&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE23n,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=40, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-lU4EjVBK2vomeq58","name":"VGE_Making Preg Covariates","NodeDescription":"///t<br/>///s<br/>/*VGE. making covariates for poisson analyses*/<br/>data _null_&#59run&#59<br/><br/>/*VDE0 is based on VFA with more variables (fromProg VDE)*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VDE0.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VDE0.sas7bdat)<br/>)&#59<br/>%print(data=VDE0)&#59<br/><br/>/*For those missing natv_stat_flag, make the value =2*/<br/>data VGE0&#59<br/>&nbsp&nbsp&nbsp&nbspset VDE0&#59<br/>&nbsp&nbsp&nbsp&nbspif natv_stat_flag=. then natv_stat_flag=2&#59<br/>run&#59<br/><br/>/*Adding the age quintile, <br/>&nbsp&nbsp&nbsp&nbspage at beginning of preg (CohortEntryDt) was calculated in prog VCE<br/>&nbsp&nbsp&nbsp&nbspage quintiles had been calculated and reported in the descriptive file (in program VDE)*/<br/><br/>%rank(data=VGE0, groups=5, target=VGE1a, vars=age, ranks=AGE_Entry_Quintile, debug=)&#59<br/>data VGE1&#59<br/>&nbsp&nbsp&nbsp&nbspset VGE1a&#59<br/>&nbsp&nbsp&nbsp&nbspif AGE_Entry_Quintile=\"\" then AGE_Entry_Quintile=5&#59 /*missing*/<br/>run&#59<br/><br/>/*add prebirths cat*/<br/>%MakeCategories(<br/>        Data=VGE1, <br/>        theVar=prebirths,<br/>        theTargetVar=PreBirths_cat,<br/>        theCutOffs=0 1 2 3 4, <br/>        dlmt=, <br/>        debug=, <br/>        closeSide=left,<br/>        target=VGE2<br/>)&#59<br/><br/>/*re-order the outcome type*/<br/>data VGE3&#59<br/>&nbsp&nbsp&nbsp&nbspformat outcometype $20.&#59<br/>&nbsp&nbsp&nbsp&nbspset VGE2&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='INDUABOR' then outcometype='4.INDUABOR'&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='LIVBIRTH' then outcometype='1.LIVBIRTH'&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='STILLBIR' then outcometype='2.STILLBIR'&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='SPONABOR' then outcometype='3.SPONABOR'&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype='TOPFFA' then outcometype='5.TOPFFA'&#59<br/>&nbsp&nbsp&nbsp&nbspif outcometype=\"\" then outcometype='6.UNKOWN'&#59<br/>run&#59<br/><br/><br/>/*add age at outcome*/<br/>data VGE4&#59<br/>&nbsp&nbsp&nbsp&nbspset VGE3&#59<br/>&nbsp&nbsp&nbsp&nbspif birth =. then age_outcome = .&#59 <br/>&nbsp&nbsp&nbsp&nbspelse age_outcome= int(yrdif(birth, outcomedt, 'age'))&#59<br/>run&#59<br/>%rank(data=VGE4, groups=5, target=VGE4a, vars=age_outcome, ranks=age_outcome_quintile, debug=)&#59<br/>data VGE5&#59<br/>&nbsp&nbsp&nbsp&nbspset VGE4a&#59<br/>&nbsp&nbsp&nbsp&nbspif age_outcome_quintile=\"\" then age_outcome_quintile=5&#59 /*missing*/<br/>run&#59<br/><br/>/*OCI categories*/<br/>%MakeCategories(<br/>                Data=VGE5, <br/>                theVar=OCI,<br/>                theTargetVar=OCI_Cat,<br/>                theCutOffs=0 1 3 5 7 9 11 , <br/>                dlmt=, <br/>                debug=, <br/>                closeSide=left,<br/>                target=VGE6<br/>)&#59<br/><br/>/*now, link to the US exam files to have the number of US exams per preg episode (key_hsn and entryDate)*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\va_pregusexams.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(va_pregusexams.sas7bdat)<br/>)&#59<br/>%print(data=va_pregusexams)&#59<br/>/*from the preg us exames, select those with an fee code in <br/>'W040','W041','W044','W046','W047','W048','W149','W401','W402','W403','W412','W413','W422','W432','W433'<br/>see P:\\Ultrasound(AdamsS)_Bio18-71\\Output\\Reports\\Univariate Analysis_20181006.xlsx<br/>&nbsp&nbsp&nbsp&nbspsheet 'Obstetrical population -Poisson'. <br/>&nbsp&nbsp&nbsp&nbspThe code is provided by Scott<br/>*/<br/>data VGE7&#59<br/>&nbsp&nbsp&nbsp&nbspset va_pregusexams&#59<br/>&nbsp&nbsp&nbsp&nbspif fsc in ('W040','W041','W044','W046','W047','W048','W149','W401','W402','W403','W412','W413','W422','W432','W433')&#59<br/>run&#59<br/>/*sum the number of pregUS exams by pregOBS (i.e., preg episodes)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VGE7,<br/>&nbsp&nbsp&nbsp&nbsptarget=VGE8,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(pregOBS, count(pregOBS) as num_us_preg),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(pregOBS)<br/>)&#59<br/>/*note that the above data set contains US exams without pregOBS (i.e., perOBS=.)*/<br/><br/>/*link the pregUS*/<br/>/*the US exams and preg data are linked by obs (of us exams) and pregobs(of preg episodes)<br/>&nbsp&nbsp&nbsp&nbspfor those unmatched in the preg cohort, make the num_us_preg=0<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VGE6,<br/>&nbsp&nbsp&nbsp&nbspt2=VGE8,<br/>&nbsp&nbsp&nbsp&nbsptarget=VGE,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=pregOBS,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.num_us_Preg= ., 0, t2.num_us_Preg) as num_us_Preg)<br/>)&#59<br/><br/>/*Zip the file VGE */<br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VGE.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VGE.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-JWZEq7R3JaOpWuaI","name":"VHE_covariate sum","NodeDescription":"///t<br/>///s<br/>/*VHE, covariate summar for preg cohort*/<br/><br/>/*select a var, group by level, and get the following<br/>&nbsp&nbsp&nbsp&nbsp# patients<br/>&nbsp&nbsp&nbsp&nbspSum of person years<br/>&nbsp&nbsp&nbsp&nbspsum of num_us_preg<br/>*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VGE.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VGE.sas7bdat)<br/>)&#59<br/>/*%print(data=VGE)&#59*/<br/>%macro CovariatesSum_Preg(data=, theVar=, theReport=, order=, startRow=, theRef=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data theVar theReport order startRow theRef&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theVar=sex_desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let thereport=Univariate Analysis_20181006.xlsx&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let order=desc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let startRow=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRef=%str('M')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*count the number of preg episodes*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&data,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theVar, count(distinct pregOBS) as Num_Episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum(num_us_preg) as num_us_preg&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(&theVar),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=&thevar &order&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*add the number of us per preg epi*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmean_n_us_preg_perEpi=input(Num_Episodes /num_us_preg, 8.1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*count the number of patients*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&data,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theVar, count(distinct key_hsn) as Num_Patients&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby=%str(&theVar),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=&thevar &order&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=16,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>%mend CovariatesSum_Preg&#59<br/><br/><br/>/*Age_Entry_Quintile, 5, ref='0'*/<br/>/*%freq(data=VGE, table=Age_Entry_Quintile)&#59*/<br/>%CovariatesSum_Preg(data=VGE, theVar=Age_Entry_Quintile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=5<br/>)&#59<br/><br/>/*Natv_stat_flag, 11, ref=0*/<br/>%freq(data=VGE, table=Natv_stat_flag)&#59<br/>%CovariatesSum_Preg(data=VGE, theVar=Natv_stat_flag, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=11<br/>)&#59<br/><br/>/*ResiType, 14, ref=URBAN*/<br/>%freq(data=VGE, table=ResiType)&#59<br/>%CovariatesSum_Preg(data=VGE, theVar=ResiType, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=14<br/>)&#59<br/><br/>/*QAIPPE, 17, ref=1*/<br/>%CovariatesSum_Preg(data=VGE, theVar=QAIPPE, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=17<br/>)&#59<br/><br/>/*nPregs_cat, 23, ref='1' (note, it is char)*/<br/>%freq(data=VGE, table=nPregs_cat)&#59<br/>%CovariatesSum_Preg(data=VGE, theVar=nPregs_cat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=23<br/>)&#59<br/><br/>/*preBirths_cat, 28, ref='00 - 00' (check the NA,should be the last)*/<br/>%freq(data=VGE, table=preBirths_cat)&#59<br/>%CovariatesSum_Preg(data=VGE, theVar=preBirths_cat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=28<br/>)&#59<br/><br/>/*OUTCOMETYPE, 34, ref='1.LIVBIRTH', note that special order is required*/<br/>%freq(data=VGE, table=OUTCOMETYPE)&#59<br/>%CovariatesSum_Preg(data=VGE, theVar=OUTCOMETYPE, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=34<br/>)&#59<br/><br/>/*age_outcome_quintile, 40, ref = '0' */<br/>%freq(data=VGE, table=age_outcome_quintile)&#59<br/>%CovariatesSum_Preg(data=VGE, theVar=age_outcome_quintile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=40<br/>)&#59<br/><br/><br/>/*OCI_cat, 46, ref='00 - 00'*/<br/>%freq(data=VGE, table=OCI_cat)&#59<br/>%CovariatesSum_Preg(data=VGE, theVar=OCI_cat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=, startRow=46<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-qfShzt9DbuCtJLIi","name":"VHF_Poi_Univ","NodeDescription":"///t<br/>///s<br/>/*VHF. For Preg episodes, get results from the univariate poisson model and report to the xls file<br/><br/>&nbsp&nbsp&nbsp&nbspto highlight:<br/><br/>&nbsp&nbsp&nbsp&nbsp1) Report of mean and 95%CI is by statements like:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. General syntax to have mean of predicted values<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income quintile = 2\" intercept 1 qaippe 0 1 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe income var has 6 levels (i.e, 1 to 5, and missing) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby default, SAS automatically creates 5 dummy vars each for a level except the reference level, like<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp+beta1 * incomeLevel1 + beta2 * incomeLevel2 ... beta5 * incomeLevel5 (each for income level 1 to 5).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not specified, the last level (income = missing) will be the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs such the digits after 'qaippe' (i.e, 0 1 0 0 0) each represents a level of income (i.e., income levels 1 to 5)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo estimate the mean of income level 2, make the 2nd digit as 1, while keeping the rest as 0 (i.e., 'qaippe 0 1 0 0 0') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo estimate the mean of income level 3, make the 3rd digit as 1, while keeping the rest as 0 (i.e., 'qaippe 0 0 1 0 0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. Specifying the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn this case, the income level =1 is expected to be the reference level.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThere are two ways to set reference level, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspone is by (ref='') and /param=ref,e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass qaippe (ref='1') /param=ref&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe other is by sorting the values and using the last in the sort as the reference, e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass qaippe / param=effect descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspc. Estimate mean predict value of the referecen level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that the following two is quite different from each other (given that income=1 as reference):<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of ALL income levels\" intercept 1 qaippe 0 0 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of income quintile = 1 (reference)\" intercept 1 qaippe -1 -1 -1 -1 -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe first is to estimate the mean of ALL levels. The second is to truly estimate the mean of the reference level.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe second Estimate statement has to be used within the second method of setting reference. Specifically, it only works<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen the option is specified as Class ... /param = effect.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt won't work if setting as Class ... /param = ref.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis means that the levels of income has to be sorted, instead of specifying the reference level. In this case, the levels <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphas to be sorted in descending order, such to have level=1 as the last, and as the reference.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhen in descending order, the model is different in that the levels appearing in the model in descending order:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp+beta1 * incomeLevel_missing + beta2 * incomeLevel5 ... beta2 * incomeLevel1 (each for income level 'missing', and 5 to 2)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis time there is no level 1 (as it is the reference)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that the report also follow the descending order (i.e., mean of incomelevel _missing comes first), check the label in the<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreport table.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) Report of OR and 95%CI is easier as it does not involve the estimate of the reference level, e.g., <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"IR of income quintile = 2\" qaippe 0 1 0 0 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"IR of income quintile = 3\" qaippe 0 0 1 0 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that to estimate the OR, there is no terms and arguments for 'intercept'<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) Discrepancy of the orders in analyses and in reports<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs aforementioned, the levels of an interested var is ordered descendingly. However, the results are requested to be in ascending<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder. This are taken into account in the following macro.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4) Customizing orders of the levels in the report. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFor most variables, the levels are reported in ascending order, the ref either the first or the last level. However there is always <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexceptions. To make the ordering more flexibile, the orders can be specified by the following macro.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp5) Each var may have different levels. As such, the estimate arguments need to be determined. e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor EntryAgeGroupA (3 levels, 1 as ref, 2 as non-ref levels)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp Estimate \"mean of age groupA = '65+ '\" intercept 1 qaippe 1 0 &#59 (the argument is '1 0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor income (6 levels, 1 as ref, 5 as non-ref levels)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of income quintile = 2 \" intercept 1 qaippe 0 0 0 0 1 &#59 (the argument is '0 0 0 0 1')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(Note that the levels are all sorted in descending order. The hightest level comes first as 1 0, while the second lowest comes<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspat the last)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe following macro enables:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. determine the number of digits in the argument (e.g., whether it is 1 0 or 1 0 0 0 0, depending on the levels of the var)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. determine where the number '1' and '0's should be positioned in the argument (e.g., '0 0 1', or '0 1 0')<br/>*/<br/><br/>/*VDE0 is based on VFA with more variables (fromProg VDE)*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VGE.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VGE.sas7bdat)<br/>)&#59<br/>%print(data=VGE)&#59<br/><br/>/*Note that the genmod will run for twice. The first is to get the mean of all levels (using param=effect, the ref is the average<br/>&nbsp&nbsp&nbsp&nbspof all levels)<br/>&nbsp&nbsp&nbsp&nbspThe second to get the ORs comparing to the specified reference level */<br/><br/>%macro getUniPoiPreg(data=, theVar=, theRef=, customizedOrder=, theReport=, startRow=, theSheet=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local data theVar theReport theSheet startRow theRef<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnLevels i refMeanArg j theLevelValue theLevelArg levelMeanEst levelOREst LEVELMEANESTSTR LEVELORESTSTR <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcurLevel customizedOrder nZerosBefore nZerosAfter debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1. from the source data set, change data format, and add a log term (to be used for offset in the Poisson model)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theVar._tmp $100.&#59 /*make the length long enough to avoid truncate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*change numeric values to chars<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is to be conformed with the report.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhen creating the statistical results form models, SAS changes numeric values into labels. Labels are in character format.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLater we'll need to match the result levels (in labels) with the levels in the source table (in numeric values).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuch matching requires both to be in the same type, preferred to be in character type.*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVarType=vType(&theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theVarType='N' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theVar._tmp = strip(put(&theVar, 8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theVar._tmp = &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theVar._tmp = &theVar&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_thsd = coverYears /1000&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_timeInCohort= log(coverYears_afterEntry)&#59 /*creating the offset term*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_timeInCohort= log(N_thsd)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%FREQ(data=getUniPoiPreg_tmp3, table=&theVar)&#59 */<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the levels of the selected var<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe number of levels is to be used later for determining the number of digits in the estimate argument. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspeach particular level is to be used later for determining the position of 1 in the estmiate argument.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe order of the levels takes into accound of the reference level, and the order to report in the final xls file<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the distinct levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=getUniPoiPreg_tmp3, target=getUniPoiPreg_tmp4, vars=&theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheLevel=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&customizedOrder&#59 /*the levels and the references can be customozed for order*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*from above, the order of the orginal levels are determined, and transferred into standard levels in numeric values.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe standard levels are saved in the new variable 'theLevel'. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThat way, no matter the original values are, the standard levels are always in numbers (1, 2, ....) with the reference<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplevel as 'theLevel=1'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext, the levels are ordered by the standard level. Such order is conformed with the order in the final xls report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sort(data=getUniPoiPreg_tmp5, sorter=theLevel)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Adding theLevel back to the original dataset, for the following Poisson analyses, the standard level will be used<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinstead of the original values<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn the following, the variable 'resitype', and qaippe are always kept for checking random effects later<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoiPreg_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoiPreg_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoiPreg_tmp6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.num_us_Preg, t1.log_timeInCohort , t1.&theVar, t2.theLevel, t1.resitype, t1.qaippe),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theVar<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*2. construct estimate statements*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The arguments (e.g., -1 -1 depends on the number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor example, for sex_desc, there is only 1 non-ref levels, therefore the argument is ... theLevel -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor EntryAgeGroupA, however, there are 2 non-ref levels, therefore the argement is ... theLevel -1 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following is to make dynamic arguments based on number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get number of levels of the interested variable*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=getUniPoiPreg_tmp5)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the number of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nLevels=%eval(&nobs-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the number of  -1 in the argument (for estimating mean of reference level) = the number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following is to get a string with the repeating '-1' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., for the reference income level, make it -1 -1 -1 -1 -1 (repeat for 5 times, corresponding to 5 non-ref levles*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nLevels&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let refMeanArg= &refMeanArg -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevel &refMeanArg&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*make the complete Estimate statment for estimate the mean at reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =1 (ref\") intercept 1 theLevel -1 -1 -1 -1 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that we'll no longer use the original values (QAIPPE=1), instead we'll use the standard levels (in the var 'theLevel')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let estRefMean=%str(estimate &theRef intercept 1 theLevel &refMeanArg&#59)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> estRefMean= &estRefMean&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in the following proc genmod, the levels are no longer sorted descendingly <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt is kind of noticed that, in previous SAS versions,  when param=effect, the ref specification does not work<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=effect &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs 'param=effect' is specified instead of 'param=ref', the reference level of theLevel would be the <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplast level of theLevel in the ascending order (i.e., the ref level is 6). Even if (ref='1') was specified, SAS neglects it.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, such situation was for old version of SAS.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAt least since SAS 9.3, the ref specification works for param=effect)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following is to determine the values for argument<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor theLevel=2 out of 6 levels, make the argument as 1 0 0 0 0 (if the ref level = 1)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor theLevel =3, make the argument as 0 1 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBasically, to determine the number of '0's before 1, and the number of '0's after 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 2 %to &nobs &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the value of the standard level (i.e., the var named as 'theLevel', regardless of the original var names like<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspagegroup income, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp5 (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theLevelValue', &theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelValue = %sysfunc(strip(&theLevelValue))&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevelValue = &theLevelValue&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The lowest level is picked up first (income =1 as reference level), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =2 \" intercept 1 theLevel 1 0 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =3 \" intercept 1 theLevel 0 1 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =4 \" intercept 1 theLevel 0 0 1 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =5 \" intercept 1 theLevel 0 0 0 1 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =6 \" intercept 1 theLevel 0 0 0 0 1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe levels appear in asending order, which is corresponding to the '1' appearing in ascending order. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*to determine the zeros before '1' */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nZerosBefore = %eval(&i - 2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 1 %to &nZerosBefore&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the above generates the 0s before the value 1, e.g., 0 */<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*now add the value 1 into the argument, making it as, e.g., for income =3,  0 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 1&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the levels after '1'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nZerosAfter = %eval(&nobs - &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 1 %to &nZerosAfter&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*now that the argument is complete, e.g., for income=3:  0 1 0 0 0*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevel &theLevelArg&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the complete estimate statements for mean of each level*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelMeanEst=%str(estimate \"&theLevelValue\" intercept 1 theLevel &theLevelArg&#59)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &levelMeanEst&#59 */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelMeanEstStr=&levelMeanEstStr &levelMeanEst&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the complete estimate statements for OR of each level*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelOREst=%str(estimate \"&theLevelValue\" theLevel &theLevelArg /exp&#59)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &levelMeanEst&#59 */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelOREstStr=&levelOREstStr &levelOREst&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*clear the value of theLevelArg, as it is level-specific. If it is not cleared, it'll cause error when making argument strings for<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> levelMeanEstStr= &levelMeanEstStr&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> levelOREstStr=  &levelOREstStr&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Performe the poisson analyses, param=effect, i.e., the reference is the average of all levels. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthis is to have means of all levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> ods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"genmod param=effect\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoiPreg_tmp6 &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*it'll still be necessary to specify the ref level, this is to ensure that the terms<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor mean estimate is correct (i.e.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor the reference level, it is -1 -1 -1 -1 -1 (given that there are 6 levels includng the ref level)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor the rest levels in ascending order:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1 0 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   &nbsp&nbsp&nbsp&nbsp0 1 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the ordering of levels can be specified by individual vars. e.g.:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" descending) resitype   qaippe / param=ref &#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, the var 'theLevel' is ordered descendingly, restitype and qaippe ascendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe ordering of levels can also be set gloablly for all vars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" ) resitype   qaippe / param=ref  descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, all vars are ordered descendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_Preg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=getUniPoiPreg_tmp7 p=fitted lower=lower upper=uper stdresdev=resid_deviance stdreschi=resid_pearson cookd=cookd &#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the estimate statements, each for the mean of reference level, the means of non-referenc levels, and the ORs of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&estRefMean&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&levelMeanEstStr&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output &nbsp&nbsp&nbsp&nbspestimates=getUniPoiPreg_tmp8a&#59 /*output the result means and ORs*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results on&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in the output table getUniPoiPreg_tmp8a, the first nLevels rows are for means*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp8a (obs=&nobs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep label MeanEstimate MeanLowerCL MeanUpperCL&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*follow the order in getUniPoiPreg_tmp5, such to be conformed with the orders in the report xls file<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe standard levels are used as the bridge for joining tables, while the orignal values are used<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspto display the true levels in the orignal file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoiPreg_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoiPreg_tmp9,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoiPreg_tmp10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theVar, MeanEstimate, MeanLowerCL, MeanUpperCL),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(strip(t1.&theVar) = strip(t2.label)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=t1.theLevel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the format required in the final report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCL='(' || strip(put(MeanLowerCL, 8.4)) || ',' ||  strip(put(MeanUpperCL, 8.4)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep MeanEstimate CL&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Performe the poisson analyses, param=reference. This is to have effect ORs as oppsed to the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCheck SAS codes for assignment 3 of course PUBH 842*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"genmod param=reference\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoiPreg_tmp6 &#59 /*for poisson models, it does not matter whether or not specifying the descindg order*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=ref &#59 /*the level of the covariate is ordered descendingly so that the lowest value is set as ref*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the ordering of levels can be specified by individual vars. e.g.:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" descending) resitype   qaippe / param=ref &#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, the var 'theLevel' is ordered descendingly, restitype and qaippe ascendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe ordering of levels can also be set gloablly for all vars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" ) resitype   qaippe / param=ref  descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, all vars are ordered descendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_Preg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=getUniPoiPreg_tmp7 p=fitted lower=lower upper=uper stdresdev=resid_deviance stdreschi=resid_pearson cookd=cookd &#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the estimate statements, each for the mean of reference level, the means of non-referenc levels, and the ORs of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&levelOREstStr &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output &nbsp&nbsp&nbsp&nbspestimates=getUniPoiPreg_tmp8b&#59 /*output the result means and ORs*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results on&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptitle&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro notrun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The following is a handy way to get estimates and OR/IRR, instead of repeatedly state the estimates.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, the 95%CI need to be calculated mannually<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRef: https://stats.idre.ucla.edu/sas/dae/poisson-regression<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoiPreg_tmp6 &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=reference &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_Preg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstore out=getUniPoiPreg_tmp8e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*getUniPoiPreg_tmp6 contains all estimates. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIf the path is not specified, it is saved in the work directory<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, the extension of the table file is '.sas7bitm'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsuch files won't show up in the file list under work directory in the 'sever' explorer panel*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output ParameterEstimates = getUniPoiPreg_tmp8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc plm source=getUniPoiPreg_tmp8e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspshow parameters&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp8d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIRRs=exp(estimate)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif parameter ne 'Intercept'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend notrun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the rows after nLevels rows are for OR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp8b &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep label MeanEstimate MeanLowerCL MeanUpperCL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif label in: ('Exp') then delete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are similar, only that these are for OR results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theRef=&theRef&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoiPreg_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoiPreg_tmp12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoiPreg_tmp13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theVar, MeanEstimate, MeanLowerCL, MeanUpperCL,probChisq),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(strip(t1.&theVar) =strip(t2.label)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=t1.theLevel,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters =%str(strip(t1.&theVar) ne strip(&theRef))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain MeanEstimate CL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp13&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCL='(' || strip(put(MeanLowerCL, 8.4)) || ',' ||  strip(put(MeanUpperCL, 8.4)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep MeanEstimate CL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report the final results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getUniPoiPreg_tmp11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getUniPoiPreg_tmp15,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=%eval(&startRow+1), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getUniPoiPreg_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getUniPoiPreg&#59<br/><br/>/*Age_Entry_Quintile, 5, ref='0'*/<br/>%freq(data=VGE, table=Age_Entry_Quintile)&#59<br/>%getUniPoiPreg(data=VGE, theVar=Age_Entry_Quintile, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=5, theRef=%str('0'), debug=,<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/>/*Natv_stat_flag, 11, ref=0*/<br/>%freq(data=VGE, table=Natv_stat_flag)&#59<br/>%getUniPoiPreg(data=VGE, theVar=Natv_stat_flag, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=11, theRef=%str('0'),debug=,<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/>/*ResiType, 14, ref=URBAN*/<br/>%freq(data=VGE, table=ResiType)&#59<br/>%getUniPoiPreg(data=VGE, theVar=ResiType, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=14, theRef=%str('URBAN'),debug=,<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=%str(if ResiType='URBAN' then theLevel=1&#59if ResiType='RURAL' then theLevel=2 &#59if ResiType='miss' then theLevel=3)<br/>)&#59<br/><br/>/*QAIPPE, 17, ref=1*/<br/>%getUniPoiPreg(data=VGE, theVar=QAIPPE, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, debug=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=17, theRef=%str('1'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/>/*nPregs_cat, 23, ref='1' (note, it is char)*/<br/>%freq(data=VGE, table=nPregs_cat)&#59<br/>%getUniPoiPreg(data=VGE, theVar=nPregs_cat, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=23, theRef=%str('1'),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*preBirths_cat, 28, ref='00 - 00' (check the NA,should be the last)*/<br/>%freq(data=VGE, table=preBirths_cat)&#59<br/>%getUniPoiPreg(data=VGE, theVar=preBirths_cat, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=28, theRef=%str('00 - 00'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*OUTCOMETYPE, 34, ref='1.LIVBIRTH', note that special order is required*/<br/>%freq(data=VGE, table=OUTCOMETYPE)&#59<br/>%getUniPoiPreg(data=VGE, theVar=OUTCOMETYPE, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=34, theRef=%str('1.LIVBIRTH'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*age_outcome_quintile, 40, ref = '0' */<br/>%freq(data=VGE, table=age_outcome_quintile)&#59<br/>%getUniPoiPreg(data=VGE, theVar=age_outcome_quintile, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=40, theRef=%str('0'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/><br/>/*OCI_cat, 46, ref='00 - 00'*/<br/>%freq(data=VGE, table=OCI_cat)&#59<br/>%getUniPoiPreg(data=VGE, theVar=OCI_cat, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=46, theRef=%str('00 - 00'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%print(data=VGE)&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-Wotcieqt8D6UIv3u","name":"VHG_covariates 2ndTrimester","NodeDescription":"///t<br/>///s<br/>/*VHG second-trimester ultrasound studies*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VGE.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VGE.sas7bdat)<br/>)&#59<br/>%print(data=VGE)&#59<br/><br/>/*based on VGE, select those<br/>1. preg carried >= days since entry <br/>*/<br/>data VHG1&#59<br/>&nbsp&nbsp&nbsp&nbspset VGE&#59<br/>&nbsp&nbsp&nbsp&nbspif outcomedt - cohortentryDt + 1 >= 154&#59<br/>run&#59<br/><br/>/*2. link to the US file to get the US claims and the types<br/>&nbsp&nbsp&nbsp&nbsponly select those with a fee code of <br/>*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\va_pregusexams.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(va_pregusexams.sas7bdat)<br/>)&#59<br/>%print(data=va_pregusexams)&#59<br/>%freq(data=va_pregusexams, table=fsc*trimester)&#59<br/>/*from the preg us exames, select those with an fee code in <br/>'W040','W047','W048' if from the 2nd trimester, or<br/>'W402','W412','W422'<br/>see P:\\Ultrasound(AdamsS)_Bio18-71\\Output\\Reports\\Univariate Analysis_20181006.xlsx<br/>&nbsp&nbsp&nbsp&nbspsheet 'Obstetrical population -Logisti'. <br/>&nbsp&nbsp&nbsp&nbspThe code is provided by Scott<br/>*/<br/>data VHG2&#59<br/>&nbsp&nbsp&nbsp&nbspset va_pregusexams&#59<br/>&nbsp&nbsp&nbsp&nbspif  (trimester = 2 and fsc in ('W040','W047','W048') )<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor  ( fsc in ('W402','W412','W422')   )<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/>/*3. from above, have a distinct list of patients (these are patients had >1 US exams in trimester 2)*/<br/>%distinct(data=VHG2, target=VHG3, vars=%str(key_hsn, pregOBS))&#59<br/><br/>/*4. link VHG3 to VHG1, for those not matched, indicate as US_Tm2 =0, otherwise =1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=VHG1,<br/>&nbsp&nbsp&nbsp&nbspt2=VHG3,<br/>&nbsp&nbsp&nbsp&nbsptarget=VHG,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn pregOBS,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.key_hsn ne \"\", 1, 0) as HadUSinTrimester2)<br/>)&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=VHG.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=VHG.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-eHKF2ury2e2Pg83c","name":"VHH _summary Covariates","NodeDescription":"///t<br/>///s<br/>/*VHH, summary of the covariates for second trimester analyses*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VHG.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VHG.sas7bdat)<br/>)&#59<br/>%print(data=VHG)&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-nP584ZN5w6RhipKc","name":"VHJ_Log UNiv  2nd trimester","NodeDescription":"///t<br/>///s<br/>/*VHJ, univariate logistic analyses for second trimester analyses*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VHG.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VHG.sas7bdat)<br/>)&#59<br/>%print(data=VHG)&#59<br/><br/>/*Report the number of patients by outcome*/<br/>%freq(data=VHG, table=hadUSinTrimester2, option=%str(out=VHJ1))&#59<br/>data VHJ2&#59<br/>&nbsp&nbsp&nbsp&nbspset VHJ1&#59<br/>&nbsp&nbsp&nbsp&nbspgroup='g'||strip(hadUSinTrimester2)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep group count&#59<br/>run&#59<br/>%transpose(data=VHJ2, target=VHJ3, colHead=group, contents=count)&#59<br/>data VHJ4&#59<br/>&nbsp&nbsp&nbsp&nbspset VHJ3&#59<br/>&nbsp&nbsp&nbsp&nbspg10='n='||strip(g0)&#59<br/>&nbsp&nbsp&nbsp&nbspg11='n='||strip(g1)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep g10 g11&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VHJ4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*report mean and SE of age*/<br/>%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbspdata=VHG,<br/>&nbsp&nbsp&nbsp&nbspwhere=%str(age ne .),<br/>&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsptheVar=age,<br/>&nbsp&nbsp&nbsp&nbsptheStats=mean,<br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>data VHJ5&#59<br/>&nbsp&nbsp&nbsp&nbspset meanstats&#59<br/>&nbsp&nbsp&nbsp&nbsptheStat=strip(put(mean, 8.1)) || byte(177) || strip(put(std, 8.1))&#59<br/>&nbsp&nbsp&nbsp&nbspkeep theStat&#59<br/>run&#59 <br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VHJ5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=5, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>%macro getLogResults_Uni (theData=, theVar=, theRef=, theMissing=, customizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=, &nbsp&nbsp&nbsp&nbsptheSheet=, startRow=)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local theData theVar theRef theMissing customizedOrder theReport theSheet StartRow theMissing&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theData=VHG&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theVar=qaippe&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRef=1&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theMissing=.&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*count the missings*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&theMissing) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theVar = &theMissing &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=getLogRslts_Uni_tmp0)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nMissing=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %let nMissing=0&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report the missing n*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsCell(ExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=9, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellValue=&nMissing, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nMissing=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*remove the missings*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&theMissing) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theVar ne &theMissing &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisease = 'PREG'&#59 /*the macro getUniLogitOR mandates that disease name must be specified*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the variable*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if ref is left blank, treat it as continous*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&theRef) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getLogRslts_Uni_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheLevel=&theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the order of the categories are not specified*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&CustomizedOrder) =0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getLogRslts_Uni_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheLevel=&theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getLogRslts_Uni_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&customizedOrder&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*this brilliant macro is good enough to get the univariate results. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theRef is left blank, theVar will be treated as continuous, othewise as categorical<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%getUniLogitOR(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getLogRslts_Uni_tmp2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisease=Preg, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutcome=hadUSinTrimester2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=theLevel, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=&theRef, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getLogRslts_Uni_tmp3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*make the data set to report OR and 95%CI*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getLogRslts_Uni_tmp3_ORs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep OddsRatioEst LowerCL UpperCL&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report OR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getLogRslts_Uni_tmp3a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*make the data set to report the p value*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getLogRslts_Uni_tmp3_Type3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep p_value&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report p value*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getLogRslts_Uni_tmp4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report n patients*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getLogRslts_Uni_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getLogRslts_Uni_tmp3_ORs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep 'outcome=0'n 'outcome=1'n&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename 'outcome=0'n=a 'outcome=1'n=b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theReport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getLogRslts_Uni_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>%mend getLogResults_Uni&#59<br/><br/><br/>/*age as continuous*/<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=age, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing=.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=5, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/>/*Natv_stat_flag, 6, ref=0*/<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=Natv_stat_flag, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing=2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=0,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=6, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/>/*resi*/<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=ResiType, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing='miss',<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=8, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=%str(if ResiType='URBAN' then theLevel=1&#59if ResiType='RURAL' then theLevel=2 &#59if ResiType='miss' then theLevel=3)<br/>)&#59<br/><br/><br/>/*QAIPPE, 10, ref=1*/<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=QAIPPE, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing=9,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=10, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/><br/>/*nPregs_cat, 16, ref='1' (note, it is char)*/<br/>%freq(data=VHG, table=nPregs_cat)&#59<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=nPregs_cat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=16, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/><br/>/*preBirths_cat, 21, ref='00 - 00' (check the NA,should be the last)*/<br/>%freq(data=VHG, table=preBirths_cat)&#59<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=preBirths_cat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing='NA',<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=%str(00 - 00),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=21, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/>/*OUTCOMETYPE, 27, ref='1.LIVBIRTH', note that special order is required*/<br/>%freq(data=VHG, table=OUTCOMETYPE)&#59<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=OUTCOMETYPE, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=%str(1.LIVBIRTH),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=27, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/><br/>/*OCI_cat, 32, ref='00 - 00'*/<br/>%freq(data=VHG, table=OCI_cat)&#59<br/>%getLogResults_Uni(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheData=VHG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=OCI_cat, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheMissing=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheRef=%str(00 - 00),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Logisti, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartRow=32, &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-eHKF2ury2e2Pg83c"}]}],"custparents":[{"idx":"CodeTask-Wotcieqt8D6UIv3u"}]}],"custparents":[{"idx":"CodeTask-qfShzt9DbuCtJLIi"}]}],"custparents":[{"idx":"CodeTask-JWZEq7R3JaOpWuaI"}]}],"custparents":[{"idx":"CodeTask-lU4EjVBK2vomeq58"}]}],"custparents":[{"idx":"CodeTask-aggfxF7Luo6iW9cX"}]}],"custparents":[{"idx":"EGTask-UbyCfPjeMgsN9LxT"}]}],"custparents":[{"idx":"CodeTask-u5n8YxpT5gIxAxKS"}]}],"custparents":[{"idx":"CodeTask-L3gLZcvyCasPUY8e"}]}],"custparents":[{"idx":"CodeTask-yLApXgshPqJbpMVY"}]}],"custparents":[{"idx":"EGTask-X8YIcXSI4u2V7lyZ"}]}],"custparents":[{"idx":"CodeTask-XfKL1iLHoxoxrczc"}]}],"custparents":[{"idx":"CodeTask-jAfRCVgnpfYlla1u"}]}],"custparents":[{"idx":"CodeTask-xIdiT1RPU7iIRXkg"}]}],"custparents":[{"idx":"CodeTask-mQwTT8L9J3tPvTEp"}]},{"idx":"CodeTask-dN8ukHsovIYZjR26","name":"ZZA_GET_MSB_FSC","NodeDescription":"///t<br/>///s<br/>/*get all msb records between 13 and 17<br/>&nbsp&nbsp&nbsp&nbspof the FSC code in remoteS.A5-FSC<br/>*/<br/><br/><br/>/*make a list of FSC code<br/>&nbsp&nbsp&nbsp&nbsp(the %Extract_MSB only takes fscodes in a string, not in a file)<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>%ValueToString(Data=remoteS.A5_FSC, <br/>&nbsp&nbsp&nbsp&nbsptheVar=Code, theStrVarName=A5_FSC_CODEs, DLMT=)&#59<br/><br/>%Extract_MSB(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_start_dt=&Xtrc_Start_MSB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxtrc_end_dt=&Xtrc_End_MSB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspds_out= ZZ_UltraS_MSB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_list=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphsn_file=remoteT.c_cohort , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdiagcode=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdostart=&DataStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdosend=&EntryEndDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfscode=&A5_FSC_CODEs<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>%renamedata(source=va3, target=zz_UltraS_MSB)&#59<br/>%print(data=remoteS.A5_FSC)&#59<br/>/*link the ultrasound category, disease and description to the data*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=zz_UltraS_MSB,<br/>&nbsp&nbsp&nbsp&nbspt2=remoteS.A5_FSC,<br/>&nbsp&nbsp&nbsp&nbsptarget=%str(ultras_msb  (rename = (dos_1=dos))),<br/>&nbsp&nbsp&nbsp&nbspvars=%str(monotonic() as obs, t1.*, t2.category, t2.disease, t2.description),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(t1.fsc=t2.code)<br/>)&#59<br/>%print(data=ultras_msb)&#59<br/>%UnixZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsPath=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsource=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=ultras_msb, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptPath=&remoteTargetPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ultras_msb.zip, <br/>&nbsp&nbsp&nbsp&nbspdebug=)&#59<br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-BfZLrULykfaCmqa7","name":"ZZB_Preg_CENODES","NodeDescription":"///t<br/>///s<br/>/*Preg records*/<br/><br/>libname preg \"/sasdata/hisc/shared_data/HQC_share/Shenzhen/pregnancy/data\"&#59<br/>data remoteT.pregData&#59<br/>&nbsp&nbsp&nbsp&nbspset preg.final_maincohort_20180529&#59<br/>&nbsp&nbsp&nbsp&nbspentryYear=year(cohortEntryDt)&#59<br/>run&#59<br/><br/>%print(data=remoteT.pregData)&#59<br/>%freq(data=remoteT.pregData, table=entryYear*outcomeType)&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-bynpz12DdkYxPLKU","name":"VDE_desc Preg local (2)","NodeDescription":"///t<br/>///s<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VDE2d,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Obstetrical episodes, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=34, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-qd6xb2C7TDQPcsp3","name":"ACSC_Hosp_Calc","children":[{"idx":"CodeTask-MbkN92vewWnxCx6Z","name":"VEA_remote age on exam date","NodeDescription":"///t<br/>///s<br/>/*VE, get the age distribution of the preg_related ultrasound exams*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\va_pregusexams.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(va_pregusexams.sas7bdat)<br/>)&#59<br/><br/><br/><br/>/*1. number of preg-related u/s exams by age*/<br/>data VEA1a&#59<br/>&nbsp&nbsp&nbsp&nbspset va_pregusexams&#59<br/>&nbsp&nbsp&nbsp&nbspageatExamC=put(ageatExam, $10.)&#59<br/>&nbsp&nbsp&nbsp&nbspif ageatExam=. then ageatExamC = 'Missing'&#59<br/>run&#59<br/>%freq(data=VEA1a, table=ageatExamC,option=%str(nopct norow nocol out=VEA1b))&#59<br/><br/>data VEA1c&#59<br/>&nbsp&nbsp&nbsp&nbspset VEA1b&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VEA1c,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Age on Preg US exam, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/><br/>/*number of patients*/<br/>%distinct(data=VEA1a,target=VEA1k, vars=%str(key_hsn, ageatExamC))&#59<br/>%freq(data=VEA1k, table=ageatExamC,option=%str(nopct norow nocol out=VEA1m))&#59<br/><br/>data VEA1n&#59<br/>&nbsp&nbsp&nbsp&nbspset VEA1m&#59<br/>&nbsp&nbsp&nbsp&nbspdrop percent ageatExamC&#59<br/>run&#59<br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thexlsFileName, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=VEA1n,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=Age on Preg US exam, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>)&#59<br/>s///<br/>t///","custparents":[{"idx":"EGTask-1MpR7ap5CfhA4z14"},{"idx":"CodeTask-qd6xb2C7TDQPcsp3"}]}],"custparents":[{"idx":"CodeTask-bynpz12DdkYxPLKU"}]}],"custparents":[{"idx":"CodeTask-BfZLrULykfaCmqa7"}]}],"custparents":[{"idx":"CodeTask-dN8ukHsovIYZjR26"}]}],"custparents":[{"idx":"CodeTask-mQwTT8L9J3tPvTEp"},{"idx":"CodeTask-mQwTT8L9J3tPvTEp"}]}],"custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"CodeTask-MFaCVD2HKG8H2ZiE"}]}],"custparents":[{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"},{"idx":"ProjectCollection-cmSbt48MqRzD7t79"}]}],"NodeDescription":"<p>Introduction to the file structure of this project</p><iframe class=\"ql-video\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/klp4ar-Gx5I?showinfo=0\" data-blot-formatter-unclickable-bound=\"true\"></iframe><p><br></p>"}