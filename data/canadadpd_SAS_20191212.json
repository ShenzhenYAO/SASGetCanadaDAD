[{"idx":"ProjectCollection-Y3iB6Xce72IV56WA","name":"CANADADPD 20191212","children":[{"idx":"MY454108c6-dc7f-40d2-87cb-6e1d88bc9895","name":"Introduction","custparents":[{"idx":"ProjectCollection-Y3iB6Xce72IV56WA"}],"children":[{"idx":"MY9e4ff0b1-76f6-4561-b79a-ec6326ec56cd","name":"What can it do","custparents":[{"idx":"MY454108c6-dc7f-40d2-87cb-6e1d88bc9895"}]},{"idx":"MY1c876574-3ab8-4d1d-9a49-bb3e04e4a91a","name":"Where are the programs","custparents":[{"idx":"MY454108c6-dc7f-40d2-87cb-6e1d88bc9895"}]},{"idx":"MYfa072137-c29d-43cd-a97c-19ac4de1b86a","name":"How to use it","custparents":[{"idx":"MY454108c6-dc7f-40d2-87cb-6e1d88bc9895"}]}]},{"idx":"MY6918dcc6-08a1-4c6e-8f2b-c366d6146b3f","name":"Main Programs","custparents":[{"idx":"ProjectCollection-Y3iB6Xce72IV56WA"},{"idx":"ProjectCollection-Y3iB6Xce72IV56WA"}],"children":[{"idx":"CodeTask-c4B16FWf4AyuEhHo","name":"GetDPD","NodeDescription":"///t<br/>///s<br/>/*macro to determine the path of the current sas program*/<br/>%macro getThisPath&#59<br/>&nbsp&nbsp&nbsp&nbsp%global currentPath&#59<br/>&nbsp&nbsp&nbsp&nbsp%local thisprogramNamePath thisprogramName thisprogramPath thisprojectNamePath thisprojectName thisProjectPath&#59<br/>&nbsp&nbsp&nbsp&nbsp/*If running SAS enhance editor:<br/>&nbsp&nbsp&nbsp&nbsphttp://support.sas.com/kb/24/301.html<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp/*a) Get the current SAS program's name and fullpath path<br/>&nbsp&nbsp&nbsp&nbspe.g.,  C:\\Users\\Z70\\Desktop\\test.sas<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp%let thisprogramNamePath =  %sysget(SAS_EXECFILEPath)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*b) Get the current SAS program's name<br/>&nbsp&nbsp&nbsp&nbspe.g.,  test.sas*/<br/>&nbsp&nbsp&nbsp&nbsp%let thisprogramName =  %sysget(SAS_EXECFILEName)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*c) using a) substracting b) to have the path of the current sas program<br/>&nbsp&nbsp&nbsp&nbspe.g., C:\\Users\\Z70\\Desktop\\*/<br/>&nbsp&nbsp&nbsp&nbsp%let thisprogramPath = %substr(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&thisprogramNamePath, 1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%eval(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%length(&thisprogramNamePath)-%length(&thisprogramName)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/**/<br/>&nbsp&nbsp&nbsp&nbsp/*%put >>> &thisprogramNameFullPath&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*%put >>> &thisprogramName&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*%put >>> &thisprogramPath&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp/*alternatively, if running in sas EG:*/<br/>&nbsp&nbsp&nbsp&nbsp%let thisprojectNamePath = %sysfunc(dequote(&_clientprojectPath))&#59<br/>&nbsp&nbsp&nbsp&nbsp%let thisprojectName = %sysfunc(dequote(&_clientprojectName))&#59<br/>&nbsp&nbsp&nbsp&nbsp%let thisProjectPath = %substr(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&thisprojectNamePath, 1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%eval(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%length(&thisprojectNamePath)-%length(&thisprojectName)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*%put >>> &thisprojectNamePath&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*%put >>> &thisprojectName&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*%put >>> &thisProjectPath&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%if %length(&thisprogramPath)=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let currentPath = &thisProjectPath&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let currentPath = &thisprogramPath&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if %substr(&currentPath, %length(&currentPath), 1) =\\ %then %let currentPath=%substr(&currentPath, 1, %eval(%length(&currentPath)-1))&#59<br/><br/>%mend getThisPath&#59<br/><br/>%global localProjectPath localZipsPath localDataBasePath zipnames_surfix NameList_filesInAZip URL&#59<br/><br/>/*Get the path of the current SAS program*/<br/>%getThisPath&#59<br/>/*set values of global variables*/<br/>%let localProjectPath=&currentPath&#59<br/>%let localZipsPath = &localProjectPath.\\zips&#59<br/>%let localDatabasePath = &localProjectPath.\\database&#59<br/>%let zipnames_surfix = _ _ia _ap _dr&#59<br/>%let NameList_filesInAZip = vet ther status schedule route pharm package ingred form drug comp&#59<br/>%let URL=https://www.canada.ca/content/dam/hc-sc/documents/services/drug-product-database/&zipname..zip&#59<br/><br/>/*load the supporint macros*/<br/>%include \"&localProjectPath.\\supporting.sas\"&#59<br/><br/>/*prepare an empty dataset to hold error records*/<br/>data missingDrugCode&#59<br/>&nbsp&nbsp&nbsp&nbsplength name_file $100. surfix_zipname $3.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/><br/>/*1. make input terms of all variables*/<br/>%MakeInputTermsOfAllFiles&#59<br/>/*2. download the zip files*/<br/>%downloadPDPFiles&#59<br/>/*3. import data from txt files in zips*/<br/>%importDataFromAllZips&#59<br/>/*4. Link all the data sets and make the final database: DAD.sas7bdat*/<br/>%LinkAllZips&#59<br/>/*5. report the error rows when reading txt files into data sets*/<br/>Title \"Rows that were ignored when reading txt files into data sets\"&#59<br/>proc print data=missingDrugCode&#59<br/>run&#59<br/>title&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/>s///<br/>t///","custparents":[{"idx":"MY6918dcc6-08a1-4c6e-8f2b-c366d6146b3f"}],"children":[],"_substeps":{"idx":"cdde1e1f-0f74-410b-835d-6f2402d9ea2a","name":"substeps","children":[{"idx":"c39fb2e4-ecb6-4265-a56c-698f3fed0bab","name":"Define global macro variables","NodeDescription":"<p>///t</p><p>///s</p><p>/*define global variables*/</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%global&nbsp;localProjectPath&nbsp;localZipsPath&nbsp;localDataBasePath&nbsp;zipnames_surfix&nbsp;NameList_filesInAZip&nbsp;URL;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MY67820148-3236-41a6-b291-6f455dc75103","name":"Get the current path (run %getThisPath)","custparents":[{"idx":"c39fb2e4-ecb6-4265-a56c-698f3fed0bab"}],"children":[{"idx":"ccf72a35-5202-49e6-a947-598e882ef2e1","name":"Set value for global macro vars","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*Get the path of the current SAS program*/</div><div class=\"ql-code-block\">%getThisPath;</div><div class=\"ql-code-block\">/*set values of global variables*/</div><div class=\"ql-code-block\">%let localProjectPath=&amp;currentPath;</div><div class=\"ql-code-block\">%let localZipsPath = &amp;localProjectPath.\\zips;</div><div class=\"ql-code-block\">%let localDatabasePath = &amp;localProjectPath.\\database;</div><div class=\"ql-code-block\">%let zipnames_surfix = _ _ia _ap _dr;</div><div class=\"ql-code-block\">%let NameList_filesInAZip = vet ther status schedule route pharm package ingred form drug comp;</div><div class=\"ql-code-block\">%let URL=https://www.canada.ca/content/dam/hc-sc/documents/services/drug-product-database/&amp;zipname..zip;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MY2dcaff6e-f1b8-41b7-8f07-b95a23c2e85b","name":"Load supporting macros (supporting.sas)","custparents":[{"idx":"ccf72a35-5202-49e6-a947-598e882ef2e1"}],"children":[{"idx":"e9dbc22b-f544-47c1-bddf-99504f03a314","name":"Prepare an empty dataset to hold error log","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*prepare&nbsp;an&nbsp;empty&nbsp;dataset&nbsp;to&nbsp;hold&nbsp;error&nbsp;records*/</div><div class=\"ql-code-block\" data-language=\"plain\">data&nbsp;missingDrugCode;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;name_file&nbsp;$100.&nbsp;surfix_zipname&nbsp;$3.;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;delete;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MY8b7f0af0-96c8-41f6-8ff3-bb845dc07f28","name":"Define files and vars (%MakeInput _TermsOfAllFiles)","custparents":[{"idx":"e9dbc22b-f544-47c1-bddf-99504f03a314"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*make&nbsp;input&nbsp;terms&nbsp;of&nbsp;all&nbsp;variables*/</div><div class=\"ql-code-block\" data-language=\"plain\">%MakeInputTermsOfAllFiles;</div></div><p>title</p><p>s///</p><p>t///</p>","children":[{"idx":"MYb871dfc4-39ff-487c-ae81-cd2b1feadbf6","name":"Download zips (%downloadPDPFiles)","custparents":[{"idx":"MY8b7f0af0-96c8-41f6-8ff3-bb845dc07f28"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*download the zip files*/</div><div class=\"ql-code-block\" data-language=\"plain\">%downloadPDPFiles;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MY90e113eb-ac8d-4a40-9cf8-21ee14019da6","name":"Import data from zips (%importData _FromAllZips)","custparents":[{"idx":"MYb871dfc4-39ff-487c-ae81-cd2b1feadbf6"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*import data from txt files in zips*/</div><div class=\"ql-code-block\" data-language=\"plain\">%importDataFromAllZips;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MYfae0eefa-fcce-445a-85f1-75f50d8d64d9","name":"Link data from all files (%LinkAllZips)","custparents":[{"idx":"MY90e113eb-ac8d-4a40-9cf8-21ee14019da6"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*Link all the data sets and make the final database: DAD.sas7bdat*/</div><div class=\"ql-code-block\" data-language=\"plain\">%LinkAllZips;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MYc1ee86e6-41b1-4064-a70b-2dc5a3db5154","name":"Report Error","custparents":[{"idx":"MYfae0eefa-fcce-445a-85f1-75f50d8d64d9"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*Report the error rows when reading txt files into data sets*/</div><div class=\"ql-code-block\">Title \"Rows that were ignored when reading txt files into data sets\";</div><div class=\"ql-code-block\">proc print data=missingDrugCode;</div><div class=\"ql-code-block\">run;</div><div class=\"ql-code-block\">title;</div></div><p>s///</p><p>t///</p>"}],"_substeps":{"idx":"MYa18f61c3-cfec-4b5d-9c69-1c5db605819b","name":"substeps","custparents":[{"idx":"MYfae0eefa-fcce-445a-85f1-75f50d8d64d9"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro LinkAllZips;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local zipname_file_surfix  i pathexists;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*make a folder 'database' if the folder does not exist*/</div><div class=\"ql-code-block\">\t/*\tcheck if  the subfolder 'zips exists\t*/</div><div class=\"ql-code-block\">\t%let pathexists = %sysfunc(filename(fileref,&amp;localDatabasePath)) ;</div><div class=\"ql-code-block\">\t/*if the subfolder 'database' does not exist, create it. */</div><div class=\"ql-code-block\">\t%if &amp;pathexists = 0 %then %do;</div><div class=\"ql-code-block\">\t\t/*specify to exit dos command window without typing 'exit' (noxwait)</div><div class=\"ql-code-block\">\t\t\tspecify to wait and do not run the following sas programs until the x commands are done */</div><div class=\"ql-code-block\">\t\toptions noxwait xsync;</div><div class=\"ql-code-block\">\t\tx \"mkdir &amp;localProjectPath.\\database\";</div><div class=\"ql-code-block\">\t\t/*return to the default settings on xwait and xsync*/</div><div class=\"ql-code-block\">\t\topitons xwait xsync;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tlibname localt \"&amp;localDatabasePath\";</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata DAD;</div><div class=\"ql-code-block\">\t\tformat SRC $3. createDate date9.;\t</div><div class=\"ql-code-block\">\t\tdelete;</div><div class=\"ql-code-block\">\trun;\t</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%do i = 1 %to 4;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let zipname_file_surfix =%scan(&amp;zipnames_surfix, &amp;i);</div><div class=\"ql-code-block\">\t\t%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%makedrugCodeList(zipname_file_surfix=&amp;zipname_file_surfix);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%linkfilesInAZip(zipname_file_surfix=&amp;zipname_file_surfix);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%if %length(&amp;zipname_file_surfix)=0 %then %let zipname_file_surfix = mk;</div><div class=\"ql-code-block\">\t\tdata LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\t\t\tset linkedfile;</div><div class=\"ql-code-block\">\t\t\tSRC = symget('zipname_file_surfix');</div><div class=\"ql-code-block\">/*\t\t\tproject=&amp;_clientprojectname;*/</div><div class=\"ql-code-block\">/*\t\t\tprogram=&amp;_clienttasklabel;*/</div><div class=\"ql-code-block\">\t\t\tcreateDate=date();</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata DAD;</div><div class=\"ql-code-block\">\t\t\tset DAD LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\tdelete LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata localt.DAD; set DAD;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend  LinkAllZips;</div></div><p>t///</p>","children":[{"idx":"MYe202c4b9-5a45-493b-a339-9fb4486e6396","name":"Init vars","custparents":[{"idx":"MYa18f61c3-cfec-4b5d-9c69-1c5db605819b"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local zipname_file_surfix  i pathexists;</div></div><p>t///</p>","children":[{"idx":"MY72ecd743-cf6f-4f21-aacc-556968f95581","name":"Create a subfolder 'database'","custparents":[{"idx":"MYe202c4b9-5a45-493b-a339-9fb4486e6396"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*make a folder 'database' if the folder does not exist*/</div><div class=\"ql-code-block\">\t/*\tcheck if  the subfolder 'zips exists\t*/</div><div class=\"ql-code-block\">\t%let pathexists = %sysfunc(filename(fileref,&amp;localDatabasePath)) ;</div><div class=\"ql-code-block\">\t/*if the subfolder 'database' does not exist, create it. */</div><div class=\"ql-code-block\">\t%if &amp;pathexists = 0 %then %do;</div><div class=\"ql-code-block\">\t\t/*specify to exit dos command window without typing 'exit' (noxwait)</div><div class=\"ql-code-block\">\t\t\tspecify to wait and do not run the following sas programs until the x commands are done */</div><div class=\"ql-code-block\">\t\toptions noxwait xsync;</div><div class=\"ql-code-block\">\t\tx \"mkdir &amp;localProjectPath.\\database\";</div><div class=\"ql-code-block\">\t\t/*return to the default settings on xwait and xsync*/</div><div class=\"ql-code-block\">\t\topitons xwait xsync;</div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>","children":[{"idx":"MY00e6ee06-ab96-4726-a2c6-5ac99f306080","name":"Set libname for the target database path","custparents":[{"idx":"MY72ecd743-cf6f-4f21-aacc-556968f95581"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tlibname localt \"&amp;localDatabasePath\";</div></div><p>t///</p>","children":[{"idx":"MY64cfe0d2-b9ce-4d6e-b7ea-54cb8e9e163b","name":"create an empty data set","custparents":[{"idx":"MY00e6ee06-ab96-4726-a2c6-5ac99f306080"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tdata DPD;</div><div class=\"ql-code-block\">\t\tformat SRC $3. createDate date9.;\t</div><div class=\"ql-code-block\">\t\tdelete;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>","children":[{"idx":"MY6b0e00aa-ad29-431d-b18b-884ec82f2af8","name":"loop for the 4 zips","custparents":[{"idx":"MY64cfe0d2-b9ce-4d6e-b7ea-54cb8e9e163b"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%do i = 1 %to 4;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let zipname_file_surfix =%scan(&amp;zipnames_surfix, &amp;i);</div><div class=\"ql-code-block\">\t\t%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%makedrugCodeList(zipname_file_surfix=&amp;zipname_file_surfix);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%linkfilesInAZip(zipname_file_surfix=&amp;zipname_file_surfix);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%if %length(&amp;zipname_file_surfix)=0 %then %let zipname_file_surfix = mk;</div><div class=\"ql-code-block\">\t\tdata LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\t\t\tset linkedfile;</div><div class=\"ql-code-block\">\t\t\tSRC = symget('zipname_file_surfix');</div><div class=\"ql-code-block\">/*\t\t\tproject=&amp;_clientprojectname;*/</div><div class=\"ql-code-block\">/*\t\t\tprogram=&amp;_clienttasklabel;*/</div><div class=\"ql-code-block\">\t\t\tcreateDate=date();</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata DPD;</div><div class=\"ql-code-block\">\t\t\tset DPD LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>","children":[{"idx":"MYa5bc3cde-fe72-4978-9dc2-6271d00e81d6","name":"Save the target dpd into the target folder","custparents":[{"idx":"MY6b0e00aa-ad29-431d-b18b-884ec82f2af8"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">data localt.DPD; set DPD;run;</div></div><p>t///</p>","children":[{"idx":"MYabb53455-90a9-4f15-b4d3-860eaa947bb6","name":"clean temp files","custparents":[{"idx":"MYa5bc3cde-fe72-4978-9dc2-6271d00e81d6"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\tdelete LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>"}]}],"_substeps":{"idx":"MYa961a6f1-757c-486f-b231-dcf771d2f75a","name":"substeps","custparents":[{"idx":"MY6b0e00aa-ad29-431d-b18b-884ec82f2af8"}],"children":[{"idx":"MY0efbd00a-efe1-4755-8c6a-7814751fdb60","name":"define the surfix of the zip names","custparents":[{"idx":"MYa961a6f1-757c-486f-b231-dcf771d2f75a"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%let zipname_file_surfix =%scan(&amp;zipnames_surfix, &amp;i);</div><div class=\"ql-code-block\">\t\t%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</div></div><p>t///</p>","children":[{"idx":"MYc8d1a022-5379-464b-8724-b1f104dfaab5","name":"make a list of distinct drug codes (%makedrugCodeList)","custparents":[{"idx":"MY0efbd00a-efe1-4755-8c6a-7814751fdb60"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%makedrugCodeList(zipname_file_surfix=&amp;zipname_file_surfix);</div></div><p>t///</p><p><br></p>","children":[{"idx":"MYd7d9a761-ecf6-4de4-8da6-c315acc0ccf1","name":"link files from the zip (%linkfilesInAZip)","custparents":[{"idx":"MYc8d1a022-5379-464b-8724-b1f104dfaab5"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%linkfilesInAZip(zipname_file_surfix=&amp;zipname_file_surfix);</div></div><p>t///</p>","children":[{"idx":"MYa7631713-47a0-4873-baa3-0f1d4134641f","name":"let surfix be 'mk' for 'allfiles.zip'","custparents":[{"idx":"MYd7d9a761-ecf6-4de4-8da6-c315acc0ccf1"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%if %length(&amp;zipname_file_surfix)=0 %then %let zipname_file_surfix = mk;</div></div><p>t///</p>","children":[{"idx":"MY881d13e9-fce8-45c9-ac02-9d153f088819","name":"Add source zip surfix and creating date","custparents":[{"idx":"MYa7631713-47a0-4873-baa3-0f1d4134641f"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tdata LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\t\t\tset linkedfile;</div><div class=\"ql-code-block\">\t\t\tSRC = symget('zipname_file_surfix');</div><div class=\"ql-code-block\">/*\t\t\tproject=&amp;_clientprojectname;*/</div><div class=\"ql-code-block\">/*\t\t\tprogram=&amp;_clienttasklabel;*/</div><div class=\"ql-code-block\">\t\t\tcreateDate=date();</div><div class=\"ql-code-block\">\t\trun;</div></div><p>t///</p>","children":[{"idx":"MY4ca002e5-f7f5-426a-aca7-0f8b76c611d6","name":"Append to the target DPD file","custparents":[{"idx":"MY881d13e9-fce8-45c9-ac02-9d153f088819"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tdata DPD;</div><div class=\"ql-code-block\">\t\t\tset DPD LinkAllZips_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div></div><p>t///</p>","children":[]}]}]}],"_substeps":{"idx":"MYf81414eb-2fd3-44db-a061-f0f800b49281","name":"substeps","custparents":[{"idx":"MYd7d9a761-ecf6-4de4-8da6-c315acc0ccf1"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro linkfilesInAZip(zipname_file_surfix=);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local  i srcfilename srcfilenameAndsurfix zipname_file_surfix;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata linkedfile; set drugcodelist&amp;zipname_file_surfix; if drug_code ne ''; run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%do i = 1 %to 11;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\">\t\t%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tproc sql; </div><div class=\"ql-code-block\">\t\t\tcreate table linkedfile  as</div><div class=\"ql-code-block\">\t\t\t\tselect *</div><div class=\"ql-code-block\">\t\t\t\tfrom linkedfile t1</div><div class=\"ql-code-block\">\t\t\t\tleft join</div><div class=\"ql-code-block\">\t\t\t\t&amp;srcfilenameAndsurfix t2</div><div class=\"ql-code-block\">\t\t\t\ton</div><div class=\"ql-code-block\">\t\t\t\tt1.drug_code = t2.drug_code</div><div class=\"ql-code-block\">\t\t\t\t;</div><div class=\"ql-code-block\">\t\tquit;run;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*for the zip _ia, there is an additional file called inactive*/</div><div class=\"ql-code-block\">\t%if %lowcase(&amp;zipname_file_surfix) = _ia %then %do;</div><div class=\"ql-code-block\">\t\tproc sql; </div><div class=\"ql-code-block\">\t\tcreate table linkedfile  as</div><div class=\"ql-code-block\">\t\t\tselect *</div><div class=\"ql-code-block\">\t\t\tfrom linkedfile t1</div><div class=\"ql-code-block\">\t\t\tleft join</div><div class=\"ql-code-block\">\t\t\tinactive t2</div><div class=\"ql-code-block\">\t\t\ton</div><div class=\"ql-code-block\">\t\t\tt1.drug_code = t2.drug_code</div><div class=\"ql-code-block\">\t\t\t;</div><div class=\"ql-code-block\">\t\tquit;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tproc sort data=linkedfile;</div><div class=\"ql-code-block\">\t\tby drug_code last_update_date;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend linkfilesInAZip;</div></div><p>t///</p>","children":[{"idx":"MYfb7c5b25-a438-4f6d-a4c0-eb8be2d04593","name":"Init vars","custparents":[{"idx":"MYf81414eb-2fd3-44db-a061-f0f800b49281"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local  i srcfilename srcfilenameAndsurfix zipname_file_surfix;</div></div><p>t///</p>","children":[{"idx":"MY2319704e-3f19-40e9-98c4-d7e7a773109f","name":"Get the drug code list","custparents":[{"idx":"MYfb7c5b25-a438-4f6d-a4c0-eb8be2d04593"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">data linkedfile; set drugcodelist&amp;zipname_file_surfix; if drug_code ne ''; run;</div></div><p>t///</p>","children":[{"idx":"MYa11d647f-2402-4d6f-b710-ac9a06047178","name":"Loop for each file in the zip","custparents":[{"idx":"MY2319704e-3f19-40e9-98c4-d7e7a773109f"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%do i = 1 %to 11;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\" data-language=\"plain\">%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">proc sql;</div><div class=\"ql-code-block\" data-language=\"plain\">create table linkedfile as</div><div class=\"ql-code-block\" data-language=\"plain\">select *</div><div class=\"ql-code-block\" data-language=\"plain\">from linkedfile t1</div><div class=\"ql-code-block\" data-language=\"plain\">left join</div><div class=\"ql-code-block\" data-language=\"plain\">&amp;srcfilenameAndsurfix t2</div><div class=\"ql-code-block\" data-language=\"plain\">on</div><div class=\"ql-code-block\" data-language=\"plain\">t1.drug_code = t2.drug_code</div><div class=\"ql-code-block\" data-language=\"plain\">;</div><div class=\"ql-code-block\" data-language=\"plain\">quit;run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%end;</div></div><p>t///</p>","children":[{"idx":"MYdd7a5075-9e43-4a23-baf7-23c84098ab4d","name":"sort file by drug code and date of the last update ","custparents":[{"idx":"MYa11d647f-2402-4d6f-b710-ac9a06047178"},{"idx":"MY7eeb805d-1eb9-4051-bead-418260b048b2"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\tproc sort data=linkedfile;</div><div class=\"ql-code-block\">\t\tby drug_code last_update_date;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>"}],"_substeps":{"idx":"MYb2835b94-24d6-44dd-96a9-39b3dbe5269d","name":"substeps","custparents":[{"idx":"MYa11d647f-2402-4d6f-b710-ac9a06047178"}],"NodeDescription":"<p>///t</p><p>t///</p>","children":[{"idx":"MY03971dc8-ff00-48de-b123-54b6cb64aa80","name":"set file name and surfix","custparents":[{"idx":"MYb2835b94-24d6-44dd-96a9-39b3dbe5269d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\">\t\t%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</div></div><p>t///</p>","children":[{"idx":"MYc4ba4c5d-f33c-456c-816c-dd5e5f43a867","name":"Merge the current data set into the set 'linkedfile'","custparents":[{"idx":"MY03971dc8-ff00-48de-b123-54b6cb64aa80"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tproc sql; </div><div class=\"ql-code-block\">\t\t\tcreate table linkedfile  as</div><div class=\"ql-code-block\">\t\t\t\tselect *</div><div class=\"ql-code-block\">\t\t\t\tfrom linkedfile t1</div><div class=\"ql-code-block\">\t\t\t\tleft join</div><div class=\"ql-code-block\">\t\t\t\t&amp;srcfilenameAndsurfix t2</div><div class=\"ql-code-block\">\t\t\t\ton</div><div class=\"ql-code-block\">\t\t\t\tt1.drug_code = t2.drug_code</div><div class=\"ql-code-block\">\t\t\t\t;</div><div class=\"ql-code-block\">\t\tquit;run;</div></div><p>t///</p>"}]}]}},{"idx":"MY7eeb805d-1eb9-4051-bead-418260b048b2","name":"Add inactive.txt from the zip allfiles_ia.zip","custparents":[{"idx":"MY2319704e-3f19-40e9-98c4-d7e7a773109f"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if %lowcase(&amp;zipname_file_surfix) = _ia %then %do;</div><div class=\"ql-code-block\">\t\tproc sql; </div><div class=\"ql-code-block\">\t\tcreate table linkedfile  as</div><div class=\"ql-code-block\">\t\t\tselect *</div><div class=\"ql-code-block\">\t\t\tfrom linkedfile t1</div><div class=\"ql-code-block\">\t\t\tleft join</div><div class=\"ql-code-block\">\t\t\tinactive t2</div><div class=\"ql-code-block\">\t\t\ton</div><div class=\"ql-code-block\">\t\t\tt1.drug_code = t2.drug_code</div><div class=\"ql-code-block\">\t\t\t;</div><div class=\"ql-code-block\">\t\tquit;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>"}]}]}]}}],"_substeps":{"idx":"MY3cb32cf0-48e7-403d-918f-38ff290c89ea","name":"substeps","custparents":[{"idx":"MYc8d1a022-5379-464b-8724-b1f104dfaab5"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro makedrugcodelist(zipname_file_surfix=, debug=);</div><div class=\"ql-code-block\">\t\t%local  i srcfilename srcfilenameAndsurfix zipname_file_surfix debug;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata makedrugcodelist_tmp1;length DRUG_CODE 8. ;delete;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%do i = 1 %to 11;</div><div class=\"ql-code-block\">\t\t\t%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\">\t\t\t%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t\t\tdata makedrugcodelist_tmp1;</div><div class=\"ql-code-block\">\t\t\t\tset makedrugcodelist_tmp1 &amp;srcfilenameAndsurfix(keep=drug_code);</div><div class=\"ql-code-block\">\t\t\trun;\t\t\t</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\tproc sort data=makedrugcodelist_tmp1;</div><div class=\"ql-code-block\">\t\t\tby DRUG_CODE;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tproc sql; </div><div class=\"ql-code-block\">\t\t\tcreate table drugcodelist&amp;zipname_file_surfix as</div><div class=\"ql-code-block\">\t\t\t\tselect distinct drug_code</div><div class=\"ql-code-block\">\t\t\t\tfrom makedrugcodelist_tmp1</div><div class=\"ql-code-block\">\t\t\t;</div><div class=\"ql-code-block\">\t\tquit;run;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*for the zip _ia, there is an additional file called inactive*/</div><div class=\"ql-code-block\">\t\t%if %lowcase(&amp;zipname_file_surfix) =_ia %then %do;</div><div class=\"ql-code-block\">\t\t\tdata makedrugcodelist_tmp3;</div><div class=\"ql-code-block\">\t\t\t\tset drugcodelist&amp;zipname_file_surfix inactive;</div><div class=\"ql-code-block\">\t\t\trun;</div><div class=\"ql-code-block\">\t\t\tproc sql; </div><div class=\"ql-code-block\">\t\t\tcreate table drugcodelist&amp;zipname_file_surfix as</div><div class=\"ql-code-block\">\t\t\t\tselect distinct drug_code</div><div class=\"ql-code-block\">\t\t\t\tfrom makedrugcodelist_tmp3</div><div class=\"ql-code-block\">\t\t\t\t;</div><div class=\"ql-code-block\">\t\t\tquit;run;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\t\tdelete makedrugcodelist_tmp:;</div><div class=\"ql-code-block\">\t\t\trun;quit;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t/*check if all drug_code can be found in the file 'drug'. Not really!*/</div><div class=\"ql-code-block\">/*\t\t%compAB(a=drug, b=drugcodelist&amp;zipname_file_surfix, target=test, vars=drug_code);\t*/</div><div class=\"ql-code-block\">%mend makedrugcodelist;</div></div><p>t///</p>","children":[{"idx":"MY2dbd57bd-dfe1-4ffd-9884-3fab54056ff9","name":"Init vars","custparents":[{"idx":"MY3cb32cf0-48e7-403d-918f-38ff290c89ea"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local  i srcfilename srcfilenameAndsurfix zipname_file_surfix debug;</div></div><p>t///</p>","children":[{"idx":"MY29842752-c533-4e8e-b8a5-fcd62b12b7fc","name":"make an empty set 'makedrugcodelist_tmp1'","custparents":[{"idx":"MY2dbd57bd-dfe1-4ffd-9884-3fab54056ff9"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">data makedrugcodelist_tmp1;length DRUG_CODE 8. ;delete;run;</div></div><p>t///</p>","children":[{"idx":"MYac16799a-70b0-4c63-a1ed-889fee45858b","name":"loop for each file in the zip","custparents":[{"idx":"MY29842752-c533-4e8e-b8a5-fcd62b12b7fc"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%do i = 1 %to 11;</div><div class=\"ql-code-block\" data-language=\"plain\">%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\" data-language=\"plain\">%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\" data-language=\"plain\">data makedrugcodelist_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">set makedrugcodelist_tmp1 &amp;srcfilenameAndsurfix(keep=drug_code);</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">%end;</div></div><p>t///</p>","children":[{"idx":"MY99f11c73-022e-4161-a138-eb4e0677e73a","name":"sort the result by drug code","custparents":[{"idx":"MYac16799a-70b0-4c63-a1ed-889fee45858b"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tproc sort data=makedrugcodelist_tmp1;</div><div class=\"ql-code-block\">\t\t\tby DRUG_CODE;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div></div><p>t///</p>","children":[{"idx":"MY24de415b-3239-42af-bfa0-a0a20c2a0841","name":"save the distinct drug code into the target","custparents":[{"idx":"MY99f11c73-022e-4161-a138-eb4e0677e73a"},{"idx":"MY2929a7c7-a2c8-48bf-8531-722189699271"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tproc sql; </div><div class=\"ql-code-block\">\t\t\tcreate table drugcodelist&amp;zipname_file_surfix as</div><div class=\"ql-code-block\">\t\t\t\tselect distinct drug_code</div><div class=\"ql-code-block\">\t\t\t\tfrom makedrugcodelist_tmp1</div><div class=\"ql-code-block\">\t\t\t;</div><div class=\"ql-code-block\">\t\tquit;run;</div></div><p>t///</p>","children":[{"idx":"MYc3b1f60e-6a25-4bcd-9062-8d05ee4ca848","name":"clean up temp files","custparents":[{"idx":"MY24de415b-3239-42af-bfa0-a0a20c2a0841"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\t\tdelete makedrugcodelist_tmp:;</div><div class=\"ql-code-block\">\t\t\trun;quit;</div><div class=\"ql-code-block\">\t\t%end;</div></div><p>t///</p>"}]}]}],"_substeps":{"idx":"MYa2d9c696-68dc-4588-a526-90e28a654fe5","name":"substeps","custparents":[{"idx":"MYac16799a-70b0-4c63-a1ed-889fee45858b"}],"children":[{"idx":"MYe6ed8ca9-4b96-4b8d-9873-e634c60f215e","name":"define the source file name and surfix","custparents":[{"idx":"MYa2d9c696-68dc-4588-a526-90e28a654fe5"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t\t%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\">\t\t\t%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</div></div><p>t///</p>","children":[{"idx":"MY0e8be204-122e-4d29-8b5a-7786c41425e3","name":"attach the drug code into the drug code list","custparents":[{"idx":"MYe6ed8ca9-4b96-4b8d-9873-e634c60f215e"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t\tdata makedrugcodelist_tmp1;</div><div class=\"ql-code-block\">\t\t\t\tset makedrugcodelist_tmp1 &amp;srcfilenameAndsurfix(keep=drug_code);</div><div class=\"ql-code-block\">\t\t\trun;\t</div></div><p>t///</p>"}]}]}},{"idx":"MY2929a7c7-a2c8-48bf-8531-722189699271","name":"save drug code from inactive.txt (in allfils_ia.zip)","custparents":[{"idx":"MY29842752-c533-4e8e-b8a5-fcd62b12b7fc"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t/*for the zip _ia, there is an additional file called inactive*/</div><div class=\"ql-code-block\">\t\t%if %lowcase(&amp;zipname_file_surfix) =_ia %then %do;</div><div class=\"ql-code-block\">\t\t\tdata makedrugcodelist_tmp3;</div><div class=\"ql-code-block\">\t\t\t\tset drugcodelist&amp;zipname_file_surfix inactive;</div><div class=\"ql-code-block\">\t\t\trun;</div><div class=\"ql-code-block\">\t\t\tproc sql; </div><div class=\"ql-code-block\">\t\t\tcreate table drugcodelist&amp;zipname_file_surfix as</div><div class=\"ql-code-block\">\t\t\t\tselect distinct drug_code</div><div class=\"ql-code-block\">\t\t\t\tfrom makedrugcodelist_tmp3</div><div class=\"ql-code-block\">\t\t\t\t;</div><div class=\"ql-code-block\">\t\t\tquit;run;</div><div class=\"ql-code-block\">\t\t%end;</div></div><p>t///</p>"}]}]}]}}]}]}}]}]}]}]}]}}],"_substeps":{"idx":"MYbb542db9-b3da-4229-bf0c-21e3f4504da7","name":"substeps","custparents":[{"idx":"MY90e113eb-ac8d-4a40-9cf8-21ee14019da6"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro importDataFromAllZips;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local zipname_file  zipname_cols  List_zipnames  i zipname_file_surfix;\t</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%do i = 1 %to 4;</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t%let zipname_file_surfix = %scan(&amp;zipnames_surfix, &amp;i);</div><div class=\"ql-code-block\">\t\t%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%importDataInAZip(</div><div class=\"ql-code-block\">\t\t\t\tzipname_file_surfix=&amp;zipname_file_surfix</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\">%mend importDataFromAllZips;</div></div><p>t///</p>","children":[{"idx":"MY16889417-0a0b-4b1e-b507-22e8701e71f9","name":"Init vars","custparents":[{"idx":"MYbb542db9-b3da-4229-bf0c-21e3f4504da7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local zipname_file  zipname_cols  List_zipnames  i zipname_file_surfix;\t</div></div><p>t///</p>","children":[{"idx":"MY5dab131c-ab6f-44c6-9df9-7dd83d12444e","name":"Loop for the 4 zips","custparents":[{"idx":"MY16889417-0a0b-4b1e-b507-22e8701e71f9"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%do i = 1 %to 4;</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t%let zipname_file_surfix = %scan(&amp;zipnames_surfix, &amp;i);</div><div class=\"ql-code-block\">\t\t%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%importDataInAZip(</div><div class=\"ql-code-block\">\t\t\t\tzipname_file_surfix=&amp;zipname_file_surfix</div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY0ac8ea95-941a-4234-b228-a7a806fa7be3","name":"substeps","custparents":[{"idx":"MY5dab131c-ab6f-44c6-9df9-7dd83d12444e"}],"children":[{"idx":"MYb5ee02ae-25fb-4391-85ff-6c5448b21f19","name":"define the surfix of the zip","custparents":[{"idx":"MY0ac8ea95-941a-4234-b228-a7a806fa7be3"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%let zipname_file_surfix = %scan(&amp;zipnames_surfix, &amp;i);</div><div class=\"ql-code-block\">\t\t%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</div></div><p>t///</p>","children":[{"idx":"MYbfa30b18-1d3b-4d3f-ab06-73e05e9bdf62","name":"Import data from the zip (%importDataInAZip)","custparents":[{"idx":"MYb5ee02ae-25fb-4391-85ff-6c5448b21f19"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%importDataInAZip(</div><div class=\"ql-code-block\" data-language=\"plain\">zipname_file_surfix=&amp;zipname_file_surfix</div><div class=\"ql-code-block\" data-language=\"plain\">);</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY68af6e62-e538-416c-a38d-39f868857ad4","name":"substeps","custparents":[{"idx":"MYbfa30b18-1d3b-4d3f-ab06-73e05e9bdf62"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro importDataInAZip( zipname_file_surfix=);</div><div class=\"ql-code-block\">\t%local zipname_file  zipname_cols srcfilename srcfilenameAndsurfix  zipname_file_surfix i;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%do i =1 %to 11;</div><div class=\"ql-code-block\">\t\t%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; srcfilename= &amp;srcfilename;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%importADataFile(</div><div class=\"ql-code-block\">\t\t\tsrcfilename=&amp;srcfilename, </div><div class=\"ql-code-block\">\t\t\tzipname_file_surfix=&amp;zipname_file_surfix </div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\tdata missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t\t\tset missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t\t\tname_file=symget('srcfilename');</div><div class=\"ql-code-block\">\t\t\tsurfix_zipname=symget('zipname_file_surfix');</div><div class=\"ql-code-block\">\t\t\tkeep drug_code name_file surfix_zipname;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata missingDrugCode;</div><div class=\"ql-code-block\">\t\t\tset missingDrugCode missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;\t\t\t</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*an additional for inactive.txt*/</div><div class=\"ql-code-block\">\t%if %lowcase(&amp;zipname_file_surfix)=_ia %then %do;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\t%importADataFile(</div><div class=\"ql-code-block\">\t\t\tsrcfilename=inactive, </div><div class=\"ql-code-block\">\t\t\tzipname_file_surfix=_ia </div><div class=\"ql-code-block\">\t\t);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t\tdata missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t\t\tset missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t\t\tname_file='inactive';</div><div class=\"ql-code-block\">\t\t\tsurfix_zipname=symget('zipname_file_surfix');</div><div class=\"ql-code-block\">\t\t\tkeep drug_code name_file surfix_zipname;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\tdata missingDrugCode;</div><div class=\"ql-code-block\">\t\t\tset missingDrugCode missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;\t\t\t</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend importDataInAZip;</div></div><p>t///</p>","children":[{"idx":"MYe4d3d481-3c9a-486d-8cf0-f971996d0307","name":"Init vars","custparents":[{"idx":"MY68af6e62-e538-416c-a38d-39f868857ad4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%local zipname_file  zipname_cols srcfilename srcfilenameAndsurfix  zipname_file_surfix i;</div><div class=\"ql-code-block\"><br></div></div><p>t///</p>","children":[{"idx":"MY54efc107-178e-4cce-875b-9c95a6ad72bf","name":"loop for files in the zip","custparents":[{"idx":"MYe4d3d481-3c9a-486d-8cf0-f971996d0307"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%do i =1 %to 11;</div><div class=\"ql-code-block\" data-language=\"plain\">%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%put &gt;&gt;&gt; srcfilename= &amp;srcfilename;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%importADataFile(</div><div class=\"ql-code-block\" data-language=\"plain\">srcfilename=&amp;srcfilename,</div><div class=\"ql-code-block\" data-language=\"plain\">zipname_file_surfix=&amp;zipname_file_surfix</div><div class=\"ql-code-block\" data-language=\"plain\">);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">data missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\" data-language=\"plain\">set missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\" data-language=\"plain\">name_file=symget('srcfilename');</div><div class=\"ql-code-block\" data-language=\"plain\">surfix_zipname=symget('zipname_file_surfix');</div><div class=\"ql-code-block\" data-language=\"plain\">keep drug_code name_file surfix_zipname;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">data missingDrugCode;</div><div class=\"ql-code-block\" data-language=\"plain\">set missingDrugCode missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%end;</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY9ec2f834-d9b6-4395-89d2-29fa8e894ef2","name":"substeps","custparents":[{"idx":"MY54efc107-178e-4cce-875b-9c95a6ad72bf"}],"children":[{"idx":"MY4d8a361e-80b9-44ce-b292-0971792a4f5e","name":"get the file name","custparents":[{"idx":"MY9ec2f834-d9b6-4395-89d2-29fa8e894ef2"}],"children":[{"idx":"MYf8dc9fc1-fb51-4eba-89f3-c1d6bd675628","name":"import data from the file (%importADataFile)","custparents":[{"idx":"MY4d8a361e-80b9-44ce-b292-0971792a4f5e"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%importADataFile(</div><div class=\"ql-code-block\" data-language=\"plain\">srcfilename=&amp;srcfilename,</div><div class=\"ql-code-block\" data-language=\"plain\">zipname_file_surfix=&amp;zipname_file_surfix</div><div class=\"ql-code-block\" data-language=\"plain\">);</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY951b0e37-adde-4977-b45d-3073624a4552","name":"substeps","custparents":[{"idx":"MYf8dc9fc1-fb51-4eba-89f3-c1d6bd675628"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro importADataFile (srcfilename=, zipname_file_surfix=);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local zipname srctxtname targetsetname inputterms srcfilename zipname_file_surfix inputFormat;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%let zipname=allfiles&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t%let srctxtname=&amp;srcfilename&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t/*inactive is a special case*/</div><div class=\"ql-code-block\">\t%if &amp;srcfilename=inactive %then %let srctxtname=inactive;</div><div class=\"ql-code-block\">\t%let targetsetname=&amp;srctxtname;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*1. let SAS know that the source is a zip file which contains files and folders. */</div><div class=\"ql-code-block\">\t/*specify the zip file*/</div><div class=\"ql-code-block\">\tfilename thezip zip \"&amp;localZipsPath.\\&amp;zipname..zip\";</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*a) copy the member file into work directory */</div><div class=\"ql-code-block\">\tfilename thetxt \"%sysfunc(getoption(work))/importdata_tmp.txt\" ;</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t  \tinfile  thezip(&amp;srctxtname..txt) ;</div><div class=\"ql-code-block\">\t  \tfile thetxt;</div><div class=\"ql-code-block\">\t\tinput;</div><div class=\"ql-code-block\">\t\tput _infile_;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*b) get the input format*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset INPUTTERMS;</div><div class=\"ql-code-block\">\t\tif lowcase(strip(name_file)) = lowcase(strip(symget('srcfilename')));</div><div class=\"ql-code-block\">\t\tcall symput('inputterms', inputterms);</div><div class=\"ql-code-block\">\t\tcall symput('inputvartypes', inputvartypes);</div><div class=\"ql-code-block\">\t\tif strip(inputFormat) ne '' then call symput('inputFormat', inputFormat);</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputterms=&amp;inputterms;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputvartypes=&amp;inputvartypes;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputFormat=&amp;inputFormat;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*c) input data into the table*/</div><div class=\"ql-code-block\">\tdata &amp;targetsetname missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\tinfile thetxt dsd missover;</div><div class=\"ql-code-block\">\t\tinput &amp;inputterms ;</div><div class=\"ql-code-block\">\t\t%if %length(&amp;inputFormat) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\tformat &amp;inputFormat;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\">\t\tif drug_code = . then output missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\telse output  &amp;targetsetname;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t%let inputterms=;%let inputvartypes=; %let inputFormat=;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend importADataFile;</div></div><p>t///</p>","children":[{"idx":"MYca9f4885-6fe2-4f22-8ae1-e1200302c76a","name":"init vars","custparents":[{"idx":"MY951b0e37-adde-4977-b45d-3073624a4552"}],"NodeDescription":"<p>///t</p><p><br></p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local zipname srctxtname targetsetname inputterms srcfilename zipname_file_surfix inputFormat;</div><div class=\"ql-code-block\">\t</div></div><p><br></p><p>t///</p>","children":[{"idx":"MY525431f8-f8fa-453e-9103-79d480c30c67","name":"define names of the zip, source, and target files","custparents":[{"idx":"MYca9f4885-6fe2-4f22-8ae1-e1200302c76a"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%let zipname=allfiles&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t%let srctxtname=&amp;srcfilename&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t/*inactive is a special case*/</div><div class=\"ql-code-block\">\t%if &amp;srcfilename=inactive %then %let srctxtname=inactive;</div><div class=\"ql-code-block\">\t%let targetsetname=&amp;srctxtname;</div></div><p>t///</p>","children":[{"idx":"MYe36f24da-82b3-488e-bb68-de31cbc6ec6d","name":"set filename for the zip","custparents":[{"idx":"MY525431f8-f8fa-453e-9103-79d480c30c67"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*1. let SAS know that the source is a zip file which contains files and folders. */</div><div class=\"ql-code-block\">\t/*specify the zip file*/</div><div class=\"ql-code-block\">\tfilename thezip zip \"&amp;localZipsPath.\\&amp;zipname..zip\";</div></div><p>t///</p>","children":[{"idx":"MY6eda9648-adaf-40d1-ad15-d60409e33d95","name":"copy the source file from the zip to a tmp file","custparents":[{"idx":"MYe36f24da-82b3-488e-bb68-de31cbc6ec6d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*a) copy the member file into work directory */</div><div class=\"ql-code-block\">\tfilename thetxt \"%sysfunc(getoption(work))/importdata_tmp.txt\" ;</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t  \tinfile  thezip(&amp;srctxtname..txt) ;</div><div class=\"ql-code-block\">\t  \tfile thetxt;</div><div class=\"ql-code-block\">\t\tinput;</div><div class=\"ql-code-block\">\t\tput _infile_;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>","children":[{"idx":"MY51e881aa-6cf3-4741-9523-215dd14538e4","name":"Determine the input terms (vars, formst)","custparents":[{"idx":"MY6eda9648-adaf-40d1-ad15-d60409e33d95"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*b) get the input format*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset INPUTTERMS;</div><div class=\"ql-code-block\">\t\tif lowcase(strip(name_file)) = lowcase(strip(symget('srcfilename')));</div><div class=\"ql-code-block\">\t\tcall symput('inputterms', inputterms);</div><div class=\"ql-code-block\">\t\tcall symput('inputvartypes', inputvartypes);</div><div class=\"ql-code-block\">\t\tif strip(inputFormat) ne '' then call symput('inputFormat', inputFormat);</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputterms=&amp;inputterms;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputvartypes=&amp;inputvartypes;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputFormat=&amp;inputFormat;</div></div><p>t///</p>","children":[{"idx":"MYfdc3b833-0e03-430e-8f2c-532347f74c99","name":"Input data into the target table","custparents":[{"idx":"MY51e881aa-6cf3-4741-9523-215dd14538e4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*c) input data into the table*/</div><div class=\"ql-code-block\">\tdata &amp;targetsetname missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\tinfile thetxt dsd missover;</div><div class=\"ql-code-block\">\t\tinput &amp;inputterms ;</div><div class=\"ql-code-block\">\t\t%if %length(&amp;inputFormat) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\tformat &amp;inputFormat;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\">\t\tif drug_code = . then output missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\telse output  &amp;targetsetname;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>","children":[{"idx":"MYfdf5e2cc-33c3-49cd-9748-bd2f8da8720f","name":"re-initialize the input term variables","custparents":[{"idx":"MYfdc3b833-0e03-430e-8f2c-532347f74c99"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%let inputterms=;%let inputvartypes=; %let inputFormat=;</div></div><p>t///</p>"}]}]}]}]}]}]}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; srcfilename= &amp;srcfilename;</div></div><p>t///</p>"}]}},{"idx":"MY7395fd2f-b172-4494-b04b-df255766da36","name":"data of inactive.txt (only for allfiles_ia.zip) (%importADataFile)","custparents":[{"idx":"MYe4d3d481-3c9a-486d-8cf0-f971996d0307"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%if %lowcase(&amp;zipname_file_surfix)=_ia %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%importADataFile(</div><div class=\"ql-code-block\" data-language=\"plain\">srcfilename=inactive,</div><div class=\"ql-code-block\" data-language=\"plain\">zipname_file_surfix=_ia</div><div class=\"ql-code-block\" data-language=\"plain\">);</div></div><p>t///</p>","children":[{"idx":"MY42ad686a-4c14-42d6-a6f6-1a649266aed7","name":"prepare missing log","custparents":[{"idx":"MY7395fd2f-b172-4494-b04b-df255766da36"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tdata missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t\t\tset missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t\t\tname_file='inactive';</div><div class=\"ql-code-block\">\t\t\tsurfix_zipname=symget('zipname_file_surfix');</div><div class=\"ql-code-block\">\t\t\tkeep drug_code name_file surfix_zipname;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t\tdata missingDrugCode;</div><div class=\"ql-code-block\">\t\t\tset missingDrugCode missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;\t\t\t</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>"}],"_substeps":{"idx":"9f3fb4ac-1d4b-4ab6-8d4d-b7a6c9c71576","name":"substeps","custparents":[{"idx":"MY7395fd2f-b172-4494-b04b-df255766da36"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro importADataFile (srcfilename=, zipname_file_surfix=);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local zipname srctxtname targetsetname inputterms srcfilename zipname_file_surfix inputFormat;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%let zipname=allfiles&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t%let srctxtname=&amp;srcfilename&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t/*inactive is a special case*/</div><div class=\"ql-code-block\">\t%if &amp;srcfilename=inactive %then %let srctxtname=inactive;</div><div class=\"ql-code-block\">\t%let targetsetname=&amp;srctxtname;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*1. let SAS know that the source is a zip file which contains files and folders. */</div><div class=\"ql-code-block\">\t/*specify the zip file*/</div><div class=\"ql-code-block\">\tfilename thezip zip \"&amp;localZipsPath.\\&amp;zipname..zip\";</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*a) copy the member file into work directory */</div><div class=\"ql-code-block\">\tfilename thetxt \"%sysfunc(getoption(work))/importdata_tmp.txt\" ;</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t  \tinfile  thezip(&amp;srctxtname..txt) ;</div><div class=\"ql-code-block\">\t  \tfile thetxt;</div><div class=\"ql-code-block\">\t\tinput;</div><div class=\"ql-code-block\">\t\tput _infile_;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*b) get the input format*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset INPUTTERMS;</div><div class=\"ql-code-block\">\t\tif lowcase(strip(name_file)) = lowcase(strip(symget('srcfilename')));</div><div class=\"ql-code-block\">\t\tcall symput('inputterms', inputterms);</div><div class=\"ql-code-block\">\t\tcall symput('inputvartypes', inputvartypes);</div><div class=\"ql-code-block\">\t\tif strip(inputFormat) ne '' then call symput('inputFormat', inputFormat);</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputterms=&amp;inputterms;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputvartypes=&amp;inputvartypes;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputFormat=&amp;inputFormat;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*c) input data into the table*/</div><div class=\"ql-code-block\">\tdata &amp;targetsetname missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\tinfile thetxt dsd missover;</div><div class=\"ql-code-block\">\t\tinput &amp;inputterms ;</div><div class=\"ql-code-block\">\t\t%if %length(&amp;inputFormat) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\tformat &amp;inputFormat;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\">\t\tif drug_code = . then output missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\telse output  &amp;targetsetname;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t%let inputterms=;%let inputvartypes=; %let inputFormat=;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend importADataFile;</div></div><p>t///</p>","children":[{"idx":"decfefb7-f5e4-4ca7-9071-2c835a00725a","name":"init vars","custparents":[{"idx":"9f3fb4ac-1d4b-4ab6-8d4d-b7a6c9c71576"}],"NodeDescription":"<p>///t</p><p><br></p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local zipname srctxtname targetsetname inputterms srcfilename zipname_file_surfix inputFormat;</div><div class=\"ql-code-block\">\t</div></div><p><br></p><p>t///</p>","children":[{"idx":"5ccc407c-1384-45e1-9bb9-dca96def21eb","name":"define names of the zip, source, and target files","custparents":[{"idx":"decfefb7-f5e4-4ca7-9071-2c835a00725a"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%let zipname=allfiles&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t%let srctxtname=&amp;srcfilename&amp;zipname_file_surfix;</div><div class=\"ql-code-block\">\t/*inactive is a special case*/</div><div class=\"ql-code-block\">\t%if &amp;srcfilename=inactive %then %let srctxtname=inactive;</div><div class=\"ql-code-block\">\t%let targetsetname=&amp;srctxtname;</div></div><p>t///</p>","children":[{"idx":"56d8d4a5-b4d9-459f-a8d7-ab13a6135b53","name":"set filename for the zip","custparents":[{"idx":"5ccc407c-1384-45e1-9bb9-dca96def21eb"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*1. let SAS know that the source is a zip file which contains files and folders. */</div><div class=\"ql-code-block\">\t/*specify the zip file*/</div><div class=\"ql-code-block\">\tfilename thezip zip \"&amp;localZipsPath.\\&amp;zipname..zip\";</div></div><p>t///</p>","children":[{"idx":"4a790a2c-44c9-433e-a8a6-c6b458946b59","name":"copy the source file from the zip to a tmp file","custparents":[{"idx":"56d8d4a5-b4d9-459f-a8d7-ab13a6135b53"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*a) copy the member file into work directory */</div><div class=\"ql-code-block\">\tfilename thetxt \"%sysfunc(getoption(work))/importdata_tmp.txt\" ;</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t  \tinfile  thezip(&amp;srctxtname..txt) ;</div><div class=\"ql-code-block\">\t  \tfile thetxt;</div><div class=\"ql-code-block\">\t\tinput;</div><div class=\"ql-code-block\">\t\tput _infile_;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>","children":[{"idx":"d3258e27-2dc7-49c7-9e58-60e738d34574","name":"Determine the input terms (vars, formst)","custparents":[{"idx":"4a790a2c-44c9-433e-a8a6-c6b458946b59"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*b) get the input format*/</div><div class=\"ql-code-block\">\tdata _null_;</div><div class=\"ql-code-block\">\t\tset INPUTTERMS;</div><div class=\"ql-code-block\">\t\tif lowcase(strip(name_file)) = lowcase(strip(symget('srcfilename')));</div><div class=\"ql-code-block\">\t\tcall symput('inputterms', inputterms);</div><div class=\"ql-code-block\">\t\tcall symput('inputvartypes', inputvartypes);</div><div class=\"ql-code-block\">\t\tif strip(inputFormat) ne '' then call symput('inputFormat', inputFormat);</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputterms=&amp;inputterms;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputvartypes=&amp;inputvartypes;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt; inputFormat=&amp;inputFormat;</div></div><p>t///</p>","children":[{"idx":"bf587002-537d-434d-ae9b-a344169e074d","name":"Input data into the target table","custparents":[{"idx":"d3258e27-2dc7-49c7-9e58-60e738d34574"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*c) input data into the table*/</div><div class=\"ql-code-block\">\tdata &amp;targetsetname missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\tinfile thetxt dsd missover;</div><div class=\"ql-code-block\">\t\tinput &amp;inputterms ;</div><div class=\"ql-code-block\">\t\t%if %length(&amp;inputFormat) ne 0 %then %do;</div><div class=\"ql-code-block\">\t\t\tformat &amp;inputFormat;</div><div class=\"ql-code-block\">\t\t%end;</div><div class=\"ql-code-block\">\t\tif drug_code = . then output missingdrugcode_&amp;targetsetname;</div><div class=\"ql-code-block\">\t\telse output  &amp;targetsetname;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>","children":[{"idx":"f4652880-61c1-4393-b712-0363d404f88f","name":"re-initialize the input term variables","custparents":[{"idx":"bf587002-537d-434d-ae9b-a344169e074d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%let inputterms=;%let inputvartypes=; %let inputFormat=;</div></div><p>t///</p>"}]}]}]}]}]}]}]}}]}]}}]}]}}]}]}}],"_substeps":{"idx":"MY2326fb5d-ac72-4245-aefe-ae9dc70ce2bd","name":"substeps","custparents":[{"idx":"MYb871dfc4-39ff-487c-ae81-cd2b1feadbf6"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro downloadPDPFiles;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%local ziplist zipname i;</div><div class=\"ql-code-block\">\t%let ziplist =allfiles allfiles_ia allfiles_ap allfiles_dr;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*make a folder 'zips' if the folder does not exist*/</div><div class=\"ql-code-block\">\t/*\tcheck if  the subfolder 'zips exists\t*/</div><div class=\"ql-code-block\">\t%let zipsexists = %sysfunc(filename(fileref, &amp;localZipsPath)) ;</div><div class=\"ql-code-block\">/*\t%put zipsexists = &amp;zipsexists;*/</div><div class=\"ql-code-block\">\t/*if the subfolder 'zips' does not exist, create it. */</div><div class=\"ql-code-block\">\t%if &amp;zipsexists = 0 %then %do;</div><div class=\"ql-code-block\">\t\t/*specify to exit dos command window without typing 'exit' (noxwait)</div><div class=\"ql-code-block\">\t\t\tspecify to wait and do not run the following sas programs until the x commands are done */</div><div class=\"ql-code-block\">\t\toptions noxwait xsync;</div><div class=\"ql-code-block\">\t\tx \"mkdir &amp;localProjectPath.\\zips\";</div><div class=\"ql-code-block\">\t\t/*return to default settings on xwait and xsync*/</div><div class=\"ql-code-block\">\t\toptions xwait xsync;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%do i = 1 %to 4;</div><div class=\"ql-code-block\">\t\t%let zipname = %scan(&amp;ziplist, &amp;i);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; the current zipname is &amp;zipname;</div><div class=\"ql-code-block\">\t\tfilename target \"&amp;localZipsPath.\\&amp;zipname..zip\";</div><div class=\"ql-code-block\">\t\tproc http  url=\"&amp;URL\"  method=\"get\" out=target; </div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend downloadPDPFiles;</div></div><p>t///</p>","children":[{"idx":"MYd5eaa850-0ccd-4ca4-9b69-f713e6078af5","name":"Initialize vars","custparents":[{"idx":"MY2326fb5d-ac72-4245-aefe-ae9dc70ce2bd"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%local ziplist zipname i;</div><div class=\"ql-code-block\">\t%let ziplist =allfiles allfiles_ia allfiles_ap allfiles_dr;</div></div><p>t///</p>","children":[{"idx":"MYc9eb4760-5d65-4a77-b21c-432924223097","name":"make a sub folder 'zips'","custparents":[{"idx":"MYd5eaa850-0ccd-4ca4-9b69-f713e6078af5"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*make a folder 'zips' if the folder does not exist*/</div><div class=\"ql-code-block\" data-language=\"plain\">/*\tcheck if the subfolder 'zips exists\t*/</div><div class=\"ql-code-block\" data-language=\"plain\">%let zipsexists = %sysfunc(filename(fileref, &amp;localZipsPath)) ;</div><div class=\"ql-code-block\" data-language=\"plain\">/*\t%put zipsexists = &amp;zipsexists;*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t/*if the subfolder 'zips' does not exist, create it. */</div><div class=\"ql-code-block\" data-language=\"plain\">\t%if &amp;zipsexists = 0 %then %do;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*specify to exit dos command window without typing 'exit' (noxwait)</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t\tspecify to wait and do not run the following sas programs until the x commands are done */</div><div class=\"ql-code-block\" data-language=\"plain\">\t\toptions noxwait xsync;</div><div class=\"ql-code-block\" data-language=\"plain\">\t\tx \"mkdir &amp;localProjectPath.\\zips\";</div><div class=\"ql-code-block\" data-language=\"plain\">\t\t/*return to default settings on xwait and xsync*/</div><div class=\"ql-code-block\" data-language=\"plain\">\t\toptions xwait xsync;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%end;</div></div><p>t///</p>","children":[{"idx":"MY5e11c0c7-cb77-4eea-a176-ea9baa26887c","name":"Loop for the 4 zips","custparents":[{"idx":"MYc9eb4760-5d65-4a77-b21c-432924223097"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%do i = 1 %to 4;</div><div class=\"ql-code-block\">\t\t%let zipname = %scan(&amp;ziplist, &amp;i);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; the current zipname is &amp;zipname;</div><div class=\"ql-code-block\">\t\tfilename target \"&amp;localZipsPath.\\&amp;zipname..zip\";</div><div class=\"ql-code-block\">\t\tproc http  url=\"&amp;URL\"  method=\"get\" out=target; </div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>","children":[{"idx":"MY853f87d1-1b2a-46e6-b835-1e4f4fe4db08","name":"substeps","custparents":[{"idx":"MY5e11c0c7-cb77-4eea-a176-ea9baa26887c"}],"children":[{"idx":"MYff66e9a1-935f-443a-8e89-7ab361536393","name":"get the zipname from the ziplist string","custparents":[{"idx":"MY853f87d1-1b2a-46e6-b835-1e4f4fe4db08"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%let zipname = %scan(&amp;ziplist, &amp;i);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt; the current zipname is &amp;zipname;</div></div><p>t///</p>","children":[{"idx":"MY011465e3-895a-4f53-b0ea-ef20d62a87f7","name":"download and save the zip","custparents":[{"idx":"MYff66e9a1-935f-443a-8e89-7ab361536393"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\tfilename target \"&amp;localZipsPath.\\&amp;zipname..zip\";</div><div class=\"ql-code-block\">\t\tproc http  url=\"&amp;URL\"  method=\"get\" out=target; </div><div class=\"ql-code-block\">\t\trun;</div></div><p>t///</p>"}]}]}]}]}]}]}}],"_substeps":{"idx":"MY878a8ce4-d66d-4f80-bbe8-5b3c0531f953","name":"substeps","custparents":[{"idx":"MY8b7f0af0-96c8-41f6-8ff3-bb845dc07f28"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*make input terms of all files*/</div><div class=\"ql-code-block\">%macro MakeInputTermsOfAllFiles (debug=);</div><div class=\"ql-code-block\">\t%local  i target name_fileinAZip debug NAMELIST2_FILESINAZIP;</div><div class=\"ql-code-block\">\t%let target=inputTerms;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\tdata &amp;target; length name_file $100. inputTerms $2000.; delete;run;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%let NAMELIST2_FILESINAZIP = &amp;NAMELIST_FILESINAZIP inactive;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*add inactive into the name list. inactive is unique to the zip allfiles_ia. It is only to be used for creating input terms of all files.*/</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; NameList2_filesInAZip = &amp;NameList2_filesInAZip;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%do i = 1 %to 12;</div><div class=\"ql-code-block\">\t\t%let name_fileinAZip = %scan(&amp;NameList2_filesInAZip, &amp;i);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; name_fileinAZip = &amp;name_fileinAZip;</div><div class=\"ql-code-block\">\t\t%MakeInputTermsOfAFile(name_fileinAZip=&amp;name_fileinAZip, target=MakeInputTermsOfAllFiles_tmp1);</div><div class=\"ql-code-block\">\t\t</div><div class=\"ql-code-block\">\t\t/*add the file name and input term into the target file*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset &amp;target MakeInputTermsOfAllFiles_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete MakeInputTermsOfAllFiles_tmp:;</div><div class=\"ql-code-block\">\t\trun;quit;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend MakeInputTermsOfAllFiles;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"5bb23b49-83bf-4469-80f3-04cc09541aac","name":"Initialize variables","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%local  i target name_fileinAZip debug NAMELIST2_FILESINAZIP;</div><div class=\"ql-code-block\" data-language=\"plain\">\t%let target=inputTerms;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"da7ec69f-8e99-416d-a26c-33dac4fb7aba","name":"Create an empty data set as the target","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*define the target data set*/</div><div class=\"ql-code-block\">data &amp;target; length name_file $100. inputTerms $2000.; delete;run;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MY197a73fd-10a6-4e78-a7d2-4bf18fd814fe","name":"Define a string for file names in the raw zips","custparents":[{"idx":"da7ec69f-8e99-416d-a26c-33dac4fb7aba"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">\t/*add inactive into the name list. inactive is unique to the zip allfiles_ia. It is only to be used for creating input terms of all files from the zip allfiles_ia.*/</div><div class=\"ql-code-block\">%let NAMELIST2_FILESINAZIP = &amp;NAMELIST_FILESINAZIP inactive;</div><div class=\"ql-code-block\">\t%put &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; NameList2_filesInAZip = &amp;NameList2_filesInAZip;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MY671ba70b-6d51-4460-b075-1b3b375c3d3d","name":"Loop to get each file name in a zip","custparents":[{"idx":"MY197a73fd-10a6-4e78-a7d2-4bf18fd814fe"}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%do i = 1 %to 12;</div><div class=\"ql-code-block\" data-language=\"plain\">%let name_fileinAZip = %scan(&amp;NameList2_filesInAZip, &amp;i);</div><div class=\"ql-code-block\" data-language=\"plain\">%put &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; name_fileinAZip = &amp;name_fileinAZip;</div><div class=\"ql-code-block\" data-language=\"plain\">%MakeInputTermsOfAFile(name_fileinAZip=&amp;name_fileinAZip, target=MakeInputTermsOfAllFiles_tmp1);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">/*add the file name and input term into the target file*/</div><div class=\"ql-code-block\" data-language=\"plain\">data &amp;target;</div><div class=\"ql-code-block\" data-language=\"plain\">set &amp;target MakeInputTermsOfAllFiles_tmp1;</div><div class=\"ql-code-block\" data-language=\"plain\">run;</div><div class=\"ql-code-block\" data-language=\"plain\">%end;</div></div><p>s///</p><p>t///</p>","children":[{"idx":"MYd6e9508a-6a39-4891-bc98-4e0f9c57a63f","name":"Clean the tmp files","custparents":[{"idx":"MY671ba70b-6d51-4460-b075-1b3b375c3d3d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete MakeInputTermsOfAllFiles_tmp:;</div><div class=\"ql-code-block\">\t\trun;quit;</div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>"}],"_substeps":{"idx":"MY2234a478-0ab2-4e8f-8a0c-2e67c28502e3","name":"substeps","custparents":[{"idx":"MY671ba70b-6d51-4460-b075-1b3b375c3d3d"}],"children":[{"idx":"MY357a22c0-c7ff-49d9-8fe7-31c39ef074fe","name":"determine the file name","custparents":[{"idx":"MY2234a478-0ab2-4e8f-8a0c-2e67c28502e3"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t%let name_fileinAZip = %scan(&amp;NameList2_filesInAZip, &amp;i);</div><div class=\"ql-code-block\">\t\t%put &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; name_fileinAZip = &amp;name_fileinAZip;</div></div><p>t///</p>","children":[{"idx":"MY1ac4982d-9ff2-4d31-9c7f-15916abfef35","name":"define the file (name, vars) (%MakeInput _TermsOfAFile)","custparents":[{"idx":"MY357a22c0-c7ff-49d9-8fe7-31c39ef074fe"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%MakeInputTermsOfAFile(name_fileinAZip=&amp;name_fileinAZip, target=MakeInputTermsOfAllFiles_tmp1);</div></div><p>t///</p>","children":[{"idx":"MY7403d777-d518-41ef-a1d5-0771faa10ae8","name":"Append data from each file into the target","custparents":[{"idx":"MY1ac4982d-9ff2-4d31-9c7f-15916abfef35"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t\t/*add the file name and input term into the target file*/</div><div class=\"ql-code-block\">\t\tdata &amp;target;</div><div class=\"ql-code-block\">\t\t\tset &amp;target MakeInputTermsOfAllFiles_tmp1;</div><div class=\"ql-code-block\">\t\trun;</div></div><p>t///</p>"}],"_substeps":{"idx":"MY744262e1-fdc9-4135-b7e1-66d0c2a598a3","name":"substeps","custparents":[{"idx":"MY1ac4982d-9ff2-4d31-9c7f-15916abfef35"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%macro MakeInputTermsOfAFile (name_fileinAZip=, target=, debug=);</div><div class=\"ql-code-block\">\t%local name_fileinAZip target debug;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*to split the var names, var type, and var length*/</div><div class=\"ql-code-block\">\tdata MakeInputTermsOfAFile_tmp1;</div><div class=\"ql-code-block\">\t\tset &amp;name_fileinAZip.Col_raw;</div><div class=\"ql-code-block\">\t\tif index(type, '(') &gt; 0 then do;</div><div class=\"ql-code-block\">\t\t\ttype1=scan(type, 1, \"(\");</div><div class=\"ql-code-block\">\t\t\tvarLen =tranwrd(scan(type, 2, \"(\"), \")\", \"\");</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\telse type1 = type;</div><div class=\"ql-code-block\">\t\tlength varType $20. varInFormat $20. inputvar $100. inputVarType $100. inputTerm $100. varoutFormat $100.;</div><div class=\"ql-code-block\">\t\tselect ;</div><div class=\"ql-code-block\">\t\t\twhen (lowcase(type1) ='varchar2') varType='$';</div><div class=\"ql-code-block\">\t\t\twhen (lowcase(type1) ='number') varType='';</div><div class=\"ql-code-block\">\t\t\twhen (lowcase(type1) ='date') varType=''; </div><div class=\"ql-code-block\">\t\t\totherwise varType='wrong'; </div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\tif lowcase(type1) ='date' then do;</div><div class=\"ql-code-block\">\t\t\tvarLen='anydtdte11';</div><div class=\"ql-code-block\">\t\t\tvaroutFormat =strip(name) || ' ' || 'date9.';</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\tvarInFormat = strip(varType) || strip(varLen) || \".\";</div><div class=\"ql-code-block\">\t\tinputvar = strip(name);</div><div class=\"ql-code-block\">\t\tinputVarType=strip(name) || ' ' || varType;</div><div class=\"ql-code-block\">\t\tinputTerm= strip(name) || ' :' || strip(varinformat);</div><div class=\"ql-code-block\">\t\tkeep inputvar inputVarType inputTerm varoutFormat;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">\t/*to concatenate the input terms together into one string, like 'DRUG_CODE 8.DRUG_IDENTIFICATION_NUMBER $29.BRAND_NAME $200.HISTORY_DATE anydtdte11.'*/</div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset MakeInputTermsOfAFile_tmp1 end=last;</div><div class=\"ql-code-block\">\t\tlength name_file $100. inputVars $2000. inputVarTypes $2000. inputTerms $2000. inputFormat $2000.;</div><div class=\"ql-code-block\">\t\tretain inputVars inputVarTypes inputTerms inputFormat;</div><div class=\"ql-code-block\">\t\tif _n_=1 then do;</div><div class=\"ql-code-block\">\t\t\tinputvars=inputvar;</div><div class=\"ql-code-block\">\t\t\tinputVarTypes=inputVarType;</div><div class=\"ql-code-block\">\t\t\tinputTerms=inputterm;</div><div class=\"ql-code-block\">\t\t\tinputFormat=varoutFormat;</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\telse do;</div><div class=\"ql-code-block\">\t\t\tinputvars = strip(inputvars) || ' ' || inputvar;</div><div class=\"ql-code-block\">\t\t\tinputVarTypes = strip(inputVarTypes) || ' ' || inputVarType;</div><div class=\"ql-code-block\">\t\t\tinputTerms  = strip(inputTerms) || ' ' || inputterm;</div><div class=\"ql-code-block\">\t\t\tinputFormat  = strip(inputFormat) || ' ' || varoutFormat;</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\tif last;</div><div class=\"ql-code-block\">\t\tname_file = symget('name_fileinAZip');</div><div class=\"ql-code-block\">\t\tkeep name_file inputvars inputVarTypes  inputTerms inputFormat;</div><div class=\"ql-code-block\">\trun;</div><div class=\"ql-code-block\">\t</div><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete MakeInputTermsOfAFile_tmp:;</div><div class=\"ql-code-block\">\t\trun;quit;</div><div class=\"ql-code-block\">\t%end;</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%mend MakeInputTermsOfAFile;</div></div><p>t///</p>","children":[{"idx":"MYcb8d8579-a0cb-4546-ac52-033a60b712ae","name":"initialize variables","custparents":[{"idx":"MY744262e1-fdc9-4135-b7e1-66d0c2a598a3"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">%local name_fileinAZip target debug;</div></div><p>t///</p>","children":[{"idx":"MY042542d6-9505-4d3b-b743-1d6f0efdf70f","name":"Obtain var name, type, in format and out format","custparents":[{"idx":"MYcb8d8579-a0cb-4546-ac52-033a60b712ae"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*to split the var names, var type, and var length*/</div><div class=\"ql-code-block\">\tdata MakeInputTermsOfAFile_tmp1;</div><div class=\"ql-code-block\">\t\tset &amp;name_fileinAZip.Col_raw;</div><div class=\"ql-code-block\">\t\tif index(type, '(') &gt; 0 then do;</div><div class=\"ql-code-block\">\t\t\ttype1=scan(type, 1, \"(\");</div><div class=\"ql-code-block\">\t\t\tvarLen =tranwrd(scan(type, 2, \"(\"), \")\", \"\");</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\telse type1 = type;</div><div class=\"ql-code-block\">\t\tlength varType $20. varInFormat $20. inputvar $100. inputVarType $100. inputTerm $100. varoutFormat $100.;</div><div class=\"ql-code-block\">\t\tselect ;</div><div class=\"ql-code-block\">\t\t\twhen (lowcase(type1) ='varchar2') varType='$';</div><div class=\"ql-code-block\">\t\t\twhen (lowcase(type1) ='number') varType='';</div><div class=\"ql-code-block\">\t\t\twhen (lowcase(type1) ='date') varType=''; </div><div class=\"ql-code-block\">\t\t\totherwise varType='wrong'; </div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\tif lowcase(type1) ='date' then do;</div><div class=\"ql-code-block\">\t\t\tvarLen='anydtdte11';</div><div class=\"ql-code-block\">\t\t\tvaroutFormat =strip(name) || ' ' || 'date9.';</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\tvarInFormat = strip(varType) || strip(varLen) || \".\";</div><div class=\"ql-code-block\">\t\tinputvar = strip(name);</div><div class=\"ql-code-block\">\t\tinputVarType=strip(name) || ' ' || varType;</div><div class=\"ql-code-block\">\t\tinputTerm= strip(name) || ' :' || strip(varinformat);</div><div class=\"ql-code-block\">\t\tkeep inputvar inputVarType inputTerm varoutFormat;</div><div class=\"ql-code-block\">\trun;</div></div><p>t///</p>","children":[{"idx":"MYb0662b18-b87d-4e3c-a99b-2e68a63a1683","name":"save the table specification into the target","custparents":[{"idx":"MY042542d6-9505-4d3b-b743-1d6f0efdf70f"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t/*to concatenate the input terms together into one string, like 'DRUG_CODE 8.DRUG_IDENTIFICATION_NUMBER $29.BRAND_NAME $200.HISTORY_DATE anydtdte11.'*/</div><div class=\"ql-code-block\">\tdata &amp;target;</div><div class=\"ql-code-block\">\t\tset MakeInputTermsOfAFile_tmp1 end=last;</div><div class=\"ql-code-block\">\t\tlength name_file $100. inputVars $2000. inputVarTypes $2000. inputTerms $2000. inputFormat $2000.;</div><div class=\"ql-code-block\">\t\tretain inputVars inputVarTypes inputTerms inputFormat;</div><div class=\"ql-code-block\">\t\tif _n_=1 then do;</div><div class=\"ql-code-block\">\t\t\tinputvars=inputvar;</div><div class=\"ql-code-block\">\t\t\tinputVarTypes=inputVarType;</div><div class=\"ql-code-block\">\t\t\tinputTerms=inputterm;</div><div class=\"ql-code-block\">\t\t\tinputFormat=varoutFormat;</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\telse do;</div><div class=\"ql-code-block\">\t\t\tinputvars = strip(inputvars) || ' ' || inputvar;</div><div class=\"ql-code-block\">\t\t\tinputVarTypes = strip(inputVarTypes) || ' ' || inputVarType;</div><div class=\"ql-code-block\">\t\t\tinputTerms  = strip(inputTerms) || ' ' || inputterm;</div><div class=\"ql-code-block\">\t\t\tinputFormat  = strip(inputFormat) || ' ' || varoutFormat;</div><div class=\"ql-code-block\">\t\tend;</div><div class=\"ql-code-block\">\t\tif last;</div><div class=\"ql-code-block\">\t\tname_file = symget('name_fileinAZip');</div><div class=\"ql-code-block\">\t\tkeep name_file inputvars inputVarTypes  inputTerms inputFormat;</div><div class=\"ql-code-block\">\trun;</div></div><p><br></p><p>t///</p>","children":[{"idx":"MY9b9205b1-41da-4450-81d1-fda54149091e","name":"Clean tmp files","custparents":[{"idx":"MYb0662b18-b87d-4e3c-a99b-2e68a63a1683"}],"NodeDescription":"<p>///t</p><p><br></p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">\t%if &amp;debug ne 1 %then %do;</div><div class=\"ql-code-block\">\t\tproc datasets nolist;</div><div class=\"ql-code-block\">\t\t\tdelete MakeInputTermsOfAFile_tmp:;</div><div class=\"ql-code-block\">\t\trun;quit;</div><div class=\"ql-code-block\">\t%end;</div></div><p>t///</p>"}]}]}]}]}}]}]}}]}]}],"custparents":[{"idx":"MY878a8ce4-d66d-4f80-bbe8-5b3c0531f953"}]}]}}],"custparents":[{"idx":"MY2dcaff6e-f1b8-41b7-8f07-b95a23c2e85b"}]}],"NodeDescription":"<p>///t</p><p><br></p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">/*load the supporint macros*/</div><div class=\"ql-code-block\" data-language=\"plain\">%include \"&amp;localProjectPath.\\supporting.sas\";</div></div><p>t///</p><p><br></p>"}],"custparents":[{"idx":"MY67820148-3236-41a6-b291-6f455dc75103"}]}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*Get the path of the current SAS program*/</div><div class=\"ql-code-block\">%getThisPath;</div></div><p>s///</p><p>t///</p>","_substeps":{"idx":"MYf4931d1e-b5ec-48dd-b6d1-750796adb970","name":"substeps","custparents":[{"idx":"MY67820148-3236-41a6-b291-6f455dc75103"}],"children":[{"idx":"b446cd1d-6328-4dc1-a941-97a7e35010c9","name":"Initialize vars to be used in the macro","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%global&nbsp;currentPath;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%local&nbsp;thisprogramNamePath&nbsp;thisprogramName&nbsp;thisprogramPath&nbsp;thisprojectNamePath&nbsp;thisprojectName&nbsp;thisProjectPath;</div></div><p>s///</p><p>t///</p><p><br></p>","children":[{"idx":"98bddfa9-2d56-47ac-99f6-e9a9ebca02bf","name":"Determine current path (SAS Enhance Editor)","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*If&nbsp;running&nbsp;SAS&nbsp;enhance&nbsp;editor:</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;http://support.sas.com/kb/24/301.html</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*a)&nbsp;Get&nbsp;the&nbsp;current&nbsp;SAS&nbsp;program's&nbsp;name&nbsp;and&nbsp;fullpath&nbsp;path</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;e.g.,&nbsp;&nbsp;C:\\Users\\Z70\\Desktop\\test.sas</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprogramNamePath&nbsp;=&nbsp;&nbsp;%sysget(SAS_EXECFILEPath);</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*b)&nbsp;Get&nbsp;the&nbsp;current&nbsp;SAS&nbsp;program's&nbsp;name</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;e.g.,&nbsp;&nbsp;test.sas*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprogramName&nbsp;=&nbsp;&nbsp;%sysget(SAS_EXECFILEName);</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*c)&nbsp;using&nbsp;a)&nbsp;substracting&nbsp;b)&nbsp;to&nbsp;have&nbsp;the&nbsp;path&nbsp;of&nbsp;the&nbsp;current&nbsp;sas&nbsp;program</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;e.g.,&nbsp;C:\\Users\\Z70\\Desktop\\*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprogramPath&nbsp;=&nbsp;%substr(</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;thisprogramNamePath,&nbsp;1,&nbsp;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%eval(</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%length(&amp;thisprogramNamePath)-%length(&amp;thisprogramName)</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/**/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprogramNameFullPath;*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprogramName;*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprogramPath;*/</div></div><p>s///</p><p>t///</p>","children":[{"idx":"9cd5cb37-f78f-45cb-94ea-21b69a82a77e","name":"Determine the valid path","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">    /*determine the valid path (either in SAS enhance editor, or in SAS EG*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%if&nbsp;%length(&amp;thisprogramPath)=0&nbsp;%then&nbsp;%do;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;currentPath&nbsp;=&nbsp;&amp;thisProjectPath;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%end;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%else&nbsp;%do;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;currentPath&nbsp;=&nbsp;&amp;thisprogramPath;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%end</div></div><p>s///</p><p>t///</p>","children":[{"idx":"53ac7063-8b1e-4d7d-a1ed-560b60a2b27b","name":"Remove the trailing backlash in the path string","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">%if %substr(&amp;currentPath, %length(&amp;currentPath), 1) =\\ %then %let currentPath=%substr(&amp;currentPath, 1, %eval(%length(&amp;currentPath)-1));</div></div><p>s///</p><p>t///</p>","children":[],"custparents":[{"idx":"9cd5cb37-f78f-45cb-94ea-21b69a82a77e"}]}],"custparents":[{"idx":"98bddfa9-2d56-47ac-99f6-e9a9ebca02bf"},{"idx":"efbdcbd5-797e-4c42-8694-e5273d460765"}]}],"custparents":[{"idx":"MY9bded7db-17e5-4400-b007-3849fc2af26b"},{"idx":"b446cd1d-6328-4dc1-a941-97a7e35010c9"}]},{"idx":"efbdcbd5-797e-4c42-8694-e5273d460765","name":"Determine current path (in SAS EG)","NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*alternatively,&nbsp;if&nbsp;running&nbsp;in&nbsp;sas&nbsp;EG:*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprojectNamePath&nbsp;=&nbsp;%sysfunc(dequote(&amp;_clientprojectPath));</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprojectName&nbsp;=&nbsp;%sysfunc(dequote(&amp;_clientprojectName));</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisProjectPath&nbsp;=&nbsp;%substr(</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;thisprojectNamePath,&nbsp;1,&nbsp;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%eval(</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%length(&amp;thisprojectNamePath)-%length(&amp;thisprojectName)</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprojectNamePath;*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprojectName;*/</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisProjectPath;*/</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%if&nbsp;%length(&amp;thisprogramPath)=0&nbsp;%then&nbsp;%do;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;currentPath&nbsp;=&nbsp;&amp;thisProjectPath;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%end;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%else&nbsp;%do;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;currentPath&nbsp;=&nbsp;&amp;thisprogramPath;</div><div class=\"ql-code-block\" data-language=\"plain\">&nbsp;&nbsp;&nbsp;&nbsp;%end</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\" data-language=\"plain\">%if %substr(&amp;currentPath, %length(&amp;currentPath), 1) =\\ %then %let currentPath=%substr(&amp;currentPath, 1, %eval(%length(&amp;currentPath)-1));</div><div class=\"ql-code-block\" data-language=\"plain\">%mend&nbsp;getThisPath</div></div><p>s///</p><p>t///</p>","children":[],"custparents":[{"idx":"MY5222ff66-ce9c-4be9-aa96-c7f3852104c3"},{"idx":"b446cd1d-6328-4dc1-a941-97a7e35010c9"}]}],"custparents":[{"idx":"MYf4931d1e-b5ec-48dd-b6d1-750796adb970"}]}],"NodeDescription":"<p>///t</p><p>///s</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">/*macro&nbsp;to&nbsp;determine&nbsp;the&nbsp;path&nbsp;of&nbsp;the&nbsp;current&nbsp;SAS&nbsp;program*/</div><div class=\"ql-code-block\">%macro&nbsp;getThisPath;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%global&nbsp;currentPath;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%local&nbsp;thisprogramNamePath&nbsp;thisprogramName&nbsp;thisprogramPath&nbsp;thisprojectNamePath&nbsp;thisprojectName&nbsp;thisProjectPath;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*If&nbsp;running&nbsp;SAS&nbsp;enhance&nbsp;editor:</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;http://support.sas.com/kb/24/301.html</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*a)&nbsp;Get&nbsp;the&nbsp;current&nbsp;SAS&nbsp;program's&nbsp;name&nbsp;and&nbsp;fullpath&nbsp;path</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;e.g.,&nbsp;&nbsp;C:\\Users\\Z70\\Desktop\\test.sas</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprogramNamePath&nbsp;=&nbsp;&nbsp;%sysget(SAS_EXECFILEPath);</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*b)&nbsp;Get&nbsp;the&nbsp;current&nbsp;SAS&nbsp;program's&nbsp;name</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;e.g.,&nbsp;&nbsp;test.sas*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprogramName&nbsp;=&nbsp;&nbsp;%sysget(SAS_EXECFILEName);</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*c)&nbsp;using&nbsp;a)&nbsp;substracting&nbsp;b)&nbsp;to&nbsp;have&nbsp;the&nbsp;path&nbsp;of&nbsp;the&nbsp;current&nbsp;sas&nbsp;program</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;e.g.,&nbsp;C:\\Users\\Z70\\Desktop\\*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprogramPath&nbsp;=&nbsp;%substr(</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;thisprogramNamePath,&nbsp;1,&nbsp;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%eval(</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%length(&amp;thisprogramNamePath)-%length(&amp;thisprogramName)</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/**/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprogramNameFullPath;*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprogramName;*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprogramPath;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*alternatively,&nbsp;if&nbsp;running&nbsp;in&nbsp;sas&nbsp;EG:*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprojectNamePath&nbsp;=&nbsp;%sysfunc(dequote(&amp;_clientprojectPath));</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisprojectName&nbsp;=&nbsp;%sysfunc(dequote(&amp;_clientprojectName));</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;thisProjectPath&nbsp;=&nbsp;%substr(</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;thisprojectNamePath,&nbsp;1,&nbsp;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%eval(</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%length(&amp;thisprojectNamePath)-%length(&amp;thisprojectName)</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprojectNamePath;*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisprojectName;*/</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;/*%put&nbsp;&gt;&gt;&gt;&nbsp;&amp;thisProjectPath;*/</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%if&nbsp;%length(&amp;thisprogramPath)=0&nbsp;%then&nbsp;%do;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;currentPath&nbsp;=&nbsp;&amp;thisProjectPath;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%end;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%else&nbsp;%do;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let&nbsp;currentPath&nbsp;=&nbsp;&amp;thisprogramPath;</div><div class=\"ql-code-block\">&nbsp;&nbsp;&nbsp;&nbsp;%end</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">%if %substr(&amp;currentPath, %length(&amp;currentPath), 1) =\\ %then %let currentPath=%substr(&amp;currentPath, 1, %eval(%length(&amp;currentPath)-1));</div><div class=\"ql-code-block\">%mend&nbsp;getThisPath</div></div><p>s///</p><p>t///</p>"}}],"custparents":[{"idx":"cdde1e1f-0f74-410b-835d-6f2402d9ea2a"}]}]}},{"idx":"CodeTask-jw38MmsFadpxzvHY","name":"supporting macros","NodeDescription":"<p>///t</p><p>///s</p><p>/*Supporting macros*/</p><p><br></p><p>/*make input terms of all files*/</p><p>%macro MakeInputTermsOfAllFiles (debug=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local i target name_fileinAZip debug NAMELIST2_FILESINAZIP;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let target=inputTerms;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;data &amp;target; length name_file $100. inputTerms $2000.; delete;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let NAMELIST2_FILESINAZIP = &amp;NAMELIST_FILESINAZIP inactive;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*add inactive into the name list. inactive is unique to the zip allfiles_ia. It is only to be used for creating input terms of all files.*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%put &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; NameList2_filesInAZip = &amp;NameList2_filesInAZip;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%do i = 1 %to 12;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let name_fileinAZip = %scan(&amp;NameList2_filesInAZip, &amp;i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%put &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; name_fileinAZip = &amp;name_fileinAZip;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%MakeInputTermsOfAFile(name_fileinAZip=&amp;name_fileinAZip, target=MakeInputTermsOfAllFiles_tmp1);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*add the file name and input term into the target file*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data &amp;target;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set &amp;target MakeInputTermsOfAllFiles_tmp1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;debug ne 1 %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc datasets nolist;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete MakeInputTermsOfAllFiles_tmp:;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;quit;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>%mend MakeInputTermsOfAllFiles;</p><p><br></p><p>%macro LinkAllZips;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local zipname_file_surfix i pathexists;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*make a folder 'database' if the folder does not exist*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;&nbsp;&nbsp;&nbsp;check if the subfolder 'zips exists&nbsp;&nbsp;&nbsp;&nbsp;*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let pathexists = %sysfunc(filename(fileref,&amp;localDatabasePath)) ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*if the subfolder 'database' does not exist, create it. */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;pathexists = 0 %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*specify to exit dos command window without typing 'exit' (noxwait)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify to wait and do not run the following sas programs until the x commands are done */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options noxwait xsync;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x \"mkdir &amp;localProjectPath.\\database\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*return to the default settings on xwait and xsync*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opitons xwait xsync;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;libname localt \"&amp;localDatabasePath\";</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;data DAD;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format SRC $3. createDate date9.;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><br></p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%do i = 1 %to 4;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let zipname_file_surfix =%scan(&amp;zipnames_surfix, &amp;i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%makedrugCodeList(zipname_file_surfix=&amp;zipname_file_surfix);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%linkfilesInAZip(zipname_file_surfix=&amp;zipname_file_surfix);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if %length(&amp;zipname_file_surfix)=0 %then %let zipname_file_surfix = mk;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data LinkAllZips_tmp1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set linkedfile;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SRC = symget('zipname_file_surfix');</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;project=&amp;_clientprojectname;*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;program=&amp;_clienttasklabel;*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createDate=date();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data DAD;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set DAD LinkAllZips_tmp1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc datasets nolist;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete LinkAllZips_tmp1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;data localt.DAD; set DAD;run;</p><p><br></p><p>%mend LinkAllZips;</p><p>%macro linkfilesInAZip(zipname_file_surfix=);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local i srcfilename srcfilenameAndsurfix zipname_file_surfix;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;data linkedfile; set drugcodelist&amp;zipname_file_surfix; if drug_code ne ''; run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%do i = 1 %to 11;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc sql; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create table linkedfile as</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select *</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from linkedfile t1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left join</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;srcfilenameAndsurfix t2</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.drug_code = t2.drug_code</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*for the zip _ia, there is an additional file called inactive*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if %lowcase(&amp;zipname_file_surfix) = _ia %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc sql; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create table linkedfile as</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select *</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from linkedfile t1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left join</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inactive t2</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t1.drug_code = t2.drug_code</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;proc sort data=linkedfile;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by drug_code last_update_date;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>%mend linkfilesInAZip;</p><p>%macro makedrugcodelist(zipname_file_surfix=, debug=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%local i srcfilename srcfilenameAndsurfix zipname_file_surfix debug;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data makedrugcodelist_tmp1;length DRUG_CODE 8. ;delete;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%do i = 1 %to 11;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let srcfilenameAndsurfix=&amp;srcfilename.&amp;zipname_file_surfix;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data makedrugcodelist_tmp1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set makedrugcodelist_tmp1 &amp;srcfilenameAndsurfix(keep=drug_code);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc sort data=makedrugcodelist_tmp1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by DRUG_CODE;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc sql; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create table drugcodelist&amp;zipname_file_surfix as</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select distinct drug_code</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from makedrugcodelist_tmp1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*for the zip _ia, there is an additional file called inactive*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if %lowcase(&amp;zipname_file_surfix) =_ia %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data makedrugcodelist_tmp3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set drugcodelist&amp;zipname_file_surfix inactive;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc sql; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create table drugcodelist&amp;zipname_file_surfix as</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select distinct drug_code</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from makedrugcodelist_tmp3</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;debug ne 1 %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc datasets nolist;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete makedrugcodelist_tmp:;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;quit;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*check if all drug_code can be found in the file 'drug'. Not really!*/</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%compAB(a=drug, b=drugcodelist&amp;zipname_file_surfix, target=test, vars=drug_code);&nbsp;&nbsp;&nbsp;&nbsp;*/</p><p>%mend makedrugcodelist;</p><p>/*a macro to extract txt files from zips and save as sas datasets*/</p><p>%macro importADataFile (srcfilename=, zipname_file_surfix=);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local zipname srctxtname targetsetname inputterms srcfilename zipname_file_surfix inputFormat;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let zipname=allfiles&amp;zipname_file_surfix;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let srctxtname=&amp;srcfilename&amp;zipname_file_surfix;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*inactive is a special case*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;srcfilename=inactive %then %let srctxtname=inactive;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let targetsetname=&amp;srctxtname;</p><p><br></p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*1. let SAS know that the source is a zip file which contains files and folders. */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*specify the zip file*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;filename thezip zip \"&amp;localZipsPath.\\&amp;zipname..zip\";</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*a) copy the member file into work directory */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;filename thetxt \"%sysfunc(getoption(work))/importdata_tmp.txt\" ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data _null_;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;infile thezip(&amp;srctxtname..txt) ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file thetxt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put _infile_;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*b) get the input format*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data _null_;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set INPUTTERMS;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if lowcase(strip(name_file)) = lowcase(strip(symget('srcfilename')));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;call symput('inputterms', inputterms);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;call symput('inputvartypes', inputvartypes);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if strip(inputFormat) ne '' then call symput('inputFormat', inputFormat);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%put &gt;&gt;&gt; inputterms=&amp;inputterms;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%put &gt;&gt;&gt; inputvartypes=&amp;inputvartypes;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%put &gt;&gt;&gt; inputFormat=&amp;inputFormat;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*c) input data into the table*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data &amp;targetsetname missingdrugcode_&amp;targetsetname;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;infile thetxt dsd missover;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input &amp;inputterms ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if %length(&amp;inputFormat) ne 0 %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format &amp;inputFormat;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if drug_code = . then output missingdrugcode_&amp;targetsetname;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else output &amp;targetsetname;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let inputterms=;%let inputvartypes=; %let inputFormat=;</p><p><br></p><p>%mend importADataFile;</p><p>%macro importDataInAZip( zipname_file_surfix=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local zipname_file zipname_cols srcfilename srcfilenameAndsurfix zipname_file_surfix i;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%do i =1 %to 11;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let srcfilename= %scan(&amp;NameList_filesInAZip, &amp;i);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%put &gt;&gt;&gt; srcfilename= &amp;srcfilename;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%importADataFile(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcfilename=&amp;srcfilename, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipname_file_surfix=&amp;zipname_file_surfix </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name_file=symget('srcfilename');</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;surfix_zipname=symget('zipname_file_surfix');</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keep drug_code name_file surfix_zipname;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data missingDrugCode;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set missingDrugCode missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*an additional for inactive.txt*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if %lowcase(&amp;zipname_file_surfix)=_ia %then %do;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%importADataFile(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcfilename=inactive, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipname_file_surfix=_ia </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name_file='inactive';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;surfix_zipname=symget('zipname_file_surfix');</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keep drug_code name_file surfix_zipname;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data missingDrugCode;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set missingDrugCode missingDrugCode_&amp;srcfilename.&amp;zipname_file_surfix;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p><br></p><p>%mend importDataInAZip;</p><p>%macro importDataFromAllZips;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local zipname_file zipname_cols List_zipnames i zipname_file_surfix;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%do i = 1 %to 4;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let zipname_file_surfix = %scan(&amp;zipnames_surfix, &amp;i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;zipname_file_surfix=_ %then %let zipname_file_surfix =;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%importDataInAZip(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zipname_file_surfix=&amp;zipname_file_surfix</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p>%mend importDataFromAllZips;</p><p><br></p><p>%macro MakeInputTermsOfAFile (name_fileinAZip=, target=, debug=);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local name_fileinAZip target debug;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*to split the var names, var type, and var length*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data MakeInputTermsOfAFile_tmp1;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set &amp;name_fileinAZip.Col_raw;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if index(type, '(') &gt; 0 then do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type1=scan(type, 1, \"(\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;varLen =tranwrd(scan(type, 2, \"(\"), \")\", \"\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else type1 = type;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length varType $20. varInFormat $20. inputvar $100. inputVarType $100. inputTerm $100. varoutFormat $100.;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when (lowcase(type1) ='varchar2') varType='$';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when (lowcase(type1) ='number') varType='';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when (lowcase(type1) ='date') varType=''; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;otherwise varType='wrong'; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if lowcase(type1) ='date' then do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;varLen='anydtdte11';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;varoutFormat =strip(name) || ' ' || 'date9.';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;varInFormat = strip(varType) || strip(varLen) || \".\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputvar = strip(name);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputVarType=strip(name) || ' ' || varType;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputTerm= strip(name) || ' :' || strip(varinformat);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keep inputvar inputVarType inputTerm varoutFormat;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*to concatenate the input terms together into one string, like 'DRUG_CODE 8.DRUG_IDENTIFICATION_NUMBER $29.BRAND_NAME $200.HISTORY_DATE anydtdte11.'*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;data &amp;target;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set MakeInputTermsOfAFile_tmp1 end=last;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length name_file $100. inputVars $2000. inputVarTypes $2000. inputTerms $2000. inputFormat $2000.;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retain inputVars inputVarTypes inputTerms inputFormat;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if _n_=1 then do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputvars=inputvar;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputVarTypes=inputVarType;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputTerms=inputterm;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputFormat=varoutFormat;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputvars = strip(inputvars) || ' ' || inputvar;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputVarTypes = strip(inputVarTypes) || ' ' || inputVarType;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputTerms = strip(inputTerms) || ' ' || inputterm;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputFormat = strip(inputFormat) || ' ' || varoutFormat;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if last;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name_file = symget('name_fileinAZip');</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keep name_file inputvars inputVarTypes inputTerms inputFormat;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;debug ne 1 %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc datasets nolist;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete MakeInputTermsOfAFile_tmp:;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;quit;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>%mend MakeInputTermsOfAFile;</p><p><br></p><p>%macro downloadPDPFiles;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%local ziplist zipname i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let ziplist =allfiles allfiles_ia allfiles_ap allfiles_dr;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*make a folder 'zips' if the folder does not exist*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;&nbsp;&nbsp;&nbsp;check if the subfolder 'zips exists&nbsp;&nbsp;&nbsp;&nbsp;*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%let zipsexists = %sysfunc(filename(fileref, &amp;localZipsPath)) ;</p><p>/*&nbsp;&nbsp;&nbsp;&nbsp;%put zipsexists = &amp;zipsexists;*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/*if the subfolder 'zips' does not exist, create it. */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if &amp;zipsexists = 0 %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*specify to exit dos command window without typing 'exit' (noxwait)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify to wait and do not run the following sas programs until the x commands are done */</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options noxwait xsync;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x \"mkdir &amp;localProjectPath.\\zips\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*return to default settings on xwait and xsync*/</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options xwait xsync;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%do i = 1 %to 4;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let zipname = %scan(&amp;ziplist, &amp;i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%put &gt;&gt;&gt; the current zipname is &amp;zipname;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filename target \"&amp;localZipsPath.\\&amp;zipname..zip\";</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc http url=\"&amp;URL\" method=\"get\" out=target; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>%mend downloadPDPFiles;</p><p><br></p><p>/*Get the path of the current sas program or the current SAS enterprise guide project*/</p><p>%macro getThisPath;</p><p>%global currentPath;</p><p>%local thisprogramNamePath thisprogramName thisprogramPath thisprojectNamePath thisprojectName thisProjectPath;</p><p>/*If running SAS enhance editor:</p><p>http://support.sas.com/kb/24/301.html</p><p>*/</p><p>/*a) Get the current SAS program's name and fullpath path</p><p>e.g., C:\\Users\\Z70\\Desktop\\test.sas</p><p>*/</p><p>%let thisprogramNamePath = %sysget(SAS_EXECFILEPath);</p><p>/*b) Get the current SAS program's name</p><p>e.g., test.sas*/</p><p>%let thisprogramName = %sysget(SAS_EXECFILEName);</p><p>/*c) using a) substracting b) to have the path of the current sas program</p><p>e.g., C:\\Users\\Z70\\Desktop\\*/</p><p>%let thisprogramPath = %substr(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;thisprogramNamePath, 1, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%eval(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%length(&amp;thisprogramNamePath)-%length(&amp;thisprogramName)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</p><p>/**/</p><p>/*%put &gt;&gt;&gt; &amp;thisprogramNameFullPath;*/</p><p>/*%put &gt;&gt;&gt; &amp;thisprogramName;*/</p><p>/*%put &gt;&gt;&gt; &amp;thisprogramPath;*/</p><p><br></p><p>/*alternatively, if running in sas EG:*/</p><p>%let thisprojectNamePath = %sysfunc(dequote(&amp;_clientprojectPath));</p><p>%let thisprojectName = %sysfunc(dequote(&amp;_clientprojectName));</p><p>%let thisProjectPath = %substr(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;thisprojectNamePath, 1, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%eval(</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%length(&amp;thisprojectNamePath)-%length(&amp;thisprojectName)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</p><p><br></p><p>/*%put &gt;&gt;&gt; &amp;thisprojectNamePath;*/</p><p>/*%put &gt;&gt;&gt; &amp;thisprojectName;*/</p><p>/*%put &gt;&gt;&gt; &amp;thisProjectPath;*/</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if %length(&amp;thisprogramPath)=0 %then %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let currentPath = &amp;thisProjectPath;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%else %do;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%let currentPath = &amp;thisprogramPath;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;%end;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;%if %substr(¤tPath, %length(¤tPath), 1) =\\ %then %let currentPath=%substr(¤tPath, 1, %eval(%length(¤tPath)-1));</p><p><br></p><p><br></p><p>%mend getThisPath;</p><p><br></p><p><br></p><p>/*input var names*/</p><p><br></p><p>/*the vars and types are defined according to the page:</p><p>https://www.canada.ca/en/health-canada/services/drugs-health-products/drug-products/drug-product-database/read-file-drug-product-database-data-extract.html</p><p>*/</p><p>/*</p><p>The following vars may exceed the planned length, and the length were redefined</p><p><br></p><p>COMPANY_NAME, DESCRIPTOR, PRODUCT_INFORMATION, SUITE_NUMBER, DRUG_IDENTIFICATION_NUMBER, </p><p>POST_OFFICE_BOX, UPC, ACCESSION_NUMBER, MFR_CODE, PACKAGE_SIZE</p><p>ADDRESS_MAILING_FLAG </p><p>ADDRESS_BILLING_FLAG </p><p>ADDRESS_NOTIFICATION_FLAG </p><p>ADDRESS_OTHER </p><p>BASE</p><p>CURRENT_STATUS_FLAG</p><p>INGREDIENT_SUPPLIED_IND</p><p>PEDIATRIC_FLAG</p><p>*/</p><p><br></p><p>data _null_;run;</p><p><br></p><p>/*https://stats.idre.ucla.edu/sas/faq/how-do-i-read-in-a-character-variable-with-varying-length-in-a-space-delimited-dataset/*/</p><p>/*</p><p>Max 102</p><p>NOTES VARCHAR2(2000)</p><p>max 261</p><p>INGREDIENT_F VARCHAR2(400)</p><p>max 191</p><p>INGREDIENT VARCHAR2(240)</p><p>max 20</p><p>DOSAGE_UNIT_F VARCHAR2(80)</p><p>max 1</p><p>STRENGTH_TYPE_F VARCHAR2(80)</p><p>max 9</p><p>DOSAGE_UNIT VARCHAR2(40)</p><p>max 1</p><p>STRENGTH_TYPE VARCHAR2(40)</p><p>max 12</p><p>STRENGTH_UNIT VARCHAR2(40)</p><p>max 1</p><p>BASE VARCHAR2(1)</p><p>max 1</p><p>INGREDIENT_SUPPLIED_IND VARCHAR2(1)</p><p>*/</p><p>data ingredCol_raw;</p><p>/* length name $100. type $100.;*/</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>ACTIVE_INGREDIENT_CODE NUMBER(6)</p><p>INGREDIENT VARCHAR2(200)</p><p>INGREDIENT_SUPPLIED_IND VARCHAR2(2)</p><p>STRENGTH VARCHAR2(20)</p><p>STRENGTH_UNIT VARCHAR2(20)</p><p>STRENGTH_TYPE VARCHAR2(1)</p><p>DOSAGE_VALUE VARCHAR2(20)</p><p>BASE VARCHAR2(2)</p><p>DOSAGE_UNIT VARCHAR2(10)</p><p>NOTES VARCHAR2(110)</p><p>INGREDIENT_F VARCHAR2(270)</p><p>STRENGTH_UNIT_F VARCHAR2(80)</p><p>STRENGTH_TYPE_F VARCHAR2(1)</p><p>DOSAGE_UNIT_F VARCHAR2(20)</p><p>;</p><p><br></p><p>/*</p><p>Max=21</p><p>COUNTRY_F VARCHAR2(100)</p><p>Max=23</p><p>PROVINCE_F VARCHAR2(100)</p><p>max=80</p><p>COMPANY_NAME VARCHAR2(80)</p><p>max 36</p><p>CITY_NAME VARCHAR2(60)</p><p>max 9</p><p>COMPANY_TYPE VARCHAR2(10)</p><p>max 18</p><p>COUNTRY VARCHAR2(40)</p><p>max 27</p><p>PROVINCE VARCHAR2(40)</p><p>max 20</p><p>SUITE_NUMBER VARCHAR2(20)</p><p>max 15</p><p>POST_OFFICE_BOX VARCHAR2(15)</p><p>max 5</p><p>MFR_CODE VARCHAR2(5)</p><p>max 1</p><p>ADDRESS_MAILING_FLAG VARCHAR2(1)</p><p>max 1</p><p>ADDRESS_BILLING_FLAG VARCHAR2(1)</p><p>max 1</p><p>ADDRESS_NOTIFICATION_FLAG VARCHAR2(1)</p><p>max 1</p><p>ADDRESS_OTHER VARCHAR2(1)</p><p>*/</p><p>data compCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>MFR_CODE VARCHAR2(10)</p><p>COMPANY_CODE NUMBER(6)</p><p>COMPANY_NAME VARCHAR2(100)</p><p>COMPANY_TYPE VARCHAR2(40)</p><p>ADDRESS_MAILING_FLAG VARCHAR2(2)</p><p>ADDRESS_BILLING_FLAG VARCHAR2(2)</p><p>ADDRESS_NOTIFICATION_FLAG VARCHAR2(2)</p><p>ADDRESS_OTHER VARCHAR2(2)</p><p>SUITE_NUMBER VARCHAR2(40)</p><p>STREET_NAME VARCHAR2(80)</p><p>CITY_NAME VARCHAR2(40)</p><p>PROVINCE VARCHAR2(30)</p><p>COUNTRY VARCHAR2(20)</p><p>POSTAL_CODE VARCHAR2(20)</p><p>POST_OFFICE_BOX VARCHAR2(20)</p><p>PROVINCE_F VARCHAR2(30)</p><p>COUNTRY_F VARCHAR2(30)</p><p>;</p><p><br></p><p>/*</p><p>max 118</p><p>BRAND_NAME_F VARCHAR2(300)</p><p><br></p><p>*/</p><p><br></p><p>/*</p><p>max 150</p><p>DESCRIPTOR VARCHAR2(150)</p><p>max 134</p><p>DESCRIPTOR_F VARCHAR2(200)</p><p>max 20</p><p>CLASS_F VARCHAR2(80)</p><p>max 50</p><p>PRODUCT_CATEGORIZATION VARCHAR2(80)</p><p>max 19</p><p>CLASS VARCHAR2(40)</p><p>max 29</p><p>DRUG_IDENTIFICATION_NUMBER VARCHAR2(29)</p><p>max 10</p><p>AI_GROUP_NO VARCHAR2(10)</p><p>max 5</p><p>ACCESSION_NUMBER VARCHAR2(5)</p><p>max 1</p><p>PEDIATRIC_FLAG VARCHAR2(1)</p><p>*/</p><p>data drugCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>PRODUCT_CATEGORIZATION VARCHAR2(50)</p><p>CLASS VARCHAR2(20)</p><p>DRUG_IDENTIFICATION_NUMBER VARCHAR2(40)</p><p>BRAND_NAME VARCHAR2(200)</p><p>DESCRIPTOR VARCHAR2(200)</p><p>PEDIATRIC_FLAG VARCHAR2(2)</p><p>ACCESSION_NUMBER VARCHAR2(10)</p><p>NUMBER_OF_AIS VARCHAR2(10)</p><p>LAST_UPDATE_DATE DATE</p><p>AI_GROUP_NO VARCHAR2(20)</p><p>CLASS_F VARCHAR2(20)</p><p>BRAND_NAME_F VARCHAR2(120)</p><p>DESCRIPTOR_F VARCHAR2(140)</p><p>;</p><p><br></p><p>/*</p><p>Max 37</p><p>STATUS_F VARCHAR2(80)</p><p>Max 1</p><p>CURRENT_STATUS_FLAG VARCHAR2(1)</p><p>*/</p><p><br></p><p>data statusCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>CURRENT_STATUS_FLAG VARCHAR2(2)</p><p>STATUS VARCHAR2(40)</p><p>HISTORY_DATE DATE</p><p>STATUS_F VARCHAR2(40)</p><p>LOT_NUMBER VARCHAR2(50)</p><p>EXPIRATION_DATE DATE</p><p>;</p><p><br></p><p>/*</p><p>Max 51</p><p>PHARMACEUTICAL_FORM_F VARCHAR2(80)</p><p>Max 40</p><p>PHARMACEUTICAL_FORM VARCHAR2(40)</p><p>*/</p><p>data formCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>PHARM_FORM_CODE NUMBER(7)</p><p>PHARMACEUTICAL_FORM VARCHAR2(60)</p><p>PHARMACEUTICAL_FORM_F VARCHAR2(60)</p><p>;</p><p><br></p><p>/*</p><p>Max 1</p><p>PACKAGE_SIZE_UNIT_F VARCHAR2(80)</p><p>Max 1</p><p>PACKAGE_TYPE_F VARCHAR2(80)</p><p>Max 80</p><p>PRODUCT_INFORMATION VARCHAR2(80)</p><p>max 12</p><p>PACKAGE_SIZE_UNIT VARCHAR2(40)</p><p>max 21</p><p>PACKAGE_TYPE VARCHAR2(40)</p><p>max 12</p><p>UPC VARCHAR2(12)</p><p>max 5</p><p>PACKAGE_SIZE VARCHAR2(5)</p><p>*/</p><p>data packageCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>UPC VARCHAR2(20)</p><p>PACKAGE_SIZE_UNIT VARCHAR2(20)</p><p>PACKAGE_TYPE VARCHAR2(25)</p><p>PACKAGE_SIZE VARCHAR2(10)</p><p>PRODUCT_INFORMATION VARCHAR2(100)</p><p>PACKAGE_SIZE_UNIT_F VARCHAR2(1)</p><p>PACKAGE_TYPE_F VARCHAR2(1)</p><p>;</p><p><br></p><p>/*</p><p>max 6</p><p>PHARMACEUTICAL_STD VARCHAR2(40)</p><p>*/</p><p>data pharmCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>PHARMACEUTICAL_STD VARCHAR2(10)</p><p>;</p><p><br></p><p><br></p><p>/*</p><p>max=61</p><p>ROUTE_OF_ADMINISTRATION_F VARCHAR2(80)</p><p>*/</p><p>data routeCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>ROUTE_OF_ADMINISTRATION_CODE NUMBER(6)</p><p>ROUTE_OF_ADMINISTRATION VARCHAR2(40)</p><p>ROUTE_OF_ADMINISTRATION_F VARCHAR2(65)</p><p>;</p><p><br></p><p>/*</p><p>max 26</p><p>SCHEDULE_F VARCHAR2(160)</p><p>max 24</p><p>SCHEDULE VARCHAR2(40)</p><p>*/</p><p>data scheduleCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>SCHEDULE VARCHAR2(30)</p><p>SCHEDULE_F VARCHAR2(30)</p><p>;</p><p><br></p><p>/*</p><p>max=78</p><p>TC_ATC VARCHAR2(120)</p><p>max=1</p><p>TC_ATC_F VARCHAR2(240)</p><p>max=55</p><p>TC_AHFS_F VARCHAR2(160)</p><p>max 8</p><p>TC_ATC_NUMBER VARCHAR2(8)</p><p>*/</p><p>data therCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>TC_ATC_NUMBER VARCHAR2(10)</p><p>TC_ATC VARCHAR2(80)</p><p>TC_AHFS_NUMBER VARCHAR2(20)</p><p>TC_AHFS VARCHAR2(80)</p><p>TC_ATC_F VARCHAR2(1)</p><p>TC_AHFS_F VARCHAR2(60)</p><p>;</p><p><br></p><p>/*</p><p>max=42</p><p>VET_SPECIES_F VARCHAR2(160)</p><p>max 44</p><p>VET_SPECIES VARCHAR2(80)</p><p>max 30</p><p>VET_SUB_SPECIES VARCHAR2(80)</p><p>*/</p><p><br></p><p>data vetCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>VET_SPECIES VARCHAR2(50)</p><p>VET_SUB_SPECIES VARCHAR2(40)</p><p>VET_SPECIES_F VARCHAR2(50)</p><p>;</p><p>/*rename the columns of DIN, brand name, history date, so that they won't be duplciated with the same columns in other files*/</p><p>data inactiveCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>DRUG_IDENTIFICATION_NUMBER_IA VARCHAR2(29)</p><p>BRAND_NAME_IA VARCHAR2(200)</p><p>HISTORY_DATE_IA DATE</p><p>;</p><p><br></p><p>s///</p><p>t///</p>","children":[],"custparents":[{"idx":"MY6918dcc6-08a1-4c6e-8f2b-c366d6146b3f"}]}]},{"idx":"CodeTask-X6YDm8OOkcS7yZkO","name":"substeps","NodeDescription":"///t<br/>///s<br/>/*details*/<br/>s///<br/>t///","children":[{"idx":"CodeTask-Mt7duGaw1H5VnpS2","name":"Get Path","NodeDescription":"///t<br/>///s<br/>/*Get the path of the current sas program or the current SAS enterprise guide project*/<br/>%macro getThisPath&#59<br/>%global currentPath&#59<br/>%local thisprogramNamePath thisprogramName thisprogramPath thisprojectNamePath thisprojectName thisProjectPath&#59<br/>/*If running SAS enhance editor:<br/>http://support.sas.com/kb/24/301.html<br/>*/<br/>/*a) Get the current SAS program's name and fullpath path<br/>e.g.,  C:\\Users\\Z70\\Desktop\\test.sas<br/>*/<br/>%let thisprogramNamePath =  %sysget(SAS_EXECFILEPath)&#59<br/>/*b) Get the current SAS program's name<br/>e.g.,  test.sas*/<br/>%let thisprogramName =  %sysget(SAS_EXECFILEName)&#59<br/>/*c) using a) substracting b) to have the path of the current sas program<br/>e.g., C:\\Users\\Z70\\Desktop\\*/<br/>%let thisprogramPath = %substr(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&thisprogramNamePath, 1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%eval(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%length(&thisprogramNamePath)-%length(&thisprogramName)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>/**/<br/>/*%put >>> &thisprogramNameFullPath&#59*/<br/>/*%put >>> &thisprogramName&#59*/<br/>/*%put >>> &thisprogramPath&#59*/<br/><br/>/*alternatively, if running in sas EG:*/<br/>%let thisprojectNamePath = %sysfunc(dequote(&_clientprojectPath))&#59<br/>%let thisprojectName = %sysfunc(dequote(&_clientprojectName))&#59<br/>%let thisProjectPath = %substr(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&thisprojectNamePath, 1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%eval(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%length(&thisprojectNamePath)-%length(&thisprojectName)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*%put >>> &thisprojectNamePath&#59*/<br/>/*%put >>> &thisprojectName&#59*/<br/>/*%put >>> &thisProjectPath&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%if %length(&thisprogramPath)=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let currentPath = &thisProjectPath&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let currentPath = &thisprogramPath&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getThisPath&#59<br/><br/>s///<br/>t///","children":[],"custparents":[{"idx":"CodeTask-X6YDm8OOkcS7yZkO"}]},{"idx":"CodeTask-I2D66MU3eqQqfaY9","name":"InputVarsTypes","NodeDescription":"<p>///t</p><p>///s</p><p>/*input var names*/</p><p><br></p><p>/*the vars and types are defined according to the page:</p><p>https://www.canada.ca/en/health-canada/services/drugs-health-products/drug-products/drug-product-database/read-file-drug-product-database-data-extract.html</p><p>*/</p><p>/*</p><p>The following vars may exceed the planned length, and the length were redefined</p><p><br></p><p>COMPANY_NAME, DESCRIPTOR, PRODUCT_INFORMATION, SUITE_NUMBER, DRUG_IDENTIFICATION_NUMBER, </p><p>POST_OFFICE_BOX, UPC, ACCESSION_NUMBER, MFR_CODE, PACKAGE_SIZE</p><p>ADDRESS_MAILING_FLAG </p><p>ADDRESS_BILLING_FLAG </p><p>ADDRESS_NOTIFICATION_FLAG </p><p>ADDRESS_OTHER </p><p>BASE</p><p>CURRENT_STATUS_FLAG</p><p>INGREDIENT_SUPPLIED_IND</p><p>PEDIATRIC_FLAG</p><p>*/</p><p><br></p><p>data _null_;run;</p><p><br></p><p>/*https://stats.idre.ucla.edu/sas/faq/how-do-i-read-in-a-character-variable-with-varying-length-in-a-space-delimited-dataset/*/</p><p>/*</p><p>Max 102</p><p>NOTES VARCHAR2(2000)</p><p>max 261</p><p>INGREDIENT_F VARCHAR2(400)</p><p>max 191</p><p>INGREDIENT VARCHAR2(240)</p><p>max 20</p><p>DOSAGE_UNIT_F VARCHAR2(80)</p><p>max 1</p><p>STRENGTH_TYPE_F VARCHAR2(80)</p><p>max 9</p><p>DOSAGE_UNIT VARCHAR2(40)</p><p>max 1</p><p>STRENGTH_TYPE VARCHAR2(40)</p><p>max 12</p><p>STRENGTH_UNIT VARCHAR2(40)</p><p>max 1</p><p>BASE VARCHAR2(1)</p><p>max 1</p><p>INGREDIENT_SUPPLIED_IND VARCHAR2(1)</p><p>*/</p><p>data ingredCol_raw;</p><p>/* length name $100. type $100.;*/</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>ACTIVE_INGREDIENT_CODE NUMBER(6)</p><p>INGREDIENT VARCHAR2(200)</p><p>INGREDIENT_SUPPLIED_IND VARCHAR2(2)</p><p>STRENGTH VARCHAR2(20)</p><p>STRENGTH_UNIT VARCHAR2(20)</p><p>STRENGTH_TYPE VARCHAR2(1)</p><p>DOSAGE_VALUE VARCHAR2(20)</p><p>BASE VARCHAR2(2)</p><p>DOSAGE_UNIT VARCHAR2(10)</p><p>NOTES VARCHAR2(110)</p><p>INGREDIENT_F VARCHAR2(270)</p><p>STRENGTH_UNIT_F VARCHAR2(80)</p><p>STRENGTH_TYPE_F VARCHAR2(1)</p><p>DOSAGE_UNIT_F VARCHAR2(20)</p><p>;</p><p><br></p><p>/*</p><p>Max=21</p><p>COUNTRY_F VARCHAR2(100)</p><p>Max=23</p><p>PROVINCE_F VARCHAR2(100)</p><p>max=80</p><p>COMPANY_NAME VARCHAR2(80)</p><p>max 36</p><p>CITY_NAME VARCHAR2(60)</p><p>max 9</p><p>COMPANY_TYPE VARCHAR2(10)</p><p>max 18</p><p>COUNTRY VARCHAR2(40)</p><p>max 27</p><p>PROVINCE VARCHAR2(40)</p><p>max 20</p><p>SUITE_NUMBER VARCHAR2(20)</p><p>max 15</p><p>POST_OFFICE_BOX VARCHAR2(15)</p><p>max 5</p><p>MFR_CODE VARCHAR2(5)</p><p>max 1</p><p>ADDRESS_MAILING_FLAG VARCHAR2(1)</p><p>max 1</p><p>ADDRESS_BILLING_FLAG VARCHAR2(1)</p><p>max 1</p><p>ADDRESS_NOTIFICATION_FLAG VARCHAR2(1)</p><p>max 1</p><p>ADDRESS_OTHER VARCHAR2(1)</p><p>*/</p><p>data compCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>MFR_CODE VARCHAR2(10)</p><p>COMPANY_CODE NUMBER(6)</p><p>COMPANY_NAME VARCHAR2(100)</p><p>COMPANY_TYPE VARCHAR2(40)</p><p>ADDRESS_MAILING_FLAG VARCHAR2(2)</p><p>ADDRESS_BILLING_FLAG VARCHAR2(2)</p><p>ADDRESS_NOTIFICATION_FLAG VARCHAR2(2)</p><p>ADDRESS_OTHER VARCHAR2(2)</p><p>SUITE_NUMBER VARCHAR2(40)</p><p>STREET_NAME VARCHAR2(80)</p><p>CITY_NAME VARCHAR2(40)</p><p>PROVINCE VARCHAR2(30)</p><p>COUNTRY VARCHAR2(20)</p><p>POSTAL_CODE VARCHAR2(20)</p><p>POST_OFFICE_BOX VARCHAR2(20)</p><p>PROVINCE_F VARCHAR2(30)</p><p>COUNTRY_F VARCHAR2(30)</p><p>;</p><p><br></p><p>/*</p><p>max 118</p><p>BRAND_NAME_F VARCHAR2(300)</p><p><br></p><p>*/</p><p><br></p><p>/*</p><p>max 150</p><p>DESCRIPTOR VARCHAR2(150)</p><p>max 134</p><p>DESCRIPTOR_F VARCHAR2(200)</p><p>max 20</p><p>CLASS_F VARCHAR2(80)</p><p>max 50</p><p>PRODUCT_CATEGORIZATION VARCHAR2(80)</p><p>max 19</p><p>CLASS VARCHAR2(40)</p><p>max 29</p><p>DRUG_IDENTIFICATION_NUMBER VARCHAR2(29)</p><p>max 10</p><p>AI_GROUP_NO VARCHAR2(10)</p><p>max 5</p><p>ACCESSION_NUMBER VARCHAR2(5)</p><p>max 1</p><p>PEDIATRIC_FLAG VARCHAR2(1)</p><p>*/</p><p>data drugCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>PRODUCT_CATEGORIZATION VARCHAR2(50)</p><p>CLASS VARCHAR2(20)</p><p>DRUG_IDENTIFICATION_NUMBER VARCHAR2(40)</p><p>BRAND_NAME VARCHAR2(200)</p><p>DESCRIPTOR VARCHAR2(200)</p><p>PEDIATRIC_FLAG VARCHAR2(2)</p><p>ACCESSION_NUMBER VARCHAR2(10)</p><p>NUMBER_OF_AIS VARCHAR2(10)</p><p>LAST_UPDATE_DATE DATE</p><p>AI_GROUP_NO VARCHAR2(20)</p><p>CLASS_F VARCHAR2(20)</p><p>BRAND_NAME_F VARCHAR2(120)</p><p>DESCRIPTOR_F VARCHAR2(140)</p><p>;</p><p><br></p><p>/*</p><p>Max 37</p><p>STATUS_F VARCHAR2(80)</p><p>Max 1</p><p>CURRENT_STATUS_FLAG VARCHAR2(1)</p><p>*/</p><p><br></p><p>data statusCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>CURRENT_STATUS_FLAG VARCHAR2(2)</p><p>STATUS VARCHAR2(40)</p><p>HISTORY_DATE DATE</p><p>STATUS_F VARCHAR2(40)</p><p>LOT_NUMBER VARCHAR2(50)</p><p>EXPIRATION_DATE DATE</p><p>;</p><p><br></p><p>/*</p><p>Max 51</p><p>PHARMACEUTICAL_FORM_F VARCHAR2(80)</p><p>Max 40</p><p>PHARMACEUTICAL_FORM VARCHAR2(40)</p><p>*/</p><p>data formCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>PHARM_FORM_CODE NUMBER(7)</p><p>PHARMACEUTICAL_FORM VARCHAR2(60)</p><p>PHARMACEUTICAL_FORM_F VARCHAR2(60)</p><p>;</p><p><br></p><p>/*</p><p>Max 1</p><p>PACKAGE_SIZE_UNIT_F VARCHAR2(80)</p><p>Max 1</p><p>PACKAGE_TYPE_F VARCHAR2(80)</p><p>Max 80</p><p>PRODUCT_INFORMATION VARCHAR2(80)</p><p>max 12</p><p>PACKAGE_SIZE_UNIT VARCHAR2(40)</p><p>max 21</p><p>PACKAGE_TYPE VARCHAR2(40)</p><p>max 12</p><p>UPC VARCHAR2(12)</p><p>max 5</p><p>PACKAGE_SIZE VARCHAR2(5)</p><p>*/</p><p>data packageCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>UPC VARCHAR2(20)</p><p>PACKAGE_SIZE_UNIT VARCHAR2(20)</p><p>PACKAGE_TYPE VARCHAR2(25)</p><p>PACKAGE_SIZE VARCHAR2(10)</p><p>PRODUCT_INFORMATION VARCHAR2(100)</p><p>PACKAGE_SIZE_UNIT_F VARCHAR2(1)</p><p>PACKAGE_TYPE_F VARCHAR2(1)</p><p>;</p><p><br></p><p>/*</p><p>max 6</p><p>PHARMACEUTICAL_STD VARCHAR2(40)</p><p>*/</p><p>data pharmCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>PHARMACEUTICAL_STD VARCHAR2(10)</p><p>;</p><p><br></p><p><br></p><p>/*</p><p>max=61</p><p>ROUTE_OF_ADMINISTRATION_F VARCHAR2(80)</p><p>*/</p><p>data routeCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>ROUTE_OF_ADMINISTRATION_CODE NUMBER(6)</p><p>ROUTE_OF_ADMINISTRATION VARCHAR2(40)</p><p>ROUTE_OF_ADMINISTRATION_F VARCHAR2(65)</p><p>;</p><p><br></p><p>/*</p><p>max 26</p><p>SCHEDULE_F VARCHAR2(160)</p><p>max 24</p><p>SCHEDULE VARCHAR2(40)</p><p>*/</p><p>data scheduleCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>SCHEDULE VARCHAR2(30)</p><p>SCHEDULE_F VARCHAR2(30)</p><p>;</p><p><br></p><p>/*</p><p>max=78</p><p>TC_ATC VARCHAR2(120)</p><p>max=1</p><p>TC_ATC_F VARCHAR2(240)</p><p>max=55</p><p>TC_AHFS_F VARCHAR2(160)</p><p>max 8</p><p>TC_ATC_NUMBER VARCHAR2(8)</p><p>*/</p><p>data therCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>TC_ATC_NUMBER VARCHAR2(10)</p><p>TC_ATC VARCHAR2(80)</p><p>TC_AHFS_NUMBER VARCHAR2(20)</p><p>TC_AHFS VARCHAR2(80)</p><p>TC_ATC_F VARCHAR2(1)</p><p>TC_AHFS_F VARCHAR2(60)</p><p>;</p><p><br></p><p>/*</p><p>max=42</p><p>VET_SPECIES_F VARCHAR2(160)</p><p>max 44</p><p>VET_SPECIES VARCHAR2(80)</p><p>max 30</p><p>VET_SUB_SPECIES VARCHAR2(80)</p><p>*/</p><p><br></p><p>data vetCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>VET_SPECIES VARCHAR2(50)</p><p>VET_SUB_SPECIES VARCHAR2(40)</p><p>VET_SPECIES_F VARCHAR2(50)</p><p>;</p><p>/*rename the columns of DIN, brand name, history date, so that they won't be duplciated with the same columns in other files*/</p><p>data inactiveCol_raw;</p><p> input name :$100. type :$100.;</p><p> cards;</p><p>DRUG_CODE NUMBER(8)</p><p>DRUG_IDENTIFICATION_NUMBER_IA VARCHAR2(29)</p><p>BRAND_NAME_IA VARCHAR2(200)</p><p>HISTORY_DATE_IA DATE</p><p>;</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p>s///</p><p>t///</p>","children":[{"idx":"CodeTask-X36awYE565uHSHZC","name":"Make input terms","NodeDescription":"///t<br/>///s<br/>/*make input terms of all files*/<br/><br/>data _null_&#59run&#59<br/><br/>/*make input terms of all files*/<br/>%macro MakeInputTermsOfAllFiles (debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local NameList2_filesInAZip i target name_fileinAZip debug&#59<br/>&nbsp&nbsp&nbsp&nbsp%let target=inputTerms&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata &target&#59 length name_file $100. inputTerms $2000.&#59 delete&#59run&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp/*add inactive into the name list. inactive is unique to the zip allfiles_ia. It is only to be used for creating input terms of all files.*/<br/>&nbsp&nbsp&nbsp&nbsp%let NameList2_filesInAZip = &NameList_filesInAZip inactive&#59<br/>&nbsp&nbsp&nbsp&nbsp%put >>>>>>>>>>>>>>>>>> NameList2_filesInAZip = &NameList2_filesInAZip&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do i = 1 %to 12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let name_fileinAZip = %scan(&NameList2_filesInAZip, &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>>>>>>>>>>>>>>>>> name_fileinAZip = &name_fileinAZip&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%MakeInputTermsOfAFile(name_fileinAZip=&name_fileinAZip, target=MakeInputTermsOfAllFiles_tmp1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*add the file name and input term into the target file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target MakeInputTermsOfAllFiles_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete MakeInputTermsOfAllFiles_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend MakeInputTermsOfAllFiles&#59<br/>%MakeInputTermsOfAllFiles&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-YlAbuUlT2qggjvtb","name":"Demo make input terms","NodeDescription":"///t<br/>///s<br/>/*demo make input terms like <br/> like 'DRUG_CODE 8.DRUG_IDENTIFICATION_NUMBER $29.BRAND_NAME $200.HISTORY_DATE anydtdte11.'<br/>*/<br/><br/>data inactiveCol_raw&#59<br/> input name :$100. type :$100.&#59<br/> cards&#59<br/>DRUG_CODE NUMBER(8)<br/>DRUG_IDENTIFICATION_NUMBER VARCHAR2(29)<br/>BRAND_NAME VARCHAR2(200)<br/>HISTORY_DATE DATE<br/>&#59<br/>run&#59<br/><br/>/*to split the var names, var type, and var length*/<br/>data _tmp1&#59<br/>&nbsp&nbsp&nbsp&nbspset inactiveCol_raw&#59<br/>&nbsp&nbsp&nbsp&nbspif index(type, '(') > 0 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype1=scan(type, 1, \"(\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarLen =tranwrd(scan(type, 2, \"(\"), \")\", \"\")&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse type1 = type&#59<br/>&nbsp&nbsp&nbsp&nbsplength varType $20. varInFormat $20. inputvar $100. inputVarType $100. inputTerm $100. varoutFormat $100.&#59<br/>&nbsp&nbsp&nbsp&nbspselect &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (lowcase(type1) ='varchar2') varType='$'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (lowcase(type1) ='number') varType=''&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (lowcase(type1) ='date') varType=''&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise varType='wrong'&#59 <br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif lowcase(type1) ='date' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarLen='anydtdte11'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvaroutFormat =strip(name) || ' ' || 'date9.'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspvarInFormat = strip(varType) || strip(varLen) || \".\"&#59<br/>&nbsp&nbsp&nbsp&nbspinputvar = strip(name)&#59<br/>&nbsp&nbsp&nbsp&nbspinputVarType=strip(name) || ' ' || varType&#59<br/>&nbsp&nbsp&nbsp&nbspinputTerm= strip(name) || ' :' || strip(varinformat)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep inputvar inputVarType inputTerm varoutFormat&#59<br/>run&#59<br/><br/>/*to concatenate the input terms together into one string, like 'DRUG_CODE 8.DRUG_IDENTIFICATION_NUMBER $29.BRAND_NAME $200.HISTORY_DATE anydtdte11.'*/<br/>data _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp1 end=last&#59<br/>&nbsp&nbsp&nbsp&nbsplength inputVars $2000. inputVarTypes $2000. inputTerms $2000. inputFormat $2000.&#59<br/>&nbsp&nbsp&nbsp&nbspretain inputVars inputVarTypes inputTerms inputFormat&#59<br/>&nbsp&nbsp&nbsp&nbspif _n_=1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputvars=inputvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputVarTypes=inputVarType&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputTerms=inputterm&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputFormat=varoutFormat&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputvars = strip(inputvars) || ' ' || inputvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputVarTypes = strip(inputVarTypes) || ' ' || inputVarType&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputTerms  = strip(inputTerms) || ' ' || inputterm&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputFormat  = strip(inputFormat) || ' ' || varoutFormat&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif last&#59<br/>&nbsp&nbsp&nbsp&nbspkeep inputvars inputVarTypes  inputTerms inputFormat&#59<br/>run&#59<br/><br/>/*The macro to make input terms for a given file*/<br/>%macro MakeInputTermsOfAFile (name_fileinAZip=, target=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local name_fileinAZip target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*to split the var names, var type, and var length*/<br/>&nbsp&nbsp&nbsp&nbspdata MakeInputTermsOfAFile_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &name_fileinAZip.Col_raw&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif index(type, '(') > 0 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype1=scan(type, 1, \"(\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarLen =tranwrd(scan(type, 2, \"(\"), \")\", \"\")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse type1 = type&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplength varType $20. varInFormat $20. inputvar $100. inputVarType $100. inputTerm $100. varoutFormat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (lowcase(type1) ='varchar2') varType='$'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (lowcase(type1) ='number') varType=''&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (lowcase(type1) ='date') varType=''&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise varType='wrong'&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif lowcase(type1) ='date' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarLen='anydtdte11'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvaroutFormat =strip(name) || ' ' || 'date9.'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarInFormat = strip(varType) || strip(varLen) || \".\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputvar = strip(name)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputVarType=strip(name) || ' ' || varType&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputTerm= strip(name) || ' :' || strip(varinformat)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep inputvar inputVarType inputTerm varoutFormat&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*to concatenate the input terms together into one string, like 'DRUG_CODE 8.DRUG_IDENTIFICATION_NUMBER $29.BRAND_NAME $200.HISTORY_DATE anydtdte11.'*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset MakeInputTermsOfAFile_tmp1 end=last&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplength name_file $100. inputVars $2000. inputVarTypes $2000. inputTerms $2000. inputFormat $2000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain inputVars inputVarTypes inputTerms inputFormat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif _n_=1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputvars=inputvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputVarTypes=inputVarType&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputTerms=inputterm&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputFormat=varoutFormat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputvars = strip(inputvars) || ' ' || inputvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputVarTypes = strip(inputVarTypes) || ' ' || inputVarType&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputTerms  = strip(inputTerms) || ' ' || inputterm&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinputFormat  = strip(inputFormat) || ' ' || varoutFormat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspname_file = symget('name_fileinAZip')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep name_file inputvars inputVarTypes  inputTerms inputFormat&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete MakeInputTermsOfAFile_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend MakeInputTermsOfAFile&#59<br/>%MakeInputTermsOfAFile(name_fileinAZip=inactive, target=_tmp1)&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-X36awYE565uHSHZC"}]}],"custparents":[{"idx":"CodeTask-I2D66MU3eqQqfaY9"}]}],"custparents":[{"idx":"CodeTask-Mt7duGaw1H5VnpS2"},{"idx":"CodeTask-X6YDm8OOkcS7yZkO"}]},{"idx":"CodeTask-oh1OMtioF5ewm6BE","name":"1. Download zip file","NodeDescription":"///t<br/>///s<br/>/*Download zip files<br/>the zip files can be downloaded from here:<br/>https://www.canada.ca/en/health-canada/services/drugs-health-products/drug-products/drug-product-database/what-data-extract-drug-product-database.html<br/><br/>Description of the files can be found here<br/>https://www.canada.ca/en/health-canada/services/drugs-health-products/drug-products/drug-product-database/read-file-drug-product-database-data-extract.html<br/><br/>The column names of each file can be found here:<br/>https://www.canada.ca/en/health-canada/services/drugs-health-products/drug-products/drug-product-database/read-file-drug-product-database-data-extract.html<br/>However, the column names are in the webpage as tables and lists. A zip file of the col names has been prepared at:<br/>http://epicanada.x10host.com/epi/downloads/dpdfilecolnames_20191206.zip<br/>*/<br/><br/>%macro downloadPDPFiles(localDataPath=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local url localDataPath ziplist zipname i&#59<br/>&nbsp&nbsp&nbsp&nbsp%let ziplist =allfiles allfiles_ia allfiles_ap allfiles_dr&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do i = 1 %to 4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let zipname = %scan(&ziplist, &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the current zipname is &zipname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let URL=https://www.canada.ca/content/dam/hc-sc/documents/services/drug-product-database/&zipname..zip&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename target \"&localDataPath.\\&zipname..zip\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc http  url=\"&URL\"  method=\"get\" out=target&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*download the zip file containing variable names of each data file*/<br/>/*&nbsp&nbsp&nbsp&nbsp%let zipname = dpdfilecolnames_20191206&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp%let URL=http://epicanada.x10host.com/epi/downloads/dpdfilecolnames_20191206.zip&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspfilename target \"&localDataPath.\\&zipname..zip\"&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspproc http  url=\"&URL\"  method=\"get\" out=target&#59 */<br/>/*&nbsp&nbsp&nbsp&nbsprun&#59*/<br/><br/>%mend downloadPDPFiles&#59<br/>%downloadPDPFiles(localDataPath=F:\\Personal\\Dropbox\\Project\\Canada DPD\\SASProject\\Data)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-iCn74gMbafLZtnco","name":"Demo. Download a zip","NodeDescription":"///t<br/>///s<br/>/*1. download files*/<br/><br/>/*The DPD files are at<br/>https://www.canada.ca/content/dam/hc-sc/documents/services/drug-product-database/drug.zip<br/>*/<br/><br/>/*Define the target path, the URL, and the target file name*/<br/>%let localDataPath=F:\\Personal\\Dropbox\\Project\\Canada DPD\\SASProject\\Data&#59<br/>%let URL=https://www.canada.ca/content/dam/hc-sc/documents/services/drug-product-database/drug.zip&#59<br/>filename target \"&localDataPath.\\drug.zip\"&#59<br/><br/>/*download and save the file*/<br/>/*https://blogs.sas.com/content/sgf/2018/11/01/proc-http-download-data/ */<br/>proc http  url=\"&URL\"  method=\"get\" out=target&#59 run&#59<br/><br/><br/>%let URL=https://www.canada.ca/content/dam/hc-sc/documents/services/drug-product-database/allfiles.zip&#59<br/>filename target \"&localDataPath.\\allfiles.zip\"&#59<br/>proc http  url=\"&URL\"  method=\"get\" out=target&#59 run&#59<br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-oh1OMtioF5ewm6BE"}]}],"custparents":[{"idx":"CodeTask-X36awYE565uHSHZC"},{"idx":"CodeTask-X6YDm8OOkcS7yZkO"}]},{"idx":"CodeTask-rEdldcGeB1lJRYpL","name":"2. Import Data files","NodeDescription":"///t<br/>///s<br/>/*Import data from all 4 zipfiles*/<br/><br/>Data _null_&#59run&#59<br/><br/>%macro importDataFromAllZips(localDataPath=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local localDataPath zipname_file  zipname_cols  List_zipnames zipnames_surfix i zipname_file_surfix&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp%let zipnames_surfix = _ _ia _ap _dr&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do i = 1 %to 4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let zipname_file_surfix = %scan(&zipnames_surfix, &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &zipname_file_surfix=_ %then %let zipname_file_surfix =&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%importDataInAZip(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_file_surfix=&zipname_file_surfix<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend importDataFromAllZips&#59<br/><br/>%importDataFromAllZips (localDataPath=&localDataPath)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-fMql4j9Pf1A8lp1h","name":"Demo Import files from a zip","NodeDescription":"///t<br/>///s<br/>/*import all data files in a zip*/<br/><br/>Data _null_&#59run&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp%let localDataPath=F:\\Personal\\Dropbox\\Project\\Canada DPD\\SASProject\\Data&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp%let zipname_file=allfiles&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp%let zipname_cols=dpdfilecolnames_20191206&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp%let srcfilename=drug&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp%let targetsetname=drug&#59*/<br/><br/>%macro importDataInAZip(localDataPath=, zipname_file_surfix=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local localDataPath zipname_file  zipname_cols srcfilename srcfilenameAndsurfix NameList_filesInAZip zipname_file_surfix i&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let NameList_filesInAZip = vet ther status schedule route pharm package ingred form drug comp&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do i =1 %to 11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let srcfilename= %scan(&NameList_filesInAZip, &i)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> srcfilename= &srcfilename&#59<br/>/**/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%MakeADataSet(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcfilename=&srcfilename,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_file_surfix=&zipname_file_surfix*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%importADataFile(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcfilename=&srcfilename, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_file_surfix=&zipname_file_surfix <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata missingDrugCode_&srcfilename.&zipname_file_surfix&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset missingDrugCode_&srcfilename.&zipname_file_surfix&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspname_file=symget('srcfilename')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsurfix_zipname=symget('zipname_file_surfix')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep drug_code name_file surfix_zipname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata missingDrugCode&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset missingDrugCode missingDrugCode_&srcfilename.&zipname_file_surfix&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*an additional for inactive.txt*/<br/>&nbsp&nbsp&nbsp&nbsp%if %lowcase(&zipname_file_surfix)=_ia %then %do&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%MakeADataSet(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcfilename=inactive,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_file_surfix=_ia*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%importADataFile(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcfilename=inactive, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_file_surfix=_ia <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata missingDrugCode_&srcfilename.&zipname_file_surfix&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset missingDrugCode_&srcfilename.&zipname_file_surfix&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspname_file='inactive'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsurfix_zipname=symget('zipname_file_surfix')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep drug_code name_file surfix_zipname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata missingDrugCode&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset missingDrugCode missingDrugCode_&srcfilename.&zipname_file_surfix&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/><br/>%mend importDataInAZip&#59<br/>%importDataInAZip(<br/>&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, <br/>&nbsp&nbsp&nbsp&nbspzipname_file_surfix=<br/>)&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-yBkCi8eFNg8VFTgk","name":"Demo Macro to  Import a data file","NodeDescription":"///t<br/>///s<br/>/*A macro to import a data file */<br/><br/><br/><br/>%macro MakeADataSet(localDataPath=, srcfilename=, zipname_file_surfix=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local localDataPath zipname_file  zipname_cols srcfilename srcfilenameAndsurfix zipname_file_surfix&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*import the data file*/<br/>&nbsp&nbsp&nbsp&nbsp%importADataFile(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcfilename=&srcfilename, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_file_surfix=&zipname_file_surfix <br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>%mend MakeADataSet&#59<br/>%MakeADataSet(<br/>&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, <br/>&nbsp&nbsp&nbsp&nbspsrcfilename=drug,<br/>&nbsp&nbsp&nbsp&nbspzipname_file_surfix=<br/>)&#59<br/><br/>/*%MakeADataSet(*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplocalDataPath=F:\\Personal\\Dropbox\\Project\\Canada DPD\\SASProject\\Data, */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_file=allfiles_ia,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipname_cols=&zipname_cols,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcfilename=inactive,*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrcfilenameAndsurfix=inactive*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59*/<br/>s///<br/>t///","children":[{"idx":"CodeTask-Ji4G34f6LA6cm6je","name":"Demo1_ImportTxtFileFromZipOld Enconding not used","NodeDescription":"///t<br/>///s<br/>/*<br/>Note: the encoding method is an old approach, and is not used !!!<br/>read from zip file<br/>https://blogs.sas.com/content/sasdummy/2015/05/11/using-filename-zip-to-unzip-and-read-data-files-in-sas/<br/>https://documentation.sas.com/?docsetId=lestmtsglobal&docsetTarget=n1dn0f61yfyzton1l2ngsa1clllr.htm&docsetVersion=9.4&locale=en<br/>most useful is the following:<br/>https://blogs.sas.com/content/sasdummy/2014/01/29/using-filename-zip/<br/>*/<br/>%let localDataPath=F:\\Personal\\Dropbox\\Project\\Canada DPD\\SASProject\\Data&#59<br/>/*1. let SAS know that the source is a zip file which contains files and folders. */<br/>/*specify the zip file*/<br/>filename thezip zip \"&localDataPath.\\allfiles.zip\"&#59<br/><br/>/*Now SAS knows that the nickname 'thezip' refers to the file 'drug.zip', which contains files and folders. <br/>&nbsp&nbsp&nbsp&nbspThese files and folders are called 'members'. e.g., drug.zip contains a file 'drug.txt'. Hence drug.txt is a member of drug.zip<br/>&nbsp&nbsp&nbsp&nbspThe members can be directly cited as <nickname>(<member name>). i.e., in this case, thezip(drug.txt)<br/>&nbsp&nbsp&nbsp&nbspTo input data from this member, there are two ways:<br/>&nbsp&nbsp&nbsp&nbsp1) using customized method:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata drug&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfile thezip(drug.txt) dsd missover lRecl=32760 firstobs=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinput id $6. ...&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe problem is that: a)you have to know the # of vars to input, and you have to know the var types.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is not flexible when read multiple files from a zip, and these multiple files have different # of columns, and data types<br/>&nbsp&nbsp&nbsp&nbsp2) using proc import to input data automatically<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is attractive. However, by far, SAS is stupid enough not ready to allow Proc Import read files from zip directly!<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe trick is to:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa) copy the member file (as a new file) into the work directory (not as a SAS data set, but as what it is), name the copied file,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand give the copied file a nickname. e.g., in the above case,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspload the file drug.txt into work directory, name it as 'copyof_drug.txt' and give it a nick name 'thetxt'<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename thetxt \"%sysfunc(getoption(work))/copyof_drug.txt\" &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  infile  thezip(drug.txt) recfm=n&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  file thetxt&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  input&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  put _infile_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb) use PROC IMPORT to input data from the copied file which has the nickname 'thetxt'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import out=drug<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatafile= thetxt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdbms=dlm   <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelimiter=',' &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatarow=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>*/<br/><br/>/*a) copy the member file into work directory */<br/>filename thetxt \"%sysfunc(getoption(work))/copyof_drug.txt\" &#59<br/>data _null_&#59<br/>  infile  thezip(drug.txt) recfm=n&#59<br/>  file thetxt&#59<br/>  input&#59<br/>  put _infile_&#59<br/>run&#59<br/><br/>/*b) import the file as a dataset*/<br/>proc import out=drug<br/>&nbsp&nbsp&nbsp&nbspdatafile= thetxt<br/>&nbsp&nbsp&nbsp&nbspdbms=csv   <br/>&nbsp&nbsp&nbsp&nbspreplace&#59<br/>&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbspdatarow=1&#59<br/>run&#59<br/>/*proc import out=drug*/<br/>/*&nbsp&nbsp&nbsp&nbspdatafile= thetxt*/<br/>/*&nbsp&nbsp&nbsp&nbspdbms=dlm   */<br/>/*&nbsp&nbsp&nbsp&nbspreplace&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspdelimiter=',' &#59*/<br/>/*&nbsp&nbsp&nbsp&nbspgetnames=no&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspdatarow=1&#59*/<br/>/*run&#59*/<br/><br/>/*It is so awkward. Well done, SAS! */<br/><br/>/*a macro to extract txt files from zips and save as sas datasets*/<br/>%macro importADataFile_old(localDataPath=, zipname=, srctxtname=, targetsetname= )&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local localDataPath zipname srctxtname targetsetname&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. let SAS know that the source is a zip file which contains files and folders. */<br/>&nbsp&nbsp&nbsp&nbsp/*specify the zip file*/<br/>&nbsp&nbsp&nbsp&nbspfilename thezip zip \"&localDataPath.\\&zipname..zip\"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*a) copy the member file into work directory */<br/>&nbsp&nbsp&nbsp&nbspfilename thetxt \"%sysfunc(getoption(work))/importdata_tmp.txt\" &#59<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp  infile  thezip(&srctxtname..txt) &#59<br/>&nbsp&nbsp&nbsp&nbsp  /*the form.txt contains illegal chars, has to use special encoding to keep going. see the demo encoding problems*/<br/>&nbsp&nbsp&nbsp&nbsp%if %lowcase(&srctxtname) = form or %lowcase(&srctxtname) = comp %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfile thetxt encoding='whebrew'&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%else %do&#59<br/>&nbsp&nbsp&nbsp&nbsp  &nbsp&nbsp&nbsp&nbspfile thetxt encoding='whebrew'&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp  input&#59<br/>&nbsp&nbsp&nbsp&nbsp  put _infile_&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*b) import the file as a dataset*/<br/>/*&nbsp&nbsp&nbsp&nbspproc import out=&targetsetname*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatafile= thetxt*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdbms=dlm   */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelimiter=',' &#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatarow=1&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsprun&#59*/<br/>&nbsp&nbsp&nbsp&nbspproc import out=&targetsetname<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatafile= thetxt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdbms=csv   <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatarow=1&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>%mend importADataFile_old&#59<br/><br/>/*%importADataFile(*/<br/>/*&nbsp&nbsp&nbsp&nbsplocalDataPath=F:\\Personal\\Dropbox\\Project\\Canada DPD\\SASProject\\Data, */<br/>/*&nbsp&nbsp&nbsp&nbspzipname=allfiles, */<br/>/*&nbsp&nbsp&nbsp&nbspsrctxtname=drug, */<br/>/*&nbsp&nbsp&nbsp&nbsptargetsetname=drug */<br/>/*)&#59*/<br/><br/><br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-yBkCi8eFNg8VFTgk"}]},{"idx":"CodeTask-rjun85181GrCcH5f","name":"Demo_ImportTxtFileFromZip - Copy","NodeDescription":"///t<br/>///s<br/>/*Rename the auto var names created by proc import with the real names*/<br/><br/>/*get the real variable names from the colname file, add a column to hold the autonames. That way, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe data set Colnames serves as a map of autonames, and real names*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspcall execute(<br/>&nbsp&nbsp&nbsp&nbsp\"data autonames&#59<br/>&nbsp&nbsp&nbsp&nbspset autonames&#59<br/>&nbsp&nbsp&nbsp&nbspautoname='VAR'||strip(_n_)&#59<br/>&nbsp&nbsp&nbsp&nbsprename var1=RealName&#59<br/>&nbsp&nbsp&nbsp&nbspif var = '' then delete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp\"&nbsp&nbsp&nbsp&nbsp)&#59<br/>run&#59<br/><br/>/*the following is the same*/<br/>/*data autonames&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspset header&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspautoname='VAR'||strip(_n_)&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsprename var1=RealName&#59*/<br/>/*run&#59*/<br/><br/>/*https://communities.sas.com/t5/SAS-Programming/Rename-all-variables-at-once/td-p/533814*/<br/>/*in the imported set, rename the autonames with the real names from the col name files*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp set autonames end=last&#59<br/>&nbsp&nbsp&nbsp&nbsp if _n_=1 then call execute('proc datasets library=work nolist nodetails&#59modify drug &#59 rename ')&#59<br/>&nbsp&nbsp&nbsp&nbsp call execute(cats(autoname,'=',RealName))&#59<br/>&nbsp&nbsp&nbsp&nbspif last then call execute('&#59quit&#59')&#59<br/>run&#59<br/><br/>proc print data=drug (obs=10)&#59<br/>run&#59<br/><br/>%macro AssignVarNames(data_colnames=, data_thefile=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data_colnames data_thefile&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp/*get the real variable names from the colname file, add a column to hold the autonames. That way, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe data set Colnames serves as a map of autonames, and real names*/<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall execute(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\"data &data_colnames&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data_colnames&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspautoname='VAR'||strip(_n_)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename var1=RealName&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif var1='' then delete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\"&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp set &data_colnames end=last&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp if _n_=1 then call execute(\"proc datasets library=work nolist nodetails&#59modify &data_thefile &#59 rename \")&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp call execute(cats(autoname,'=',RealName))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last then call execute('&#59run&#59quit&#59')&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>%mend AssignVarNames&#59<br/><br/>%AssignVarNames(data_colnames=cols_tmp, data_thefile=data_tmp)&#59<br/><br/>proc print data=data_tmp(obs=10)&#59run&#59<br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-yBkCi8eFNg8VFTgk"}]},{"idx":"CodeTask-eI6Dy1N76kA47hQl","name":"Encoding problem","NodeDescription":"///t<br/>///s<br/><br/>/*In allfiles.zip, the file form.txt gives trouble when import. The forth column was screwed up and contains illegal characters that are not in utf-8 <br/>&nbsp&nbsp&nbsp&nbspcode collection. Consequently, it reports error when transfering the txt file into a dataset. The SAS program was halted, nothing produced.<br/>&nbsp&nbsp&nbsp&nbspTo solve it, when writing the txt file in the work dir, use  the statement ( file thetxt encoding='whebrew'&#59 ) or <br/>&nbsp&nbsp&nbsp&nbspThis will force to write the source txt to a file with hebrew encoding. <br/>&nbsp&nbsp&nbsp&nbspSuch a file can be read into a dataset with utf-8 coding, those illegal chars skipped.<br/>&nbsp&nbsp&nbsp&nbspWell, it is a make shift, as values in the 4th column are not in French anymore. That column should be discarded.&nbsp&nbsp&nbsp&nbsp<br/>*/<br/><br/>filename thezip zip \"&localDataPath.\\allfiles.zip\"&#59<br/>filename thetxt \"%sysfunc(getoption(work))/copyof_drug.txt\"  &#59<br/><br/>/*the following part also works. but the result values in col4 is awkward*/<br/>/*data _null_&#59*/<br/>/*  infile  thezip(form.txt) recfm=n &#59*/<br/>/*  file thetxt encoding='ms-950'&#59*/<br/>/*  input&#59*/<br/>/*  put _infile_&#59*/<br/>/*run&#59*/<br/>/*data form&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspinfile thetxt delimiter = ',' MISSOVER DSD lrecl=99000 encoding='wlatin2'&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspformat var1 $7. var2 $5. Var3 $25. Var4 $29.&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspinput var1 $ var2 $ var3 $ var4 $&#59*/<br/>/*run&#59*/<br/><br/>/*https://support.sas.com/documentation/onlinedoc/dfdmstudio/2.5/dmpdmsug/Content/dfU_Encodings_SAS.html<br/>&nbsp&nbsp&nbsp&nbspwhen write the file, try whebrew or wgreek  (file thetxt encoding='whebrew'&#59 file thetxt encoding='wgreek' )<br/>*/<br/>data _null_&#59<br/>  infile  thezip(form.txt) recfm=n &#59<br/>  file thetxt encoding='whebrew'&#59 <br/>  input&#59<br/>  put _infile_&#59<br/>run&#59<br/><br/>proc import out=drug<br/>&nbsp&nbsp&nbsp&nbspdatafile= thetxt<br/>&nbsp&nbsp&nbsp&nbspdbms=dlm   <br/>&nbsp&nbsp&nbsp&nbspreplace&#59<br/>&nbsp&nbsp&nbsp&nbspdelimiter=',' &#59<br/>&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbspdatarow=1&#59<br/>run&#59<br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-yBkCi8eFNg8VFTgk"}]},{"idx":"CodeTask-kigREePK2bXrsbh5","name":"Encoding 2 better solution","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/><br/>filename thezip zip \"&localDataPath.\\allfiles.zip\"&#59<br/>filename thetxt \"%sysfunc(getoption(work))/copyof_drug.txt\" &#59<br/><br/><br/>/*Perl expression<br/>https://documentation.sas.com/?docsetId=lefunctionsref&docsetTarget=p1vz3ljudbd756n19502acxazevk.htm&docsetVersion=9.4&locale=en#n0cw1uzj8e88vpn10ba13g63be9t<br/><br/>&nbsp&nbsp&nbsp&nbspSome of the characters are messed up. So the idea is to read the lines, clean the lines by replacing illegal chars with @<br/>&nbsp&nbsp&nbsp&nbspand write the cleaned line into the file 'thetxt'. <br/>*/<br/>data xx1&#59<br/>  infile  thezip(drug.txt) &#59<br/>  file thetxt &#59<br/>  input&#59<br/>&nbsp&nbsp&nbsp&nbspa = prxchange('s/[\\x80-\\xFF]/@/', -1, _infile_)&#59<br/>  put a&#59<br/>run&#59<br/><br/>/*b) import the file as a dataset*/<br/>proc import out=drug<br/>&nbsp&nbsp&nbsp&nbspdatafile= thetxt<br/>&nbsp&nbsp&nbsp&nbspdbms=dlm   <br/>&nbsp&nbsp&nbsp&nbspreplace&#59<br/>&nbsp&nbsp&nbsp&nbspdelimiter=','&#59<br/>&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbspdatarow=1&#59<br/>run&#59<br/><br/>%print(data=drug)&#59<br/>%distinct(data=drug, target=test4, vars=var1)&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-yBkCi8eFNg8VFTgk"}]}],"custparents":[{"idx":"CodeTask-fMql4j9Pf1A8lp1h"}]},{"idx":"CodeTask-S9vxTt2hTDhufTxN","name":"Demo2_ImportTxtFileFromZip keep ASCII0-127","NodeDescription":"///t<br/>///s<br/>/*read from zip file<br/>https://blogs.sas.com/content/sasdummy/2015/05/11/using-filename-zip-to-unzip-and-read-data-files-in-sas/<br/>https://documentation.sas.com/?docsetId=lestmtsglobal&docsetTarget=n1dn0f61yfyzton1l2ngsa1clllr.htm&docsetVersion=9.4&locale=en<br/>most useful is the following:<br/>https://blogs.sas.com/content/sasdummy/2014/01/29/using-filename-zip/<br/>*/<br/>/*%let localDataPath=F:\\Personal\\Dropbox\\Project\\Canada DPD\\SASProject\\Data&#59*/<br/>/*1. let SAS know that the source is a zip file which contains files and folders. */<br/>/*specify the zip file*/<br/>filename thezip zip \"&localDataPath.\\allfiles.zip\"&#59<br/><br/>/*Now SAS knows that the nickname 'thezip' refers to the file 'drug.zip', which contains files and folders. <br/>&nbsp&nbsp&nbsp&nbspThese files and folders are called 'members'. e.g., drug.zip contains a file 'drug.txt'. Hence drug.txt is a member of drug.zip<br/>&nbsp&nbsp&nbsp&nbspThe members can be directly cited as <nickname>(<member name>). i.e., in this case, thezip(drug.txt)<br/>&nbsp&nbsp&nbsp&nbspTo input data from this member, there are two ways:<br/>&nbsp&nbsp&nbsp&nbsp1) using customized method:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata drug&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfile thezip(drug.txt) dsd missover lRecl=32760 firstobs=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinput id $6. ...&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe problem is that: a)you have to know the # of vars to input, and you have to know the var types.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is not flexible when read multiple files from a zip, and these multiple files have different # of columns, and data types<br/>&nbsp&nbsp&nbsp&nbsp2) using proc import to input data automatically<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is attractive. However, by far, SAS is stupid enough not ready to allow Proc Import read files from zip directly!<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe trick is to:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa) copy the member file (as a new file) into the work directory (not as a SAS data set, but as what it is), name the copied file,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand give the copied file a nickname. e.g., in the above case,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspload the file drug.txt into work directory, name it as 'copyof_drug.txt' and give it a nick name 'thetxt'<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename thetxt \"%sysfunc(getoption(work))/copyof_drug.txt\" &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  infile  thezip(drug.txt) recfm=n&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  file thetxt&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  input&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp  put _infile_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb) use PROC IMPORT to input data from the copied file which has the nickname 'thetxt'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import out=drug<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatafile= thetxt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdbms=dlm   <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelimiter=',' &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdatarow=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>*/<br/><br/>/*a) copy the member file into work directory <br/>&nbsp&nbsp&nbsp&nbspThe original data contians French letters, which in some cases causing encoding error using proc import.<br/>&nbsp&nbsp&nbsp&nbsphowever, using infile - input is ok! <br/>*/<br/>filename thetxt \"%sysfunc(getoption(work))/copyof_form.txt\" &#59<br/>data _null_&#59<br/>  &nbsp&nbsp&nbsp&nbspinfile  thezip(vet.txt)&#59<br/>  &nbsp&nbsp&nbsp&nbspfile thetxt&#59<br/>&nbsp&nbsp&nbsp&nbspinput&#59<br/>&nbsp&nbsp&nbsp&nbspput _infile_&#59<br/>run&#59<br/><br/>/*b) get the input format*/<br/>data INPUTTERMS_vet&#59<br/>&nbsp&nbsp&nbsp&nbspset INPUTTERMS&#59<br/>&nbsp&nbsp&nbsp&nbspif lowcase(strip(name_file)) = 'vet'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('inputterms', inputterms)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('inputvartypes', inputvartypes)&#59<br/>run&#59<br/><br/>%put >>> inputterms = &inputterms&#59<br/>%put >>> inputvartypes = &inputvartypes&#59<br/><br/><br/>/*c) input data into the table*/<br/>data vet error&#59<br/>&nbsp&nbsp&nbsp&nbspinfile thetxt dsd missover&#59<br/>&nbsp&nbsp&nbsp&nbspinput &inputterms&#59<br/>&nbsp&nbsp&nbsp&nbspif drug_code=. then output error&#59<br/>&nbsp&nbsp&nbsp&nbspelse output vet&#59<br/>run&#59<br/><br/><br/>/*a macro to extract txt files from zips and save as sas datasets*/<br/>%macro importADataFile (localDataPath=, srcfilename=, zipname_file_surfix=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local localDataPath zipname srctxtname targetsetname inputterms srcfilename zipname_file_surfix inputFormat&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp%let zipname=allfiles&zipname_file_surfix&#59<br/>&nbsp&nbsp&nbsp&nbsp%let srctxtname=&srcfilename&zipname_file_surfix&#59<br/>&nbsp&nbsp&nbsp&nbsp/*inactive is a special case*/<br/>&nbsp&nbsp&nbsp&nbsp%if &srcfilename=inactive %then %let srctxtname=inactive&#59<br/>&nbsp&nbsp&nbsp&nbsp%let targetsetname=&srctxtname&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. let SAS know that the source is a zip file which contains files and folders. */<br/>&nbsp&nbsp&nbsp&nbsp/*specify the zip file*/<br/>&nbsp&nbsp&nbsp&nbspfilename thezip zip \"&localDataPath.\\&zipname..zip\"&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*a) copy the member file into work directory */<br/>&nbsp&nbsp&nbsp&nbspfilename thetxt \"%sysfunc(getoption(work))/importdata_tmp.txt\" &#59<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp  &nbsp&nbsp&nbsp&nbspinfile  thezip(&srctxtname..txt) &#59<br/>&nbsp&nbsp&nbsp&nbsp  &nbsp&nbsp&nbsp&nbspfile thetxt&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspput _infile_&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*b) get the input format*/<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset INPUTTERMS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif lowcase(strip(name_file)) = lowcase(strip(symget('srcfilename')))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('inputterms', inputterms)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('inputvartypes', inputvartypes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(inputFormat) ne '' then call symput('inputFormat', inputFormat)&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%put >>> inputterms=&inputterms&#59<br/>&nbsp&nbsp&nbsp&nbsp%put >>> inputvartypes=&inputvartypes&#59<br/>&nbsp&nbsp&nbsp&nbsp%put >>> inputFormat=&inputFormat&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*c) input data into the table*/<br/>&nbsp&nbsp&nbsp&nbspdata &targetsetname missingdrugcode_&targetsetname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinfile thetxt dsd missover&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinput &inputterms &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&inputFormat) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &inputFormat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif drug_code = . then output missingdrugcode_&targetsetname&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse output  &targetsetname&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let inputterms=&#59%let inputvartypes=&#59 %let inputFormat=&#59<br/><br/>%mend importADataFile&#59<br/><br/>%importADataFile(<br/>&nbsp&nbsp&nbsp&nbsplocalDataPath=&localDataPath, <br/>&nbsp&nbsp&nbsp&nbspsrcfilename=vet, <br/>&nbsp&nbsp&nbsp&nbspzipname_file_surfix= <br/>)&#59<br/><br/><br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-fMql4j9Pf1A8lp1h"}]}],"custparents":[{"idx":"CodeTask-rEdldcGeB1lJRYpL"}]}],"custparents":[{"idx":"CodeTask-oh1OMtioF5ewm6BE"},{"idx":"CodeTask-X6YDm8OOkcS7yZkO"}]},{"idx":"CodeTask-dAV2j9HnmQNvh1Kf","name":"3.Merge data","NodeDescription":"///t<br/>///s<br/>/*Link the databases*/<br/><br/>/*to have all drug codes ever appeared in any of the data file. Presumably, all drug codes should appear in the data drug, but who knows!*/<br/>Data _null_&#59run&#59<br/><br/>%LinkAllZips(localDataPath=&localDataPath)<br/><br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-vyCEOtMgyCG4n5ym","name":"Demo get all drug_cods","NodeDescription":"///t<br/>///s<br/>/*Link the databases*/<br/><br/>/*to have all drug codes ever appeared in any of the data file. Presumably, all drug codes should appear in the data drug, but who knows!*/<br/>%let zipname_file_surfix=&#59<br/><br/>%macro makedrugcodelist(zipname_file_surfix=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local NameList_filesInAZip i srcfilename srcfilenameAndsurfix zipname_file_surfix debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makedrugcodelist_tmp1&#59length DRUG_CODE 8. &#59delete&#59run&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let NameList_filesInAZip = vet ther status schedule route pharm package ingred form drug comp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to 11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let srcfilename= %scan(&NameList_filesInAZip, &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let srcfilenameAndsurfix=&srcfilename.&zipname_file_surfix&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makedrugcodelist_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset makedrugcodelist_tmp1 &srcfilenameAndsurfix(keep=drug_code)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sort data=makedrugcodelist_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby DRUG_CODE&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table drugcodelist&zipname_file_surfix as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct drug_code<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom makedrugcodelist_tmp1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59run&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for the zip _ia, there is an additional file called inactive*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %lowcase(&zipname_file_surfix) =_ia %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata makedrugcodelist_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset drugcodelist&zipname_file_surfix inactive&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table drugcodelist&zipname_file_surfix as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct drug_code<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom makedrugcodelist_tmp3<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59run&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete makedrugcodelist_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*check if all drug_code can be found in the file 'drug'. Not really!*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%compAB(a=drug, b=drugcodelist&zipname_file_surfix, target=test, vars=drug_code)&#59&nbsp&nbsp&nbsp&nbsp*/<br/>%mend makedrugcodelist&#59<br/>%makedrugcodelist(zipname_file_surfix=&zipname_file_surfix, debug=1)&#59<br/><br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-dAV2j9HnmQNvh1Kf"}]},{"idx":"CodeTask-3CoTKTUYoRWzfpp2","name":"Demo linkAllFiles of a Zip","NodeDescription":"///t<br/>///s<br/>/*Link the databases*/<br/><br/>/*to have all drug codes ever appeared in any of the data file. Presumably, all drug codes should appear in the data drug, but who knows!*/<br/><br/><br/>%macro linkfilesInAZip(zipname_file_surfix=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local NameList_filesInAZip i srcfilename srcfilenameAndsurfix zipname_file_surfix&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata linkedfile&#59 set drugcodelist&zipname_file_surfix&#59 if drug_code ne ''&#59 run&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%let NameList_filesInAZip = vet ther status schedule route pharm package ingred form drug comp&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do i = 1 %to 11&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let srcfilename= %scan(&NameList_filesInAZip, &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let srcfilenameAndsurfix=&srcfilename.&zipname_file_surfix&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table linkedfile  as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect *<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom linkedfile t1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleft join<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&srcfilenameAndsurfix t2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspon<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.drug_code = t2.drug_code<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59run&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for the zip _ia, there is an additional file called inactive*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %lowcase(&zipname_file_surfix) = _ia %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table linkedfile  as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect *<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom linkedfile t1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleft join<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinactive t2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspon<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.drug_code = t2.drug_code<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59run&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sort data=linkedfile&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby drug_code last_update_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>%mend linkfilesInAZip&#59<br/>/*%linkfilesInAZip(zipname_file_surfix=)&#59*/<br/><br/><br/><br/><br/><br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-dAV2j9HnmQNvh1Kf"}]},{"idx":"CodeTask-lo7WJf4bfLMhE1Ol","name":"CheckVar Length","NodeDescription":"///t<br/>///s<br/>/*Check the length of vars. Make sure that the planned length of each is not too long, not too short*/<br/><br/>libname c \"c:\\users\\z70\\desktop\"&#59<br/><br/>Proc datasets lib=c&#59<br/>&nbsp&nbsp&nbsp&nbspcontents data=dad&#59<br/>run&#59<br/><br/>%macro maxLenvar(var=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local var&#59<br/>&nbsp&nbsp&nbsp&nbspdata maxLenvar_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset c.dad (keep=&var )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplen=length(&var)&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbspproc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table maxLenvar as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmax(len) as var_max<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom maxLenvar_tmp1<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspquit&#59run&#59<br/><br/>&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete maxLenvar_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/><br/>%mend maxLenvar&#59<br/><br/><br/>%macro maxLenVarBatch(vars=, lens=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local vars lens var len i&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata maxLenvars&#59 length var $100. len 8. var_max 8.&#59delete&#59run&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do i = 1 %to 80&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let var=%scan(&vars, &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let len=%scan(&lens, &i)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> var=&var&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> len =&len&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%maxLenvar(var=&var)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata maxlenvar&#59set maxlenvar&#59 var=symget('var')&#59 len = &len&#59 run&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata maxLenvars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset maxLenvars maxLenvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete maxlenvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend&#59<br/>%maxLenVarBatch(<br/>vars=<br/>ACCESSION_NUMBER<br/>ACTIVE_INGREDIENT_CODE<br/>ADDRESS_BILLING_FLAG<br/>ADDRESS_MAILING_FLAG<br/>ADDRESS_NOTIFICATION_FLAG<br/>ADDRESS_OTHER<br/>AI_GROUP_NO<br/>BASE<br/>BRAND_NAME<br/>BRAND_NAME_F<br/>CITY_NAME<br/>CLASS<br/>CLASS_F<br/>COMPANY_CODE<br/>COMPANY_NAME<br/>COMPANY_TYPE<br/>COUNTRY<br/>COUNTRY_F<br/>CURRENT_STATUS_FLAG<br/>DESCRIPTOR<br/>DESCRIPTOR_F<br/>DOSAGE_UNIT<br/>DOSAGE_UNIT_F<br/>DOSAGE_VALUE<br/>DRUG_CODE<br/>DRUG_IDENTIFICATION_NUMBER<br/>EXPIRATION_DATE<br/>HISTORY_DATE<br/>INGREDIENT<br/>INGREDIENT_F<br/>INGREDIENT_SUPPLIED_IND<br/>LAST_UPDATE_DATE<br/>LOT_NUMBER<br/>MFR_CODE<br/>NOTES<br/>NUMBER_OF_AIS<br/>PACKAGE_SIZE<br/>PACKAGE_SIZE_UNIT<br/>PACKAGE_SIZE_UNIT_F<br/>PACKAGE_TYPE<br/>PACKAGE_TYPE_F<br/>PEDIATRIC_FLAG<br/>PHARMACEUTICAL_FORM<br/>PHARMACEUTICAL_FORM_F<br/>PHARMACEUTICAL_STD<br/>PHARM_FORM_CODE<br/>POSTAL_CODE<br/>POST_OFFICE_BOX<br/>PRODUCT_CATEGORIZATION<br/>PRODUCT_INFORMATION<br/>PROVINCE<br/>PROVINCE_F<br/>ROUTE_OF_ADMINISTRATION<br/>ROUTE_OF_ADMINISTRATION_CODE<br/>ROUTE_OF_ADMINISTRATION_F<br/>SCHEDULE<br/>SCHEDULE_F<br/>SRC<br/>STATUS<br/>STATUS_F<br/>STREET_NAME<br/>STRENGTH<br/>STRENGTH_TYPE<br/>STRENGTH_TYPE_F<br/>STRENGTH_UNIT<br/>STRENGTH_UNIT_F<br/>SUITE_NUMBER<br/>TC_AHFS<br/>TC_AHFS_F<br/>TC_AHFS_NUMBER<br/>TC_ATC<br/>TC_ATC_F<br/>TC_ATC_NUMBER<br/>UPC<br/>VET_SPECIES<br/>VET_SPECIES_F<br/>VET_SUB_SPECIES<br/>createDate<br/>program<br/>project,<br/><br/>lens=<br/>10<br/>8<br/>2<br/>2<br/>2<br/>2<br/>20<br/>2<br/>200<br/>120<br/>40<br/>20<br/>20<br/>8<br/>100<br/>40<br/>20<br/>30<br/>2<br/>200<br/>140<br/>10<br/>20<br/>20<br/>8<br/>40<br/>8<br/>8<br/>200<br/>270<br/>2<br/>8<br/>50<br/>10<br/>110<br/>10<br/>10<br/>20<br/>1<br/>25<br/>1<br/>2<br/>60<br/>60<br/>10<br/>8<br/>20<br/>20<br/>50<br/>100<br/>30<br/>30<br/>40<br/>8<br/>65<br/>30<br/>30<br/>3<br/>40<br/>40<br/>80<br/>20<br/>1<br/>1<br/>20<br/>80<br/>40<br/>80<br/>60<br/>20<br/>80<br/>1<br/>10<br/>20<br/>50<br/>50<br/>40<br/>8<br/>12<br/>22<br/>)<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-dAV2j9HnmQNvh1Kf"}]}],"custparents":[{"idx":"CodeTask-rEdldcGeB1lJRYpL"},{"idx":"CodeTask-X6YDm8OOkcS7yZkO"}]}],"custparents":[{"idx":"ProjectCollection-Y3iB6Xce72IV56WA"},{"idx":"ProjectCollection-Y3iB6Xce72IV56WA"}]},{"idx":"MYbff59f3a-6218-4848-b2a1-1d3af1daae7b","name":"Where are the files","custparents":[{"idx":"ProjectCollection-Y3iB6Xce72IV56WA"}],"NodeDescription":"<p>///t</p><p>F:\\Personal\\Dropbox\\Project\\Canada DPD\\RProject</p><p>t///</p>"},{"idx":"MYe29e2792-7b2a-40df-b70e-729da5def82d","name":"Download files","custparents":[{"idx":"ProjectCollection-Y3iB6Xce72IV56WA"}],"NodeDescription":"<p>///t</p><p>download a file</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\"># download and unzip thezipfiles without saving to local</div><div class=\"ql-code-block\">#name_thezip &lt;- \"F:/Personal/Dropbox/Project/Canada DPD/SASProject/Data/allfiles.zip\"</div><div class=\"ql-code-block\">name_thezip &lt;- \"https://www.canada.ca/content/dam/hc-sc/documents/services/drug-product-database/allfiles.zip\"</div><div class=\"ql-code-block\">name_thetxt &lt;- \"form.txt\"</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">#https://rpubs.com/otienodominic/398952</div><div class=\"ql-code-block\">#create a tmp file</div><div class=\"ql-code-block\">tmpzip &lt;- tempfile()</div><div class=\"ql-code-block\">download.file(name_thezip, tmpzip)</div></div><p><br></p><p>read a file from the zip and turn it into a dataframe</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">name_thetxt &lt;- \"form.txt\"</div><div class=\"ql-code-block\">data &lt;- read.table(unz(tmpzip, name_thetxt),  header=F, quote=\"\\\"\", sep=\",\")</div></div><p><br></p><p>order data by the first variable, and rename the variable names with a collection</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">#https://stackoverflow.com/questions/12460938/r-reading-in-a-zip-data-file-without-unzipping-it</div><div class=\"ql-code-block\">#data &lt;- read.table(unz(name_thezip, name_thetxt), nrows=10, header=F, quote=\"\\\"\", sep=\",\")</div><div class=\"ql-code-block\">#order by v1</div><div class=\"ql-code-block\">data &lt;- data[order(data$V1)]</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">#rename the colnames</div><div class=\"ql-code-block\">varnames_drug &lt;- c(\"DRUG_CODE\", \"FORM_CODE\", \"PHARMACEUTICAL_FORM\", \"PHARMACEUTICAL_FORM_F\")</div><div class=\"ql-code-block\">colnames(data) &lt;- varnames_drug</div><div class=\"ql-code-block\">head(data)</div></div><p><br></p><p>t///</p>"}]}]