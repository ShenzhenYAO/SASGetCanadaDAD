[{"idx":"ProjectCollection-cmSbt48MqRzD7t79","name":"Analytical_DRUMS_20191009","children":[{"idx":"Note-NZOhHiUvfcTeff7f","name":"B Cohort","NodeDescription":"///t<br/>B.&nbspCohort&nbspassembly<br/>t///","children":[{"idx":"CodeTask-XwrUMOd36iBqzyGl","name":"BA MS patients from hosp","NodeDescription":"///t<br/>///s<br/>/*BA  MS diagnosis from hospital*/<br/>/*<br/>[_RD]<br/>B. Cohort assembly. <br/>B.A Get data for MS diagnosis from hospitalization files.<br/><br/>From the raw files of hospitalization data, get records between the inclusion start date and inclusion end date period. Keep all fields. <br/>Save as data set _BAA. <br/><br/>From data set _BAA, concatenate hospitalization records if matching the criteria in Appendix ?. <br/>Keep all fields, add two fields to define the rearranged dates of admission and discharge (i.e., date_epiAdm, date_epiDschg).<br/>Save the results in data set _BAB. <br/><br/>From the data set _BAB, select records with an MS-specific ICD codes in any of the 25 diagnosis fields. <br/>Keep distinct records with the fields of patient id, date_epiAdm, date_epiDschg. <br/>Also create two new fields, namely, the field 'SRC' for source of diagnosis, the field 'DXDate ' for date of diagnosis. <br/>Let SRC='h' (i.e., MS diagnosis from hospital). Let DXDate = date_epiAdm. Save the selected records in data set _BA. <br/><br/>*/<br/>%put &entryStartDate&#59<br/>%put &entryEndDate&#59<br/>%let inclusionStartDate= '01jan1996'd&#59<br/>%let inclusionEndDate = '31Mar2018'd&#59<br/><br/><br/>data _null_&#59run&#59<br/>/*BAA0. unzip the master data of hospitalization records*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br/>)&#59<br/>/*%print(data=master_hosp)&#59*/<br/><br/>/*BAA. <br/>From the raw files of hospitalization data, get records between the inclusion start date and inclusion end date period. Keep all fields. <br/>Save as data set _BAA. <br/>*/<br/>data _BAA&#59<br/>&nbsp&nbsp&nbsp&nbspset master_hosp&#59<br/>&nbsp&nbsp&nbsp&nbspwhere<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadm_date between &inclusionStartDate and &inclusionEndDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdschg_date between &inclusionStartDate and &inclusionEndDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadm_date < &inclusionStartDate and dschg_date > &inclusionEndDate<br/>&nbsp&nbsp&nbsp&nbsp&#59&nbsp&nbsp&nbsp&nbsp<br/>run&#59<br/>/*%minmax(data=_baa, target=test, var=adm_date, format=date9.)&#59*/<br/><br/>/*BAB, make hospitalization episodes as defined in protocol:<br/>&nbsp&nbsp&nbsp&nbsp<br/> &nbsp&nbsp&nbsp&nbspThe following situations will be considered a part of the same [episode of hospitalization]: <br/>&nbsp&nbsp&nbsp&nbsp1) short hospital visits within longer hospital visits, <br/>&nbsp&nbsp&nbsp&nbsp2) overnight hospital stays within a day of the last separation date, <br/>&nbsp&nbsp&nbsp&nbsp3) visits that have an admission date before the last separation date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExamples, the following hospitalization intervals will be counted as 1 hospital claim<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspADMDATE SEPDATE CODE<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspJuly 5, 2010 to July 20, 2010 Dx: MS [340/G35]<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspJuly 10, 2010 to July 11, 2010 Dx: MS [340/G35]<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspJuly 21, 2010 to August 4, 2010 Dx: MS [340/G35]<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAugust 1, 2010 to August 7, 2010 Dx: MS [340/G35]<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAugust 7, 2010 to August 10, 2010 Dx: MS [340/G35]<br/>*/<br/>%cleanHNew(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=_BAA, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_BAB1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMaxGap=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspincldHN=0, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartD=adm_date, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspendD=dschg_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstudyID=Key_hsn,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep=, inst_num=, keepTMP=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*rename the radm_date to epiAdm_date, rdschg_date to epiDschg_date*/<br/>&nbsp&nbsp&nbsp&nbspdata _BAB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _BAB1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspradm_date = epiAdm_date <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprdschg_date = epiDschg_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHRecID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*_BAC*/<br/>&nbsp&nbsp&nbsp&nbsp/* BAC1 From _BAB, select all ICD_Codes matching the study ICDs*/<br/>&nbsp&nbsp&nbsp&nbspdata _BAC1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _BAB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='h'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat type $5.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: ('G35') then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='dx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=dxs(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: ('340')  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='cdx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=cdxs(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep HRecID key_hsn type dxN code adm_date dschg_date src epiAdm_date epiDschg_date&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*BAC2, from _BAC1, get a distinct list of patients, with patientID, epiAdm_date,  epiDschg_date, and source indicator (src='h')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe target file _BA is a list of MS diagnosis from hospital episodes, each patient may have multiple dx,each for a different episode<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=_BAC1, target=localt._BA, vars=%str(key_hsn, epiAdm_date, epiDschg_date, src, epiAdm_date as dxDate))&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-L5A9CGOhgG1qO2ZT","name":"BC Combine Dxs from Hosp and Physician","NodeDescription":"///t<br/>///s<br/>/*BC. Combina Dxs from Hosp and Physician*/<br/><br/>data _null_&#59run&#59<br/><br/>/*<br/>[_RD]<br/>Merge data set _BA and data set _BB. Sort by patient ID and DXDate. <br/>Keep distinct patient IDs with 3 or more records in the merged file. <br/>see P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\Tremlett - Study Population Detailed Description_DRUMSv014.doc<br/>*/<br/><br/>%let theStudyID=key_hsn&#59<br/><br/>/*BC1. combine _BA and _BB*/<br/>data _BC1&#59<br/>&nbsp&nbsp&nbsp&nbspset localt._BA localt._BB&#59<br/>&nbsp&nbsp&nbsp&nbspDisease='MS'&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID DxDate Src Disease&#59<br/>run&#59<br/><br/>/*BC2. select qualified MS cases*/<br/>%CaseDefV2(<br/>&nbsp&nbsp&nbsp&nbspdata=_BC1, <br/>&nbsp&nbsp&nbsp&nbsptarget=localt._BC, <br/>&nbsp&nbsp&nbsp&nbspstudyID=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspdxDateCol=dxDate, <br/>&nbsp&nbsp&nbsp&nbspnDX=3, <br/>&nbsp&nbsp&nbsp&nbspDxYears=, <br/>&nbsp&nbsp&nbsp&nbspDxGapDays=, <br/>&nbsp&nbsp&nbsp&nbspDQDateOrder=, <br/>&nbsp&nbsp&nbsp&nbsptheDiseaseCol=Disease, <br/>&nbsp&nbsp&nbsp&nbspsameDxcode=, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59 <br/>/*%freq(data=localt._BC, table=src)&#59*/<br/>/*%print(data=localt._BC)&#59*/<br/><br/>s///<br/>t///","children":[{"idx":"Note-t9ka7J5JgipiUCP2","name":"Q_AC1","NodeDescription":"///t<br/>QuestionsIn&nbspAB,&nbsphospital&nbsprecords&nbspsince&nbsp1993,&nbspphysician&nbspservice&nbspdata&nbspsince&nbsp1994,&nbspwhich&nbspmeans&nbspthat&nbspthe&nbspdx&nbspfrom&nbspphysician&nbspservices&nbspfor&nbsp1993&nbspis&nbspmissing.&nbspHow&nbspdoes&nbspthis&nbspaffect&nbspthe&nbspmissing&nbspof&nbspcases,&nbspor&nbspthe&nbspmiscalculation&nbspof&nbspdx&nbspdates?<br/>t///","children":[{"idx":"Note-7PkWfyJwREz5qb9f","name":"AC.QTest1","NodeDescription":"///t<br/>AC.Q11.1a.1.3.QTest1Tests&nbspfor&nbspQ_AC1[Why]Missing&nbspof&nbspdata&nbspin&nbspa&nbspparticular&nbsptime&nbspperiod(e.g.,&nbspmissing&nbspphysician&nbspservice&nbspdata&nbspin&nbsp1993)&nbspmay&nbsphave&nbspimpact&nbspto&nbspMS&nbspcase&nbspidentification.&nbspThe&nbsptypes&nbspof&nbspimpact&nbspinclude:1)&nbspUnaffected,&nbspeven&nbspwithout&nbspthe&nbspdata&nbspsource,&nbspyet&nbspthe&nbspcase&nbspwas&nbspdetermined&nbspby&nbspother&nbspsources&nbsp(e.g.,&nbsphospitalizaiton&nbspevents,&nbspor&nbsppharmacy&nbspclaims)&nbspof&nbspthe&nbspsame&nbspyear.&nbspThe&nbspfirst_admin_code_date&nbspremains&nbspthe&nbspsame2)&nbspStill&nbspcan&nbspbe&nbspdetermined&nbspby&nbspother&nbspsources,&nbspbut&nbspof&nbspa&nbspdelayed&nbspfirst_admin_code_date&nbsp(could&nbspbe&nbspin&nbspthe&nbspsame&nbspyear,&nbspor&nbspin&nbspa&nbspyear&nbspfollowing)3)&nbspStill&nbspcan&nbspbe&nbspdetermined&nbspby&nbspthe&nbspphysician&nbspservice&nbspfiles&nbspof&nbspthe&nbspfollowing&nbspyears&nbsp(and&nbspcollectively&nbspwith&nbspdata&nbspof&nbspother&nbspsources),&nbspbut&nbspof&nbspa&nbspdelayed&nbspfirst_admin_code_date4)&nbspCannot&nbspbe&nbspidentified&nbspby&nbspany&nbspsources&nbspof&nbspthe&nbspfollowing&nbspyears.Despite&nbspof&nbspthe&nbspvarious&nbsppatterns,&nbspthe&nbspinterest&nbsprests&nbspon&nbspthe&nbspfollowing:1)&nbspwhether&nbspthe&nbsppatient&nbspcan&nbspstill&nbspbe&nbspidentified2)&nbspis&nbspthe&nbspfirst_admin_code_date&nbspchangedFor&nbspthese&nbsptwo&nbspmeasures,&nbspthe&nbspidea&nbspis&nbspto&nbspcompare&nbspthe&nbspdifference&nbspbetween&nbsptwo&nbspscenarios&nbspof&nbspa&nbspselected&nbspcalendar&nbspyear:1)&nbspwith&nbspall&nbspdata&nbspsources&nbsp(physician&nbspservice,&nbsphospitalizaiton,&nbsppharmacy&nbspclaims)2)&nbspwith&nbspdata&nbspsource&nbspbut&nbspphysician&nbspservice&nbsprecords.&nbspThe&nbspanalysis&nbspis&nbsprepeated&nbspfor&nbspcalendar&nbspyears&nbsp(for&nbspSK,&nbspfrom&nbsp1996&nbspto&nbsp2018),&nbspsuch&nbspto&nbspillustrate&nbspthe&nbspimpact&nbspby&nbspdifferent&nbspyears.&nbsp[End&nbspof&nbspwhy]0.&nbspCases&nbspidentified&nbspby&nbspall&nbspsources&nbspas&nbspif&nbspthe&nbspdata&nbspstarts&nbspfrom&nbspthe&nbspspecified&nbspyear&nbsp(e.g.,&nbsp1997)0.0.Create&nbspan&nbspempty&nbspdataset&nbsp(ACA)&nbspto&nbspstore&nbspthe&nbspfinal&nbspresults.data&nbsplocalt.ACA&#59run&#590.1.&nbspFrom&nbspHospitalization&nbsp(AA)&nbspand&nbspPhysician&nbspservice&nbspdata&nbsp(AB),&nbsptake&nbspout&nbspthose&nbspMS&nbsprelated&nbspdx&nbsprecords&nbspwith&nbspa&nbspservedate&nbspearlier&nbspthan&nbspthe&nbspspecified&nbspyear&nbsp1996.0.1.1.&nbspcombine&nbspAA&nbspand&nbspAB,&nbspselect&nbspdx&nbsprecords&nbspsince&nbspthe&nbspspecified&nbspcalendar&nbspyear0.1.2.&nbspselect&nbspqualified&nbspMS&nbspcases0.2.&nbspFrom&nbspms_DMD&nbsprelated&nbsppharmacy&nbspclaims(AD1,&nbspprepared&nbspin&nbspprogram&nbspAD),&nbspselect&nbspthose&nbspindividuals&nbspreceiving&nbspDMD0.2.1.&nbspFrom&nbspabove,&nbspselect&nbspdistinct&nbsprecords&nbspof&nbsppatientID,&nbspDIN&nbspand&nbspserveDate0.2.2.&nbspFrom&nbspabove,&nbspselect&nbspdistinct&nbsprecords&nbspof&nbsppatientID,&nbspserveDate,&nbspand&nbspsrc0.2.3.&nbspFrom&nbspabove,&nbspselect&nbspthe&nbspearliest&nbspservedate&nbspby&nbsppatient,&nbspand&nbspindicate&nbspthe&nbspdate&nbspas&nbspthe&nbspdxDate0.2.4.&nbspSelect&nbspthose&nbspin&nbspACA_0B3&nbspbut&nbspnot&nbspin&nbspACA_0A.&nbspThose&nbspare&nbspMS&nbspcases&nbsponly&nbspcan&nbspbe&nbspidentified&nbspfrom&nbspthe&nbspdispensation&nbspclaims0.3&nbspCombine&nbspACA_0A&nbspand&nbspACA_0B,&nbspto&nbsphave&nbspthe&nbspcohort&nbspidentified&nbspfrom&nbspsources&nbspother&nbspthan&nbspthe&nbspphysician&nbspservice&nbspof&nbspthe&nbspyear0.3.1,&nbspcombine&nbspACA_0A&nbspand&nbspACA_0B,&nbspdrop&nbspthe&nbspcol&nbsp'disease'.&nbspFor&nbspthose&nbspmissing&nbspvalue&nbspof&nbspCohort1a_ID_DMD_onlyYN&nbsp(from&nbsphospitalor&nbspphysician&nbspservice&nbspclaims),&nbspindicate&nbspCohort1a_ID_DMD_onlyYN=00.3.2.&nbspDetermine&nbspthe&nbspFirst_admin_code_date&nbspby&nbsplinking&nbspthe&nbspfirst&nbspdate&nbspof&nbspDMD&nbsp(in&nbspACA_0B3)&nbspto&nbspthe&nbspcases&nbspin&nbspACA_0C1Note.&nbspIt&nbspcould&nbspbe&nbspthat&nbspMS&nbspcases&nbspwere&nbspidentified&nbspfrom&nbspthe&nbsphospital/physician&nbspservice&nbsprecords,&nbspwhile&nbspalso&nbspreceiving&nbspMS&nbspmedications&nbsp(DMD),&nbspand&nbspthe&nbspdate&nbspof&nbspthe&nbspfirst&nbspdispensation&nbspof&nbspDMD&nbspis&nbspearleir&nbspthan&nbspany&nbspdxDates&nbspfrom&nbspthe&nbsphospitalor&nbspphysician&nbspservice&nbspfile.&nbspIn&nbspthat&nbspcase,&nbspthe&nbspFirst_admin_code_date&nbsp=&nbspthe&nbspfirst&nbspFirst_admin_code_date&nbsp???&nbspneed&nbspto&nbspcheck0.3.3&nbspFrom&nbspabove,&nbspdrop&nbspthe&nbspcolum&nbspfirstRxDate,&nbspindicate&nbspthe&nbspcalendar&nbspyearthe&nbspdata&nbspset&nbspACA_0C&nbspcontains&nbspcases&nbspidenfied&nbspfrom&nbspall&nbspsources&nbspas&nbspif&nbspthe&nbspdata&nbspstarts&nbspfrom&nbspthe&nbspsepcified&nbspyearadd&nbspthe&nbspnumber&nbspof&nbspcases&nbsp(by&nbspcomplete&nbspdata)&nbspinto&nbspthe&nbspfinal&nbspreport&nbspdata0.3.4&nbspExlcuding&nbsppatients&nbspnot&nbspin&nbspdata&nbspset&nbspCA&nbsp(those&nbspnot&nbsphaving&nbspsex&nbspor&nbspcoverage&nbspinfo)0.4&nbspadd&nbspthe&nbspnumber&nbspof&nbspcases&nbsp(by&nbspcomplete&nbspdata)&nbspinto&nbspthe&nbspfinal&nbspreport&nbspdata1.&nbspCases&nbspidentified&nbspby&nbspsources&nbspwithout&nbspphysician&nbspservice&nbspdata&nbspsince&nbspthe&nbspspecified&nbspyear&nbsp(e.g.,&nbsp1997)1.1.&nbspFrom&nbspHospitalization&nbsp(AA)&nbspand&nbspPhysician&nbspservice&nbspdata&nbsp(AB),&nbsptake&nbspout&nbspthose&nbspMS&nbsprelated&nbspdx&nbsprecords&nbspwith&nbspa&nbspservedate&nbspin&nbspthe&nbspspecified&nbspyear&nbsp1996.1.1.1.&nbspcombine&nbspAA&nbspand&nbspAB,&nbspselect&nbspdx&nbsprecords&nbspnot&nbspin&nbspthe&nbspspecified&nbspcalendar&nbspyear1.1.2.&nbspselect&nbspqualified&nbspMS&nbspcases1.2.&nbspFrom&nbspms_DMD&nbsprelated&nbsppharmacy&nbspclaims(AD1,&nbspprepared&nbspin&nbspprogram&nbspAD),&nbspselect&nbspthose&nbspindividuals&nbspreceiving&nbspDMD1.2.1.&nbspFrom&nbspabove,&nbspselect&nbspdistinct&nbsprecords&nbspof&nbsppatientID,&nbspDIN&nbspand&nbspserveDate1.2.2.&nbspFrom&nbspabove,&nbspselect&nbspdistinct&nbsprecords&nbspof&nbsppatientID,&nbspserveDate,&nbspand&nbspsrc1.2.3.&nbspFrom&nbspabove,&nbspselect&nbspthe&nbspearliest&nbspservedate&nbspby&nbsppatient,&nbspand&nbspindicate&nbspthe&nbspdate&nbspas&nbspthe&nbspdxDate1.2.4.&nbspSelect&nbspthose&nbspin&nbspACA_1B3&nbspbut&nbspnot&nbspin&nbspACA_1A.&nbspThose&nbspare&nbspMS&nbspcases&nbsponly&nbspcan&nbspbe&nbspidentified&nbspfrom&nbspthe&nbspdispensation&nbspclaims1.3&nbspCombine&nbspACA_1A&nbspand&nbspACA_1B,&nbspto&nbsphave&nbspthe&nbspcohort&nbspidentified&nbspfrom&nbspsources&nbspother&nbspthan&nbspthe&nbspphysician&nbspservice&nbspof&nbspthe&nbspyear1.3.1,&nbspcombine&nbspACA_1A&nbspand&nbspACA_1B,&nbspdrop&nbspthe&nbspcol&nbsp'disease'.&nbspFor&nbspthose&nbspmissing&nbspvalue&nbspof&nbspCohort1a_ID_DMD_onlyYN&nbsp(from&nbsphospitalor&nbspphysician&nbspservice&nbspclaims),&nbspindicate&nbspCohort1a_ID_DMD_onlyYN=01.3.2.&nbspDetermine&nbspthe&nbspFirst_admin_code_date&nbspby&nbsplinking&nbspthe&nbspfirst&nbspdate&nbspof&nbspDMD&nbsp(in&nbspACA_1B3)&nbspto&nbspthe&nbspcases&nbspin&nbspACA_1C1Note.&nbspIt&nbspcould&nbspbe&nbspthat&nbspMS&nbspcases&nbspwere&nbspidentified&nbspfrom&nbspthe&nbsphospital/physician&nbspservice&nbsprecords,&nbspwhile&nbspalso&nbspreceiving&nbspMS&nbspmedications&nbsp(DMD),&nbspand&nbspthe&nbspdate&nbspof&nbspthe&nbspfirst&nbspdispensation&nbspof&nbspDMD&nbspis&nbspearleir&nbspthan&nbspany&nbspdxDates&nbspfrom&nbspthe&nbsphospitalor&nbspphysician&nbspservice&nbspfile.&nbspIn&nbspthat&nbspcase,&nbspthe&nbspFirst_admin_code_date&nbsp=&nbspthe&nbspfirst&nbspFirst_admin_code_date&nbsp???&nbspneed&nbspto&nbspcheck1.3.3&nbspFrom&nbspabove,&nbspdrop&nbspthe&nbspcolum&nbspfirstRxDate,&nbspindicate&nbspthe&nbspcalendar&nbspyear1.3.4&nbspexlcuding&nbsppatients&nbspnot&nbspin&nbspdata&nbspset&nbspCA&nbsp(those&nbspnot&nbsphaving&nbspsex&nbspor&nbspcoverage&nbspinfo)2.compare&nbspthe&nbspcases&nbspidentified&nbspin&nbspstep&nbsp1&nbsp(ACA_1C)&nbspwith&nbspcases&nbspidentifed&nbspfrom&nbspall&nbspsources&nbsp(ACA_0C)indicate&nbspthose&nbsponly&nbspidentified&nbspwhen&nbspnot&nbspmissing&nbspphysician&nbspservice&nbspdata&nbspof&nbspthe&nbspyear2.1.1&nbspcompare&nbspthe&nbsptwo&nbspdata&nbspsets&nbsp(ACA_1C&nbspis&nbspfrom&nbspdata&nbspmissing&nbspphysician&nbspservice&nbspdata&nbspof&nbspthe&nbspyear,&nbspACA_0C&nbspis&nbspfrom&nbspdatanot&nbspmissing&nbspphysician&nbspservice&nbspdata&nbspof&nbspthe&nbspyear)2.1.2&nbspcount&nbsp#&nbsppatient&nbspmissing&nbspbecause&nbspof&nbspabense&nbspof&nbspphysician&nbspservice&nbspdata&nbspof&nbspthe&nbspyear3.compare&nbspthe&nbspcases&nbspidentified&nbspin&nbspstep&nbsp1&nbsp(ACA_1C)&nbspwith&nbspcases&nbspidentifed&nbspfrom&nbspall&nbspsources&nbsp(ACA_0C)indicate&nbspthose&nbspwith&nbspa&nbspdifferent&nbspFirst_admin_code_date3.1&nbspselect&nbspcases&nbspin&nbspboth&nbspACA_1C&nbspand&nbspACA_0C,&nbspindicate&nbspwhether&nbspor&nbspnot&nbsphaving&nbspthe&nbspsame&nbspFirst_admin_code_date3.2&nbspestimate&nbspthe&nbspmean,&nbspmedian&nbspof&nbspFirst_admin_code_date&nbspdays&nbspchanged&nbspbecause&nbspof&nbspabsence&nbspof&nbspthe&nbspphysician&nbspdata3.2.1the&nbspmean&nbspand&nbspSTD&nbspof&nbspdays&nbspdelayed3.2.2&nbspthe&nbspmedian&nbspand&nbspIQR&nbspof&nbspdays&nbspdelayed3.2.4&nbspthe&nbspnumber&nbspof&nbspcases&nbspwith&nbspexactly&nbspthe&nbspmedian&nbspdays-delayed3.2.5&nbspPutting&nbspthe&nbspstats&nbsptogether4.Merge&nbspthe&nbspstats&nbspof&nbspa&nbspspecific&nbspyear&nbspinto&nbspthe&nbspfinal&nbspdata&nbspset&nbspwith&nbspall&nbspyears&nbsp(the&nbsptable&nbspis&nbspnamed&nbsp'ACA')<br/>t///","children":[{"idx":"CodeTask-mITn1YIyeoBhe8rd","name":"ACA QTest1","NodeDescription":"///t<br/>///s<br/>/*<br/>AC.Q<br/>1.1a.1.3.QTest<br/>Tests for Q_AC<br/><br/>[Why]<br/>&nbsp&nbsp&nbsp&nbspMissing of data in a particular time period(e.g., missing physician service data in 1993) may have impact to MS case identification. The types of impact include:<br/>&nbsp&nbsp&nbsp&nbsp1) Unaffected, even without the data source, the cases were able to be determined by other sources (e.g., hospitalizaiton events, or pharmacy claims) of the same year. The first_admin_code_date remains the same<br/>&nbsp&nbsp&nbsp&nbsp2) Still can be determined by other sources, but of a delayed first_admin_code_date (could be in the same year, or in a year following)<br/>&nbsp&nbsp&nbsp&nbsp3) Still can be determined by the physician service files of the following years (and collectively with data of other sources), but of a delayed first_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp4) Cannot be identified by any sources of the following years.<br/><br/>&nbsp&nbsp&nbsp&nbspDespite of the various patterns, the interest rests on the following:<br/>&nbsp&nbsp&nbsp&nbsp1) whether the patient can still be identified<br/>&nbsp&nbsp&nbsp&nbsp2) is the first_admin_code_date changed<br/><br/>&nbsp&nbsp&nbsp&nbspFor these two measures, the idea is to compare the difference between two scenarios of a selected calendar year:<br/>&nbsp&nbsp&nbsp&nbsp1) with all data sources (physician service, hospitalizaiton, pharmacy claims)<br/>&nbsp&nbsp&nbsp&nbsp2) with data source but physician service records. <br/>&nbsp&nbsp&nbsp&nbspThe analysis is repeated for calendar years (for SK, from 1996 to 2018), such to illustrate the impact by different years. <br/>[End of why]<br/>*/<br/><br/>data _null_&#59run&#59<br/><br/>%let theStudyID=&theStudyID&#59<br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Missing Physician Data)&#59<br/>%let CloseXls=&#59<br/><br/>%macro test_MissingPhysicianData(debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theYear debug&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0. Cases identified by all sources as if the data starts from the specified year (e.g., 1997)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp0.1. From Hospitalization (AA) and Physician service data (AB), take out those MS related dx records with a servedate <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspearlier than the specified year 1996.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%print(data=localt.AA)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%print(data=localt.AB)&#59*/<br/><br/>/*0.0.Create an empty dataset (ACA) to store the final results.*/<br/>&nbsp&nbsp&nbsp&nbspdata localt.ACA&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%do theYear = 1996 %to 2018&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.1.1. combine AA and AB, select dx records since the specified calendar year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_0A1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.AA localt.AB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDisease='MS'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif year(dxDate) ge &theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID DxDate Src Disease&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.1.2. select qualified MS cases*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%CaseDefV2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=ACA_0A1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_0A, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstudyID=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxDateCol=dxDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnDX=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxYears=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxGapDays=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDQDateOrder=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheDiseaseCol=Disease, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsameDxcode=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=ACA_0A, table=src)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp0.2. From ms_DMD related pharmacy claims(AD1, prepared in program AD), select those individuals receiving DMD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.2.1. From above, select distinct records of patientID, DIN and serveDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theServeDate=Rx_ddddd&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=localt.AD1, target=ACA_0B1, vars=%str(&theStudyID, DIN, &theServeDate), filters=%str(year(&theServeDate) GE &theYear))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.2.2. From above, select distinct records of patientID, serveDate, and src*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=ACA_0B1, target=ACA_0B2, vars=%str(&theStudyID, &theServeDate), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(&theStudyID, &theServeDate))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.2.3. From above, select the earliest servedate by patient, and indicate the date as the dxDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_0B3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_0B2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theServeDate = dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.2.4. Select those in ACA_0B3 but not in ACA_0A. Those are MS cases only can be identified from the dispensation claims*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ACA_0B3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_0B, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, 1 as Cohort1a_ID_DMD_onlyYN),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from ACA_0A))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.3 Combine ACA_0A and ACA_0B, to have the cohort identified from sources other than the physician service of the year*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.3.1, combine ACA_0A and ACA_0B, drop the col 'disease'. For those missing value of Cohort1a_ID_DMD_onlyYN (from hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service claims), indicate Cohort1a_ID_DMD_onlyYN=0*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_0C1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_0A ACA_0B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop disease&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Cohort1a_ID_DMD_onlyYN=. then Cohort1a_ID_DMD_onlyYN=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=ACA_0C1, table=src * Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.3.2. Determine the First_admin_code_date by linking the first date of DMD (in ACA_0B3) to the cases in ACA_0C1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote. It could be that MS cases were identified from the hospital/physician service records, while also receiving <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMS medications (DMD), and the date of the first dispensation of DMD is earleir than any dxDates from the hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service file. In that case, the First_admin_code_date = the first First_admin_code_date <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp??? need to check<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ACA_0C1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=ACA_0B3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_0C2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dxDate as firstRxDate_Ever, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcase<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate=. then t1.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate <= t2.dxDate then t1.DxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate > t2.dxDate then t2.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat date9. as First_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.3.3 From above, drop the colum firstRxDate_Ever, indicate the calendar year<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe data set ACA_0C contains cases idenfied from all sources as if the data starts from the sepcified year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_0C3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_0C2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year=year(First_admin_code_date)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop firstRxDate_Ever dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.3.4 exlcuding patients not in data set CA (those not having sex or coverage info)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ACA_0C3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_0C,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID in (select &theStudyID from localt.CA))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.4 add the number of cases (by complete data) into the final report data*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ACA_0C)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_0D&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_completeData'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_completeDATA=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(N_completeDATA, comma8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1. Cases identified by sources without physician service data since the specified year (e.g., 1997)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.1. From Hospitalization (AA) and Physician service data (AB), take out those MS related dx records with a servedate in the specified year 1996.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%print(data=localt.AA)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%print(data=localt.AB)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.1.1. combine AA and AB, select dx records not in the specified calendar year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_1A1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.AA localt.AB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDisease='MS'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (src='p' and year(dxDate) = &theYear ) and year(dxDate) ge &theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID DxDate Src Disease&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.1.2. select qualified MS cases*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%CaseDefV2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=ACA_1A1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_1A, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstudyID=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxDateCol=dxDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnDX=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxYears=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxGapDays=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDQDateOrder=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheDiseaseCol=Disease, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsameDxcode=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=ACA_1A, table=src)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.2. From ms_DMD related pharmacy claims(AD1, prepared in program AD), select those individuals receiving DMD<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.1. From above, select distinct records of patientID, DIN and serveDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theServeDate=Rx_ddddd&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=localt.AD1, target=ACA_1B1, vars=%str(&theStudyID, DIN, &theServeDate), filters=%str(year(&theServeDate) GE &theYear))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.2. From above, select distinct records of patientID, serveDate, and src*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=ACA_1B1, target=ACA_1B2, vars=%str(&theStudyID, &theServeDate), orderby=%str(&theStudyID, &theServeDate))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.3. From above, select the earliest servedate by patient, and indicate the date as the dxDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_1B3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_1B2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theServeDate = dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.4. Select those in ACA_1B3 but not in ACA_1A. Those are MS cases only can be identified from the dispensation claims*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ACA_1B3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_1B, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, 1 as Cohort1a_ID_DMD_onlyYN),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from ACA_1A))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3 Combine ACA_1A and ACA_1B, to have the cohort identified from sources other than the physician service of the year*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.1, combine ACA_1A and ACA_1B, drop the col 'disease'. For those missing value of Cohort1a_ID_DMD_onlyYN (from hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service claims), indicate Cohort1a_ID_DMD_onlyYN=0*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_1C1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_1A ACA_1B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop disease&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Cohort1a_ID_DMD_onlyYN=. then Cohort1a_ID_DMD_onlyYN=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=ACA_1C1, table=src * Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.2. Determine the First_admin_code_date by linking the first date of DMD (in ACA_1B3) to the cases in ACA_1C1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote. It could be that MS cases were identified from the hospital/physician service records, while also receiving <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMS medications (DMD), and the date of the first dispensation of DMD is earleir than any dxDates from the hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service file. In that case, the First_admin_code_date = the first First_admin_code_date <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp??? need to check<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ACA_1C1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=ACA_1B3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_1C2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dxDate as firstRxDate_Ever, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcase<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate=. then t1.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate <= t2.dxDate then t1.DxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate > t2.dxDate then t2.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat date9. as First_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.3 From above, drop the colum firstRxDate_Ever, indicate the calendar year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_1C3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_1C2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year=year(First_admin_code_date)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop firstRxDate_Ever dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.4 exlcuding patients not in data set CA (those not having sex or coverage info)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ACA_1C3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_1C,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID in (select &theStudyID from localt.CA))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=ACA_1C, table=src*Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.compare the cases identified in step 1 (ACA_1C) with cases identifed from all sources (ACA_0C)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindicate those only identified when not missing physician service data of the year<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.1.1 compare the two data sets (ACA_1C is from data missing physician service data of the year, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_0C is from data not missing physician service data of the year)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%compAB(a=ACA_0C, b=ACA_1C, target=ACA_2A1, vars=&theStudyID)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.1.2 count # patient missing because of abense of physician service data of the year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=ACA_2A1 noprint, table=compAB, option=%str(out=ACA_2A2))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_2A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_2A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif compAB='InA'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_Missing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ACA_2A)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_2A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_Missing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_2B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_2A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif compAB='Both'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_NotMissing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ACA_2B)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_2B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_NotMissing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*3.compare the cases identified in step 1 (ACA_1C) with cases identifed from all sources (ACA_0C)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindicate those with a different First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*3.1 select cases in both ACA_1C and ACA_0C, indicate whether or not having the same First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=ACA_0C,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=ACA_1C,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_3A1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t2.src,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.First_admin_code_date - t1.First_admin_code_date as First_admin_code_date_diff),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyId<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_3A1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_diff >0 then First_admin_code_date_change=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_diff <0  then First_admin_code_date_change=-1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_diff =0 then First_admin_code_date_change=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=ACA_3A noprint, table=First_admin_code_date_change, option=%str(out=ACA_3A2))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3A3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_3A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_change=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_not_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ACA_3A3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3A3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_not_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3A4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_3A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_change=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ACA_3A4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3A4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*3.2 estimate the mean, median of First_admin_code_date days changed because of absence of the physician data*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=ACA_3A,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=First_admin_code_date_change ne 0,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=First_admin_code_date_diff,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=ACA_3B1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the mean and STD of days delayed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3B2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_3B1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='Mean_days_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(mean,comma8.)) || byte(177) || strip(put(std/100, comma8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ACA_3B2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3B2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='Mean_days_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the median and IQR of days delayed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3B3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_3B1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='Median_days_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(median,comma8.)) || \"(\" || strip(put(std/100, comma8.)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ACA_3B3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3B3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='Median_days_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the number of cases with exactly the median days-delayed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3B4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset ACA_3B1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_Median'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(N_Patients_median,comma8.)) &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Creat a row for the specified year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3B5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(&theYear, 8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Putting the stats together*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ACA_3B6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_3B5<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_0D<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_2A<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_2B<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_3A3<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_3A4<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspACA_3B2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_3B3<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspACA_3B4<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename theStat = theStat_&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Merge the year specific data into the final dataset*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata localt.ACA&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmerge localT.ACA ACA_3B6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete ACA_:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 /*end of loop for years*/<br/><br/>&nbsp&nbsp&nbsp&nbsp/*report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.ACA, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(1996 - 1981), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%mend test_MissingPhysicianData&#59<br/>%test_MissingPhysicianData(debug=)&#59<br/>s///<br/>t///","custparents":[{"idx":"Note-7PkWfyJwREz5qb9f"}]}],"custparents":[{"idx":"Note-t9ka7J5JgipiUCP2"}]}],"custparents":[{"idx":"CodeTask-L5A9CGOhgG1qO2ZT"}]}],"custparents":[{"idx":"CodeTask-XwrUMOd36iBqzyGl"},{"idx":"CodeTask-FNsi7jAGetbbMcGQ"}]}],"custparents":[{"idx":"Note-NZOhHiUvfcTeff7f"}]},{"idx":"CodeTask-FNsi7jAGetbbMcGQ","name":"BB MS patients from physician file","NodeDescription":"///t<br/>///s<br/>/*BB, MS diagnosis from physician service claims*/<br/><br/>data _null_&#59run&#59<br/>/*<br/>[_RD]<br/>From the raw files of physician service data, get records between the inclusion start date and inclusion end date period. <br/>Keep all fields, and save as data set _BBA. <br/><br/>From the data set _BBA, select records of MS-specific ICD codes from any diagnosis fields. Save the selected records in data set _BBB. <br/><br/>From data set _BBB, remove records with an MS related hospitalization (in data set _BA). <br/>Create a new field called 'DxDate'. Let DXDate = Date of service. Also create a field 'SRC'. Let SRC='p'. <br/>Keep fields of patient ID, DXDate , and SRC. Keep distinct values of the selected fields. Save the result as data set _BBC. <br/>*/<br/><br/>%let theStudyID=key_hsn&#59<br/>%let theDxCol=diag&#59<br/>%let theServeDate=dos&#59<br/>%let msICD9CodeList = '340'&#59<br/>%let inclusionStartDate= '01jan1996'd&#59<br/>%let inclusionEndDate = '31Mar2018'd&#59<br/><br/><br/><br/><br/>/*BB0. unzip the master data of physician service records*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_MSB.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_MSB.sas7bdat)<br/>)&#59<br/><br/>/*_BBA<br/>From the raw files of physician service data, get records between the inclusion start date and inclusion end date period. <br/>Keep all fields, and save as data set _BBA. <br/>*/<br/>data _BBA&#59<br/>&nbsp&nbsp&nbsp&nbspset master_MSB&#59<br/>&nbsp&nbsp&nbsp&nbspwhere &theServeDate between &inclusionStartDate and &inclusionEndDate&#59<br/>run&#59<br/><br/><br/>/*_BBB. <br/>From the data set _BBA, select records of MS-specific ICD codes from any diagnosis fields. Save the selected records in data set _BBB. <br/>*/<br/>data _BBB&#59<br/>&nbsp&nbsp&nbsp&nbspset _BBA&#59<br/>&nbsp&nbsp&nbsp&nbspif &theDxCol in: (&msICD9CodeList)&#59<br/>&nbsp&nbsp&nbsp&nbspcode=&theDxCol&#59<br/>run&#59<br/><br/>/*BBC*/<br/>/*BBC1. From above, remove those physician service claims within any hosptial episodes that have MS diagnosis(AA) <br/>&nbsp&nbsp&nbsp&nbspNote, a physician service is not to be removed, if it is within a hospitalization episode that does not have MS diagnosis <br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BBB,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._BA,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BBC1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1, <br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.&theServeDate, t1.Code, 'p' as src, t1.&theServeDate as dxDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str( <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNot (t1.&theServeDate between t2.epiAdm_date and t2.epiDschg_date )<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*BBC2. From above, select the distinct combination of studyID dxDate and src<br/>&nbsp&nbsp&nbsp&nbspNote. This step is actually not necessary as there is only one ICD-9 code<br/>*/<br/>%distinct(data=_BBC1, target=localt._BB, vars=%str(&theStudyID, dxDate, src))&#59<br/><br/>s///<br/>t///","custparents":[{"idx":"Note-NZOhHiUvfcTeff7f"}]},{"idx":"CodeTask-cLh4y7zaB5X4Ksey","name":"BD MS patients from Pharmacy claims","NodeDescription":"///t<br/>///s<br/>/*BD. MS Patients identified from Pharmacy Claims*/<br/><br/>/*<br/>[_RD]<br/>From the raw files of pharmacy claim data, get records between the data start date and data end date period. <br/>Keep all fields, and save as data set _BDA. <br/><br/>From the data set _BDA, select records of MS-specific medication claims. Save the selected records in data set _BDB. <br/><br/>From data set _BDB, Create a new field called 'DxDate'. Let DXDate = Date of service. Also create a field 'SRC'. Let SRC='m'. <br/>Keep fields of patient ID, DXDate , and SRC. For each distinct patient ID, keep the earliest DXDate. Save results in data set _BDC.<br/><br/>For records in data set _BDC, indicate patients who could only can be identified from the dispensation claims, i.e., <br/>Add a field Cohort1a_ID_DMD_onlyYN. For records in data set _BDC3 with patient ids that cannot be found in data set _BC, let Cohort1a_ID_DMD_onlyYN=1<br/><br/>[_Note]<br/>data set _BD (dx from pharmacy) contains records of patients who can also be identified from the hosptial/physician files. It could be that <br/>a patient can be identified from any of the pharmacy file/hospital/physician files. It was just that the DXDate from pharamcy file is earlier. <br/>In that case, it would be wrong if the patient's pharamcy records were removed, as the earliest DXDate (from the pharmacy file) would be overlooked.  <br/><br/>*/<br/><br/><br/>data _null_&#59run&#59<br/><br/>%let theStudyID=Key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/>%let inclusionStartDate= '01jan1996'd&#59<br/>%let inclusionEndDate = '31Mar2018'd&#59<br/><br/>/*BD0. Unzip the benefit and nonbenefit drug claims*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_benefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_benefit.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_nonbenefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_nonbenefit.sas7bdat)<br/>)&#59<br/>data _BD0a&#59<br/>&nbsp&nbsp&nbsp&nbspset master_dp_benefit&#59<br/>&nbsp&nbsp&nbsp&nbspdpSrc='be'&#59 <br/>&nbsp&nbsp&nbsp&nbspwhere &theServeDate between &inclusionStartDate and &inclusionEndDate&#59<br/>run&#59<br/>data _BD0b&#59<br/>&nbsp&nbsp&nbsp&nbspset master_dp_nonbenefit&#59<br/>&nbsp&nbsp&nbsp&nbspdpSrc='nb'&#59 <br/>&nbsp&nbsp&nbsp&nbspwhere &theServeDate between &inclusionStartDate and &inclusionEndDate&#59<br/>run&#59<br/>data _BDA&#59<br/>&nbsp&nbsp&nbsp&nbspset _BD0a _BD0b&#59<br/>run&#59<br/><br/>/*%print(data=localT.A6_DINDX)&#59*/<br/>/*BDB. From above, select claims with a DIN in the MS-DMD din list (localT.a6_DINDx, which was saved by prog A)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BDA,<br/>&nbsp&nbsp&nbsp&nbspt2=localT.a6_dindx,<br/>&nbsp&nbsp&nbsp&nbsptarget=localt._BDB,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN<br/>)&#59<br/><br/><br/>/*BDC1. From above, select distinct records of patientID, DIN and serveDate*/<br/>%distinct(data=localt._BDB, target=_BDC1, vars=%str(&theStudyID, DIN, &theServeDate))&#59<br/><br/><br/>/*BDC2. From above, select distinct records of patientID, serveDate, and src*/<br/>%distinct(data=_BDC1, target=_BDC2, vars=%str(&theStudyID, &theServeDate), orderby=%str(&theStudyID, &theServeDate))&#59<br/><br/>/*BDC3. From above, select the earliest servedate by patient, and indicate the date as the dxDate*/<br/>data _BDC&#59<br/>&nbsp&nbsp&nbsp&nbspset _BDC2&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbsprename &theServeDate = dxDate&#59<br/>&nbsp&nbsp&nbsp&nbspsrc='m'&#59<br/>run&#59<br/><br/>/*_BDD. For records in data set _BDC3, indicate patients who could only can be identified from the dispensation claims, i.e., <br/>&nbsp&nbsp&nbsp&nbspAdd a field Cohort1a_ID_DMD_onlyYN. For records in data set _BDC3 with patient ids that cannot be found in data set _BC, let Cohort1a_ID_DMD_onlyYN=1<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BDC,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._BC,<br/>&nbsp&nbsp&nbsp&nbsptarget=localt._BD, <br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.&theStudyID = \"\", 1, 0) as Cohort1a_ID_DMD_onlyYN),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-uyuDGQlQbkUGnfwI","name":"BE MS from all sources","NodeDescription":"///t<br/>///s<br/>/*BE. Making the raw cohort (MS patients identified from hospital, physician, and pharmacy files) */<br/>/*<br/>[_RD]<br/>Combine records in data set _BC and data set _BD. For those missing Cohort1a_ID_DMD_onlyYN values (i.e., records from _BC),<br/>&nbsp&nbsp&nbsp&nbsplet Cohort1a_ID_DMD_onlyYN=0. <br/>Sort records by Patient ID, DXDate, and Cohort1a_ID_DMD_onlyYN.<br/><br/>For each distinct Patient ID, keep the record with the earliest DXDate. <br/>Create a field 'First_admin_code_date'. <br/>Let First_admin_code_date=DXDate. Also create a field 'First_admin_code_Year'. <br/>Let First_admin_code_Year= the year of 'First_admin_code_date'. <br/>Save the results into data set _BE.  <br/><br/>[_Note]<br/>It is important to include the sorting of Cohort1a_ID_DMD_onlyYN. That way, the records from hospital/physician files will come first.<br/>For same-date records from physician, and pharmacy files, the one from physician file will be kept, with  Cohort1a_ID_DMD_onlyYN=0.<br/><br/>The result data set _BE is called 'raw file', as none of the exclusion criteria(e.g., years of coverage, etc) has been applied .<br/> <br/>*/<br/>data _null_&#59run&#59<br/><br/>%let theStudyID =key_hsn&#59<br/><br/>/*%print(data=localt._BC)&#59*/<br/>/*%print(data=localt._BD)&#59*/<br/><br/>/*Combine records in data set _BC and data set _BD. For those missing Cohort1a_ID_DMD_onlyYN values (i.e., records from _BC),<br/>&nbsp&nbsp&nbsp&nbsplet Cohort1a_ID_DMD_onlyYN=0.*/<br/>data _BE1&#59<br/>&nbsp&nbsp&nbsp&nbspset localt._BC localt._BD&#59<br/>&nbsp&nbsp&nbsp&nbspif Cohort1a_ID_DMD_onlyYN=. then Cohort1a_ID_DMD_onlyYN=0&#59<br/>run&#59<br/><br/>/*Sort records by Patient ID, DXDate, and Cohort1a_ID_DMD_onlyYN.<br/>[_Note]<br/>It is important to include the sorting of Cohort1a_ID_DMD_onlyYN. That way, the records from hospital/physician files will come first.<br/>For same-date records from physician, and pharmacy files, the one from physician file will be kept, with  Cohort1a_ID_DMD_onlyYN=0.<br/>*/<br/>%sort(data=_BE1, sorter=&theStudyID DXdate Cohort1a_ID_DMD_onlyYN)&#59<br/><br/>/*For each distinct Patient ID, keep the record with the earliest DXDate. <br/>&nbsp&nbsp&nbsp&nbspCreate a field 'First_admin_code_date'. <br/>&nbsp&nbsp&nbsp&nbspLet First_admin_code_date=DXDate. Also create a field 'First_admin_code_Year'. <br/>&nbsp&nbsp&nbsp&nbspLet First_admin_code_Year= the year of 'First_admin_code_date'. <br/>&nbsp&nbsp&nbsp&nbspSave the results into data set _BE. <br/>*/<br/>data localt._BE&#59<br/>&nbsp&nbsp&nbsp&nbspset _BE1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID DXdate Cohort1a_ID_DMD_onlyYN&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspdrop disease&#59<br/>&nbsp&nbsp&nbsp&nbsprename  DXDate=First_admin_code_date&#59<br/>&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year=year(dxdate)&#59<br/>run&#59<br/>/*%freq(data=localt._BE, table=src * Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-wSmjgQBu1BFXjMFE","name":"BF get Sex Birth","NodeDescription":"///t<br/>///s<br/>/*BF, get patient's sex and birth data. */<br/>/*<br/>[_RD]<br/>From the master registry file, get sex, year of birth, and month of birth. Create a variable 'Birth' for the date of birth, <br/>&nbsp&nbsp&nbsp&nbspassuming day 15 is the birthday.<br/>Create a variable 'Age_First_admin_code_date', to determine age on the First_admin_code_date.<br/>Create a variable 'StudyStartDate'. If Age_First_admin_code_date< 18, let StudyStartDate= the 18th birthday&#59 otherwise let StudyStartDate= First_admin_code_date.<br/>Save results to data set _BF.<br/>*/<br/>data _null_&#59run&#59<br/>/*From the master registry file, get sex, year of birth, and date of birth. Create a variable 'Birth' for the date of birth, <br/>&nbsp&nbsp&nbsp&nbspassuming day 15 is the birthday.*/<br/>%let theStudyID =key_hsn&#59<br/>%let dayOfBirth=15&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_phrs_info.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_phrs_info.sas7bdat)<br/>)&#59<br/>/*%print(data=master_phrs_info)&#59*/<br/><br/>/*For patients in _BE, from the master registry file, get sex, year of birth, and date of birth. Create a variable 'Birth' for the date of birth, <br/>&nbsp&nbsp&nbsp&nbspassuming day 15 is the birthday.Also create a variable 'Age_First_admin_code_date', to determine age on the First_admin_code_date.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._BE,<br/>&nbsp&nbsp&nbsp&nbspt2=master_phrs_info,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BF1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.*, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.sex_desc as sex, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmdy(t2.born_month, &dayOfBirth, t2.born_year) format date9. as Birth, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspint(yrdif(mdy(t2.born_month, 15, t2.born_year), t1.First_admin_code_date, 'AGE')) as Age_First_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>/*Check if there are patients younger than 18 on first_admin_code_date<br/>&nbsp&nbsp&nbsp&nbspdata test&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _BF1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Age_First_admin_code_date < 18&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspThere are such patients.<br/>*/<br/><br/><br/>/*Create a variable 'StudyStartDate'. If Age_First_admin_code_date< 18, move the studystartdate to the 18th birthday. Save results to data set _BF */<br/>data localt._BF&#59<br/>&nbsp&nbsp&nbsp&nbspset _BF1&#59<br/>&nbsp&nbsp&nbsp&nbspif Age_First_admin_code_date < 18 then StudyStartDate = mdy(month(birth), day(birth), year(birth)+18)&#59<br/>&nbsp&nbsp&nbsp&nbspelse StudyStartDate =  First_admin_code_date&#59<br/>&nbsp&nbsp&nbsp&nbspformat StudyStartDate date9.&#59<br/>run&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-FbJWB8KdTyTzpLCr","name":"BG excld by FollowupEnddate","NodeDescription":"///t<br/>///s<br/>/*_BG. Exclude patients included after the follow up end date*/<br/>data _null_&#59run&#59<br/>/*<br/>[_RD]<br/>From data set _BF, exclude patients who had a StudyStartDate after the followupend date.<br/>*/<br/><br/><br/>%let FollowUpEndDate='31Mar2018'd&#59 /*changed here*/<br/><br/>data localt._BG&#59<br/>&nbsp&nbsp&nbsp&nbspset localt._BF&#59<br/>&nbsp&nbsp&nbsp&nbspif StudyStartDate <= &FollowUpEndDate&#59<br/>run&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-ejvYlwKSN3OCpqYL","name":"BH Coverage","NodeDescription":"///t<br/>///s<br/>/*_BH. Get coverage data, excluding patients not fully covered within 365 days prior to the StudyStartDate*/<br/><br/>/*<br/>[_RD]<br/>For patients in data set _BF, from the master file with registry data, get health care entrollment, and gap periods within <br/>&nbsp&nbsp&nbsp&nbsp365 days prior to (exclusive) the studyStartDate.<br/>Exclude patients not fully enrolled within 365 days prior to (exclusive) the studyStartDate. Fully enrolled is defined as:<br/>&nbsp&nbsp&nbsp&nbsp1. not having a cumulative unregistered days of ??. <br/>&nbsp&nbsp&nbsp&nbsp2. not having a continuous break of ?? days.<br/>Save results in _B. (Is it the final cohort?)<br/>*/<br/>data _null_&#59run&#59<br/><br/>%let theStudyID =key_hsn&#59<br/>%let Days_cover=365&#59<br/>%let Days_maxGap=int(365*.9)&#59/*new protocol changed to > 90% of days within 1 year before the entry date*/<br/>%let coverageVar=cumuCoverGap&#59 /*or MaxCoverGap*/<br/>%let FollowUpEndDate = '31Mar2018'd&#59<br/><br/>/*For patients in data set _BF, from the master file with registry data, get health care entrollment, and gap periods within <br/>&nbsp&nbsp&nbsp&nbsp365 days prior to (exclusive) the studyStartDate.*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_phrs_cov.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_phrs_cov.sas7bdat)<br/>)&#59<br/><br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=master_phrs_cov, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=localt._BG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=%str(StudyStartDate-365), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= %str(StudyStartDate-1), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_BH1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>/*_BH1 contains multiple records for each patient. The vars 'start' and 'end' indicate the whole look back period <br/>&nbsp&nbsp&nbsp&nbsp(i.e., studystartDate-365 to studyStartDate -1).The vars 'coverstart' and 'coverend' indicate each coverage/gap interval. <br/>&nbsp&nbsp&nbsp&nbsp(e.g., covered for an interval of 30 days, followed by a gap of 335 days).<br/>*/<br/><br/><br/>/*Option 1: if the requirment is to exclude patients with a cumulative gap of ?? days*/<br/>/*sum days covered within the specified period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BH1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BH2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, sum(days) as days_covered),<br/>&nbsp&nbsp&nbsp&nbspgroupby=%str(t1.&theStudyID)<br/>)&#59<br/>/*from above, select patients satisfying the length of cumulative coverage*/<br/>data _BH3&#59<br/>&nbsp&nbsp&nbsp&nbspset _BH2&#59<br/>&nbsp&nbsp&nbsp&nbspif days_covered ge &days_cover&#59<br/>run&#59<br/><br/>/*link back to _BF, indicate those having full registry (not having a cumulative gap of ?? days)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._BF,<br/>&nbsp&nbsp&nbsp&nbspt2=_BH3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BH4,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.&theStudyID =\"\", 1, 0) as cumuCoverGap),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*Option2: if the requirment is to exclude patients with a gap of ?? days*/<br/>/*Get records with a gap greater than ?? days*/<br/>Data _BH5&#59<br/>&nbsp&nbsp&nbsp&nbspset _BH1&#59<br/>&nbsp&nbsp&nbsp&nbspif gaps >= &Days_maxGap&#59<br/>run&#59<br/>/*link back to _BH4, indicate those having full registry (not having a gap > ?? days)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BH4,<br/>&nbsp&nbsp&nbsp&nbspt2=_BH5,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BH6,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.&theStudyID =\"\", 0, 1) as MaxCoverGap),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*Option3: cumulatively covered for > 90% in 365 days prior the studystartdate<br/>&nbsp&nbsp&nbsp&nbspAND, <br/>&nbsp&nbsp&nbsp&nbspif not satisfied, shift the study start date in time until the condition is satisfied<br/>*/<br/>/*need to start from 1995, a year before the first study start date*/<br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=master_phrs_cov, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=localt._BG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart='01jan1995'd, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= '31mar2018'd, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_BH11, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>data _bh12&#59<br/>&nbsp&nbsp&nbsp&nbspset _bh11&#59<br/>/*&nbsp&nbsp&nbsp&nbspdrop First_admin: cohort: age_first: sex src birth &#59*/<br/>&nbsp&nbsp&nbsp&nbspif days >0&#59<br/>&nbsp&nbsp&nbsp&nbspdrop start end coverPCT gapPCT days gaps &#59<br/>run&#59<br/><br/><br/>data _BH13&#59<br/>&nbsp&nbsp&nbsp&nbspset _bh12&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn coverstart coverend&#59<br/>&nbsp&nbsp&nbsp&nbspformat newIndex_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbsparray covered_currentday[8491]  _temporary_&#59 /*it starts from covered_currentday[1], not covered_currentday[0]*/<br/>&nbsp&nbsp&nbsp&nbsp/*the temporary array values are automatically retained*/<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 8491&#59 /*8491 are days between '01jan1995' and '31mar2018'd, has to start from 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspas for studyStartDate ='01jan1996', it'll need to caculate covering days since '01jan1995'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.key_hsn then covered_currentday[i] =0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcurrentday = '31dec1994'd + i&#59 /*between '01jan1996' and '31mar2018'd*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif covered_currentday[i] ne 1 then do&#59 /*if the value is already 1 (covered), do not change it*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif coverstart <currentday < coverend then do&#59 /*if the currentday is within a coverage period, let the cover status =1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcovered_currentday[i]=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif currentday >= StudyStartDate then do&#59 /*only starting to look back the cumulative covering days since the index_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = i-365 to i-1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays=sumcoverdays + covered_currentday[j]&#59 /*calculate the cumulative covering days within 365 days prior to the current day*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the number cumulative covering days is greater than 90% of a year (365 days), the currentday is the earliest<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdate of the new index_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif sumcoverdays > &Days_maxGap  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnewIndex_date = currentday&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i j  currentday sumcoverdays&#59<br/>run&#59<br/><br/>data _BH14&#59<br/>&nbsp&nbsp&nbsp&nbspset _BH13&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn coverstart coverend&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspif newIndex_date ne .&#59<br/>run&#59<br/><br/><br/>data localt._B&#59<br/>&nbsp&nbsp&nbsp&nbspset _BH14&#59<br/>&nbsp&nbsp&nbsp&nbspdrop StudyStartDate&#59<br/>&nbsp&nbsp&nbsp&nbsprename newIndex_date= StudyStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspdrop coverEnd coverstart&#59<br/>run&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-Rzvu6tEl1M3VaXSr","name":"C StudyEnd","NodeDescription":"///t<br/>///s<br/>/*<br/>CA Determine the date of the deceased<br/>*/<br/>data _null_&#59run&#59<br/>/*<br/>[_RD]<br/>Determine the date of the deceased.<br/>For individuals in data set _B, and according to the master mortality file, select individuals deceased between StudyStartDate, <br/>and &FollowUpEndDate.<br/>Create two varaibles, StudyEndDate, and ExitType. <br/>Let StudyEndDate be the day of death. Let the ExitType be 'deceased'. <br/>Save results in data set _CA.<br/><br/>For individuals in data set _B, and according to the master coverage file, select individuals who lost health insurance coverage (but not<br/>&nbsp&nbsp&nbsp&nbspdeceased) between StudyStartDate, and &FollowupEndDate. Lost of health insurance is defined as the date after which there is a gap<br/>&nbsp&nbsp&nbsp&nbspof coverage for &Days_maxGap or more days. For patients with multiple gaps >= &Days_maxGap days, keep the first one. <br/>Let StudyEndDate be the day right before the start date of the gap. Let the ExitType be 'emigration'. <br/>Save results in data set _CB.<br/><br/>For patients in data set _B, indicate the StudyEndDate, and ExitType, according to data set _CA, and data set _CB. <br/>For individuals not in data set _CA, and data set _CB, let StudyEndDate = the FollowUpEndDate, let ExitType = 'studyend'.<br/>Save results in data set _CC.<br/><br/>From data set _CC, exclude those with with a StudyEndDate before the StudyStartDate. <br/>Save results in _C.<br/><br/>[_Note]<br/>&nbsp&nbsp&nbsp&nbspFor coverage gaps within &Days_maxGap days prior to the FollowUpEndDate, there is no way to determine whether<br/>&nbsp&nbsp&nbsp&nbspor not the real gap is less or more than &Days_maxGap days. In that case, the gaps will be treated as gaps < &Days_maxGap days. <br/><br/>&nbsp&nbsp&nbsp&nbspData set _CC may contain individuals with a StudyEndDate before the StudyStartDate. This is because patients had a coverage gap<br/>&nbsp&nbsp&nbsp&nbspof &Days_maxGap+ days right on the StudyStartDate. These patients should be excluded.<br/><br/><br/>*/<br/><br/><br/>%let theStudyID=key_hsn&#59<br/>%let FollowUpEndDate='31Mar2018'd&#59<br/>%let Days_maxGap = 90&#59 /*changed to 90 days by the new proposal 2019-0628*/<br/><br/>/*CA0 unzip the mort file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_verif_mort.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_verif_mort.sas7bdat)<br/>)&#59<br/>/*%print(data=master_verif_mort)&#59*/<br/>/*<br/>_CA<br/>For individuals in data set _B, and according to the master mortality file, select individuals deceased between StudyStartDate, <br/>and &FollowUpEndDate.<br/>Create two varaibles, StudyEndDate, and ExitType. <br/>Let StudyEndDate be the day of death. Let the ExitType be 'deceased'. <br/>Save results in data set _CA.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._B,<br/>&nbsp&nbsp&nbsp&nbspt2=master_verif_mort,<br/>&nbsp&nbsp&nbsp&nbsptarget=_CA,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t2.ddt_novit as StudyEndDate, 'deceased' as ExitType length=15),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.ddt_novit ne . and t2.ddt_novit between t1.studystartdate and &FollowUpEndDate)<br/>)&#59<br/><br/><br/>/*<br/>_CB<br/>For individuals in data set _B, and according to the master coverage file, select individuals who lost health insurance coverage (but not<br/>&nbsp&nbsp&nbsp&nbspdeceased) between StudyStartDate, and &FollowupEndDate. Lost of health insurance is defined as the date after which there is a gap<br/>&nbsp&nbsp&nbsp&nbspof coverage for &Days_maxGap or more days. For patients with multiple gaps >= &Days_maxGap days, keep the first one. <br/>Let StudyEndDate be the day right before the start date of the gap. Let the ExitType be 'emigration'. <br/>Save results in data set _CB.<br/><br/>[_Note]<br/>&nbsp&nbsp&nbsp&nbspFor coverage gaps within &Days_maxGap days prior to the FollowUpEndDate, there is no way to determine whether<br/>&nbsp&nbsp&nbsp&nbspor not the real gap is less or more than &Days_maxGap days. In that case, such gaps will be treated as gaps < &Days_maxGap days. <br/>*/<br/><br/>/*CB0<br/>unzip the master coverage file<br/>*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_phrs_cov.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_phrs_cov.sas7bdat)<br/>)&#59<br/><br/>/*For patients in data set _B, from the master file with registry data, get health care entrollment, and gap periods between <br/> &nbsp&nbsp&nbsp&nbspthe studyStartDate, and &FollowUpEndDate.*/<br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=master_phrs_cov, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=localt._B, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart=%str(StudyStartDate), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= &FollowUpEndDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_CB1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>/*_CB1 contains multiple records for each patient. The vars 'start' and 'end' indicate the whole look back period <br/>&nbsp&nbsp&nbsp&nbsp(i.e., studystartDate to &FollowUpEndDate).The vars 'coverstart' and 'coverend' indicate each coverage/gap interval. <br/>&nbsp&nbsp&nbsp&nbsp(e.g., covered for an interval of 30 days, followed by a gap of 335 days).<br/>*/<br/>/*_CB2 Get records with a gap equal to or greater than &Days_maxGap days*/<br/>Data _CB2&#59<br/>&nbsp&nbsp&nbsp&nbspset _CB1&#59<br/>&nbsp&nbsp&nbsp&nbspif gaps >= &Days_maxGap&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID coverstart coverEnd&#59<br/>run&#59<br/>/*_CB3, For the above records, the variable 'coverstart' is indeed the start date of gap >= &Days_maxGap. <br/>&nbsp&nbsp&nbsp&nbspAs a patient may have multiple gaps, and each gap is >= &Days_maxGap. The following is to sort by the start dates and<br/>&nbsp&nbsp&nbsp&nbspkeep the first record (i.e., the earliest gap of &Days_maxGap days or more)<br/>*/<br/>%sort(data=_CB2, sorter=&theStudyID coverstart)&#59<br/>data _CB3&#59<br/>&nbsp&nbsp&nbsp&nbspset _CB2&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID coverstart&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>run&#59<br/>/*_CB4. The above patients include those deceased. The following is to exclude the patient who deceased within the study period (in _CA)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_CB3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_CB4,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from _CA))<br/>)&#59<br/><br/>/*_CB5. For the above patients, the last date of coverage is the date right before the coverstart (indeed the gap start date).*/<br/>data _CB&#59<br/>&nbsp&nbsp&nbsp&nbspset _CB4&#59<br/>&nbsp&nbsp&nbsp&nbspformat StudyEndDate date9. ExitType $15. &#59<br/>&nbsp&nbsp&nbsp&nbspStudyEndDate = coverstart-1&#59<br/>&nbsp&nbsp&nbsp&nbspExitType='emigration'&#59<br/>&nbsp&nbsp&nbsp&nbspdrop coverstart coverEnd&#59<br/>run&#59<br/><br/>/*_CC<br/>For patients in data set _B, indicate the StudyEndDate, and ExitType, according to data set _CA, and data set _CB. <br/>For individuals not in data set _CA, and data set _CB, let StudyEndDate = the FollowUpEndDate, let ExitType = 'studyend'.<br/>Save results in data set _CC.<br/>*/<br/><br/>/*_CC1. Combine _CA and _CB. */<br/>data _CC1&#59<br/>&nbsp&nbsp&nbsp&nbspformat ExitType $15.&#59<br/>&nbsp&nbsp&nbsp&nbspset _CA _CB&#59<br/>run&#59<br/>/*_CC2. Line the above to _B. For those not in _CC1, let StudyEndDate = the FollowUpEndDate, let ExitType = 'studyend'*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._B,<br/>&nbsp&nbsp&nbsp&nbspt2=_CC1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_CC2,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.StudyEndDate, t2.ExitType length =15 ),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>data _CC&#59<br/>&nbsp&nbsp&nbsp&nbspset _CC2&#59<br/>&nbsp&nbsp&nbsp&nbspif  StudyEndDate=. then StudyEndDate = &FollowUpEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspif ExitType=\"\" then ExitType = 'studyend'&#59<br/>run&#59<br/><br/>/*_CD. <br/>From data set _CC, exclude those with with a StudyEndDate before the StudyStartDate. <br/>Save results in _C.<br/>[_Note]<br/>Data set _CC may contain individuals with a StudyEndDate before the StudyStartDate. This is because patients had a coverage gap<br/>&nbsp&nbsp&nbsp&nbspof &Days_maxGap+ days right on the StudyStartDate. These patients should be excluded.<br/>*/<br/>Data localt._C&#59<br/>&nbsp&nbsp&nbsp&nbspset _CC&#59<br/>&nbsp&nbsp&nbsp&nbspif not (StudyEndDate < StudyStartDate)&#59<br/>run&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-VYlBzdZ1wMELbept","name":"D Exposure Segments","NodeDescription":"///t<br/>///s<br/>/*_D. Exposure segments*/<br/>data _null_&#59run&#59<br/><br/><br/>/**/<br/>/*proc import datafile=\"&sampleRx\"*/<br/>/*&nbsp&nbsp&nbsp&nbspDBMS=excel*/<br/>/*&nbsp&nbsp&nbsp&nbspout=tmp*/<br/>/*&nbsp&nbsp&nbsp&nbspreplace*/<br/>/*&nbsp&nbsp&nbsp&nbsp&#59*/<br/>/*getnames=yes&#59*/<br/>/*sheet=\"sheet1\"&#59*/<br/>/*run&#59*/<br/>/*data sampleRx&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theStudyID  $11. */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspStudyStartDate date9. */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspStudyEndDate date9. */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDIN $8.*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theServeDate date9.*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass $20. */<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspGeneration $20.*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDescription $100.&#59 */<br/>/*&nbsp&nbsp&nbsp&nbspset tmp&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspStudyStartDate ='01Jan1996'd&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspStudyEndDate = '31Mar2018'd&#59*/<br/>/*&nbsp&nbsp&nbsp&nbspsupplydays=30&#59*/<br/>/*Run&#59*/<br/><br/>%let theStudyID=Key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/>%let inclusionStartDate= '01jan1996'd&#59<br/>%let inclusionEndDate = '31Mar2018'd&#59<br/><br/>/*_DA0. Unzip the benefit and nonbenefit drug claims*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_benefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_benefit.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_nonbenefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_nonbenefit.sas7bdat)<br/>)&#59<br/>/*get the MS drug claims*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localT.a6_dindx,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DA0a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.&theServeDate, t2.*, 'dp' || strip(put(monotonic(), 20.)) format $22. as RxOBS), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&theServeDate between &inclusionStartDate and &inclusionEndDate),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.&theStudyID, t1.&theServeDate, t1.DIN)<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localT.a6_dindx,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DA0b,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.&theServeDate, t2.*, 'nb' || strip(put(monotonic(), 20.)) format $22. as RxOBS), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&theServeDate between &inclusionStartDate and &inclusionEndDate),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.&theStudyID, t1.&theServeDate, t1.DIN)<br/>)&#59<br/>data _DA0c&#59<br/>&nbsp&nbsp&nbsp&nbspset _DA0a _DA0b&#59<br/>run&#59<br/><br/>/*from above, select claims within study period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbspt2=_DA0c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DA,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.studyStartDate, t1.studyEndDate, t2.*), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.&theServeDate between t1.StudyStartDate and t1.StudyEndDate)<br/>)&#59<br/>%print(data=_DA)&#59<br/><br/><br/>/*_DB Determine the supply days.<br/>&nbsp&nbsp&nbsp&nbspFor SK, assuming 30 days supply for each dispensation, except that assuming 365 days for Alemtuzumab, and 180 days for Ocrelizumab.&nbsp&nbsp&nbsp&nbsp<br/>*/<br/><br/>/*Comments added on 2019-08-12:<br/><br/>Based on the word file:<br/>\"If multiple dispensations (i.e. same DINs or different DINs but same drug class) on the same day, the 30-day supply for <br/>each dispensation will be added up.  \"<br/>[1]------ for drugclaims on the same day, multiple the # of claims by 30 days to have new days' supply<br/><br/>From the mail from Huah Shin on 2019-08-09:<br/><br/>(1)If there is an overlap between the same drugs, we donât consider the overlap period.<br/>For example, in your first slide.<br/>IFNB dispensed on 1-Jan-2000 for 30 days then the next IFNB dispensed on 20-Jan-2000 for 30days. There was an  overlap of 11 days between the first and second supply. <br/>The exposure duration will be calculated from 1-Jan-2000 to 19-Jan-2000 (i.e. 19 days) then 20-Jan-2000+30 days = total of 49 days  <br/><br/>If there is an overlap between the different drug, we also donât consider the overlap period. We assume the first drug was stopped before the second drug was started.<br/>IFNB dispensed on 1-Jan-2000 for 30days then switch to glatiramer on 20-Jan-2000 for 30 days. <br/>The exposure duration for IFNB will be calculated from 1-Jan-2000 to 19-Jan-2000 (i.e. total 19 days)&#59 <br/>then glatriamer will be calculated from 20-Jan-2000 + 30days  = 30 days. <br/><br/><br/>Summary of the exposure period 2nd slide (in case my explanation just now wasnât clear enough):<br/>(2) For the second slides:<br/>There is a small gap (as long as itâs < 90 days), we consider the drug as being continued.<br/>IFNB dispensed on 1-Jan-2000 for 30 days. A small gap here before the next IFNB dispensed on 1-Mar-2000 for 30 days. There are no further supply of IFNB for the subsequent 90 days.<br/>The exposure duration for IFNB will be calculated from 1-Jan-2000 to 1-Mar-2000 + 30 days supply + 30 days grace-period.<br/><br/>We defined the discontinuation as being >=90days between the gap. The grace-period is only added to the âlast supplyâ of the drug.<br/><br/>------ Overlapping claims truncate the previous supply period<br/>------ grace only add at the end of a connected period<br/>------ all periods (depending on definitions, e.g., by class, by generation, any) with a gap < 90 days<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspare considered continuously exposed<br/>------ period is specific for different definition (e.g., by class, by generation, any).  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>*** in addition, there were medication claims prior to the index date, therefore the calculation should be started as early as possible<br/>------ include all MS DMT claims as early as we have. <br/>*/<br/><br/>/*from above, select ALL claims as early as we have, adding the study start dates<br/><br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbspt2=_DA0c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DA,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.studyStartDate, t1.studyEndDate, t2.*), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>%print(data=_DA)&#59<br/><br/>/*Note: the DMT claims are NOT earlier than 01Jan1996 (in fact the earliest is 02Dec1997)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_DA,<br/>&nbsp&nbsp&nbsp&nbsptarget=test,<br/>&nbsp&nbsp&nbsp&nbspvars=min(rx_ddddd) format date9. as min<br/>)&#59<br/><br/><br/><br/>/*_DB Determine the supply days.<br/>&nbsp&nbsp&nbsp&nbspFor SK, assuming 30 days supply for each dispensation, except that assuming 365 days for Alemtuzumab, and 180 days for Ocrelizumab.&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>/*_DB1, <br/>For records in data set _DA, add a variable 'SupplyDays'. For SK, assuming 30 days supply for each dispensation, <br/>except that assuming 365 days for Alemtuzumab, and 180 days for Ocrelizumab.<br/>[Note:] For Alemtuzumab, it is tricky. Patients may have up to 10 dispensations on the same day, or multiple dispensations<br/>within a few consecutive days after the first dispensation.<br/>\"(a)Alemtuzumab: as 1 year drug exposure (the numbers of supply may vary from 1 to 5 supplies within one year period. <br/>Regardless of the numbers of supply an individual receives within the one year period, <br/>it will be calculated as 1 year drug exposure from the date of 1st supply of the year).\"<br/><br/>Hypothetically, a patient may receive 2 dispensations daily between 01jan2001 to 04jan2001, and then refilled<br/>&nbsp&nbsp&nbsp&nbspwithin 01dec2001 and 04dec2001<br/>Note 01jan2001 and 01dec2001 (the two starting dates) are within one year, but obviously for two annual administrations  <br/><br/>It seems that Alemtuzumab, and Ocrelizumab should be treated separately from the other DMT claims. <br/>1) check the gaps between claims (so as to determine the length of a gap that are good enough to split the two annual admissions)<br/>or <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindex(strip(lowcase(generic_name)), 'ocrelizumab') ne 0&#59<br/>*/<br/>data _DB1a1&#59<br/>&nbsp&nbsp&nbsp&nbspset _DA&#59<br/>&nbsp&nbsp&nbsp&nbspif index(strip(lowcase(generic_name)), 'alemtuzumab') ne 0 &#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID Class_short Generation_short DIN &theServeDate  StudyStartDate StudyEndDate DIN &#59<br/>run&#59<br/>%sort(data=_DB1a1, sorter=&theStudyID Class_short &theServeDate)&#59<br/>/*get the gaps between 2 dispensations*/<br/>data _DB1a2&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB1a1&#59<br/>&nbsp&nbsp&nbsp&nbsplagRxDate = lag(Rx_ddddd)&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID Class_short &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then lagRxDate=Rx_ddddd&#59<br/>&nbsp&nbsp&nbsp&nbspgap=Rx_ddddd - lagRxDate&#59<br/>run&#59<br/>/*distribution*/<br/>Proc univariate data =  _DB1a2&#59<br/>&nbsp&nbsp&nbsp&nbsphistogram gap /normal&#59<br/>run&#59<br/>%freq(data=_DB1a2, table=gap)&#59<br/>/*It shows that if the gap between 2 dispensations were polarized between 0 to 4, and 328 to 399<br/>As such, if a gap is beyond 180 days, it'll be fills for another year<br/>*/<br/>data _DB1a3&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB1a2&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID Class_short &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then periodN=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif gap > 180 then periodN +1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>data _DB1a&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB1a3&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  periodN&#59<br/>&nbsp&nbsp&nbsp&nbspif first.periodN&#59<br/>&nbsp&nbsp&nbsp&nbspSupplyDays=365&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lagRxDate gap periodN&#59<br/>run&#59<br/><br/>/*should apply the similar approach to Ocrelizumab. It is just that there is no Ocrelizumab claims within the study period*/<br/>data _DB1b&#59<br/>&nbsp&nbsp&nbsp&nbspset _DA&#59<br/>&nbsp&nbsp&nbsp&nbspif index(strip(lowcase(generic_name)), 'ocrelizumab') ne 0 &#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID Class_short Generation_short DIN &theServeDate  StudyStartDate StudyEndDate DIN &#59<br/>run&#59<br/><br/>/*For the rest of the claims: <br/>Handle the first point [1]<br/>------ for drugclaims on the same day, multiply the # of claims by 30 days to have new days' supply<br/>*/<br/>/*a. sort data by patient id, class, and service date*/<br/>data _DB1c1&#59<br/>&nbsp&nbsp&nbsp&nbspset _DA&#59<br/>&nbsp&nbsp&nbsp&nbspif index(strip(lowcase(generic_name)), 'alemtuzumab') = 0 and index(strip(lowcase(generic_name)), 'ocrelizumab') =0  &#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID Class_short Generation_short DIN &theServeDate  StudyStartDate StudyEndDate DIN &#59<br/>run&#59<br/>%sort(data=_DB1c1, sorter=&theStudyID  Class_short &theServeDate)&#59<br/>/*b. add a number to count the same-day claims of the same class*/<br/>data _DB1c2&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB1c1&#59<br/>&nbsp&nbsp&nbsp&nbsplastRxDate = lag(&theServeDate)&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  Class_short &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplastRxDate=&theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnRx=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &nbsp&nbsp&nbsp&nbsplastRxDate = &theServeDate then nRx +1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse nRx=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the max nRx?*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_DB1c2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=max(nRx)  as max<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*10? really?*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _DB1c2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif nRx>5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_DB1c2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=test2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*there are yet patients with 5-10 claims on the same day...*/<br/><br/>data _DB1c&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB1c2&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  Class_short &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbspif last.&theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbspSupplyDays = 30* nRx&#59 <br/>&nbsp&nbsp&nbsp&nbspdrop lastRxDate nRx&#59<br/>run&#59<br/>%freq(data=_DB1c,table=Class_short * SupplyDays)&#59<br/><br/>/*Putting together*/<br/>data _DB1&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB1a _DB1b _DB1c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop din&#59 /*the DIN is kind of misleading<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif there are multiple claims of the same class on the same date, the DIN is of the medication<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof the LAST claim. DINS of other same-date claims have been ignored in previous steps<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs such, the column DIN is removed so as to avoid misleading*/<br/>run&#59<br/><br/>/*Now that all exceptions have been treated.<br/>&nbsp&nbsp&nbsp&nbspThe next step is to clean up the overlaps, <br/>1. indicate the gaps (90 days?), and redefine the interval stop<br/>&nbsp&nbsp&nbsp&nbsp(extend if a gap < 90 or add grace period if a gap >=90)<br/>&nbsp&nbsp&nbsp&nbspalso, if the gap between the last claim and the study end date is < 90, extend the stop to the studyenddate<br/>&nbsp&nbsp&nbsp&nbsp (this should be done before adjusted for others. avoid adjusting for multiple times) <br/>2. cleaning overlap, i.e., adjust the stop date to be at least 1 day earlier then the next claim (lagstartdate).<br/>(what if there were 2 claims of diff classes on the same day: (what if there were 2 claims of diff classes on the same day: see step 4)<br/>3. further truncate the interval end if it exceed the follow up end date<br/>4. If there were multipe claims with the same adjusted start dates, take the one with the longest exposure period<br/>*/<br/><br/>/*1. indicate the gaps (90 days?), and redefine the interval stop<br/>&nbsp&nbsp&nbsp&nbsp(extend if a gap < 90 or add grace period if a gap >=90)  */<br/><br/>/*add the interval end according to the days of supply*/<br/>data _Db2a&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB1&#59<br/>&nbsp&nbsp&nbsp&nbspstart=Rx_ddddd&#59<br/>&nbsp&nbsp&nbsp&nbspstop = Rx_ddddd + SupplyDays -1&#59<br/>&nbsp&nbsp&nbsp&nbspformat start date9. stop date9.&#59<br/>run&#59<br/>/*determine the gaps between two consecutive claims*/<br/>%sort(data=_Db2a, sorter=%str(&theStudyID descending start descending stop))&#59<br/>data _Db2b&#59<br/>&nbsp&nbsp&nbsp&nbspset _Db2a&#59<br/>&nbsp&nbsp&nbsp&nbsplagstart=lag(start)&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending start descending stop&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagstart = start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgap=StudyEndDate - stop -1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgap = lagstart - stop -1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat lagstart date9.&#59<br/>run&#59<br/>/*if a gap is between 0 and 89, extend the stop date by + 89 days<br/>&nbsp&nbsp&nbsp&nbspif a gap is 90 or more, add a grace period by + 30 days<br/>&nbsp&nbsp&nbsp&nbsp[Comment]<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThere might be a potential problem here. Is it fair that <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp- for a gap within 90 days, add 89 days (treat as continuously covered)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp- for a gap of 90 days and beyond, add 30 days (grace period)<br/>&nbsp&nbsp&nbsp&nbsphypothetically:<br/>&nbsp&nbsp&nbsp&nbsppatient A: 01jan2001, 01Apr2001 (90 days apart)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe exposed periods are:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp01jan2001 to 02Mar2001 30 days of supply + 30 days grace period<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspunexposed period: 03Mar2001 to 31Mar2001<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp01Apr2001 to 31May2001 (30 days supply + 30 days grace period)<br/>&nbsp&nbsp&nbsp&nbsppatient B: 01jan2001, 31Mar2001 (89 days apart)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe exposed period is 01jan2001 to 30apr2001 (nogaps  + 30 grace period)<br/>*/<br/>data _db2c&#59<br/>&nbsp&nbsp&nbsp&nbspset _db2b&#59<br/>&nbsp&nbsp&nbsp&nbspadj_stop=stop&#59<br/>&nbsp&nbsp&nbsp&nbspif 0 <= gap < 90 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_stop = stop + 89&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif gap ge 90 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_stop = stop + 30&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat adj_stop date9.&#59<br/>run&#59<br/><br/>/* 2. cleaning overlap, i.e., adjust the stop date to be at least 1 day earlier then the next claim (lagstartdate).<br/>(what if there were 2 claims of diff classes on the same day: see step 4)<br/>*/<br/>data _db2d&#59<br/>&nbsp&nbsp&nbsp&nbspset _db2c&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending start descending stop&#59<br/>&nbsp&nbsp&nbsp&nbspif not first.&theStudyID then do&#59 /*the first record should not be changed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif adj_stop >= lagStart then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_stop = lagStart -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*3. further truncation:<br/>&nbsp&nbsp&nbsp&nbspremove periods stopped before the studystart date, and those started after the studyenddate<br/>&nbsp&nbsp&nbsp&nbspif the interval start is earlier than the studystart date, let the interval start = the studystartDate<br/>&nbsp&nbsp&nbsp&nbspif the interval stop is later than the studyenddate, let the interval stop = the studyenddate*/<br/>data _db2e&#59<br/>&nbsp&nbsp&nbsp&nbspset _db2d&#59<br/>&nbsp&nbsp&nbsp&nbspadj_start=start&#59<br/>&nbsp&nbsp&nbsp&nbspformat adj_start date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif adj_stop < studystartdate then delete&#59<br/>&nbsp&nbsp&nbsp&nbspif start > studyenddate then delete&#59<br/>&nbsp&nbsp&nbsp&nbspif start < studystartdate then adj_start = studystartdate&#59<br/>&nbsp&nbsp&nbsp&nbspif adj_stop > studyenddate then adj_stop = studyenddate&#59<br/>&nbsp&nbsp&nbsp&nbspdrop start stop lagstart gap&#59<br/>run&#59<br/><br/>/*4. If there were multiple claims with the same adjusted start dates, take the one with the longest exposure period*/<br/>%sort(data=_db2e, sorter=%str(&theStudyID descending adj_start descending adj_stop))&#59<br/>data _db2&#59<br/>&nbsp&nbsp&nbsp&nbspretain <br/>&nbsp&nbsp&nbsp&nbspkey_hsn<br/>&nbsp&nbsp&nbsp&nbspStudyStartDate<br/>&nbsp&nbsp&nbsp&nbspStudyEndDate<br/>&nbsp&nbsp&nbsp&nbspRX_DDDDD<br/>&nbsp&nbsp&nbsp&nbspClass_Short<br/>&nbsp&nbsp&nbsp&nbspGeneration_short<br/>&nbsp&nbsp&nbsp&nbspSupplyDays<br/>&nbsp&nbsp&nbsp&nbspadj_start<br/>&nbsp&nbsp&nbsp&nbspadj_stop<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspset _db2e&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending adj_start descending adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif first.adj_start&#59<br/>run&#59<br/><br/>/*Next is to insert unexposed periods between:<br/>&nbsp&nbsp&nbsp&nbsp1. studystartdate and the first claim, <br/>&nbsp&nbsp&nbsp&nbsp2. the last claim and the studyenddate<br/>&nbsp&nbsp&nbsp&nbsp3. two claims with gaps<br/>*/<br/>/*1. insert unexposed periods between: studystartdate and the first claim*/<br/>%sort(data=_db2, sorter=%str(&theStudyID descending adj_start descending adj_stop))&#59<br/>data _db3a&#59<br/>&nbsp&nbsp&nbsp&nbspset _db2&#59<br/>/*&nbsp&nbsp&nbsp&nbspif key_hsn = '06335354647'&#59*/<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending adj_start descending adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*insert an unexposed period if there is a gap between studyenddate and the stop of current claim (which is the last within the study period)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif adj_stop < studyEndDate then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_start = adj_stop +1&#59/*calculate adj_start first, as the adj_stop value will be changed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_stop = studyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRx_ddddd =.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass_short ='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsupplydays=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexposure_status='t'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>/*2. insert unexposed periods between: the last claim and the studyenddate*/<br/>%sort(data=_db3a, sorter=%str(&theStudyID descending adj_start descending adj_stop))&#59<br/>data _db3b&#59<br/>&nbsp&nbsp&nbsp&nbspset _db3a&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending adj_start descending adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspif last.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*insert an unexposed period if there is a gap between studystartdate and the start of current claim (which is the first within the study period)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif adj_start > studyStartDate then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_stop = adj_start -1&#59 /*calculate adj_stop first, as the adj_start value will be changed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_start = studyStartDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRx_ddddd =.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass_short ='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsupplydays=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexposure_status='h'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*3. inseart an unexposed period between two claims with gaps*/<br/>%sort(data=_db3b, sorter=%str(&theStudyID descending adj_start descending adj_stop))&#59<br/>data _db3c&#59<br/>&nbsp&nbsp&nbsp&nbspset _db3b&#59<br/>&nbsp&nbsp&nbsp&nbsplagAdjSart = lag(adj_start)&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending adj_start descending adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagAdjSart = adj_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if there is a gap between adj_stop and the next claim's adj start (preAdjStart)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinsert an unexposed period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif  lagAdjSart -adj_stop > 1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_start = adj_stop +1&#59/*calculate adj_start first, as the adj_stop value will be changed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_stop = lagAdjSart -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRx_ddddd =.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass_short ='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsupplydays=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexposure_status='u'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagAdjSart=adj_start&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat lagAdjSart date9.&#59<br/>run&#59<br/><br/>%sort(data=_db3c, sorter=%str(&theStudyID  adj_start  adj_stop))&#59<br/><br/>data _db3&#59<br/>&nbsp&nbsp&nbsp&nbspset _db3c&#59<br/>&nbsp&nbsp&nbsp&nbspdrop SupplyDays rx_ddddd lagAdjSart&#59<br/>run&#59<br/><br/>/*to this step, those ever had a DMT within study period are captured in _db3<br/>&nbsp&nbsp&nbsp&nbspHowever, there are patient not exposed to any DMT at all<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_db4a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.StudyStartDate, t1.StudyEndDate),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.&theStudyID not in (select &theStudyID from _db3))<br/>)&#59<br/><br/>data _db4b&#59<br/>&nbsp&nbsp&nbsp&nbspset _db4a&#59<br/>&nbsp&nbsp&nbsp&nbspclass_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbspadj_start=studyStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspadj_stop=studyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspformat adj_start date9. adj_stop date9.&#59<br/>&nbsp&nbsp&nbsp&nbspexposure_status='w'&#59<br/>run&#59<br/><br/>data _db4&#59<br/>&nbsp&nbsp&nbsp&nbspset _db3 _db4b&#59<br/>&nbsp&nbsp&nbsp&nbspif exposure_status = '' then exposure_status='d'&#59<br/>run&#59<br/>%sort(data=_db4, sorter=%str(&theStudyID  adj_start  adj_stop))&#59<br/>/*concatenate the exposure periods<br/>&nbsp&nbsp&nbsp&nbspNote: such concatenate is specific by any DMT, same class, and same generation, respectively<br/>*/<br/><br/>/*Intervals exposed/unexposed to Any DMT*/<br/>%sort(data=_db4, sorter=%str(&theStudyID  adj_start  adj_stop))&#59<br/>data _db5a&#59<br/>&nbsp&nbsp&nbsp&nbspset _db4&#59<br/>&nbsp&nbsp&nbsp&nbsplag_exposure_status=lag(exposure_status)&#59<br/>&nbsp&nbsp&nbsp&nbspretain extend_adj_start&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  adj_start  adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspextend_adj_start = adj_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplag_exposure_status=exposure_status&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNSeg = 1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exposure_status = 'd' and lag_exposure_status ne 'd' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexposure_status ne 'd' and lag_exposure_status = 'd' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNSeg +1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspextend_adj_start=adj_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat extend_adj_start date9.&#59<br/>run&#59<br/><br/>%sort(data=_db5a, sorter=%str(&theStudyID  extend_adj_start  adj_stop))&#59<br/>data _db5&#59<br/>&nbsp&nbsp&nbsp&nbspretain &theStudyID studyStartDate studyEndDate NSeg exposure_status extend_adj_start adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspset _db5a&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  extend_adj_start  adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif last.extend_adj_start&#59<br/>&nbsp&nbsp&nbsp&nbspdrop adj_start  Class_Short Generation_short lag_exposure_status&#59<br/>&nbsp&nbsp&nbsp&nbsprename extend_adj_start = segStartDate adj_stop = segEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspformat exposeGroup $10.&#59<br/>&nbsp&nbsp&nbsp&nbspexposeGroup = 'any'&#59<br/>run&#59<br/><br/><br/>/*Intervals exposed/unexposed to a class of DMTs*/<br/>%sort(data=_db4, sorter=%str(&theStudyID  adj_start  adj_stop))&#59<br/>data _db6a&#59<br/>&nbsp&nbsp&nbsp&nbspset _db4&#59<br/>&nbsp&nbsp&nbsp&nbsplag_exposure_status=lag(exposure_status)&#59<br/>&nbsp&nbsp&nbsp&nbsplag_class=lag(class_short)&#59<br/>&nbsp&nbsp&nbsp&nbspretain extend_adj_start&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  adj_start  adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspextend_adj_start = adj_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplag_exposure_status=exposure_status&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplag_class=class_short&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNSeg = 1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exposure_status = 'd' and lag_exposure_status ne 'd' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexposure_status ne 'd' and lag_exposure_status = 'd' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass_short ne lag_class<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNSeg +1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspextend_adj_start=adj_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat extend_adj_start date9.&#59<br/>run&#59<br/><br/>%sort(data=_db6a, sorter=%str(&theStudyID  extend_adj_start  adj_stop))&#59<br/>data _db6&#59<br/>&nbsp&nbsp&nbsp&nbspretain &theStudyID studyStartDate studyEndDate NSeg exposure_status extend_adj_start adj_stop class_short&#59<br/>&nbsp&nbsp&nbsp&nbspset _db6a&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  extend_adj_start  adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif last.extend_adj_start&#59<br/>&nbsp&nbsp&nbsp&nbspdrop adj_start   lag_exposure_status lag_class&#59<br/>&nbsp&nbsp&nbsp&nbsprename extend_adj_start = segStartDate adj_stop = segEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspformat exposeGroup $10.&#59<br/>&nbsp&nbsp&nbsp&nbspexposeGroup = 'class'&#59<br/>run&#59<br/><br/><br/>/*Intervals exposed/unexposed to a class of DMTs*/<br/>%sort(data=_db4, sorter=%str(&theStudyID  adj_start  adj_stop))&#59<br/>data _db7a&#59<br/>&nbsp&nbsp&nbsp&nbspset _db4&#59<br/>&nbsp&nbsp&nbsp&nbsplag_exposure_status=lag(exposure_status)&#59<br/>&nbsp&nbsp&nbsp&nbsplag_generation=lag(generation_short)&#59<br/>&nbsp&nbsp&nbsp&nbspretain extend_adj_start&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  adj_start  adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspextend_adj_start = adj_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplag_exposure_status=exposure_status&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplag_generation=generation_short&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNSeg = 1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exposure_status = 'd' and lag_exposure_status ne 'd' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexposure_status ne 'd' and lag_exposure_status = 'd' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short ne lag_generation<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNSeg +1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspextend_adj_start=adj_start&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat extend_adj_start date9.&#59<br/>run&#59<br/><br/>%sort(data=_db7a, sorter=%str(&theStudyID  extend_adj_start  adj_stop))&#59<br/>data _db7&#59<br/>&nbsp&nbsp&nbsp&nbspretain &theStudyID studyStartDate studyEndDate NSeg exposure_status extend_adj_start adj_stop generation_short&#59<br/>&nbsp&nbsp&nbsp&nbspset _db7a&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  extend_adj_start  adj_stop&#59<br/>&nbsp&nbsp&nbsp&nbspif last.extend_adj_start&#59<br/>&nbsp&nbsp&nbsp&nbspdrop adj_start  class_short lag_exposure_status lag_generation&#59<br/>&nbsp&nbsp&nbsp&nbsprename extend_adj_start = segStartDate adj_stop = segEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspformat exposeGroup $10.&#59<br/>&nbsp&nbsp&nbsp&nbspexposeGroup = 'generation'&#59<br/>run&#59<br/><br/><br/>data _db8&#59<br/>&nbsp&nbsp&nbsp&nbspset _db5 _db6 _db7&#59<br/>run&#59<br/><br/>/*Note: the dataset _D contains periods of three different exposure settings<br/>&nbsp&nbsp&nbsp&nbspin the future, only one exposure setting should be used to account for baseline and statistics<br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbspt2=_DB8,<br/>&nbsp&nbsp&nbsp&nbsptarget=_D,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=_D.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=_D.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/>%beep&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-hCwPpuTe3FfovK1M","name":"E_any_ Outcome","NodeDescription":"///t<br/>///s<br/>/*E. Measuring outcome, i.e., number of encounters with phycisians*/<br/>data _null_&#59run&#59<br/>/*<br/>[_RD]<br/>_EA, <br/>For patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>Save results in data set _EA.<br/>_EB.<br/>For service records in data set _EA, exclude those falling into the following criteria:<br/>1) visiting a neurologist, i.e., with a specialty in ('CK', 'DK'). <br/>[_Note]<br/>These codes are specific for SK database. CK = paediatrics neurology&#59 DK = internal medicine neurology&#59 .<br/>2) visiting a doctor for pregnancy, i.e., with a &DiagICDCol value in (ICD-10 codes: O00-O08, O10-O16, O20-O29, O30-O48, O60-O75, O80-O84, O85-O92, O94-O99, Z32-Z39&#59 <br/>ICD-9 codes: 630â679, V22-V24, V27-V28, V30-V39&#59 or BC specific codes: 07A, 08A, 17B, 19B, 20B, 30B, 31B, 32B, 33B, 34B, 35B, 36B, 37B, 38B ). <br/>[_Note] In SK physician service file, there is only one field with 3-digit ICD-9 codes.<br/>Save results in data set _EB.<br/>_EC<br/>For records in data set _EB, determine the specialty categories according to the categories defined in (appendix ??). <br/>Save results in data set _EC.<br/>[_Note] A mapping file 'SPECMAP' has been prepared by the program 'SPECMapping'. It is specifically for SK data.<br/>_ED<br/>For records in _EC, get encounters, which are defined as distince records by patient id, diagnosis code, date of service, and physician ID.<br/>Create a variable for unique order numbers of encounters ('EncounterID').<br/>Save results in data set _ED.<br/>_EE<br/>With data in data set &DData, and data set _ED, count number of encounters per period. <br/>_EF. <br/>Link period-specific countings of total and specialty-specific number of encounters to records in data set &DData. <br/>Save results in data set _E.<br/>[_Note] Data set _EE only contains periods with encounters. For periods in &DData that not having encounters, let N_Encounters=0.<br/>*/<br/><br/>%let theStudyID=KEY_HSN&#59<br/>%let DiagICDCol= diag&#59<br/>%let DocServeDate = dos&#59<br/>%let theDOCID = key_doc_num&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\_D.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(_D.sas7bdat)<br/>)&#59<br/><br/>/*Note: the dataset _D contains periods of three different exposure settings<br/>&nbsp&nbsp&nbsp&nbspin the future, only one exposure setting should be used to account for baseline and statistics<br/>*/<br/>%let DData=_E0&#59<br/>%let ETarget=_E_any&#59<br/>data &DData&#59<br/>&nbsp&nbsp&nbsp&nbspset _D&#59<br/>&nbsp&nbsp&nbsp&nbspif exposegroup='any'&#59<br/>run&#59<br/><br/>/*%print(data=&DData)&#59*/<br/>/*_EA, <br/>For patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>Save results in data set _EA.*/<br/>/*EA0, unzip the raw file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/>/*%print(data=master_msb)&#59*/<br/>/*EA1. <br/>for patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EA,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&DocServeDate between studyStartDate and studyEndDate)<br/>)&#59<br/><br/>/*_EB.<br/>For service records in data set _EA, exclude those falling into the following criteria:<br/>1) visiting a neurologist, i.e., with a specialty in ('CK', 'DK'). <br/>[_Note]<br/>These codes are specific for SK database. CK = paediatrics neurology&#59 DK = internal medicine neurology.<br/>2) visiting a doctor for pregnancy, i.e., with a DIAG value in (ICD-10 codes: O00-O08, O10-O16, O20-O29, O30-O48, O60-O75, O80-O84, O85-O92, O94-O99, Z32-Z39&#59 <br/>ICD-9 codes: 630â679, V22-V24, V27-V28, V30-V39&#59 or BC specific codes: 07A, 08A, 17B, 19B, 20B, 30B, 31B, 32B, 33B, 34B, 35B, 36B, 37B, 38B ). <br/>[_Note] In SK physician service file, there is only one field with 3-digit ICD-9 codes.<br/>Save results in data set _EB.<br/>*/<br/><br/>/*_EB1, from data set _EA, remove records with a specialty in ('CK', 'DK'). If the SPEC value is missing, let SPEC = '_'<br/>&nbsp&nbsp&nbsp&nbspalso remove those with a SPEC indicated to exclude in<br/>&nbsp&nbsp&nbsp&nbspP:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\Copy of SPECGrouping.xlsx<br/>*/<br/>data _EB1&#59<br/>&nbsp&nbsp&nbsp&nbspset _EA&#59<br/>&nbsp&nbsp&nbsp&nbspif SPEC not in ('CB', 'CB', 'CC', 'CD', 'CB', 'CF', 'CG', 'CH', 'CB', 'CK', 'CL', 'CB', 'CB', 'CR', 'CB', 'DK', 'WB', 'WC', 'WE', 'WD', 'WF', 'WM', 'WP')&#59<br/>&nbsp&nbsp&nbsp&nbspif SPEC ne \"\" &#59<br/>run&#59<br/><br/>/*_EB, from data set _EB1, remove records with a diagnostic code in (630â679, V22-V24, V27-V28, V30-V39).<br/>*/<br/>data _EB&#59<br/>&nbsp&nbsp&nbsp&nbspset _EB1&#59<br/>&nbsp&nbsp&nbsp&nbspif not(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'630' <= &DiagICDCol <= '679'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V22' <= &DiagICDCol <= 'V24'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V27' <= &DiagICDCol <= 'V28'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V30' <= &DiagICDCol <= 'V39'<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>run&#59<br/>/*%freq(data=_EB2, table=&DiagICDCol)&#59*/<br/><br/>/*_EC<br/>For records in data set _EB, determine the specialty categories according to the categories defined in (appendix ??). <br/>Save results in data set _EC.<br/>[_Note] A mapping file 'SPECMAP' has been prepared by the program 'SPECMapping'. It is specifically for SK data.<br/>*/<br/>/*_EC1, link data set _EB to data set SPECMAP, add the variable 'SPECCAT\" from the data set SPECMAP*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_EB,<br/>&nbsp&nbsp&nbsp&nbspt2=localD.SpecMap,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.SPECCat),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjterm= %str(strip(t1.SPEC) = strip(t2.SPEC)) <br/>)&#59<br/>/*test:<br/>&nbsp&nbsp&nbsp&nbspIn _EC, none of SPECCat value should be missing<br/>&nbsp&nbsp&nbsp&nbspdata test&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _EC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPECCat=\"\"&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspconfirmed, none is missing value of SPECCat.<br/>*/<br/><br/>/*_ED<br/>For records in _EC, get encounters, which are defined as distince records by patient id, diagnosis code, date of service, and physician ID.<br/>Create a variable for unique order numbers of encounters ('EncounterID').<br/>Save results in data set _ED.<br/>*/<br/>%distinct(<br/>&nbsp&nbsp&nbsp&nbspdata=_EC, <br/>&nbsp&nbsp&nbsp&nbsptarget=_ED1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, &DiagICDCol, &DocServeDate, &theDOCID, SPECCat),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(&theStudyID, &DiagICDCol, &DocServeDate, &theDOCID, SPECCat)<br/>)&#59<br/>/*<br/>[_Note] <br/>It could be that there are two records of the same patient, &DiagICDCol, &DocServeDate, and doc ID, but of different SPECcat. <br/>&nbsp&nbsp&nbsp&nbspThe following is to select the first record of such kind.<br/>*/<br/>Data _ED&#59<br/>&nbsp&nbsp&nbsp&nbspset _ED1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID &DiagICDCol &DocServeDate &theDOCID SPECCat&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theDOCID&#59<br/>&nbsp&nbsp&nbsp&nbspEncounterID=_n_&#59<br/>run&#59<br/><br/><br/>/*_EE<br/>With data in data set &DData, and data set _ED, count number of encounters per period. <br/>*/<br/>/*_EE1 <br/>Join data set &DData, and data set _ED, <br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= &DData,<br/>&nbsp&nbsp&nbsp&nbspt2=_ED,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t2.EncounterID, t2.SpecCat),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.&DocServeDate between t1.SegStartDate and t1.SegEndDate)<br/>)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*test: the EncounterID should not be repeated in _EE<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=_EE, target=test, vars=EncounterID)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspConfirmed. Both _EE and test have the same number of observations.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>/*_EE2, count total number of encounters (i.e., EncounterID) by each period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, count(t1.EncounterID) as N_Encounters_Total),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate)<br/>)&#59<br/>/*_EE3, count number of encounters by each specialty category, and each period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'N_Encounters_' || scan(SpecCat, 1, \"__\") format $20. as SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(t1.EncounterID) as N_Encounters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate,SpecCat_Short),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, SpecCat_Short)<br/>)&#59<br/><br/>/*[Note]:there is a problem here that some category like 'NUS__Neurosurgeon' did not appear in any claims.<br/>&nbsp&nbsp&nbsp&nbspThe counting above does not contain countings for the NUS category. It'll be missing<br/>*/<br/><br/>/*have a distinct list of specialty categories, and rename it following the same rules as in _EE3a*/<br/>%distinct(data = localD.SpecMap, vars=%str('N_Encounters_' || scan(SpecCat, 1, \"__\") as SpecCat_Short length=20), target=_EE3b)&#59<br/><br/>/*also to create a list of distinct patient-segstart-segend*/<br/>%distinct(data=&DData, vars=%str(&theStudyID, SegStartDate, SegEndDate), target=_EE3c)&#59<br/><br/>/*create a cross join table to have complete combination of patient, segments, and specialties*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE3b,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3d,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=cross<br/>)&#59<br/><br/>/*left join the above _EE3a (MSB claims) and _EE3D (patient, seg, and spec), to having N encounters by a complete list of specialities in SpecCat_Short*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE3d,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3a,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3e,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SegStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SegEndDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.N_Encounters =., 0, t2.N_Encounters) as N_Encounters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t1.SpecCat_Short),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t1.SpecCat_Short)<br/>)&#59<br/><br/><br/><br/>/* Transpose to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_EE3e,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID SegStartDate SegEndDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = SpecCat_short,<br/>&nbsp&nbsp&nbsp&nbspcontents=N_Encounters<br/>)&#59<br/><br/>/*_EF. <br/>Link period-specific countings of total and specialty-specific number of encounters to records in data set &DData. <br/>Save results in data set _E.<br/>[_Note] Data set _EE only contains periods with encounters. For periods in &DData that not having encounters, let N_Encounters=0.<br/>*/<br/>/*Get the total number of encounters per period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=&DData,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EF1,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/>/*Get the specialty category specific number of encounters per period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_EF1,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EF2,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/>/*Replace the missing value in encounter columns with 0*/<br/>data &ETarget&#59<br/>&nbsp&nbsp&nbsp&nbspset _EF2&#59<br/>&nbsp&nbsp&nbsp&nbsparray NENCNTS N_Encounters:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(NENCNTS)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NENCNTS(i) =. then NENCNTS(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=&Etarget..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&ETarget..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-eKFg6CP7FBoinDkU","name":"E_Generation_ Outcome","NodeDescription":"///t<br/>///s<br/>/*E. Measuring outcome, i.e., number of encounters with phycisians*/<br/>data _null_&#59run&#59<br/>/*<br/>[_RD]<br/>_EA, <br/>For patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>Save results in data set _EA.<br/>_EB.<br/>For service records in data set _EA, exclude those falling into the following criteria:<br/>1) visiting a neurologist, i.e., with a specialty in ('CK', 'DK'). <br/>[_Note]<br/>These codes are specific for SK database. CK = paediatrics neurology&#59 DK = internal medicine neurology&#59 .<br/>2) visiting a doctor for pregnancy, i.e., with a &DiagICDCol value in (ICD-10 codes: O00-O08, O10-O16, O20-O29, O30-O48, O60-O75, O80-O84, O85-O92, O94-O99, Z32-Z39&#59 <br/>ICD-9 codes: 630â679, V22-V24, V27-V28, V30-V39&#59 or BC specific codes: 07A, 08A, 17B, 19B, 20B, 30B, 31B, 32B, 33B, 34B, 35B, 36B, 37B, 38B ). <br/>[_Note] In SK physician service file, there is only one field with 3-digit ICD-9 codes.<br/>Save results in data set _EB.<br/>_EC<br/>For records in data set _EB, determine the specialty categories according to the categories defined in (appendix ??). <br/>Save results in data set _EC.<br/>[_Note] A mapping file 'SPECMAP' has been prepared by the program 'SPECMapping'. It is specifically for SK data.<br/>_ED<br/>For records in _EC, get encounters, which are defined as distince records by patient id, diagnosis code, date of service, and physician ID.<br/>Create a variable for unique order numbers of encounters ('EncounterID').<br/>Save results in data set _ED.<br/>_EE<br/>With data in data set &DData, and data set _ED, count number of encounters per period. <br/>_EF. <br/>Link period-specific countings of total and specialty-specific number of encounters to records in data set &DData. <br/>Save results in data set _E.<br/>[_Note] Data set _EE only contains periods with encounters. For periods in &DData that not having encounters, let N_Encounters=0.<br/>*/<br/><br/>%let theStudyID=KEY_HSN&#59<br/>%let DiagICDCol= diag&#59<br/>%let DocServeDate = dos&#59<br/>%let theDOCID = key_doc_num&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\_D.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(_D.sas7bdat)<br/>)&#59<br/><br/>/*Note: the dataset _D contains periods of three different exposure settings<br/>&nbsp&nbsp&nbsp&nbspin the future, only one exposure setting should be used to account for baseline and statistics<br/>*/<br/>%let DData=_E0&#59<br/>%let ETarget=_E_Generation&#59<br/>data &DData&#59<br/>&nbsp&nbsp&nbsp&nbspset _D&#59<br/>&nbsp&nbsp&nbsp&nbspif exposegroup='generation'&#59<br/>run&#59<br/><br/>/*%print(data=&DData)&#59*/<br/>/*_EA, <br/>For patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>Save results in data set _EA.*/<br/>/*EA0, unzip the raw file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/>/*%print(data=master_msb)&#59*/<br/>/*EA1. <br/>for patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EA,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&DocServeDate between studyStartDate and studyEndDate)<br/>)&#59<br/><br/>/*_EB.<br/>For service records in data set _EA, exclude those falling into the following criteria:<br/>1) visiting a neurologist, i.e., with a specialty in ('CK', 'DK'). <br/>[_Note]<br/>These codes are specific for SK database. CK = paediatrics neurology&#59 DK = internal medicine neurology.<br/>2) visiting a doctor for pregnancy, i.e., with a DIAG value in (ICD-10 codes: O00-O08, O10-O16, O20-O29, O30-O48, O60-O75, O80-O84, O85-O92, O94-O99, Z32-Z39&#59 <br/>ICD-9 codes: 630â679, V22-V24, V27-V28, V30-V39&#59 or BC specific codes: 07A, 08A, 17B, 19B, 20B, 30B, 31B, 32B, 33B, 34B, 35B, 36B, 37B, 38B ). <br/>[_Note] In SK physician service file, there is only one field with 3-digit ICD-9 codes.<br/>Save results in data set _EB.<br/>*/<br/><br/>/*_EB1, from data set _EA, remove records with a specialty in ('CK', 'DK'). If the SPEC value is missing, let SPEC = '_'<br/>&nbsp&nbsp&nbsp&nbspalso remove those with a SPEC indicated to exclude in<br/>&nbsp&nbsp&nbsp&nbspP:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\Copy of SPECGrouping.xlsx<br/>*/<br/>data _EB1&#59<br/>&nbsp&nbsp&nbsp&nbspset _EA&#59<br/>&nbsp&nbsp&nbsp&nbspif SPEC not in ('CB', 'CB', 'CC', 'CD', 'CB', 'CF', 'CG', 'CH', 'CB', 'CK', 'CL', 'CB', 'CB', 'CR', 'CB', 'DK', 'WB', 'WC', 'WE', 'WD', 'WF', 'WM', 'WP')&#59<br/>&nbsp&nbsp&nbsp&nbspif SPEC ne \"\" &#59<br/>run&#59<br/><br/>/*_EB, from data set _EB1, remove records with a diagnostic code in (630â679, V22-V24, V27-V28, V30-V39).<br/>*/<br/>data _EB&#59<br/>&nbsp&nbsp&nbsp&nbspset _EB1&#59<br/>&nbsp&nbsp&nbsp&nbspif not(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'630' <= &DiagICDCol <= '679'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V22' <= &DiagICDCol <= 'V24'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V27' <= &DiagICDCol <= 'V28'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V30' <= &DiagICDCol <= 'V39'<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>run&#59<br/>/*%freq(data=_EB2, table=&DiagICDCol)&#59*/<br/><br/>/*_EC<br/>For records in data set _EB, determine the specialty categories according to the categories defined in (appendix ??). <br/>Save results in data set _EC.<br/>[_Note] A mapping file 'SPECMAP' has been prepared by the program 'SPECMapping'. It is specifically for SK data.<br/>*/<br/>/*_EC1, link data set _EB to data set SPECMAP, add the variable 'SPECCAT\" from the data set SPECMAP*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_EB,<br/>&nbsp&nbsp&nbsp&nbspt2=localD.SpecMap,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.SPECCat),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjterm= %str(strip(t1.SPEC) = strip(t2.SPEC)) <br/>)&#59<br/>/*test:<br/>&nbsp&nbsp&nbsp&nbspIn _EC, none of SPECCat value should be missing<br/>&nbsp&nbsp&nbsp&nbspdata test&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _EC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPECCat=\"\"&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspconfirmed, none is missing value of SPECCat.<br/>*/<br/><br/>/*_ED<br/>For records in _EC, get encounters, which are defined as distince records by patient id, diagnosis code, date of service, and physician ID.<br/>Create a variable for unique order numbers of encounters ('EncounterID').<br/>Save results in data set _ED.<br/>*/<br/>%distinct(<br/>&nbsp&nbsp&nbsp&nbspdata=_EC, <br/>&nbsp&nbsp&nbsp&nbsptarget=_ED1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, &DiagICDCol, &DocServeDate, &theDOCID, SPECCat),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(&theStudyID, &DiagICDCol, &DocServeDate, &theDOCID, SPECCat)<br/>)&#59<br/>/*<br/>[_Note] <br/>It could be that there are two records of the same patient, &DiagICDCol, &DocServeDate, and doc ID, but of different SPECcat. <br/>&nbsp&nbsp&nbsp&nbspThe following is to select the first record of such kind.<br/>*/<br/>Data _ED&#59<br/>&nbsp&nbsp&nbsp&nbspset _ED1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID &DiagICDCol &DocServeDate &theDOCID SPECCat&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theDOCID&#59<br/>&nbsp&nbsp&nbsp&nbspEncounterID=_n_&#59<br/>run&#59<br/><br/><br/>/*_EE<br/>With data in data set &DData, and data set _ED, count number of encounters per period. <br/>*/<br/>/*_EE1 <br/>Join data set &DData, and data set _ED, <br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= &DData,<br/>&nbsp&nbsp&nbsp&nbspt2=_ED,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t2.EncounterID, t2.SpecCat),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.&DocServeDate between t1.SegStartDate and t1.SegEndDate)<br/>)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*test: the EncounterID should not be repeated in _EE<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=_EE, target=test, vars=EncounterID)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspConfirmed. Both _EE and test have the same number of observations.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>/*_EE2, count total number of encounters (i.e., EncounterID) by each period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, count(t1.EncounterID) as N_Encounters_Total),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate)<br/>)&#59<br/>/*_EE3, count number of encounters by each specialty category, and each period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'N_Encounters_' || scan(SpecCat, 1, \"__\") format $20. as SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(t1.EncounterID) as N_Encounters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate,SpecCat_Short),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, SpecCat_Short)<br/>)&#59<br/><br/>/*[Note]:there is a problem here that some category like 'NUS__Neurosurgeon' did not appear in any claims.<br/>&nbsp&nbsp&nbsp&nbspThe counting above does not contain countings for the NUS category. It'll be missing<br/>*/<br/><br/>/*have a distinct list of specialty categories, and rename it following the same rules as in _EE3a*/<br/>%distinct(data = localD.SpecMap, vars=%str('N_Encounters_' || scan(SpecCat, 1, \"__\") as SpecCat_Short length=20), target=_EE3b)&#59<br/><br/>/*also to create a list of distinct patient-segstart-segend*/<br/>%distinct(data=&DData, vars=%str(&theStudyID, SegStartDate, SegEndDate), target=_EE3c)&#59<br/><br/>/*create a cross join table to have complete combination of patient, segments, and specialties*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE3b,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3d,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=cross<br/>)&#59<br/><br/>/*left join the above _EE3a (MSB claims) and _EE3D (patient, seg, and spec), to having N encounters by a complete list of specialities in SpecCat_Short*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE3d,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3a,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3e,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SegStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SegEndDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.N_Encounters =., 0, t2.N_Encounters) as N_Encounters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t1.SpecCat_Short),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t1.SpecCat_Short)<br/>)&#59<br/><br/><br/><br/>/* Transpose to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_EE3e,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID SegStartDate SegEndDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = SpecCat_short,<br/>&nbsp&nbsp&nbsp&nbspcontents=N_Encounters<br/>)&#59<br/><br/>/*_EF. <br/>Link period-specific countings of total and specialty-specific number of encounters to records in data set &DData. <br/>Save results in data set _E.<br/>[_Note] Data set _EE only contains periods with encounters. For periods in &DData that not having encounters, let N_Encounters=0.<br/>*/<br/>/*Get the total number of encounters per period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=&DData,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EF1,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/>/*Get the specialty category specific number of encounters per period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_EF1,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EF2,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/>/*Replace the missing value in encounter columns with 0*/<br/>data &ETarget&#59<br/>&nbsp&nbsp&nbsp&nbspset _EF2&#59<br/>&nbsp&nbsp&nbsp&nbsparray NENCNTS N_Encounters:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(NENCNTS)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NENCNTS(i) =. then NENCNTS(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=&Etarget..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&ETarget..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-qQArptliCjxCCMdY","name":"E_Class_ Outcome","NodeDescription":"///t<br/>///s<br/>/*E. Measuring outcome, i.e., number of encounters with phycisians*/<br/>data _null_&#59run&#59<br/>/*<br/>[_RD]<br/>_EA, <br/>For patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>Save results in data set _EA.<br/>_EB.<br/>For service records in data set _EA, exclude those falling into the following criteria:<br/>1) visiting a neurologist, i.e., with a specialty in ('CK', 'DK'). <br/>[_Note]<br/>These codes are specific for SK database. CK = paediatrics neurology&#59 DK = internal medicine neurology&#59 .<br/>2) visiting a doctor for pregnancy, i.e., with a &DiagICDCol value in (ICD-10 codes: O00-O08, O10-O16, O20-O29, O30-O48, O60-O75, O80-O84, O85-O92, O94-O99, Z32-Z39&#59 <br/>ICD-9 codes: 630â679, V22-V24, V27-V28, V30-V39&#59 or BC specific codes: 07A, 08A, 17B, 19B, 20B, 30B, 31B, 32B, 33B, 34B, 35B, 36B, 37B, 38B ). <br/>[_Note] In SK physician service file, there is only one field with 3-digit ICD-9 codes.<br/>Save results in data set _EB.<br/>_EC<br/>For records in data set _EB, determine the specialty categories according to the categories defined in (appendix ??). <br/>Save results in data set _EC.<br/>[_Note] A mapping file 'SPECMAP' has been prepared by the program 'SPECMapping'. It is specifically for SK data.<br/>_ED<br/>For records in _EC, get encounters, which are defined as distince records by patient id, diagnosis code, date of service, and physician ID.<br/>Create a variable for unique order numbers of encounters ('EncounterID').<br/>Save results in data set _ED.<br/>_EE<br/>With data in data set &DData, and data set _ED, count number of encounters per period. <br/>_EF. <br/>Link period-specific countings of total and specialty-specific number of encounters to records in data set &DData. <br/>Save results in data set _E.<br/>[_Note] Data set _EE only contains periods with encounters. For periods in &DData that not having encounters, let N_Encounters=0.<br/>*/<br/><br/>%let theStudyID=KEY_HSN&#59<br/>%let DiagICDCol= diag&#59<br/>%let DocServeDate = dos&#59<br/>%let theDOCID = key_doc_num&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\_D.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(_D.sas7bdat)<br/>)&#59<br/><br/>/*Note: the dataset _D contains periods of three different exposure settings<br/>&nbsp&nbsp&nbsp&nbspin the future, only one exposure setting should be used to account for baseline and statistics<br/>*/<br/>%let DData=_E0&#59<br/>%let ETarget=_E_Class&#59<br/>data &DData&#59<br/>&nbsp&nbsp&nbsp&nbspset _D&#59<br/>&nbsp&nbsp&nbsp&nbspif exposegroup='class'&#59<br/>run&#59<br/><br/>/*%print(data=&DData)&#59*/<br/>/*_EA, <br/>For patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>Save results in data set _EA.*/<br/>/*EA0, unzip the raw file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/>/*%print(data=master_msb)&#59*/<br/>/*EA1. <br/>for patients in _C, get all physician visits from the raw physician service file between the studystartdate and studyenddate.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EA,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&DocServeDate between studyStartDate and studyEndDate)<br/>)&#59<br/><br/>/*_EB.<br/>For service records in data set _EA, exclude those falling into the following criteria:<br/>1) visiting a neurologist, i.e., with a specialty in ('CK', 'DK'). <br/>[_Note]<br/>These codes are specific for SK database. CK = paediatrics neurology&#59 DK = internal medicine neurology.<br/>2) visiting a doctor for pregnancy, i.e., with a DIAG value in (ICD-10 codes: O00-O08, O10-O16, O20-O29, O30-O48, O60-O75, O80-O84, O85-O92, O94-O99, Z32-Z39&#59 <br/>ICD-9 codes: 630â679, V22-V24, V27-V28, V30-V39&#59 or BC specific codes: 07A, 08A, 17B, 19B, 20B, 30B, 31B, 32B, 33B, 34B, 35B, 36B, 37B, 38B ). <br/>[_Note] In SK physician service file, there is only one field with 3-digit ICD-9 codes.<br/>Save results in data set _EB.<br/>*/<br/><br/>/*_EB1, from data set _EA, remove records with a specialty in ('CK', 'DK'). If the SPEC value is missing, let SPEC = '_'<br/>&nbsp&nbsp&nbsp&nbspalso remove those with a SPEC indicated to exclude in<br/>&nbsp&nbsp&nbsp&nbspP:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\Copy of SPECGrouping.xlsx<br/>*/<br/>data _EB1&#59<br/>&nbsp&nbsp&nbsp&nbspset _EA&#59<br/>&nbsp&nbsp&nbsp&nbspif SPEC not in ('CB', 'CB', 'CC', 'CD', 'CB', 'CF', 'CG', 'CH', 'CB', 'CK', 'CL', 'CB', 'CB', 'CR', 'CB', 'DK', 'WB', 'WC', 'WE', 'WD', 'WF', 'WM', 'WP')&#59<br/>&nbsp&nbsp&nbsp&nbspif SPEC ne \"\" &#59<br/>run&#59<br/><br/>/*_EB, from data set _EB1, remove records with a diagnostic code in (630â679, V22-V24, V27-V28, V30-V39).<br/>*/<br/>data _EB&#59<br/>&nbsp&nbsp&nbsp&nbspset _EB1&#59<br/>&nbsp&nbsp&nbsp&nbspif not(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'630' <= &DiagICDCol <= '679'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V22' <= &DiagICDCol <= 'V24'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V27' <= &DiagICDCol <= 'V28'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'V30' <= &DiagICDCol <= 'V39'<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>run&#59<br/>/*%freq(data=_EB2, table=&DiagICDCol)&#59*/<br/><br/>/*_EC<br/>For records in data set _EB, determine the specialty categories according to the categories defined in (appendix ??). <br/>Save results in data set _EC.<br/>[_Note] A mapping file 'SPECMAP' has been prepared by the program 'SPECMapping'. It is specifically for SK data.<br/>*/<br/>/*_EC1, link data set _EB to data set SPECMAP, add the variable 'SPECCAT\" from the data set SPECMAP*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_EB,<br/>&nbsp&nbsp&nbsp&nbspt2=localD.SpecMap,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.SPECCat),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjterm= %str(strip(t1.SPEC) = strip(t2.SPEC)) <br/>)&#59<br/>/*test:<br/>&nbsp&nbsp&nbsp&nbspIn _EC, none of SPECCat value should be missing<br/>&nbsp&nbsp&nbsp&nbspdata test&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _EC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SPECCat=\"\"&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspconfirmed, none is missing value of SPECCat.<br/>*/<br/><br/>/*_ED<br/>For records in _EC, get encounters, which are defined as distince records by patient id, diagnosis code, date of service, and physician ID.<br/>Create a variable for unique order numbers of encounters ('EncounterID').<br/>Save results in data set _ED.<br/>*/<br/>%distinct(<br/>&nbsp&nbsp&nbsp&nbspdata=_EC, <br/>&nbsp&nbsp&nbsp&nbsptarget=_ED1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, &DiagICDCol, &DocServeDate, &theDOCID, SPECCat),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(&theStudyID, &DiagICDCol, &DocServeDate, &theDOCID, SPECCat)<br/>)&#59<br/>/*<br/>[_Note] <br/>It could be that there are two records of the same patient, &DiagICDCol, &DocServeDate, and doc ID, but of different SPECcat. <br/>&nbsp&nbsp&nbsp&nbspThe following is to select the first record of such kind.<br/>*/<br/>Data _ED&#59<br/>&nbsp&nbsp&nbsp&nbspset _ED1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID &DiagICDCol &DocServeDate &theDOCID SPECCat&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theDOCID&#59<br/>&nbsp&nbsp&nbsp&nbspEncounterID=_n_&#59<br/>run&#59<br/><br/><br/>/*_EE<br/>With data in data set &DData, and data set _ED, count number of encounters per period. <br/>*/<br/>/*_EE1 <br/>Join data set &DData, and data set _ED, <br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= &DData,<br/>&nbsp&nbsp&nbsp&nbspt2=_ED,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t2.EncounterID, t2.SpecCat),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.&DocServeDate between t1.SegStartDate and t1.SegEndDate)<br/>)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*test: the EncounterID should not be repeated in _EE<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=_EE, target=test, vars=EncounterID)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspConfirmed. Both _EE and test have the same number of observations.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>/*_EE2, count total number of encounters (i.e., EncounterID) by each period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, count(t1.EncounterID) as N_Encounters_Total),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate)<br/>)&#59<br/>/*_EE3, count number of encounters by each specialty category, and each period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp'N_Encounters_' || scan(SpecCat, 1, \"__\") format $20. as SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(t1.EncounterID) as N_Encounters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate,SpecCat_Short),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, SpecCat_Short)<br/>)&#59<br/><br/>/*[Note]:there is a problem here that some category like 'NUS__Neurosurgeon' did not appear in any claims.<br/>&nbsp&nbsp&nbsp&nbspThe counting above does not contain countings for the NUS category. It'll be missing<br/>*/<br/><br/>/*have a distinct list of specialty categories, and rename it following the same rules as in _EE3a*/<br/>%distinct(data = localD.SpecMap, vars=%str('N_Encounters_' || scan(SpecCat, 1, \"__\") as SpecCat_Short length=20), target=_EE3b)&#59<br/><br/>/*also to create a list of distinct patient-segstart-segend*/<br/>%distinct(data=&DData, vars=%str(&theStudyID, SegStartDate, SegEndDate), target=_EE3c)&#59<br/><br/>/*create a cross join table to have complete combination of patient, segments, and specialties*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE3b,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3d,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=cross<br/>)&#59<br/><br/>/*left join the above _EE3a (MSB claims) and _EE3D (patient, seg, and spec), to having N encounters by a complete list of specialities in SpecCat_Short*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _EE3d,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3a,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3e,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SegStartDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.SegEndDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspifn(t2.N_Encounters =., 0, t2.N_Encounters) as N_Encounters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate SpecCat_Short,<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t1.SpecCat_Short),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t1.SpecCat_Short)<br/>)&#59<br/><br/><br/><br/>/* Transpose to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_EE3e,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EE3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID SegStartDate SegEndDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = SpecCat_short,<br/>&nbsp&nbsp&nbsp&nbspcontents=N_Encounters<br/>)&#59<br/><br/>/*_EF. <br/>Link period-specific countings of total and specialty-specific number of encounters to records in data set &DData. <br/>Save results in data set _E.<br/>[_Note] Data set _EE only contains periods with encounters. For periods in &DData that not having encounters, let N_Encounters=0.<br/>*/<br/>/*Get the total number of encounters per period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=&DData,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EF1,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/>/*Get the specialty category specific number of encounters per period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_EF1,<br/>&nbsp&nbsp&nbsp&nbspt2=_EE3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_EF2,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/>/*Replace the missing value in encounter columns with 0*/<br/>data &ETarget&#59<br/>&nbsp&nbsp&nbsp&nbspset _EF2&#59<br/>&nbsp&nbsp&nbsp&nbsparray NENCNTS N_Encounters:&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(NENCNTS)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif NENCNTS(i) =. then NENCNTS(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=&Etarget..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&ETarget..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-eKFg6CP7FBoinDkU"}]}],"custparents":[{"idx":"CodeTask-hCwPpuTe3FfovK1M"}]}],"custparents":[{"idx":"CodeTask-VYlBzdZ1wMELbept"}]},{"idx":"CodeTask-z4aL116JJInXYusz","name":"D Exposure Segments - backup old","NodeDescription":"///t<br/>///s<br/>/*_D. Exposure segments*/<br/>data _null_&#59run&#59<br/>/*<br/>[_RD]<br/>For patients in data set _C, get drug claims the study medications within the study period (from studystartdate to studyenddate).<br/>Keep Patient ID, StudyStartDate, StudyEndDate, Service Date (Date of dispensation), DIN, Supply Days, Generic name, Class, and Generation. <br/>Save results in data set _DA.<br/><br/>For records in data set _DA, add a variable 'SupplyDays'. For SK, assuming 30 days supply for each dispensation, <br/>except that assuming 365 days for Alemtuzumab, and 180 days for Ocrelizumab.<br/>Also add a variable for days of carry over (CarryOverDays). Let CarryOverDays=30.<br/>Save results in data set _DB.<br/><br/>For records in data set _DB, add two variables. <br/>Let 'MedStartDate' = the service date&#59 let 'MedEndDate' = the service date + supply days + carry over days -1. <br/>Truncate the MedEndDate. Specifically, for the same individual, if the MedEndDate (of the current claim) is on or later than the <br/>MedStartDate of the next claim, let the MedEndDate (of the current claim) = theMedStartDate of the next claim +1.<br/><br/>[_Note]<br/>Although such algorithm can be achieved by leap methods, it will be time and resource consuming. An alternative method is to sort<br/>&nbsp&nbsp&nbsp&nbspdata in descending order by MedStartDate. That way, the lag() function can be used to get MedEndDate of the previous claims<br/><br/>[_DCBA]This part is kept for handling multiple claims on the same date<br/>For now, keep the claim of the multiple claims on the same date if<br/>1) with the latest MedEndDate&#59<br/>2) if of the same MedEndDate, keep the first claim.<br/><br/>By patient ID, determine the MedStart/End dates in the next claim<br/>[_Note]<br/>&nbsp&nbsp&nbsp&nbspThis part has to be done after removing records in _DCBA. <br/>&nbsp&nbsp&nbsp&nbspWith/without removied records will end up with different Next_values&#59 <br/>If the Next_MedStartDate (which is of a later claim) is earlier than the current MedEndDate, <br/>&nbsp&nbsp&nbsp&nbsplet adj_MedEndDate = Next_MedStartDate.<br/>&nbsp&nbsp&nbsp&nbspotherwise let adj_MedEndDate=MedEndDate.<br/>_DCC. Insert Gap Periods between the Current MedStartDate and the previous adj_MedEndDate<br/><br/>For each patient, get the previous adj_MedEndDate<br/>If there are > 1 days between the Current MedStartDate and the previous adj_MedEndDate, <br/>&nbsp&nbsp&nbsp&nbspinsert a gap period: <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplet adj_MedStartDate = pre_adj_MedEndDate +1&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplet adj_MedEndDate = MedStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplet DIN, Class, and generation values be 'null'&#59<br/>&nbsp&nbsp&nbsp&nbspdrop MedStartDate, pre_adj_MedEndDate&#59<br/><br/>&nbsp&nbsp&nbsp&nbspIf the first adj_MedStartDate - studyStartDate > 1, insert a gap.<br/>&nbsp&nbsp&nbsp&nbspAlso, if the studyEndDate - the last adj_MedEndDate > 1, insert a gap.<br/>&nbsp&nbsp&nbsp&nbspThat way, all time segments between dataStartDate and DataEndDate are marked, either covered by an MS medication, or being a gap.<br/>DCE For individuals in _C but not in _DCD, make a null exposure period from StudyStartDate to StudyEndDate. <br/>&nbsp&nbsp&nbsp&nbspThese are MS patients who were diangosed by hospital or physician data, but never received MS medications.<br/>_DCF. <br/>all segments (covered or gaps) of exposure to MS medications. <br/>Putting data set _DCD and _DCE together<br/>_DCG Merge? Should the segments of the same exposure status be merged? If so, there will be different merging patterns<br/>&nbsp&nbsp&nbsp&nbspby the 3 methods (yes/no, same generation, same class)<br/>&nbsp&nbsp&nbsp&nbspfor now, leave it unmerged<br/>&nbsp&nbsp&nbsp&nbspSaver results in data set _DC.<br/><br/>_DD <br/>&nbsp&nbsp&nbsp&nbspLink records in _DCG to _C. These will be segment-specific data for future analyses. Save results in _D. <br/>*/<br/><br/>/*_DA0, get the master drug claim file*/<br/><br/>/*_DA<br/>For patients in data set _C, get drug claims the study medications within the study period (from studystartdate to studyenddate).<br/>Keep Patient ID, StudyStartDate, StudyEndDate, Service Date (Date of dispensation), DIN, Supply Days, Generic name, Class, and Generation. <br/>Save results in data set _DA.<br/>*/<br/><br/><br/><br/>%let theStudyID=Key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/>%let inclusionStartDate= '01jan1996'd&#59<br/>%let inclusionEndDate = '31Mar2018'd&#59<br/><br/>/*_DA0. Unzip the benefit and nonbenefit drug claims*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_benefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_benefit.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_nonbenefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_nonbenefit.sas7bdat)<br/>)&#59<br/>/*get the MS drug claims*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localT.a6_dindx,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DA0a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.&theServeDate, t2.*, 'dp' || strip(put(monotonic(), 20.)) format $22. as RxOBS), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&theServeDate between &inclusionStartDate and &inclusionEndDate),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.&theStudyID, t1.&theServeDate, t1.DIN)<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localT.a6_dindx,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DA0b,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.&theServeDate, t2.*, 'nb' || strip(put(monotonic(), 20.)) format $22. as RxOBS), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&theServeDate between &inclusionStartDate and &inclusionEndDate),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(t1.&theStudyID, t1.&theServeDate, t1.DIN)<br/>)&#59<br/>data _DA0c&#59<br/>&nbsp&nbsp&nbsp&nbspset _DA0a _DA0b&#59<br/>run&#59<br/>/*from above, select claims within study period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbspt2=_DA0c,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DA,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.studyStartDate, t1.studyEndDate, t2.*), <br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.&theServeDate between t1.StudyStartDate and t1.StudyEndDate)<br/>)&#59<br/>%print(data=_DA)&#59<br/><br/><br/>/*_DB Determine the supply days.<br/>&nbsp&nbsp&nbsp&nbspFor SK, assuming 30 days supply for each dispensation, except that assuming 365 days for Alemtuzumab, and 180 days for Ocrelizumab.&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>/*_DB1, <br/>For records in data set _DA, add a variable 'SupplyDays'. For SK, assuming 30 days supply for each dispensation, <br/>except that assuming 365 days for Alemtuzumab, and 180 days for Ocrelizumab.<br/>Also add a variable for days of carry over (CarryOverDays). Let CarryOverDays=30.<br/>Save results in data set _DB<br/>*/<br/>data _DB&#59<br/>&nbsp&nbsp&nbsp&nbspset _DA&#59<br/>&nbsp&nbsp&nbsp&nbspSupplyDays = 30&#59<br/>&nbsp&nbsp&nbsp&nbspif index(strip(lowcase(generic_name)), 'alemtuzumab') ne 0 then SupplyDays=365&#59<br/>&nbsp&nbsp&nbsp&nbspif index(strip(lowcase(generic_name)), 'ocrelizumab') ne 0 then SupplyDays=180&#59<br/>&nbsp&nbsp&nbsp&nbspCarryOverDays=30&#59<br/>run&#59<br/>/*%freq(data=_DB, table=generic_name*RxSrc)&#59*/<br/><br/>/*_DC Determine the exposure periods */<br/>/*_DCA<br/>For records in data set _DB, add two variables. <br/>Let 'MedStartDate' = the service date&#59 let 'MedEndDate' = the service date + supply days + carry over days -1. <br/><br/>*/<br/>data _DCA&#59<br/>&nbsp&nbsp&nbsp&nbspset _DB&#59<br/>&nbsp&nbsp&nbsp&nbspformat MedStartDate date9. MedEndDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspMedStartDate = &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbspMedEndDate = MedStartDate + SupplyDays + CarryOverDays -1&#59<br/>&nbsp&nbsp&nbsp&nbspkeep <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theStudyID StudyStartDate StudyEndDate MedStartDate MedEndDate DIN Class_Short Generation_short<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRxOBS <br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>/*_DCB<br/>Truncate the MedEndDate. Specifically, for the same individual, if the MedEndDate (of the current claim) is on or later than the <br/>MedStartDate of the next claim, let the MedEndDate (of the current claim) = theMedStartDate of the next claim +1.<br/><br/>[_Note]<br/>Although such algorithm can be achieved by leap methods, it will be time and resource consuming. An alternative method is to sort<br/>&nbsp&nbsp&nbsp&nbspdata in descending order by MedStartDate. That way, the lag() function can be used to get MedEndDate of the previous claims<br/>*/<br/><br/>/*sort records by patient ID, and decsending MedstartDate*/<br/>%sort(Data=_DCA, sorter=&theStudyID descending MedStartDate descending MedEndDate)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*test _DCBA, are there mulitiple claims of MS medications on the same date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _testDCBA0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _DCA&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_MedStartDate=lag(MedStartDate)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_MedEndDate = lag(MedEndDate)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_DIN=Lag(DIN)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_Class_short=Lag(Class_Short)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_Generation_Short=lag(Generation_Short)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_RxOBS=lag(RxOBS)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat Next_MedStartDate date9. Next_MedEndDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby &theStudyID descending MedStartDate descending MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_MedStartDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_MedEndDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_DIN=\"\"&#59Next_Class_short=\"\"&#59Next_Generation_Short=\"\"&#59Next_RxOBS=\"\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _testDCBA1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _testDCBA0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif MedStartDate= Next_MedStartDate and Next_MedStartDate ne . &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Of different generation?*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _testDCBA2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _testDCBA1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Next_Generation_Short ne Generation_short&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Of different class?*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _testDCBA3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _testDCBA1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Next_Class_Short ne Class_short&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Of different DINs*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _testDCBA4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _testDCBA1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Next_DIN ne DIN&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*_DCBA, This part is kept for handling multiple claims on the same date<br/>For now, keep the claim of the multiple claims on the same date if<br/>1) with the latest MedEndDate&#59<br/>2) if of the same MedEndDate, keep the first claim.<br/>*/<br/>Data _DCBA&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCA&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending MedStartDate descending MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspif last.MedStartDate&#59<br/>run&#59<br/><br/>/*_DCBB. By patient ID, determine the MedStart/End dates in the next claim<br/>[_Note]<br/>&nbsp&nbsp&nbsp&nbspThis part has to be done after removing records in _DCBA. <br/>&nbsp&nbsp&nbsp&nbspWith/without removed records will end up with different Next_values&#59 <br/>*/<br/>data _DCBB&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCBA&#59<br/>&nbsp&nbsp&nbsp&nbspNext_MedStartDate=lag(MedStartDate)&#59<br/>&nbsp&nbsp&nbsp&nbspNext_MedEndDate = lag(MedEndDate)&#59<br/>&nbsp&nbsp&nbsp&nbspNext_DIN=Lag(DIN)&#59<br/>&nbsp&nbsp&nbsp&nbspNext_Class_short=Lag(Class_Short)&#59<br/>&nbsp&nbsp&nbsp&nbspNext_Generation_Short=lag(Generation_Short)&#59<br/>&nbsp&nbsp&nbsp&nbspNext_RxOBS=lag(RxOBS)&#59<br/>&nbsp&nbsp&nbsp&nbspformat Next_MedStartDate date9. Next_MedEndDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending MedStartDate descending MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_MedStartDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_MedEndDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext_DIN=\"\"&#59Next_Class_short=\"\"&#59Next_Generation_Short=\"\"&#59Next_RxOBS=\"\"&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*_DCBC. <br/>&nbsp&nbsp&nbsp&nbspIf the Next_MedStartDate (which is of a later claim) is earlier than the current MedEndDate, <br/>&nbsp&nbsp&nbsp&nbsplet adj_MedEndDate = Next_MedStartDate.<br/>&nbsp&nbsp&nbsp&nbspotherwise let adj_MedEndDate=MedEndDate.<br/>*/<br/>Data _DCB&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCBB&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID descending MedStartDate descending MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspif Next_MedStartDate ne . and Next_MedStartDate <= MedEndDate then adj_MedEndDate = Next_MedStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbspelse  adj_MedEndDate = MedEndDate&#59<br/>/*&nbsp&nbsp&nbsp&nbspif first.&theStudyID then  adj_MedEndDate = MedEndDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat adj_MedEndDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdrop Next_: MedEndDate&#59<br/>run&#59<br/><br/>/*_DCC. Insert Gap Periods between the Current MedStartDate and the previous adj_MedEndDate*/<br/>%sort(data=_DCB, target=_DCC1, sorter=&theStudyID  MedStartDate  adj_MedEndDate)&#59<br/>/*For each patient, get the previous adj_MedEndDate*/<br/>data _DCC2&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCC1&#59<br/>&nbsp&nbsp&nbsp&nbsppre_adj_MedEndDate = lag(adj_MedEndDate)&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID  MedStartDate  adj_MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then pre_adj_MedEndDate=.&#59<br/>&nbsp&nbsp&nbsp&nbspformat pre_adj_MedEndDate date9.&#59<br/>run&#59<br/>/*<br/><br/>If there are > 1 days between the Current MedStartDate and the previous adj_MedEndDate, <br/>&nbsp&nbsp&nbsp&nbspinsert a gap period: <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplet adj_MedStartDate = pre_adj_MedEndDate +1&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplet adj_MedEndDate = MedStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplet DIN, Class, and generation values be 'null'&#59<br/>&nbsp&nbsp&nbsp&nbspdrop MedStartDate, pre_adj_MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following is wrong. The output statement is tricky.!!!*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro notrun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData _DCC3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset _DCC2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pre_adj_MedEndDate ne . and MedStartDate - pre_adj_MedEndDate > 1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59 /*out put the current line*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*also insert a line*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedStartDate = pre_adj_MedEndDate +1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedEndDate = MedStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRxOBS='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMedStartDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppre_adj_MedEndDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*****************************************/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedStartDate= MedStartDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat adj_MedStartDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend notrun&#59<br/><br/><br/>Data _DCC&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCC2&#59<br/>&nbsp&nbsp&nbsp&nbspadj_MedStartDate= MedStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspif pre_adj_MedEndDate ne . and MedStartDate - pre_adj_MedEndDate > 1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*insert a line for the gap period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedStartDate = pre_adj_MedEndDate +1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedEndDate = MedStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRxOBS='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMedStartDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppre_adj_MedEndDate=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*****************************************/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat adj_MedStartDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdrop MedStartDate pre_adj_MedEndDate&#59<br/>run&#59<br/><br/>/*_DCD, <br/>&nbsp&nbsp&nbsp&nbspIf the first adj_MedStartDate - studyStartDate > 1, insert a gap.<br/>&nbsp&nbsp&nbsp&nbspAlso, if the studyEndDate - the last adj_MedEndDate > 1, insert a gap.<br/>&nbsp&nbsp&nbsp&nbspThat way, all time segments between dataStartDate and DataEndDate are marked, either covered by an MS medication, or being a gap.<br/>*/<br/>/*_DCD1, as there are gaps inserted, the data set _DCC should be sorted again*/<br/>%sort(data=_DCC, target=_DCD1, sorter=&theStudyID adj_MedStartDate adj_MedEndDate)&#59<br/>/*_DCD2, If the first adj_MedStartDate - studyStartDate > 1, insert a gap.*/<br/>data _DCD2&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCD1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID adj_MedStartDate adj_MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59 /*again, output is tricky, and should be done before inserting new rows.*/<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID and adj_MedStartDate - studyStartDate > 1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*insert a line for the gap period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedEndDate = adj_MedStartDate -1&#59 /*tricky.adj_MedEndDate must be defined first, as the adj_MedStartDate will be overwritten in the next line */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedStartDate = studyStartDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRxOBS='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*****************************************/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>/*_DCD3 After inserting the heading gap (between studyStartDate, and StudyEnd Date), the data set _DCD2 should be sorted again*/<br/>%sort(data=_DCD2, target=_DCD3, sorter=&theStudyID adj_MedStartDate adj_MedEndDate)&#59<br/>/*_DCD4, if the studyEndDate - the last adj_MedEndDate > 1, insert a gap.*/<br/>data _DCD4&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCD3&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID adj_MedStartDate adj_MedEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59 /*again, output is tricky, and should be done before inserting new rows.*/<br/>&nbsp&nbsp&nbsp&nbspif last.&theStudyID and studyEndDate - adj_MedEndDate > 1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*insert a line for the gap period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedStartDate = adj_MedEndDate +1&#59 /*tricky.adj_MedStartDate must be defined first, as the adj_MedEndDate will be overwritten in the next line */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_MedEndDate = studyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdin='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRxOBS='null'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*****************************************/<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>/*_DCD5 After inserting the heading gap (between studyStartDate, and StudyEnd Date), the data set _DCD4 should be sorted again*/<br/>%sort(data=_DCD4, target=_DCD, sorter=&theStudyID adj_MedStartDate adj_MedEndDate)&#59<br/><br/>/*DCE For individuals in _C but not in _DCD, make a null exposure period from StudyStartDate to StudyEndDate. <br/>&nbsp&nbsp&nbsp&nbspThese are MS patients who were diangosed by hospital or physician data, but never received MS medications.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_DCE1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, studyStartDate, studyEndDate),<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from _DCD))<br/>)&#59<br/>Data _DCE&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCE1&#59<br/>&nbsp&nbsp&nbsp&nbspformat RxOBS $ 22. adj_MedEndDate date9. adj_MedStartDate date9. DIN $8. Class_Short $15. Generation_short $ 6.  &#59<br/>&nbsp&nbsp&nbsp&nbspDIN='null'&#59<br/>&nbsp&nbsp&nbsp&nbspClass_Short ='null'&#59<br/>&nbsp&nbsp&nbsp&nbspGeneration_short='null'&#59<br/>&nbsp&nbsp&nbsp&nbspadj_MedStartDate=studyStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspadj_MedEndDate=studyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspRxOBS='null'&#59<br/>run&#59<br/><br/>/*_DCF. <br/>all segments (covered or gaps) of exposure to MS medications. <br/>Putting data set _DCD and _DCE together*/<br/>Data _DCF&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCE _DCD&#59 /*_DCE is put ahead, so that the columns will follow orders in _DCE*/<br/>run&#59<br/>%sort(data=_DCF, sorter=studyStartDate studyEndDate &theStudyID  adj_MedStartDate adj_MedEndDate)&#59<br/><br/>/*_DCG Merge? Should the segments of the same exposure status be merged? If so, there will be different merging patterns<br/>&nbsp&nbsp&nbsp&nbspby the 3 methods (yes/no, same generation, same class)<br/>&nbsp&nbsp&nbsp&nbspfor now, leave it unmerged<br/>*/<br/>data _DCG&#59<br/>&nbsp&nbsp&nbsp&nbspset _DCF&#59<br/>&nbsp&nbsp&nbsp&nbsprename adj_medStartDate =SegStartDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspadj_medEndDate=SegEndDate&#59<br/>run&#59<br/><br/>/*_DD <br/>&nbsp&nbsp&nbsp&nbspLink records in _DCG to _C. These will be segment-specific data for future analyses<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbspt2=_DCG,<br/>&nbsp&nbsp&nbsp&nbsptarget=_D,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=_D.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=_D.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/>%beep&#59<br/><br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-VYlBzdZ1wMELbept"}]}],"custparents":[{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]},{"idx":"EGTask-3uLoYqSzctLPiGks","name":"Copy cohort file to Remote Server","children":[{"idx":"CodeTask-B2pHkFSjSlG6KfGW","name":"F_R incqtl at remote","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>%print(data=remotes._C)&#59<br/>%put >>> &PHRS_Resi_cleanFile&#59<br/><br/>/*1. income quintile on the study start date*/<br/>%GEO_INCQTL_assign(<br/>&nbsp&nbsp&nbsp&nbspds_in =remotes._C,<br/>&nbsp&nbsp&nbsp&nbspds_out=_F_R1a, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=studyStartDate,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=studyStartDate,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%freq(data=_F_R1a, table=incqtl, title = on studystart)&#59<br/>/*those having incqtl info go to _F_T1*/<br/>data _F_T1&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R1a&#59<br/>&nbsp&nbsp&nbsp&nbspif  incqtl ne . and incqtl ne 9&#59<br/>run&#59<br/><br/><br/>/*2. for those missing incqtl in above, income quintile within one year prior to the study start date*/<br/>/*those not having incqtl info go to _F_R1*/<br/>data _F_R1 &#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R1a&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl = . or incqtl =9&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn studyStartDate lookstart lookend &#59<br/>&nbsp&nbsp&nbsp&nbsplookstart= studyStartDate-365&#59<br/>&nbsp&nbsp&nbsp&nbsplookend = studyStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbspformat lookstart date9. lookend date9.&#59<br/>run&#59<br/><br/>%GEO_INCQTL_assign(<br/>&nbsp&nbsp&nbsp&nbspds_in =_F_R1,<br/>&nbsp&nbsp&nbsp&nbspds_out=_F_R2a, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=lookstart,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=lookend,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>%freq(data=_F_R2a, table=incqtl, title = within 1 years prior to studystart)&#59<br/>/*those having incqtl info go to _F_T2*/<br/>data _F_T2&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R2a&#59<br/>&nbsp&nbsp&nbsp&nbspif  incqtl ne . and incqtl ne 9&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookend lookstart&#59<br/>run&#59<br/><br/>/*3. for those missing incqtl in above, income quintile within one year since the study start date*/<br/>/*those not having incqtl info go to _F_R2*/<br/>data _F_R2 &#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R2a&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl = . or incqtl =9&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn studyStartDate lookstart lookend &#59<br/>&nbsp&nbsp&nbsp&nbsplookstart= studyStartDate+1&#59<br/>&nbsp&nbsp&nbsp&nbsplookend = studyStartDate +365&#59<br/>&nbsp&nbsp&nbsp&nbspformat lookstart date9. lookend date9.&#59<br/>run&#59<br/><br/>%GEO_INCQTL_assign(<br/>&nbsp&nbsp&nbsp&nbspds_in =_F_R2,<br/>&nbsp&nbsp&nbsp&nbspds_out=_F_R3a, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=lookstart,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=lookend,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>%freq(data=_F_R3a, table=incqtl, title = within 1 years since studystart)&#59<br/>/*those having incqtl info go to _F_T3*/<br/>data _F_T3&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R3a&#59<br/>&nbsp&nbsp&nbsp&nbspif  incqtl ne . and incqtl ne 9&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookend lookstart&#59<br/>run&#59<br/><br/><br/>/*4. for those missing incqtl in above, income quintile within two year prior to the study start date*/<br/>/*those not having incqtl info go to _F_R3*/<br/>data _F_R3 &#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R3a&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl = . or incqtl =9&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn studyStartDate lookstart lookend &#59<br/>&nbsp&nbsp&nbsp&nbsplookstart= studyStartDate-365*2&#59<br/>&nbsp&nbsp&nbsp&nbsplookend = studyStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbspformat lookstart date9. lookend date9.&#59<br/>run&#59<br/><br/>%GEO_INCQTL_assign(<br/>&nbsp&nbsp&nbsp&nbspds_in =_F_R3,<br/>&nbsp&nbsp&nbsp&nbspds_out=_F_R4a, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=lookstart,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=lookend,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>%freq(data=_F_R4a, table=incqtl, title = within 2 years prior to studystart)&#59<br/>/*those having incqtl info go to _F_T4*/<br/>data _F_T4&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R4a&#59<br/>&nbsp&nbsp&nbsp&nbspif  incqtl ne . and incqtl ne 9&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookend lookstart&#59<br/>run&#59<br/><br/><br/>/*5. for those missing incqtl in above, income quintile within two year since the study start date*/<br/>/*those not having incqtl info go to _F_R4*/<br/>data _F_R4 &#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R4a&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl = . or incqtl =9&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn studyStartDate lookstart lookend &#59<br/>&nbsp&nbsp&nbsp&nbsplookstart= studyStartDate+1&#59<br/>&nbsp&nbsp&nbsp&nbsplookend = studyStartDate + 365*2&#59<br/>&nbsp&nbsp&nbsp&nbspformat lookstart date9. lookend date9.&#59<br/>run&#59<br/><br/>%GEO_INCQTL_assign(<br/>&nbsp&nbsp&nbsp&nbspds_in =_F_R4,<br/>&nbsp&nbsp&nbsp&nbspds_out=_F_R5a, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=lookstart,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=lookend,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>%freq(data=_F_R5a, table=incqtl, title = within 2 years since studystart)&#59<br/>/*those having incqtl info go to _F_T5*/<br/>data _F_T5&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R5a&#59<br/>&nbsp&nbsp&nbsp&nbspif  incqtl ne . and incqtl ne 9&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookend lookstart&#59<br/>run&#59<br/><br/><br/>/*6. for those missing incqtl in above, income quintile within three year prior to the study start date*/<br/>/*those not having incqtl info go to _F_R5*/<br/>data _F_R5 &#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R5a&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl = . or incqtl =9&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn studyStartDate lookstart lookend &#59<br/>&nbsp&nbsp&nbsp&nbsplookstart= studyStartDate-365*3&#59<br/>&nbsp&nbsp&nbsp&nbsplookend = studyStartDate -1&#59<br/>&nbsp&nbsp&nbsp&nbspformat lookstart date9. lookend date9.&#59<br/>run&#59<br/><br/>%GEO_INCQTL_assign(<br/>&nbsp&nbsp&nbsp&nbspds_in =_F_R5,<br/>&nbsp&nbsp&nbsp&nbspds_out=_F_R6a, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=lookstart,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=lookend,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>%freq(data=_F_R6a, table=incqtl, title = within 3 years prior to studystart)&#59<br/>/*those having incqtl info go to _F_T6*/<br/>data _F_T6&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R6a&#59<br/>&nbsp&nbsp&nbsp&nbspif  incqtl ne . and incqtl ne 9&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookend lookstart&#59<br/>run&#59<br/><br/><br/>/*5. for those missing incqtl in above, income quintile within three year since the study start date*/<br/>/*those not having incqtl info go to _F_R6*/<br/>data _F_R6 &#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R6a&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl = . or incqtl =9&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn studyStartDate lookstart lookend &#59<br/>&nbsp&nbsp&nbsp&nbsplookstart= studyStartDate+1&#59<br/>&nbsp&nbsp&nbsp&nbsplookend = studyStartDate + 365*3&#59<br/>&nbsp&nbsp&nbsp&nbspformat lookstart date9. lookend date9.&#59<br/>run&#59<br/><br/>%GEO_INCQTL_assign(<br/>&nbsp&nbsp&nbsp&nbspds_in =_F_R6,<br/>&nbsp&nbsp&nbsp&nbspds_out=_F_R7a, <br/>&nbsp&nbsp&nbsp&nbspstrt_dt_var=lookstart,   <br/>&nbsp&nbsp&nbsp&nbspend_dt_var=lookend,<br/>&nbsp&nbsp&nbsp&nbspgeo_file=&PHRS_Resi_cleanFile,<br/>&nbsp&nbsp&nbsp&nbspincl_incqtl_var=Y<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>/*all of the patients in F_R7a go to _F_T6*/<br/>data _F_T7&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_R7a&#59<br/>&nbsp&nbsp&nbsp&nbspif  incqtl = . then incqtl = 9&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookend lookstart&#59<br/>run&#59<br/>%freq(data=_F_T7, table=incqtl, title = within 3 years since studystart)&#59<br/><br/>data _F_T&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_T1 - _F_T7&#59<br/>run&#59<br/><br/>%freq(data=_F_T, table=incqtl, title = all)&#59<br/><br/><br/>data remotet._F_R&#59<br/>&nbsp&nbsp&nbsp&nbspset _F_T&#59<br/>run&#59<br/><br/>s///<br/>t///","children":[{"idx":"EGTask-gypbEe5Mo1bSWBaR","name":"Copy From Remote","children":[{"idx":"CodeTask-irQmeECtIhtlWQVV","name":"F Covariates_Class","NodeDescription":"///t<br/>///s<br/><br/>data _null_&#59run&#59<br/><br/>/*_F covariates.<br/>[_RD]<br/>*/<br/><br/><br/>%let theStudyID=key_hsn&#59<br/>%let hospdxdate = adm_date&#59<br/>%let physiciandxdate = dos&#59<br/><br/>%let EData=_E_class&#59<br/>%let FTarget=_F_class&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\&EData..zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(&EData..sas7bdat)<br/>)&#59<br/>/*%print(data=&EData.)&#59*/<br/><br/>/*_FA<br/>For records in data set &EData., define the primary factors (Model 1: No exposure or Exposure&#59 <br/>Model 2: No exposure or 1st or 2nd generation DMD exposure&#59 Model 3: No exposure or exposure by individual DMD class). <br/>[Note:] these vars are period specific.<br/>*/<br/>data _FA&#59<br/>&nbsp&nbsp&nbsp&nbspset &EData.&#59<br/>&nbsp&nbsp&nbsp&nbspformat X1_M1_Any $4.&#59<br/>&nbsp&nbsp&nbsp&nbspif Exposure_Status ne 'd' then X1_M1_Any='null'&#59else X1_M1_Any='yes'&#59<br/>&nbsp&nbsp&nbsp&nbsprename Generation_short = X1_M2_Generations&#59<br/>&nbsp&nbsp&nbsp&nbsprename class_short = X1_M3_Classes&#59<br/>run&#59<br/><br/>/*%freq(data=_FA, table=X1_M2_Generations)&#59*/<br/><br/>/*make a variable to indicate the exposure to any DMT during follow up, regardless of segments*/<br/>%distinct(data=_FA, target=_FA1, vars=%str(&theStudyID, x1_M1_Any), filters=%str(X1_M1_Any='yes'))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FA,<br/>&nbsp&nbsp&nbsp&nbspt2=_FA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FA2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.&theStudyID = '', 'null', 'yes') as x31_M4_WholeFW),<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspjtype=left<br/>)&#59<br/><br/><br/>/*_FB, time-varying variables.<br/><br/>_FBA. For records in data set &EData., determine patient's age at beginning (SegStartDate) of each segment (period)<br/>*/<br/>data _FB&#59<br/>&nbsp&nbsp&nbsp&nbspset _FA2&#59<br/>&nbsp&nbsp&nbsp&nbspX2_Age = INT(yrdif(Birth, SegStartDate, \"AGE\"))&#59<br/>run&#59<br/><br/>/*_FC, time-fixed variables<br/>*/<br/><br/>/*_FCA sex and starting calendar year */<br/>data _FCA&#59<br/>&nbsp&nbsp&nbsp&nbspset _FB&#59<br/>&nbsp&nbsp&nbsp&nbsprename Sex= X1_Sex&#59<br/>&nbsp&nbsp&nbsp&nbsprename First_admin_code_Year = X3_StudyStartYear&#59<br/>run&#59<br/><br/>/*_FCB income quintile<br/>[_Note] <br/>The income quitile is prepared on remote server by program \"F_R\". The results are saved in data set _F_R, which was downloaded and<br/>&nbsp&nbsp&nbsp&nbspsaved in the local target folder (libname = localt).<br/>The income quintile info is available until mid 2017. Individuals newly immigrated to SK after Jun 30, 2017 won't <br/>have income quintile info.<br/>*/<br/>%sort(data=localt._F_R, target= _FCB1, sorter=&theStudyID incqtl)&#59<br/>data _FCB2&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCB1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl =. then incqtl=9&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCB2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCB,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.INCQTL=., 9, t2.incqtl) as X4_SES),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/* test proportion of cohort membes missing SES status<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=_FCB, target=test, vars=%str(&theStudyID, X4_SES))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test, table=X4_SES)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>/*_FCC comorbidities<br/><br/>*/<br/><br/>/*ICD code list of the comorbidities<br/>[_Note]<br/>the BC code *50B is not included<br/>*/<br/>/*mental conditions (anxiety, depression, bipolar disorder)*/<br/>%let ICD9_MSB_MH = %str('296', '298','300','311')&#59 <br/>%let ICD9_HOSP_MH = %str('3000', '3002', '2960', '2961', '29604', '29614', '2964', '29644', '2965', '2965', '29654', '2966', '2967', '2968', '2962', '2963', '2980', '3004', '311')&#59 <br/>%let ICD10_MH=%str('F40', 'F41', 'F31', 'F32', 'F33', 'F34')&#59<br/>/*Hypertension*/<br/>%let  ICD9_HN= %str('401', '402', '403', '404', '405')&#59<br/>%let ICD10_HN=%str('I10', 'I11', 'I12', 'I13', 'I15')&#59<br/>/*Hyperlipidemia*/<br/>%let ICD9_HL=%str('272')&#59<br/>%let ICD10_HL=%str('E780', 'E782', 'E784', 'E785')&#59<br/>/*Chronic Lung Disease*/<br/>%let ICD9_CL=%str('493', '491', '492', '496')&#59<br/>%let ICD10_CL=%str('J40', 'J42', 'J43', 'J44', 'J45', 'J46')&#59<br/>/*Diabetes*/<br/>%let ICD9_DB=%str('250')&#59<br/>%let ICD10_DB=%str('E10', 'E11', 'E12', 'E13', 'E14')&#59<br/>/*Epilepsy*/<br/>%let ICD9_EP=%str('345')&#59<br/>%let ICD10_EP=%str('G40', 'G41')&#59<br/>/*Ischemic Heart Disease*/<br/>%let ICD9_IH=%str('410', '411', '412', '413', '414')&#59<br/>%let ICD10_IH=%str('I20', 'I21', 'I22', 'I23', 'I24', 'I25')&#59<br/>/*Cancer: 140-172, 174-209, C00-C43, C45-C97*/<br/>/*added according to the new protocol: P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\INITIAL MODEL PLAN FOR DRUMS-Aim-1-GEE-Physician-visitsv_28June_FINAL.docx*/<br/>%let ICD9_CA=%str('140','141','142','143','144','145','146','147','148','149','150','151','152','153','154','155','156','157','158','159','160','161','162','163','164','165','166','167','168','169','170','171','172','174','175','176','177','178','179','180','181','182','183','184','185','186','187','188','189','190','191','192','193','194','195','196','197','198','199','200','201','202','203','204','205','206','207','208','209')&#59 <br/>%let ICD10_CA=%str('C00','C01','C02','C03','C04','C05','C06','C07','C08','C09','C10','C11','C12','C13','C14','C15','C16','C17','C18','C19','C20','C21','C22','C23','C24','C25','C26','C27','C28','C29','C30','C31','C32','C33','C34','C35','C36','C37','C38','C39','C40','C41','C42','C43','C45','C46','C47','C48','C49','C50','C51','C52','C53','C54','C55','C56','C57','C58','C59','C60','C61','C62','C63','C64','C65','C66','C67','C68','C69','C70','C71','C72','C73','C74','C75','C76','C77','C78','C79','C80','C81','C82','C83','C84','C85','C86','C87','C88','C89','C90','C91','C92','C93','C94','C95','C96','C97')&#59 <br/><br/>/*_FCCA the first dx of comorbidities from hopsital file*/<br/>/*_FCCA0 unzip the hospital file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br/>)&#59<br/><br/>/*_FCCA1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCA1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/><br/>/*FCCA2 get the admission date of the first ICD code for each comorbidity*/<br/>&nbsp&nbsp&nbsp&nbsp/*0. Create an empty target file*/<br/>data _FCCA&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_Hosp_DRUMS(data=, theICD9s=, theICD10s=, theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s theICD10s theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select hospital records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_Hosp_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&theICD10s) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &hospdxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select all dx of different dates, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_Hosp_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_Hosp_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &hospdxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_Hosp_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_Hosp_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_Hosp_DRUMS&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HOSP_MH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_MH, theCoMorb=MH_Mental, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HN, theCoMorb=HN_Hypertension, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HL, theCoMorb=HL_Hyperlipidemia, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CL, theCoMorb=CL_ChronicLungDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_DB, theCoMorb=DB_Diabetes, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_EP, theCoMorb=EP_Eplilepsy, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_IH, theCoMorb=IH_IschemicHeartDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CA, theCoMorb=CA_Cancer, Target=_FCCA, debug=)&#59<br/>/*%freq(data=_FCCA, table=CoMorb)&#59*/<br/><br/>/*_FCCB, the first dx of comorbidities from physician service file*/<br/>/*_FCCB0 unzip the physician service file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/><br/>/*_FCCB1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCB1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*FCCB2 get the service date of the first ICD code for each comorbidity*/<br/>/*0. Create an empty target file*/<br/>data _FCCB&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_MSB_DRUMS(data=, theICD9s=,  theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s  theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select physician service records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_MSB_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &physiciandxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select the earliest date of diagnosis,  this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_MSB_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_MSB_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &physiciandxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_MSB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_MSB_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_MSB_DRUMS&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_MSB_MH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=MH_Mental, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HN_Hypertension, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HL_Hyperlipidemia, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CL_ChronicLungDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=DB_Diabetes, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=EP_Eplilepsy, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=IH_IschemicHeartDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CA_Cancer, Target=_FCCB, debug=)&#59<br/>/*%freq(data=_FCCB, table=CoMorb)&#59*/<br/><br/>/*_FCCC combine data set _FCCA and data set _FCCB, for each patient, keep the earlist date of comorbidity diagnosis*/<br/>/*1. Combine the data*/<br/>data _FCCC1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCA _FCCB&#59<br/>run&#59<br/>/*2. Select the earliest date of diagnosis, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FCCC1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, coMorbDate),<br/>&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>)&#59<br/>/*%freq(data=_FCCC, table=CoMorb)&#59*/<br/><br/>/*_FCCD number of comorbidity at baseline (within 365 days prior to the studystartdate)*/<br/>/*_FCCD1 <br/>Join data set _FCB, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year prior to the studystartdate. However, patients may have the first diagnosis of comorbidity way earlier than 1 year.<br/>&nbsp&nbsp&nbsp&nbspTherefore the following is to trace back for 100 years. <br/>*/<br/><br/>/*Get the comorbidities before the StudyStartDate*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.StudyStartDate, t2.CoMorb), /*, t2.CoMorbDate*/<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.StudyStartDate-1)<br/>)&#59<br/><br/>/*_FCCD2, count total number of comorbidities at baseline*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.StudyStartDate, count(t1.CoMorb) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.StudyStartDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.StudyStartDate)<br/>)&#59<br/><br/>/*_FCCD3, link the date set _FCB, and date set FCCD2, add N_CoMorb_Baseline to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at baseline, let N_CoMorb_Baseline=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Baseline=., 0, t2.N_CoMorb_Baseline) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*_FCCD4, make categories for number of comorbidities at baseline*/<br/>data _FCCD&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD3&#59<br/>&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT =N_CoMorb_Baseline&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Baseline > 3 then X5_NCoMB_Base_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCD, table=X5_NCoMB_Base_CAT)&#59*/<br/><br/>/*_FCCE number of comorbidity at each period*/<br/>/*_FCCE1 <br/>Join data set _FCCD, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year. <br/>Question:<br/>However, patients may have the first diagnosis of comorbidity way earlier than 1 year?<br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t2.CoMorb),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.SegStartDate-1)<br/>)&#59<br/><br/>/*_FCCE2, count total number of comorbidities for each segment*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.SegStartDate, t1.SegEndDate, count(t1.CoMorb) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate)<br/>)&#59<br/><br/>/*_FCCE3, link the date set _FCCD, and date set FCCE2, add N_CoMorb_Seg to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at each segment, let N_CoMorb_Seg=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Seg=., 0, t2.N_CoMorb_Seg) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCE4, make categories for number of comorbidities at baseline*/<br/>data _FCCE&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE3&#59<br/>&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT =N_CoMorb_Seg&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Seg > 3 then X6_NCoMB_Seg_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCE, table=X6_NCoMB_Seg_CAT)&#59*/<br/><br/>/*_FCCF status of each comorbidity at baseline*/<br/>data _FCCF1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+6) || '_CMB_B_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/>/*_FCCF2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCF2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID StudyStartDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCF3 link data set _FCCF2 back to _FCCE*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID StudyStartDate<br/>)&#59<br/><br/>/*Replace the missing value in encounter columns with 0*/<br/>data _FCCF&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCF4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_B_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/><br/>/*_FCCG status of each comorbidity at each period*/<br/>data _FCCG1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes2&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+13) || '_CMB_P_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/><br/>/*_FCCG2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCG1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCG2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID SegStartDate SegEndDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCG4 link data set _FCCG2 back to _FCCF*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCG5. Replace the missing value in encounter columns with 0*/<br/>data _FC&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCG4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX21_CMB_P_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>/*_FD. adding variables compatible to the team template<br/>Ref.P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/>%sort(data=_FC, sorter=&theStudyID First_admin_code_date SegStartDate SegEndDate )&#59<br/>data &FTarget&#59<br/>&nbsp&nbsp&nbsp&nbspset _Fc&#59<br/>&nbsp&nbsp&nbsp&nbspformat<br/>&nbsp&nbsp&nbsp&nbspID $11.<br/>&nbsp&nbsp&nbsp&nbspIndex_date yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_DMD $5.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year 8.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year_CAT $11.<br/>&nbsp&nbsp&nbsp&nbspPY best32.<br/>&nbsp&nbsp&nbsp&nbspLOG_PY best32.<br/>&nbsp&nbsp&nbsp&nbspSex1 $3.<br/>&nbsp&nbsp&nbsp&nbspDOB yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStudy_end yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspFollow_up best32.<br/>&nbsp&nbsp&nbsp&nbspPeriod_N 8.<br/>&nbsp&nbsp&nbsp&nbspStop_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStart_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind $20.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second $8.<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims best32.<br/>&nbsp&nbsp&nbsp&nbspNS best32.<br/>&nbsp&nbsp&nbsp&nbspGS best32.<br/>&nbsp&nbsp&nbsp&nbspGenmed best32.<br/>&nbsp&nbsp&nbsp&nbspOnG best32.<br/>&nbsp&nbsp&nbsp&nbspOphtal best32.<br/>&nbsp&nbsp&nbsp&nbspGP BEST32.<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist BEST32.<br/>&nbsp&nbsp&nbsp&nbspUro BEST32.<br/>&nbsp&nbsp&nbsp&nbspOrtho BEST32.<br/>&nbsp&nbsp&nbsp&nbspPSY BEST32.<br/>&nbsp&nbsp&nbsp&nbspDerm BEST32.<br/>&nbsp&nbsp&nbsp&nbspDMD_Ever $5.<br/>&nbsp&nbsp&nbsp&nbspAge Best32. <br/>&nbsp&nbsp&nbsp&nbspSES 8.<br/>&nbsp&nbsp&nbsp&nbspComorb_count Best32.<br/>&nbsp&nbsp&nbsp&nbspMental $10.<br/>&nbsp&nbsp&nbsp&nbspCOPD $10.<br/>&nbsp&nbsp&nbsp&nbspLipid $10.<br/>&nbsp&nbsp&nbsp&nbspHTN $10.<br/>&nbsp&nbsp&nbsp&nbspIHD $10.<br/>&nbsp&nbsp&nbsp&nbspDM $10.<br/>&nbsp&nbsp&nbsp&nbspEpilepsy $10.<br/>&nbsp&nbsp&nbsp&nbspCancer $10.00<br/>&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID First_admin_code_date SegStartDate SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspID=&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspIndex_date =StudyStartDate&#59/*The studyStartDate is the index_date in my version. It differs from the first_admin_code_year in<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthat for patients < 18 on first_admin date, the StudyStartDate was moved forward to the date of 18th birthday*/  <br/>&nbsp&nbsp&nbsp&nbspif X1_M1_Any = 'yes' then &nbsp&nbsp&nbsp&nbspDMD_No_DMD = 'Yes'&#59else DMD_No_DMD='No'&#59<br/>&nbsp&nbsp&nbsp&nbspCalendar_year = year(SegStartDate)&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( Calendar_year le 1999)  Calendar_year_CAT='1996-1999'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2000 le Calendar_year le 2004)  Calendar_year_CAT='2000-2004'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2005 le Calendar_year le 2009)  Calendar_year_CAT='2005-2009'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2010 le Calendar_year le 2014)  Calendar_year_CAT='2010-2014'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2015 le Calendar_year le 2018)  Calendar_year_CAT='2015-2018'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise Calendar_year_CAT='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPY=((SegEndDate - SegStartDate) + 1)/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspLOG_PY = log(py)&#59<br/>&nbsp&nbsp&nbsp&nbspsex1 = sex&#59 drop sex&#59 rename sex1=Sex&#59<br/>&nbsp&nbsp&nbsp&nbspDOB = Birth&#59<br/>&nbsp&nbsp&nbsp&nbspStudy_end =StudyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspFollow_up=((StudyEndDate - StudyStartDate) + 1 )/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then Period_N = 1&#59&nbsp&nbsp&nbsp&nbspelse Period_N+1&#59<br/>&nbsp&nbsp&nbsp&nbspStop_Interval = SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspStart_Interval = SegStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M3_Classes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Alemtuzumab')  DMD_No_Ind='Alemtuzumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fingolimod')  DMD_No_Ind='Fingolimod'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fumarate')  DMD_No_Ind='Dimethyl fumarate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Glatiramer')  DMD_No_Ind='Glatiramer acetate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'IFNB')  DMD_No_Ind='Beta-interferon'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Natalizumab')  DMD_No_Ind='Natalizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Teriflunomide')  DMD_No_Ind='Teriflunomide'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_Ind='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Daclizumab')  DMD_No_Ind='Daclizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Ocrelizumab ')  DMD_No_Ind='Ocrelizumab '&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_Ind='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M2_Generations)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'First')  DMD_No_First_Second='First'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Second')  DMD_No_First_Second='Second'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_First_Second='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_First_Second='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims = N_Encounters_Total&#59<br/>&nbsp&nbsp&nbsp&nbspNS=N_Encounters_NUS&#59<br/>&nbsp&nbsp&nbsp&nbspGS=N_Encounters_GNS&#59<br/>&nbsp&nbsp&nbsp&nbspGenmed=N_Encounters_INT&#59<br/>&nbsp&nbsp&nbsp&nbspOnG=N_Encounters_ONG&#59<br/>&nbsp&nbsp&nbsp&nbspOphtal=N_Encounters_OPH&#59<br/>&nbsp&nbsp&nbsp&nbspGP=N_Encounters_PCP&#59<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist=N_Encounters_PHY&#59<br/>&nbsp&nbsp&nbsp&nbspUro=N_Encounters_URO&#59<br/>&nbsp&nbsp&nbsp&nbspOrtho=N_Encounters_OTS&#59<br/>&nbsp&nbsp&nbsp&nbspPSY=N_Encounters_PSY&#59<br/>&nbsp&nbsp&nbsp&nbspDerm=N_Encounters_DER&#59<br/>&nbsp&nbsp&nbsp&nbspif X31_M4_WholeFW = 'yes' then DMD_Ever='Yes'&#59else DMD_Ever='No'&#59<br/>&nbsp&nbsp&nbsp&nbspAge=((SegStartDate - birth) + 1 )/ 365.24 &#59<br/>&nbsp&nbsp&nbsp&nbspSES = X4_SES&#59<br/>&nbsp&nbsp&nbsp&nbspif X6_NCoMB_Seg_CAT < 3 then Comorb_count =X6_NCoMB_Seg_CAT&#59 else Comorb_count=3&#59<br/>&nbsp&nbsp&nbsp&nbspif X14_CMB_P_MH=1 then Mental='Presence'&#59 else Mental= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X15_CMB_P_HN=1 then COPD='Presence'&#59 else COPD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X17_CMB_P_CL=1 then Lipid='Presence'&#59 else Lipid= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X16_CMB_P_HL=1 then HTN='Presence'&#59 else HTN= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X20_CMB_P_IH=1 then IHD='Presence'&#59 else IHD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X18_CMB_P_DB=1 then DM='Presence'&#59 else DM= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X19_CMB_P_EP=1 then Epilepsy='Presence'&#59 else Epilepsy= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X21_CMB_P_CA=1 then Cancer='Presence'&#59 else Cancer= 'Absence'&#59<br/>run&#59<br/><br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=&FTarget..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&FTarget..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-4IPSgyg8I83w3PJx","name":"H_AIM1 Real Report_Class","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/><br/>/*DRUMS******************************************************************************************<br/>Site: Saskatchewan<br/>Analyst: Shenzhen YAO<br/><br/>The following program was adapted from the SAS code provided by the DRUMS team in the mail from <br/><huahshin.ng@ubc.ca> to <shy516@mail.usask.ca> on 2019-06-28<br/>The original code file was saved at:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot<br/>************************************************************************************************/<br/>%let FData=_F_Class&#59<br/><br/>/*Routing SAS log to an external file --Shenzhen 2019-06-30*/<br/>/*%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Dummy\\&#59*/<br/>%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Real&Fdata\\&#59<br/>%let theLogFile=&targetPilot1ReportPath.drums_log.txt&#59<br/>%put >>> theLogFile= &theLogFile&#59<br/>filename theLog \"&theLogFile\"&#59<br/>/*proc printto log=theLog&#59run&#59*/<br/><br/>/*Part 0. Import data**************************************************/<br/>/*Get the real data*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\&FData..zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(&FData..sas7bdat)<br/>)&#59<br/>%print(data=&FData.)<br/><br/>/*use the real data instead -- Shenzhen 20190702*/<br/>%let theData=&FData.&#59<br/><br/>/*get the dummy data*/<br/>/*PROC IMPORT DATAFILE = 'DUMMY DATA FOR DRUMS MSP.CSV' OUT = DRUMS DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let srcDummyPath = P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\&#59<br/>%let srcFile = DUMMY DATA FOR DRUMS MSP.CSV&#59<br/>%let srcFull = &srcDummyPath.&srcFile&#59<br/>%put >>> srcFull= &srcFull&#59<br/>/*PROC IMPORT DATAFILE = \"&srcFull\" OUT = DRUMSDUMMY DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*/<br/><br/>/*this part is to import the dummy data from the csv file to a SAS data set<br/>&nbsp&nbsp&nbsp&nbspIt'll only work when theData = DRUMS_Dummy (case insensitive). <br/>&nbsp&nbsp&nbsp&nbspThis is to prevent confusion when load dummy or real data. <br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190702<br/>*/<br/>%macro getDummyData(src=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local src&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %lowcase(&src) = drums_dummy %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPROC IMPORT DATAFILE = \"&srcFull\" OUT = &src DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getDummyData&#59<br/>%getDummyData(src=&theData)&#59<br/><br/>/*A file is created to map the two datasets:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/>/*******end of the current Part ***************************************/<br/><br/><br/>/*Part A. Summary 1 & 2**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET &theData&#59 WHERE PERIOD_N = 1&#59 RUN&#59 /*original line*/<br/>/*DATA DRUMS_BASELINE&#59 SET &theData&#59 AGE_INT = Round(Age)&#59AGE = AGE&#59 FOLLOW_UP=FOLLOW_UP&#59WHERE PERIOD_N = 1&#59 RUN&#59 */<br/>/*add integer age and follow up*/<br/><br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 ODS OUTPUT MOMENTS = SUMMARY1 QUANTILES = SUMMARY2&#59RUN&#59/*original line*/<br/>DATA SUMMARY1&#59 SET SUMMARY1&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*Add number of cohort members in summary1*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp01 as<br/>&nbsp&nbsp&nbsp&nbspselect count(distinct ID) as Npt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE&#59<br/>quit&#59<br/>Proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table SUMMARY1_withNpt as<br/>&nbsp&nbsp&nbsp&nbspselect t1.*, t2.Npt<br/>&nbsp&nbsp&nbsp&nbspfrom summary1 t1 cross join _tmp01 t2<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*report # of distinct individuals behind the median, Q1 and Q3*/<br/>%macro getDistinctNPt (data=, sumtable=, target=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data sumtable target nRows theVar debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a distinct list of varnames*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp2 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct varname<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the # of vars in getdistinctNpt_tmp2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect count(*) format 20. into :nRows <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspfrom getdistinctNpt_tmp2&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then %put >>> nRows = &nRows&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*loop for each varname, from summary 2, get rows with the current varname*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nRows&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a slice of the varnames from getdistinctNpt_tmp2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getdistinctNpt_tmp2 (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theVar', strip(VarName))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then  %put >>> the current variable =  &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the records in the summary table (e.g., summary 2) of the current VarName*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(Varname)=symget('theVar')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*count the distinct number of patients of the selected var, and by levels of the selected var&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp5 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(distinct t1.ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &data t1 inner join getdistinctNpt_tmp4 t2 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspon (t1.&theVar = t2.estimate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroup by t2.Varname, t2.Quantile<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*append results into the target table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getdistinctNpt_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getdistinctNpt_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getdistinctNpt&#59<br/>%getDistinctNPt(data=DRUMS_BASELINE, sumtable=SUMMARY2, target=SUMMARY2_withNPT, debug=)&#59<br/><br/><br/>/*PROC EXPORT DATA = SUMMARY1 OUTFILE = \"MENAS_SD_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY2 OUTFILE = \"MEDIAN_IQR_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum1= &targetPilot1ReportPath.MEANS_SD_ALL MSP.CSV&#59<br/>%let OutCSV_Sum2 = &targetPilot1ReportPath.MEDIAN_IQR_ALL MSP.CSV&#59<br/>%put >>> OutCSV_Sum1= &OutCSV_Sum1&#59<br/>%put >>> OutCSV_Sum2= &OutCSV_Sum2&#59<br/>/*PROC EXPORT DATA =  SUMMARY1 OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY1_withNPT OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*PROC EXPORT DATA =  SUMMARY2 OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY2_withNPT OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59 /*use the data set with N patients instead*/<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part B. Summary 3 & 4**************************************************/<br/>/*PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59*/<br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59<br/><br/>DATA SUMMARY3&#59 SET SUMMARY3&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY4&#59 SET SUMMARY4&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/><br/>/*PROC EXPORT DATA = SUMMARY3 OUTFILE = \"MENAS_SD_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY4 OUTFILE = \"MEDIAN_IQR_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum3= &targetPilot1ReportPath.MEANS_SD_DMD_EVER MSP.CSV&#59<br/>%let OutCSV_Sum4 = &targetPilot1ReportPath.MEDIAN_IQR_DMD_EVER MSP.CSV&#59<br/>%put >>>OutCSV_Sum3=  &OutCSV_Sum3&#59<br/>%put >>>OutCSV_Sum4 = &OutCSV_Sum4&#59<br/>PROC EXPORT DATA = SUMMARY3 OUTFILE = \"&OutCSV_Sum3\" DBMS = CSV REPLACE&#59 RUN&#59/*original line*/<br/>PROC EXPORT DATA = SUMMARY4 OUTFILE = \"&OutCSV_Sum4\" DBMS = CSV REPLACE&#59 RUN&#59/*original line*/<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part C. Tabel 1**************************************************/<br/>PROC FREQ DATA = DRUMS_BASELINE&#59 <br/>TABLE SEX*DMD_EVER SES*DMD_EVER COMORB_COUNT*DMD_EVER MENTAL*DMD_EVER HTN*DMD_EVER <br/>      LIPID*DMD_EVER COPD*DMD_EVER DM*DMD_EVER EPILEPSY*DMD_EVER IHD*DMD_EVER CANCER*DMD_EVER CALENDAR_YEAR_CAT*DMD_EVER /NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE1&#59RUN&#59<br/>DATA TABLE1&#59 SET TABLE1&#59 WHERE _TYPE_ = \"11\"&#59 VAR_TEMP = CATT(SEX,SES,COMORB_COUNT,MENTAL,HTN,LIPID,COPD,DM,EPILEPSY,IHD,CANCER,CALENDAR_YEAR_CAT)&#59 VAR_NAMES = COMPRESS(VAR_TEMP,'.')&#59<br/>DROP _TYPE_ _TABLE_ SEX SES COMORB_COUNT MENTAL HTN LIPID COPD DM EPILEPSY IHD CANCER CALENDAR_YEAR_CAT VAR_TEMP&#59 RUN&#59<br/><br/>/*As the source data is from Baseline, each cohort member only appears once. As such, the # in the var 'Frequency' is the # of distinct patients<br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190703*/<br/><br/>/*The Table_1 contains small cells and should be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp1. As these are cross tables, a small cell, even suppressed, can be back calculated horizontally or vertically. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis means that once a small cell occurs, the whole cross table has to be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp[Comment:] Seems that we have to apply for releasing small cell results. Or there will be many suppressions, making Table 1 not informative.<br/>&nbsp&nbsp&nbsp&nbsp2. the numeric values should be changed to char values, so as to indicate those suppressed<br/>*/<br/>/*1. First, transpose the data so that the freq by DMD_EVER groups are listed in the same row. <br/>&nbsp&nbsp&nbsp&nbspThat way, it'll be easier to sum the total horizontally, and vertically. <br/>&nbsp&nbsp&nbsp&nbspThese summaries will be used to determine suppression and masking. <br/>*/<br/>proc sort data=TABLE1 out=_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbspby table  var_names &#59<br/>run&#59<br/>proc transpose data = _tmp1 out=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar Frequency&#59<br/>run&#59<br/>/*2. For each table, sort by freq in the DMD_EVER = Yes group. In this cohort,  the Yes group is more likely to have small cells.<br/>&nbsp&nbsp&nbsp&nbspFor rows of the same table, those with the smallest freq comes first<br/>*/<br/>proc sort data=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>run&#59<br/>/*3. Next, the number of levels of the current row will be counted. That way, if a small cell exists, we'll know how far is<br/>&nbsp&nbsp&nbsp&nbspthe current row away from the small cell. <br/>&nbsp&nbsp&nbsp&nbspThe suppression rule stresses that at least two levels should be suppressed. The calculation in this part helps identify <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe level next the level with the small cell. Such next level will be suppressed in the following steps.   <br/>*/<br/>data _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>&nbsp&nbsp&nbsp&nbspif first.table then N_levels =1&#59<br/>&nbsp&nbsp&nbsp&nbspelse N_levels +1&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>run&#59 <br/>/*3. Now, perform the suppression and masking for small cells.<br/>&nbsp&nbsp&nbsp&nbspSuppression is to suppress the cell with 1-5 individuals<br/>&nbsp&nbsp&nbsp&nbspMasking is to mask the neighboring cells of the small cell (both vertical and horizontal), so that the suppressed cannot be back calculated<br/>*/<br/>data _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp/*initially for each table, set everything to 0*/<br/>&nbsp&nbsp&nbsp&nbspif first.table then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1=0&#59sum_sup_v2=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h=sum_sup_v1 + sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*For small cells (Freq between 1 and 5):<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the suppressed freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked nubmer is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 's' standing for suppressed<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (suppress the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4) Indicate that a suppression starts (Sup=1)<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp/*approved for reporting small cells, no need to suppress*/<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+ Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Within the same table, the small cells always comes first (as level 1). To suppress at least two levels, level 2 should<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso be suppressed.However, level 3 does not have, unless the totally suppressed/masked is still < 6. So starting from level 3, the Suppression will be raisded <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(let Sup return to the value of 0). <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif N_levels > 2 and sum_sup_v1 > 5 and sum_sup_v2> 5 and sum_sup_h > 5 then sup=0&#59else sup+0&#59<br/>&nbsp&nbsp&nbsp&nbsp/*In the current level (current row), if suppression occurs (Sup=1), the neighboring column should be masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo mask the neighboring cell in the same row: <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the masked freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked number is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 'm' standing for masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (mask the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe above 3 actions are however only to take when the neighboring cell itself is not suppressed. Otherwise there is no need to mask again <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif sup=1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s1 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s2 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*lastly, when the current row is required for suppressing or masking, calculate the overall sum of suppressed/masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof the current table*/<br/>&nbsp&nbsp&nbsp&nbspif s1 ne '' and s2 ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h + sum_sup_v1+sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*Finally, rearrange the table so as to be conform with the orignal requirement*/<br/>data _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'Yes'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =2 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep Table DMD_Ever Frequency Var_Names Suppress_Mark&#59<br/>run&#59<br/>/*We can repeat the above for the column missing. but for SK data, there is no missing values. So the column will be simply added*/<br/>data Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspretain Table DMD_Ever Frequency Missing VAR_NAMES&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspMissing=.&#59<br/>run&#59<br/>/*Sort the tables by original levels*/<br/>proc sort data=Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>run&#59<br/><br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"CROSS_TABLE MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Table1= &targetPilot1ReportPath.CROSS_TABLE MSP.CSV&#59<br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-07-03*/<br/>PROC EXPORT DATA = Table1_Suppressed OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part D. Summary 5 & 6**************************************************/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_NO_IND/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE2&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE2&#59 SET TABLE2&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_Ind COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE2&#59VAR COUNTS&#59 CLASS DMD_No_Ind&#59 ODS OUTPUT MOMENTS = SUMMARY5&#59RUN&#59<br/>DATA SUMMARY5&#59 SET SUMMARY5&#59 KEEP DMD_No_Ind Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY5 OUTFILE = \"EVER_DMD_IND MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/><br/>/*What is it in sum5? is it about # of distinct patients ever received DMD per DMD class? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test1 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_Ind&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test1 generates the same results as in summary 5 -- Shenzhen 20190703*/<br/><br/>%let OutCSV_Sum5= &targetPilot1ReportPath.EVER_DMD_IND MSP.CSV&#59<br/>%put >>> OutCSV_Sum5 = &OutCSV_Sum5&#59<br/>PROC EXPORT DATA = SUMMARY5 OUTFILE = \"&OutCSV_Sum5\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_No_First_Second/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE3&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE3&#59 SET TABLE3&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_First_Second COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table3 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 6 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE3&#59VAR COUNTS&#59 CLASS DMD_No_First_Second&#59 ODS OUTPUT MOMENTS = SUMMARY6&#59RUN&#59<br/>DATA SUMMARY6&#59 SET SUMMARY6&#59 KEEP DMD_No_First_Second Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*What is it in sum6? is it about # of distinct patients ever received DMD per generation? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test2 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_First_Second&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test2 generates the same results as in summary 6 -- Shenzhen 20190703*/<br/><br/>/*PROC EXPORT DATA = SUMMARY6 OUTFILE = \"EVER_DMD_First_Second MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum6= &targetPilot1ReportPath.EVER_DMD_First_Second MSP.CSV&#59<br/>%put >>> OutCSV_Sum6 = &OutCSV_Sum6&#59<br/>PROC EXPORT DATA = SUMMARY6 OUTFILE = \"&OutCSV_Sum6\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part E. PDF**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET DRUMS_BASELINE&#59AGE_INT = ROUND(AGE)&#59 RUN&#59<br/>/*ODS PDF FILE = \"BARPLOT_AGE_AT_INDEX_INTEGER.PDF\" STARTPAGE=NEVER&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGE_AT_INDEX_INTEGER.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/><br/><br/><br/>/*This part seems to have # of patients by Age_INT, overall and by DMD_EVER group. <br/>&nbsp&nbsp&nbsp&nbspAs it is from baseline, each cohort member only appear once. As such, the # of frequency is the # of distinct patients*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp11 as<br/>&nbsp&nbsp&nbsp&nbspselect AGE_INT, DMD_EVER, count(AGE_INT) as N_pt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE<br/>&nbsp&nbsp&nbsp&nbspgroup by AGE_INT ,DMD_EVER<br/>&nbsp&nbsp&nbsp&nbsporder by AGE_INT<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>proc transpose data = _tmp11 out=_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspby AGE_INT&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar N_pt&#59<br/>run&#59<br/>data _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspNpt_Total = sum(Yes, No)&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbspdrop _name_&#59<br/>run&#59<br/><br/>data AgeDist_ForPDF_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_No ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_No < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_Yes ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*create an additional table for age distributions*/<br/>%let OutCSV_AgeDist= &targetPilot1ReportPath.AgeDist.CSV&#59<br/>PROC EXPORT DATA = AgeDist_ForPDF_Suppressed OUTFILE = \"&OutCSV_AgeDist\" DBMS = CSV REPLACE&#59 RUN&#59<br/><br/>/*******end of the current Part ***************************************/<br/><br/>/*Part F, by age groups*/<br/><br/><br/><br/>/*end of this part**/<br/>DATA DRUMS_BASELINE2&#59 <br/>&nbsp&nbsp&nbsp&nbspSET DRUMS_BASELINE&#59<br/>&nbsp&nbsp&nbsp&nbspformat AGE_GRP $10.&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT le 30)  AGE_GRP='00-30'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 31 le AGE_INT le 35)  AGE_GRP='31-35'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 36 le AGE_INT le 40)  AGE_GRP='36-40'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 41 le AGE_INT le 45)  AGE_GRP='41-45'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 46 le AGE_INT le 50)  AGE_GRP='46-50'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 51 le AGE_INT le 55)  AGE_GRP='51-55'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 56 le AGE_INT le 60)  AGE_GRP='56-60'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 61 le AGE_INT le 65)  AGE_GRP='61-65'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 66 le AGE_INT le 70)  AGE_GRP='66-70'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 71 le AGE_INT le 75)  AGE_GRP='71-75'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 76 le AGE_INT le 80)  AGE_GRP='76-80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT gt 80)  AGE_GRP='>80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise AGE_GRP='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>RUN&#59<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGEGROUP_AT_INDEX.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGEGROUP AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/>/*Routing SAS log back to the default place*/<br/>proc printto&#59 run&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-irQmeECtIhtlWQVV"}]}],"custparents":[{"idx":"EGTask-gypbEe5Mo1bSWBaR"},{"idx":"CodeTask-qQArptliCjxCCMdY"}]},{"idx":"CodeTask-g4yFo3eRKFcrhZuu","name":"F Covariates_Generation","NodeDescription":"///t<br/>///s<br/><br/>data _null_&#59run&#59<br/><br/>/*_F covariates.<br/>[_RD]<br/>*/<br/><br/><br/>%let theStudyID=key_hsn&#59<br/>%let hospdxdate = adm_date&#59<br/>%let physiciandxdate = dos&#59<br/><br/>%let EData=_E_generation&#59<br/>%let FTarget=_F_generation&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\&EData..zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(&EData..sas7bdat)<br/>)&#59<br/>/*%print(data=&EData.)&#59*/<br/><br/>/*_FA<br/>For records in data set &EData., define the primary factors (Model 1: No exposure or Exposure&#59 <br/>Model 2: No exposure or 1st or 2nd generation DMD exposure&#59 Model 3: No exposure or exposure by individual DMD class). <br/>[Note:] these vars are period specific.<br/>*/<br/>data _FA&#59<br/>&nbsp&nbsp&nbsp&nbspset &EData.&#59<br/>&nbsp&nbsp&nbsp&nbspformat X1_M1_Any $4.&#59<br/>&nbsp&nbsp&nbsp&nbspif Exposure_Status ne 'd' then X1_M1_Any='null'&#59else X1_M1_Any='yes'&#59<br/>&nbsp&nbsp&nbsp&nbsprename Generation_short = X1_M2_Generations&#59<br/>&nbsp&nbsp&nbsp&nbsprename class_short = X1_M3_Classes&#59<br/>run&#59<br/><br/>/*%freq(data=_FA, table=X1_M2_Generations)&#59*/<br/><br/>/*make a variable to indicate the exposure to any DMT during follow up, regardless of segments*/<br/>%distinct(data=_FA, target=_FA1, vars=%str(&theStudyID, x1_M1_Any), filters=%str(X1_M1_Any='yes'))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FA,<br/>&nbsp&nbsp&nbsp&nbspt2=_FA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FA2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.&theStudyID = '', 'null', 'yes') as x31_M4_WholeFW),<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspjtype=left<br/>)&#59<br/><br/><br/>/*_FB, time-varying variables.<br/><br/>_FBA. For records in data set &EData., determine patient's age at beginning (SegStartDate) of each segment (period)<br/>*/<br/>data _FB&#59<br/>&nbsp&nbsp&nbsp&nbspset _FA2&#59<br/>&nbsp&nbsp&nbsp&nbspX2_Age = INT(yrdif(Birth, SegStartDate, \"AGE\"))&#59<br/>run&#59<br/><br/>/*_FC, time-fixed variables<br/>*/<br/><br/>/*_FCA sex and starting calendar year */<br/>data _FCA&#59<br/>&nbsp&nbsp&nbsp&nbspset _FB&#59<br/>&nbsp&nbsp&nbsp&nbsprename Sex= X1_Sex&#59<br/>&nbsp&nbsp&nbsp&nbsprename First_admin_code_Year = X3_StudyStartYear&#59<br/>run&#59<br/><br/>/*_FCB income quintile<br/>[_Note] <br/>The income quitile is prepared on remote server by program \"F_R\". The results are saved in data set _F_R, which was downloaded and<br/>&nbsp&nbsp&nbsp&nbspsaved in the local target folder (libname = localt).<br/>The income quintile info is available until mid 2017. Individuals newly immigrated to SK after Jun 30, 2017 won't <br/>have income quintile info.<br/>*/<br/>%sort(data=localt._F_R, target= _FCB1, sorter=&theStudyID incqtl)&#59<br/>data _FCB2&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCB1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl =. then incqtl=9&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCB2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCB,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.INCQTL=., 9, t2.incqtl) as X4_SES),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/* test proportion of cohort membes missing SES status<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=_FCB, target=test, vars=%str(&theStudyID, X4_SES))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test, table=X4_SES)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>/*_FCC comorbidities<br/><br/>*/<br/><br/>/*ICD code list of the comorbidities<br/>[_Note]<br/>the BC code *50B is not included<br/>*/<br/>/*mental conditions (anxiety, depression, bipolar disorder)*/<br/>%let ICD9_MSB_MH = %str('296', '298','300','311')&#59 <br/>%let ICD9_HOSP_MH = %str('3000', '3002', '2960', '2961', '29604', '29614', '2964', '29644', '2965', '2965', '29654', '2966', '2967', '2968', '2962', '2963', '2980', '3004', '311')&#59 <br/>%let ICD10_MH=%str('F40', 'F41', 'F31', 'F32', 'F33', 'F34')&#59<br/>/*Hypertension*/<br/>%let  ICD9_HN= %str('401', '402', '403', '404', '405')&#59<br/>%let ICD10_HN=%str('I10', 'I11', 'I12', 'I13', 'I15')&#59<br/>/*Hyperlipidemia*/<br/>%let ICD9_HL=%str('272')&#59<br/>%let ICD10_HL=%str('E780', 'E782', 'E784', 'E785')&#59<br/>/*Chronic Lung Disease*/<br/>%let ICD9_CL=%str('493', '491', '492', '496')&#59<br/>%let ICD10_CL=%str('J40', 'J42', 'J43', 'J44', 'J45', 'J46')&#59<br/>/*Diabetes*/<br/>%let ICD9_DB=%str('250')&#59<br/>%let ICD10_DB=%str('E10', 'E11', 'E12', 'E13', 'E14')&#59<br/>/*Epilepsy*/<br/>%let ICD9_EP=%str('345')&#59<br/>%let ICD10_EP=%str('G40', 'G41')&#59<br/>/*Ischemic Heart Disease*/<br/>%let ICD9_IH=%str('410', '411', '412', '413', '414')&#59<br/>%let ICD10_IH=%str('I20', 'I21', 'I22', 'I23', 'I24', 'I25')&#59<br/>/*Cancer: 140-172, 174-209, C00-C43, C45-C97*/<br/>/*added according to the new protocol: P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\INITIAL MODEL PLAN FOR DRUMS-Aim-1-GEE-Physician-visitsv_28June_FINAL.docx*/<br/>%let ICD9_CA=%str('140','141','142','143','144','145','146','147','148','149','150','151','152','153','154','155','156','157','158','159','160','161','162','163','164','165','166','167','168','169','170','171','172','174','175','176','177','178','179','180','181','182','183','184','185','186','187','188','189','190','191','192','193','194','195','196','197','198','199','200','201','202','203','204','205','206','207','208','209')&#59 <br/>%let ICD10_CA=%str('C00','C01','C02','C03','C04','C05','C06','C07','C08','C09','C10','C11','C12','C13','C14','C15','C16','C17','C18','C19','C20','C21','C22','C23','C24','C25','C26','C27','C28','C29','C30','C31','C32','C33','C34','C35','C36','C37','C38','C39','C40','C41','C42','C43','C45','C46','C47','C48','C49','C50','C51','C52','C53','C54','C55','C56','C57','C58','C59','C60','C61','C62','C63','C64','C65','C66','C67','C68','C69','C70','C71','C72','C73','C74','C75','C76','C77','C78','C79','C80','C81','C82','C83','C84','C85','C86','C87','C88','C89','C90','C91','C92','C93','C94','C95','C96','C97')&#59 <br/><br/>/*_FCCA the first dx of comorbidities from hopsital file*/<br/>/*_FCCA0 unzip the hospital file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br/>)&#59<br/><br/>/*_FCCA1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCA1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/><br/>/*FCCA2 get the admission date of the first ICD code for each comorbidity*/<br/>&nbsp&nbsp&nbsp&nbsp/*0. Create an empty target file*/<br/>data _FCCA&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_Hosp_DRUMS(data=, theICD9s=, theICD10s=, theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s theICD10s theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select hospital records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_Hosp_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&theICD10s) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &hospdxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select all dx of different dates, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_Hosp_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_Hosp_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &hospdxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_Hosp_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_Hosp_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_Hosp_DRUMS&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HOSP_MH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_MH, theCoMorb=MH_Mental, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HN, theCoMorb=HN_Hypertension, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HL, theCoMorb=HL_Hyperlipidemia, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CL, theCoMorb=CL_ChronicLungDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_DB, theCoMorb=DB_Diabetes, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_EP, theCoMorb=EP_Eplilepsy, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_IH, theCoMorb=IH_IschemicHeartDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CA, theCoMorb=CA_Cancer, Target=_FCCA, debug=)&#59<br/>/*%freq(data=_FCCA, table=CoMorb)&#59*/<br/><br/>/*_FCCB, the first dx of comorbidities from physician service file*/<br/>/*_FCCB0 unzip the physician service file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/><br/>/*_FCCB1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCB1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*FCCB2 get the service date of the first ICD code for each comorbidity*/<br/>/*0. Create an empty target file*/<br/>data _FCCB&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_MSB_DRUMS(data=, theICD9s=,  theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s  theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select physician service records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_MSB_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &physiciandxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select the earliest date of diagnosis,  this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_MSB_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_MSB_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &physiciandxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_MSB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_MSB_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_MSB_DRUMS&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_MSB_MH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=MH_Mental, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HN_Hypertension, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HL_Hyperlipidemia, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CL_ChronicLungDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=DB_Diabetes, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=EP_Eplilepsy, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=IH_IschemicHeartDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CA_Cancer, Target=_FCCB, debug=)&#59<br/>/*%freq(data=_FCCB, table=CoMorb)&#59*/<br/><br/>/*_FCCC combine data set _FCCA and data set _FCCB, for each patient, keep the earlist date of comorbidity diagnosis*/<br/>/*1. Combine the data*/<br/>data _FCCC1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCA _FCCB&#59<br/>run&#59<br/>/*2. Select the earliest date of diagnosis, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FCCC1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, coMorbDate),<br/>&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>)&#59<br/>/*%freq(data=_FCCC, table=CoMorb)&#59*/<br/><br/>/*_FCCD number of comorbidity at baseline (within 365 days prior to the studystartdate)*/<br/>/*_FCCD1 <br/>Join data set _FCB, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year prior to the studystartdate. However, patients may have the first diagnosis of comorbidity way earlier than 1 year.<br/>&nbsp&nbsp&nbsp&nbspTherefore the following is to trace back for 100 years. <br/>*/<br/><br/>/*Get the comorbidities before the StudyStartDate*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.StudyStartDate, t2.CoMorb), /*, t2.CoMorbDate*/<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.StudyStartDate-1)<br/>)&#59<br/><br/>/*_FCCD2, count total number of comorbidities at baseline*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.StudyStartDate, count(t1.CoMorb) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.StudyStartDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.StudyStartDate)<br/>)&#59<br/><br/>/*_FCCD3, link the date set _FCB, and date set FCCD2, add N_CoMorb_Baseline to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at baseline, let N_CoMorb_Baseline=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Baseline=., 0, t2.N_CoMorb_Baseline) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*_FCCD4, make categories for number of comorbidities at baseline*/<br/>data _FCCD&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD3&#59<br/>&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT =N_CoMorb_Baseline&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Baseline > 3 then X5_NCoMB_Base_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCD, table=X5_NCoMB_Base_CAT)&#59*/<br/><br/>/*_FCCE number of comorbidity at each period*/<br/>/*_FCCE1 <br/>Join data set _FCCD, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year. <br/>Question:<br/>However, patients may have the first diagnosis of comorbidity way earlier than 1 year?<br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t2.CoMorb),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.SegStartDate-1)<br/>)&#59<br/><br/>/*_FCCE2, count total number of comorbidities for each segment*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.SegStartDate, t1.SegEndDate, count(t1.CoMorb) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate)<br/>)&#59<br/><br/>/*_FCCE3, link the date set _FCCD, and date set FCCE2, add N_CoMorb_Seg to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at each segment, let N_CoMorb_Seg=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Seg=., 0, t2.N_CoMorb_Seg) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCE4, make categories for number of comorbidities at baseline*/<br/>data _FCCE&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE3&#59<br/>&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT =N_CoMorb_Seg&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Seg > 3 then X6_NCoMB_Seg_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCE, table=X6_NCoMB_Seg_CAT)&#59*/<br/><br/>/*_FCCF status of each comorbidity at baseline*/<br/>data _FCCF1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+6) || '_CMB_B_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/>/*_FCCF2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCF2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID StudyStartDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCF3 link data set _FCCF2 back to _FCCE*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID StudyStartDate<br/>)&#59<br/><br/>/*Replace the missing value in encounter columns with 0*/<br/>data _FCCF&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCF4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_B_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/><br/>/*_FCCG status of each comorbidity at each period*/<br/>data _FCCG1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes2&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+13) || '_CMB_P_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/><br/>/*_FCCG2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCG1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCG2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID SegStartDate SegEndDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCG4 link data set _FCCG2 back to _FCCF*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCG5. Replace the missing value in encounter columns with 0*/<br/>data _FC&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCG4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX21_CMB_P_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>/*_FD. adding variables compatible to the team template<br/>Ref.P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/>%sort(data=_FC, sorter=&theStudyID First_admin_code_date SegStartDate SegEndDate )&#59<br/>data &FTarget&#59<br/>&nbsp&nbsp&nbsp&nbspset _Fc&#59<br/>&nbsp&nbsp&nbsp&nbspformat<br/>&nbsp&nbsp&nbsp&nbspID $11.<br/>&nbsp&nbsp&nbsp&nbspIndex_date yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_DMD $5.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year 8.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year_CAT $11.<br/>&nbsp&nbsp&nbsp&nbspPY best32.<br/>&nbsp&nbsp&nbsp&nbspLOG_PY best32.<br/>&nbsp&nbsp&nbsp&nbspSex1 $3.<br/>&nbsp&nbsp&nbsp&nbspDOB yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStudy_end yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspFollow_up best32.<br/>&nbsp&nbsp&nbsp&nbspPeriod_N 8.<br/>&nbsp&nbsp&nbsp&nbspStop_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStart_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind $20.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second $8.<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims best32.<br/>&nbsp&nbsp&nbsp&nbspNS best32.<br/>&nbsp&nbsp&nbsp&nbspGS best32.<br/>&nbsp&nbsp&nbsp&nbspGenmed best32.<br/>&nbsp&nbsp&nbsp&nbspOnG best32.<br/>&nbsp&nbsp&nbsp&nbspOphtal best32.<br/>&nbsp&nbsp&nbsp&nbspGP BEST32.<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist BEST32.<br/>&nbsp&nbsp&nbsp&nbspUro BEST32.<br/>&nbsp&nbsp&nbsp&nbspOrtho BEST32.<br/>&nbsp&nbsp&nbsp&nbspPSY BEST32.<br/>&nbsp&nbsp&nbsp&nbspDerm BEST32.<br/>&nbsp&nbsp&nbsp&nbspDMD_Ever $5.<br/>&nbsp&nbsp&nbsp&nbspAge Best32. <br/>&nbsp&nbsp&nbsp&nbspSES 8.<br/>&nbsp&nbsp&nbsp&nbspComorb_count Best32.<br/>&nbsp&nbsp&nbsp&nbspMental $10.<br/>&nbsp&nbsp&nbsp&nbspCOPD $10.<br/>&nbsp&nbsp&nbsp&nbspLipid $10.<br/>&nbsp&nbsp&nbsp&nbspHTN $10.<br/>&nbsp&nbsp&nbsp&nbspIHD $10.<br/>&nbsp&nbsp&nbsp&nbspDM $10.<br/>&nbsp&nbsp&nbsp&nbspEpilepsy $10.<br/>&nbsp&nbsp&nbsp&nbspCancer $10.00<br/>&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID First_admin_code_date SegStartDate SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspID=&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspIndex_date =StudyStartDate&#59/*The studyStartDate is the index_date in my version. It differs from the first_admin_code_year in<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthat for patients < 18 on first_admin date, the StudyStartDate was moved forward to the date of 18th birthday*/  <br/>&nbsp&nbsp&nbsp&nbspif X1_M1_Any = 'yes' then &nbsp&nbsp&nbsp&nbspDMD_No_DMD = 'Yes'&#59else DMD_No_DMD='No'&#59<br/>&nbsp&nbsp&nbsp&nbspCalendar_year = year(SegStartDate)&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( Calendar_year le 1999)  Calendar_year_CAT='1996-1999'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2000 le Calendar_year le 2004)  Calendar_year_CAT='2000-2004'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2005 le Calendar_year le 2009)  Calendar_year_CAT='2005-2009'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2010 le Calendar_year le 2014)  Calendar_year_CAT='2010-2014'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2015 le Calendar_year le 2018)  Calendar_year_CAT='2015-2018'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise Calendar_year_CAT='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPY=((SegEndDate - SegStartDate) + 1)/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspLOG_PY = log(py)&#59<br/>&nbsp&nbsp&nbsp&nbspsex1 = sex&#59 drop sex&#59 rename sex1=Sex&#59<br/>&nbsp&nbsp&nbsp&nbspDOB = Birth&#59<br/>&nbsp&nbsp&nbsp&nbspStudy_end =StudyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspFollow_up=((StudyEndDate - StudyStartDate) + 1 )/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then Period_N = 1&#59&nbsp&nbsp&nbsp&nbspelse Period_N+1&#59<br/>&nbsp&nbsp&nbsp&nbspStop_Interval = SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspStart_Interval = SegStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M3_Classes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Alemtuzumab')  DMD_No_Ind='Alemtuzumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fingolimod')  DMD_No_Ind='Fingolimod'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fumarate')  DMD_No_Ind='Dimethyl fumarate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Glatiramer')  DMD_No_Ind='Glatiramer acetate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'IFNB')  DMD_No_Ind='Beta-interferon'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Natalizumab')  DMD_No_Ind='Natalizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Teriflunomide')  DMD_No_Ind='Teriflunomide'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_Ind='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Daclizumab')  DMD_No_Ind='Daclizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Ocrelizumab ')  DMD_No_Ind='Ocrelizumab '&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_Ind='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M2_Generations)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'First')  DMD_No_First_Second='First'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Second')  DMD_No_First_Second='Second'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_First_Second='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_First_Second='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims = N_Encounters_Total&#59<br/>&nbsp&nbsp&nbsp&nbspNS=N_Encounters_NUS&#59<br/>&nbsp&nbsp&nbsp&nbspGS=N_Encounters_GNS&#59<br/>&nbsp&nbsp&nbsp&nbspGenmed=N_Encounters_INT&#59<br/>&nbsp&nbsp&nbsp&nbspOnG=N_Encounters_ONG&#59<br/>&nbsp&nbsp&nbsp&nbspOphtal=N_Encounters_OPH&#59<br/>&nbsp&nbsp&nbsp&nbspGP=N_Encounters_PCP&#59<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist=N_Encounters_PHY&#59<br/>&nbsp&nbsp&nbsp&nbspUro=N_Encounters_URO&#59<br/>&nbsp&nbsp&nbsp&nbspOrtho=N_Encounters_OTS&#59<br/>&nbsp&nbsp&nbsp&nbspPSY=N_Encounters_PSY&#59<br/>&nbsp&nbsp&nbsp&nbspDerm=N_Encounters_DER&#59<br/>&nbsp&nbsp&nbsp&nbspif X31_M4_WholeFW = 'yes' then DMD_Ever='Yes'&#59else DMD_Ever='No'&#59<br/>&nbsp&nbsp&nbsp&nbspAge=((SegStartDate - birth) + 1 )/ 365.24 &#59<br/>&nbsp&nbsp&nbsp&nbspSES = X4_SES&#59<br/>&nbsp&nbsp&nbsp&nbspif X6_NCoMB_Seg_CAT < 3 then Comorb_count =X6_NCoMB_Seg_CAT&#59 else Comorb_count=3&#59<br/>&nbsp&nbsp&nbsp&nbspif X14_CMB_P_MH=1 then Mental='Presence'&#59 else Mental= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X15_CMB_P_HN=1 then COPD='Presence'&#59 else COPD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X17_CMB_P_CL=1 then Lipid='Presence'&#59 else Lipid= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X16_CMB_P_HL=1 then HTN='Presence'&#59 else HTN= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X20_CMB_P_IH=1 then IHD='Presence'&#59 else IHD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X18_CMB_P_DB=1 then DM='Presence'&#59 else DM= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X19_CMB_P_EP=1 then Epilepsy='Presence'&#59 else Epilepsy= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X21_CMB_P_CA=1 then Cancer='Presence'&#59 else Cancer= 'Absence'&#59<br/>run&#59<br/><br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=&FTarget..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&FTarget..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-Q1W1tAoJV7lu59UK","name":"H_AIM1 Real Report_Generation","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>/*DRUMS******************************************************************************************<br/>Site: Saskatchewan<br/>Analyst: Shenzhen YAO<br/><br/>The following program was adapted from the SAS code provided by the DRUMS team in the mail from <br/><huahshin.ng@ubc.ca> to <shy516@mail.usask.ca> on 2019-06-28<br/>The original code file was saved at:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot<br/>************************************************************************************************/<br/>%let FData=_F_Generation&#59<br/><br/>/*Routing SAS log to an external file --Shenzhen 2019-06-30*/<br/>/*%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Dummy\\&#59*/<br/>%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Real&Fdata\\&#59<br/>%let theLogFile=&targetPilot1ReportPath.drums_log.txt&#59<br/>%put >>> theLogFile= &theLogFile&#59<br/>filename theLog \"&theLogFile\"&#59<br/>/*proc printto log=theLog&#59run&#59*/<br/><br/>/*Part 0. Import data**************************************************/<br/>/*Get the real data*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\&FData..zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(&FData..sas7bdat)<br/>)&#59<br/>%print(data=&FData.)<br/><br/>/*use the real data instead -- Shenzhen 20190702*/<br/>%let theData=&FData.&#59<br/><br/>/*get the dummy data*/<br/>/*PROC IMPORT DATAFILE = 'DUMMY DATA FOR DRUMS MSP.CSV' OUT = DRUMS DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let srcDummyPath = P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\&#59<br/>%let srcFile = DUMMY DATA FOR DRUMS MSP.CSV&#59<br/>%let srcFull = &srcDummyPath.&srcFile&#59<br/>%put >>> srcFull= &srcFull&#59<br/>/*PROC IMPORT DATAFILE = \"&srcFull\" OUT = DRUMSDUMMY DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*/<br/><br/>/*this part is to import the dummy data from the csv file to a SAS data set<br/>&nbsp&nbsp&nbsp&nbspIt'll only work when theData = DRUMS_Dummy (case insensitive). <br/>&nbsp&nbsp&nbsp&nbspThis is to prevent confusion when load dummy or real data. <br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190702<br/>*/<br/>%macro getDummyData(src=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local src&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %lowcase(&src) = drums_dummy %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPROC IMPORT DATAFILE = \"&srcFull\" OUT = &src DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getDummyData&#59<br/>%getDummyData(src=&theData)&#59<br/><br/>/*A file is created to map the two datasets:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/>/*******end of the current Part ***************************************/<br/><br/><br/>/*Part A. Summary 1 & 2**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET &theData&#59 WHERE PERIOD_N = 1&#59 RUN&#59 /*original line*/<br/>/*DATA DRUMS_BASELINE&#59 SET &theData&#59 AGE_INT = Round(Age)&#59AGE = AGE&#59 FOLLOW_UP=FOLLOW_UP&#59WHERE PERIOD_N = 1&#59 RUN&#59 */<br/>/*add integer age and follow up*/<br/><br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 ODS OUTPUT MOMENTS = SUMMARY1 QUANTILES = SUMMARY2&#59RUN&#59/*original line*/<br/>DATA SUMMARY1&#59 SET SUMMARY1&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*Add number of cohort members in summary1*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp01 as<br/>&nbsp&nbsp&nbsp&nbspselect count(distinct ID) as Npt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE&#59<br/>quit&#59<br/>Proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table SUMMARY1_withNpt as<br/>&nbsp&nbsp&nbsp&nbspselect t1.*, t2.Npt<br/>&nbsp&nbsp&nbsp&nbspfrom summary1 t1 cross join _tmp01 t2<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*report # of distinct individuals behind the median, Q1 and Q3*/<br/>%macro getDistinctNPt (data=, sumtable=, target=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data sumtable target nRows theVar debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a distinct list of varnames*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp2 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct varname<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the # of vars in getdistinctNpt_tmp2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect count(*) format 20. into :nRows <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspfrom getdistinctNpt_tmp2&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then %put >>> nRows = &nRows&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*loop for each varname, from summary 2, get rows with the current varname*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nRows&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a slice of the varnames from getdistinctNpt_tmp2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getdistinctNpt_tmp2 (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theVar', strip(VarName))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then  %put >>> the current variable =  &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the records in the summary table (e.g., summary 2) of the current VarName*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(Varname)=symget('theVar')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*count the distinct number of patients of the selected var, and by levels of the selected var&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp5 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(distinct t1.ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &data t1 inner join getdistinctNpt_tmp4 t2 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspon (t1.&theVar = t2.estimate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroup by t2.Varname, t2.Quantile<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*append results into the target table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getdistinctNpt_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getdistinctNpt_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getdistinctNpt&#59<br/>%getDistinctNPt(data=DRUMS_BASELINE, sumtable=SUMMARY2, target=SUMMARY2_withNPT, debug=)&#59<br/><br/><br/>/*PROC EXPORT DATA = SUMMARY1 OUTFILE = \"MENAS_SD_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY2 OUTFILE = \"MEDIAN_IQR_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum1= &targetPilot1ReportPath.MEANS_SD_ALL MSP.CSV&#59<br/>%let OutCSV_Sum2 = &targetPilot1ReportPath.MEDIAN_IQR_ALL MSP.CSV&#59<br/>%put >>> OutCSV_Sum1= &OutCSV_Sum1&#59<br/>%put >>> OutCSV_Sum2= &OutCSV_Sum2&#59<br/>/*PROC EXPORT DATA =  SUMMARY1 OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY1_withNPT OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*PROC EXPORT DATA =  SUMMARY2 OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY2_withNPT OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59 /*use the data set with N patients instead*/<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part B. Summary 3 & 4**************************************************/<br/>/*PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59*/<br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59<br/><br/>DATA SUMMARY3&#59 SET SUMMARY3&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY4&#59 SET SUMMARY4&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/><br/>/*PROC EXPORT DATA = SUMMARY3 OUTFILE = \"MENAS_SD_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY4 OUTFILE = \"MEDIAN_IQR_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum3= &targetPilot1ReportPath.MEANS_SD_DMD_EVER MSP.CSV&#59<br/>%let OutCSV_Sum4 = &targetPilot1ReportPath.MEDIAN_IQR_DMD_EVER MSP.CSV&#59<br/>%put >>>OutCSV_Sum3=  &OutCSV_Sum3&#59<br/>%put >>>OutCSV_Sum4 = &OutCSV_Sum4&#59<br/>PROC EXPORT DATA = SUMMARY3 OUTFILE = \"&OutCSV_Sum3\" DBMS = CSV REPLACE&#59 RUN&#59/*original line*/<br/>PROC EXPORT DATA = SUMMARY4 OUTFILE = \"&OutCSV_Sum4\" DBMS = CSV REPLACE&#59 RUN&#59/*original line*/<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part C. Tabel 1**************************************************/<br/>PROC FREQ DATA = DRUMS_BASELINE&#59 <br/>TABLE SEX*DMD_EVER SES*DMD_EVER COMORB_COUNT*DMD_EVER MENTAL*DMD_EVER HTN*DMD_EVER <br/>      LIPID*DMD_EVER COPD*DMD_EVER DM*DMD_EVER EPILEPSY*DMD_EVER IHD*DMD_EVER CANCER*DMD_EVER CALENDAR_YEAR_CAT*DMD_EVER /NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE1&#59RUN&#59<br/>DATA TABLE1&#59 SET TABLE1&#59 WHERE _TYPE_ = \"11\"&#59 VAR_TEMP = CATT(SEX,SES,COMORB_COUNT,MENTAL,HTN,LIPID,COPD,DM,EPILEPSY,IHD,CANCER,CALENDAR_YEAR_CAT)&#59 VAR_NAMES = COMPRESS(VAR_TEMP,'.')&#59<br/>DROP _TYPE_ _TABLE_ SEX SES COMORB_COUNT MENTAL HTN LIPID COPD DM EPILEPSY IHD CANCER CALENDAR_YEAR_CAT VAR_TEMP&#59 RUN&#59<br/><br/>/*As the source data is from Baseline, each cohort member only appears once. As such, the # in the var 'Frequency' is the # of distinct patients<br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190703*/<br/><br/>/*The Table_1 contains small cells and should be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp1. As these are cross tables, a small cell, even suppressed, can be back calculated horizontally or vertically. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis means that once a small cell occurs, the whole cross table has to be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp[Comment:] Seems that we have to apply for releasing small cell results. Or there will be many suppressions, making Table 1 not informative.<br/>&nbsp&nbsp&nbsp&nbsp2. the numeric values should be changed to char values, so as to indicate those suppressed<br/>*/<br/>/*1. First, transpose the data so that the freq by DMD_EVER groups are listed in the same row. <br/>&nbsp&nbsp&nbsp&nbspThat way, it'll be easier to sum the total horizontally, and vertically. <br/>&nbsp&nbsp&nbsp&nbspThese summaries will be used to determine suppression and masking. <br/>*/<br/>proc sort data=TABLE1 out=_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbspby table  var_names &#59<br/>run&#59<br/>proc transpose data = _tmp1 out=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar Frequency&#59<br/>run&#59<br/>/*2. For each table, sort by freq in the DMD_EVER = Yes group. In this cohort,  the Yes group is more likely to have small cells.<br/>&nbsp&nbsp&nbsp&nbspFor rows of the same table, those with the smallest freq comes first<br/>*/<br/>proc sort data=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>run&#59<br/>/*3. Next, the number of levels of the current row will be counted. That way, if a small cell exists, we'll know how far is<br/>&nbsp&nbsp&nbsp&nbspthe current row away from the small cell. <br/>&nbsp&nbsp&nbsp&nbspThe suppression rule stresses that at least two levels should be suppressed. The calculation in this part helps identify <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe level next the level with the small cell. Such next level will be suppressed in the following steps.   <br/>*/<br/>data _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>&nbsp&nbsp&nbsp&nbspif first.table then N_levels =1&#59<br/>&nbsp&nbsp&nbsp&nbspelse N_levels +1&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>run&#59 <br/>/*3. Now, perform the suppression and masking for small cells.<br/>&nbsp&nbsp&nbsp&nbspSuppression is to suppress the cell with 1-5 individuals<br/>&nbsp&nbsp&nbsp&nbspMasking is to mask the neighboring cells of the small cell (both vertical and horizontal), so that the suppressed cannot be back calculated<br/>*/<br/>data _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp/*initially for each table, set everything to 0*/<br/>&nbsp&nbsp&nbsp&nbspif first.table then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1=0&#59sum_sup_v2=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h=sum_sup_v1 + sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*For small cells (Freq between 1 and 5):<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the suppressed freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked nubmer is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 's' standing for suppressed<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (suppress the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4) Indicate that a suppression starts (Sup=1)<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp/*approved for reporting small cells, no need to suppress*/<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+ Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Within the same table, the small cells always comes first (as level 1). To suppress at least two levels, level 2 should<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso be suppressed.However, level 3 does not have, unless the totally suppressed/masked is still < 6. So starting from level 3, the Suppression will be raisded <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(let Sup return to the value of 0). <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif N_levels > 2 and sum_sup_v1 > 5 and sum_sup_v2> 5 and sum_sup_h > 5 then sup=0&#59else sup+0&#59<br/>&nbsp&nbsp&nbsp&nbsp/*In the current level (current row), if suppression occurs (Sup=1), the neighboring column should be masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo mask the neighboring cell in the same row: <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the masked freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked number is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 'm' standing for masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (mask the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe above 3 actions are however only to take when the neighboring cell itself is not suppressed. Otherwise there is no need to mask again <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif sup=1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s1 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s2 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*lastly, when the current row is required for suppressing or masking, calculate the overall sum of suppressed/masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof the current table*/<br/>&nbsp&nbsp&nbsp&nbspif s1 ne '' and s2 ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h + sum_sup_v1+sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*Finally, rearrange the table so as to be conform with the orignal requirement*/<br/>data _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'Yes'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =2 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep Table DMD_Ever Frequency Var_Names Suppress_Mark&#59<br/>run&#59<br/>/*We can repeat the above for the column missing. but for SK data, there is no missing values. So the column will be simply added*/<br/>data Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspretain Table DMD_Ever Frequency Missing VAR_NAMES&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspMissing=.&#59<br/>run&#59<br/>/*Sort the tables by original levels*/<br/>proc sort data=Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>run&#59<br/><br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"CROSS_TABLE MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Table1= &targetPilot1ReportPath.CROSS_TABLE MSP.CSV&#59<br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-07-03*/<br/>PROC EXPORT DATA = Table1_Suppressed OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part D. Summary 5 & 6**************************************************/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_NO_IND/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE2&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE2&#59 SET TABLE2&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_Ind COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE2&#59VAR COUNTS&#59 CLASS DMD_No_Ind&#59 ODS OUTPUT MOMENTS = SUMMARY5&#59RUN&#59<br/>DATA SUMMARY5&#59 SET SUMMARY5&#59 KEEP DMD_No_Ind Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY5 OUTFILE = \"EVER_DMD_IND MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/><br/>/*What is it in sum5? is it about # of distinct patients ever received DMD per DMD class? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test1 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_Ind&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test1 generates the same results as in summary 5 -- Shenzhen 20190703*/<br/><br/>%let OutCSV_Sum5= &targetPilot1ReportPath.EVER_DMD_IND MSP.CSV&#59<br/>%put >>> OutCSV_Sum5 = &OutCSV_Sum5&#59<br/>PROC EXPORT DATA = SUMMARY5 OUTFILE = \"&OutCSV_Sum5\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_No_First_Second/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE3&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE3&#59 SET TABLE3&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_First_Second COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table3 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 6 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE3&#59VAR COUNTS&#59 CLASS DMD_No_First_Second&#59 ODS OUTPUT MOMENTS = SUMMARY6&#59RUN&#59<br/>DATA SUMMARY6&#59 SET SUMMARY6&#59 KEEP DMD_No_First_Second Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*What is it in sum6? is it about # of distinct patients ever received DMD per generation? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test2 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_First_Second&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test2 generates the same results as in summary 6 -- Shenzhen 20190703*/<br/><br/>/*PROC EXPORT DATA = SUMMARY6 OUTFILE = \"EVER_DMD_First_Second MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum6= &targetPilot1ReportPath.EVER_DMD_First_Second MSP.CSV&#59<br/>%put >>> OutCSV_Sum6 = &OutCSV_Sum6&#59<br/>PROC EXPORT DATA = SUMMARY6 OUTFILE = \"&OutCSV_Sum6\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part E. PDF**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET DRUMS_BASELINE&#59AGE_INT = ROUND(AGE)&#59 RUN&#59<br/>/*ODS PDF FILE = \"BARPLOT_AGE_AT_INDEX_INTEGER.PDF\" STARTPAGE=NEVER&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGE_AT_INDEX_INTEGER.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/><br/><br/><br/>/*This part seems to have # of patients by Age_INT, overall and by DMD_EVER group. <br/>&nbsp&nbsp&nbsp&nbspAs it is from baseline, each cohort member only appear once. As such, the # of frequency is the # of distinct patients*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp11 as<br/>&nbsp&nbsp&nbsp&nbspselect AGE_INT, DMD_EVER, count(AGE_INT) as N_pt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE<br/>&nbsp&nbsp&nbsp&nbspgroup by AGE_INT ,DMD_EVER<br/>&nbsp&nbsp&nbsp&nbsporder by AGE_INT<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>proc transpose data = _tmp11 out=_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspby AGE_INT&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar N_pt&#59<br/>run&#59<br/>data _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspNpt_Total = sum(Yes, No)&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbspdrop _name_&#59<br/>run&#59<br/><br/>data AgeDist_ForPDF_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_No ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_No < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_Yes ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*create an additional table for age distributions*/<br/>%let OutCSV_AgeDist= &targetPilot1ReportPath.AgeDist.CSV&#59<br/>PROC EXPORT DATA = AgeDist_ForPDF_Suppressed OUTFILE = \"&OutCSV_AgeDist\" DBMS = CSV REPLACE&#59 RUN&#59<br/><br/>/*******end of the current Part ***************************************/<br/><br/>/*Part F, by age groups*/<br/><br/><br/><br/>/*end of this part**/<br/>DATA DRUMS_BASELINE2&#59 <br/>&nbsp&nbsp&nbsp&nbspSET DRUMS_BASELINE&#59<br/>&nbsp&nbsp&nbsp&nbspformat AGE_GRP $10.&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT le 30)  AGE_GRP='00-30'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 31 le AGE_INT le 35)  AGE_GRP='31-35'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 36 le AGE_INT le 40)  AGE_GRP='36-40'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 41 le AGE_INT le 45)  AGE_GRP='41-45'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 46 le AGE_INT le 50)  AGE_GRP='46-50'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 51 le AGE_INT le 55)  AGE_GRP='51-55'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 56 le AGE_INT le 60)  AGE_GRP='56-60'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 61 le AGE_INT le 65)  AGE_GRP='61-65'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 66 le AGE_INT le 70)  AGE_GRP='66-70'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 71 le AGE_INT le 75)  AGE_GRP='71-75'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 76 le AGE_INT le 80)  AGE_GRP='76-80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT gt 80)  AGE_GRP='>80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise AGE_GRP='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>RUN&#59<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGEGROUP_AT_INDEX.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGEGROUP AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/>/*Routing SAS log back to the default place*/<br/>proc printto&#59 run&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-g4yFo3eRKFcrhZuu"}]}],"custparents":[{"idx":"EGTask-gypbEe5Mo1bSWBaR"},{"idx":"CodeTask-eKFg6CP7FBoinDkU"}]},{"idx":"CodeTask-WPm9dCxuJO5FP9C3","name":"F Covariates_any","NodeDescription":"///t<br/>///s<br/><br/>data _null_&#59run&#59<br/><br/>/*_F covariates.<br/>[_RD]<br/>*/<br/><br/><br/>%let theStudyID=key_hsn&#59<br/>%let hospdxdate = adm_date&#59<br/>%let physiciandxdate = dos&#59<br/><br/>%let EData=_E_any&#59<br/>%let FTarget=_F_any&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\&EData..zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(&EData..sas7bdat)<br/>)&#59<br/>/*%print(data=&EData.)&#59*/<br/><br/>/*_FA<br/>For records in data set &EData., define the primary factors (Model 1: No exposure or Exposure&#59 <br/>Model 2: No exposure or 1st or 2nd generation DMD exposure&#59 Model 3: No exposure or exposure by individual DMD class). <br/>[Note:] these vars are period specific.<br/>*/<br/>data _FA&#59<br/>&nbsp&nbsp&nbsp&nbspset &EData.&#59<br/>&nbsp&nbsp&nbsp&nbspformat X1_M1_Any $4.&#59<br/>&nbsp&nbsp&nbsp&nbspif Exposure_Status ne 'd' then X1_M1_Any='null'&#59else X1_M1_Any='yes'&#59<br/>&nbsp&nbsp&nbsp&nbsprename Generation_short = X1_M2_Generations&#59<br/>&nbsp&nbsp&nbsp&nbsprename class_short = X1_M3_Classes&#59<br/>run&#59<br/><br/>/*%freq(data=_FA, table=X1_M2_Generations)&#59*/<br/><br/>/*make a variable to indicate the exposure to any DMT during follow up, regardless of segments*/<br/>%distinct(data=_FA, target=_FA1, vars=%str(&theStudyID, x1_M1_Any), filters=%str(X1_M1_Any='yes'))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FA,<br/>&nbsp&nbsp&nbsp&nbspt2=_FA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FA2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.&theStudyID = '', 'null', 'yes') as x31_M4_WholeFW),<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspjtype=left<br/>)&#59<br/><br/><br/>/*_FB, time-varying variables.<br/><br/>_FBA. For records in data set &EData., determine patient's age at beginning (SegStartDate) of each segment (period)<br/>*/<br/>data _FB&#59<br/>&nbsp&nbsp&nbsp&nbspset _FA2&#59<br/>&nbsp&nbsp&nbsp&nbspX2_Age = INT(yrdif(Birth, SegStartDate, \"AGE\"))&#59<br/>run&#59<br/><br/>/*_FC, time-fixed variables<br/>*/<br/><br/>/*_FCA sex and starting calendar year */<br/>data _FCA&#59<br/>&nbsp&nbsp&nbsp&nbspset _FB&#59<br/>&nbsp&nbsp&nbsp&nbsprename Sex= X1_Sex&#59<br/>&nbsp&nbsp&nbsp&nbsprename First_admin_code_Year = X3_StudyStartYear&#59<br/>run&#59<br/><br/>/*_FCB income quintile<br/>[_Note] <br/>The income quitile is prepared on remote server by program \"F_R\". The results are saved in data set _F_R, which was downloaded and<br/>&nbsp&nbsp&nbsp&nbspsaved in the local target folder (libname = localt).<br/>The income quintile info is available until mid 2017. Individuals newly immigrated to SK after Jun 30, 2017 won't <br/>have income quintile info.<br/>*/<br/>%sort(data=localt._F_R, target= _FCB1, sorter=&theStudyID incqtl)&#59<br/>data _FCB2&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCB1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl =. then incqtl=9&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCB2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCB,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.INCQTL=., 9, t2.incqtl) as X4_SES),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/* test proportion of cohort membes missing SES status<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=_FCB, target=test, vars=%str(&theStudyID, X4_SES))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test, table=X4_SES)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>/*_FCC comorbidities<br/><br/>*/<br/><br/>/*ICD code list of the comorbidities<br/>[_Note]<br/>the BC code *50B is not included<br/>*/<br/>/*mental conditions (anxiety, depression, bipolar disorder)*/<br/>%let ICD9_MSB_MH = %str('296', '298','300','311')&#59 <br/>%let ICD9_HOSP_MH = %str('3000', '3002', '2960', '2961', '29604', '29614', '2964', '29644', '2965', '2965', '29654', '2966', '2967', '2968', '2962', '2963', '2980', '3004', '311')&#59 <br/>%let ICD10_MH=%str('F40', 'F41', 'F31', 'F32', 'F33', 'F34')&#59<br/>/*Hypertension*/<br/>%let  ICD9_HN= %str('401', '402', '403', '404', '405')&#59<br/>%let ICD10_HN=%str('I10', 'I11', 'I12', 'I13', 'I15')&#59<br/>/*Hyperlipidemia*/<br/>%let ICD9_HL=%str('272')&#59<br/>%let ICD10_HL=%str('E780', 'E782', 'E784', 'E785')&#59<br/>/*Chronic Lung Disease*/<br/>%let ICD9_CL=%str('493', '491', '492', '496')&#59<br/>%let ICD10_CL=%str('J40', 'J42', 'J43', 'J44', 'J45', 'J46')&#59<br/>/*Diabetes*/<br/>%let ICD9_DB=%str('250')&#59<br/>%let ICD10_DB=%str('E10', 'E11', 'E12', 'E13', 'E14')&#59<br/>/*Epilepsy*/<br/>%let ICD9_EP=%str('345')&#59<br/>%let ICD10_EP=%str('G40', 'G41')&#59<br/>/*Ischemic Heart Disease*/<br/>%let ICD9_IH=%str('410', '411', '412', '413', '414')&#59<br/>%let ICD10_IH=%str('I20', 'I21', 'I22', 'I23', 'I24', 'I25')&#59<br/>/*Cancer: 140-172, 174-209, C00-C43, C45-C97*/<br/>/*added according to the new protocol: P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\INITIAL MODEL PLAN FOR DRUMS-Aim-1-GEE-Physician-visitsv_28June_FINAL.docx*/<br/>%let ICD9_CA=%str('140','141','142','143','144','145','146','147','148','149','150','151','152','153','154','155','156','157','158','159','160','161','162','163','164','165','166','167','168','169','170','171','172','174','175','176','177','178','179','180','181','182','183','184','185','186','187','188','189','190','191','192','193','194','195','196','197','198','199','200','201','202','203','204','205','206','207','208','209')&#59 <br/>%let ICD10_CA=%str('C00','C01','C02','C03','C04','C05','C06','C07','C08','C09','C10','C11','C12','C13','C14','C15','C16','C17','C18','C19','C20','C21','C22','C23','C24','C25','C26','C27','C28','C29','C30','C31','C32','C33','C34','C35','C36','C37','C38','C39','C40','C41','C42','C43','C45','C46','C47','C48','C49','C50','C51','C52','C53','C54','C55','C56','C57','C58','C59','C60','C61','C62','C63','C64','C65','C66','C67','C68','C69','C70','C71','C72','C73','C74','C75','C76','C77','C78','C79','C80','C81','C82','C83','C84','C85','C86','C87','C88','C89','C90','C91','C92','C93','C94','C95','C96','C97')&#59 <br/><br/>/*_FCCA the first dx of comorbidities from hopsital file*/<br/>/*_FCCA0 unzip the hospital file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br/>)&#59<br/><br/>/*_FCCA1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCA1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/><br/>/*FCCA2 get the admission date of the first ICD code for each comorbidity*/<br/>&nbsp&nbsp&nbsp&nbsp/*0. Create an empty target file*/<br/>data _FCCA&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_Hosp_DRUMS(data=, theICD9s=, theICD10s=, theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s theICD10s theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select hospital records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_Hosp_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&theICD10s) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &hospdxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select all dx of different dates, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_Hosp_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_Hosp_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &hospdxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_Hosp_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_Hosp_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_Hosp_DRUMS&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HOSP_MH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_MH, theCoMorb=MH_Mental, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HN, theCoMorb=HN_Hypertension, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HL, theCoMorb=HL_Hyperlipidemia, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CL, theCoMorb=CL_ChronicLungDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_DB, theCoMorb=DB_Diabetes, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_EP, theCoMorb=EP_Eplilepsy, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_IH, theCoMorb=IH_IschemicHeartDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CA, theCoMorb=CA_Cancer, Target=_FCCA, debug=)&#59<br/>/*%freq(data=_FCCA, table=CoMorb)&#59*/<br/><br/>/*_FCCB, the first dx of comorbidities from physician service file*/<br/>/*_FCCB0 unzip the physician service file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/><br/>/*_FCCB1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCB1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*FCCB2 get the service date of the first ICD code for each comorbidity*/<br/>/*0. Create an empty target file*/<br/>data _FCCB&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_MSB_DRUMS(data=, theICD9s=,  theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s  theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select physician service records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_MSB_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &physiciandxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select the earliest date of diagnosis,  this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_MSB_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_MSB_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &physiciandxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_MSB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_MSB_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_MSB_DRUMS&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_MSB_MH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=MH_Mental, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HN_Hypertension, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HL_Hyperlipidemia, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CL_ChronicLungDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=DB_Diabetes, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=EP_Eplilepsy, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=IH_IschemicHeartDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CA_Cancer, Target=_FCCB, debug=)&#59<br/>/*%freq(data=_FCCB, table=CoMorb)&#59*/<br/><br/>/*_FCCC combine data set _FCCA and data set _FCCB, for each patient, keep the earlist date of comorbidity diagnosis*/<br/>/*1. Combine the data*/<br/>data _FCCC1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCA _FCCB&#59<br/>run&#59<br/>/*2. Select the earliest date of diagnosis, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FCCC1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, coMorbDate),<br/>&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>)&#59<br/>/*%freq(data=_FCCC, table=CoMorb)&#59*/<br/><br/>/*_FCCD number of comorbidity at baseline (within 365 days prior to the studystartdate)*/<br/>/*_FCCD1 <br/>Join data set _FCB, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year prior to the studystartdate. However, patients may have the first diagnosis of comorbidity way earlier than 1 year.<br/>&nbsp&nbsp&nbsp&nbspTherefore the following is to trace back for 100 years. <br/>*/<br/><br/>/*Get the comorbidities before the StudyStartDate*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.StudyStartDate, t2.CoMorb), /*, t2.CoMorbDate*/<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.StudyStartDate-1)<br/>)&#59<br/><br/>/*_FCCD2, count total number of comorbidities at baseline*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.StudyStartDate, count(t1.CoMorb) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.StudyStartDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.StudyStartDate)<br/>)&#59<br/><br/>/*_FCCD3, link the date set _FCB, and date set FCCD2, add N_CoMorb_Baseline to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at baseline, let N_CoMorb_Baseline=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Baseline=., 0, t2.N_CoMorb_Baseline) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*_FCCD4, make categories for number of comorbidities at baseline*/<br/>data _FCCD&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD3&#59<br/>&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT =N_CoMorb_Baseline&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Baseline > 3 then X5_NCoMB_Base_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCD, table=X5_NCoMB_Base_CAT)&#59*/<br/><br/>/*_FCCE number of comorbidity at each period*/<br/>/*_FCCE1 <br/>Join data set _FCCD, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year. <br/>Question:<br/>However, patients may have the first diagnosis of comorbidity way earlier than 1 year?<br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t2.CoMorb),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.SegStartDate-1)<br/>)&#59<br/><br/>/*_FCCE2, count total number of comorbidities for each segment*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.SegStartDate, t1.SegEndDate, count(t1.CoMorb) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate)<br/>)&#59<br/><br/>/*_FCCE3, link the date set _FCCD, and date set FCCE2, add N_CoMorb_Seg to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at each segment, let N_CoMorb_Seg=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Seg=., 0, t2.N_CoMorb_Seg) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCE4, make categories for number of comorbidities at baseline*/<br/>data _FCCE&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE3&#59<br/>&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT =N_CoMorb_Seg&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Seg > 3 then X6_NCoMB_Seg_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCE, table=X6_NCoMB_Seg_CAT)&#59*/<br/><br/>/*_FCCF status of each comorbidity at baseline*/<br/>data _FCCF1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+6) || '_CMB_B_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/>/*_FCCF2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCF2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID StudyStartDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCF3 link data set _FCCF2 back to _FCCE*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID StudyStartDate<br/>)&#59<br/><br/>/*Replace the missing value in encounter columns with 0*/<br/>data _FCCF&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCF4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_B_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/><br/>/*_FCCG status of each comorbidity at each period*/<br/>data _FCCG1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes2&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+13) || '_CMB_P_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/><br/>/*_FCCG2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCG1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCG2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID SegStartDate SegEndDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCG4 link data set _FCCG2 back to _FCCF*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCG5. Replace the missing value in encounter columns with 0*/<br/>data _FC&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCG4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX21_CMB_P_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>/*_FD. adding variables compatible to the team template<br/>Ref.P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/>%sort(data=_FC, sorter=&theStudyID First_admin_code_date SegStartDate SegEndDate )&#59<br/>data &FTarget&#59<br/>&nbsp&nbsp&nbsp&nbspset _Fc&#59<br/>&nbsp&nbsp&nbsp&nbspformat<br/>&nbsp&nbsp&nbsp&nbspID $11.<br/>&nbsp&nbsp&nbsp&nbspIndex_date yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_DMD $5.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year 8.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year_CAT $11.<br/>&nbsp&nbsp&nbsp&nbspPY best32.<br/>&nbsp&nbsp&nbsp&nbspLOG_PY best32.<br/>&nbsp&nbsp&nbsp&nbspSex1 $3.<br/>&nbsp&nbsp&nbsp&nbspDOB yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStudy_end yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspFollow_up best32.<br/>&nbsp&nbsp&nbsp&nbspPeriod_N 8.<br/>&nbsp&nbsp&nbsp&nbspStop_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStart_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind $20.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second $8.<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims best32.<br/>&nbsp&nbsp&nbsp&nbspNS best32.<br/>&nbsp&nbsp&nbsp&nbspGS best32.<br/>&nbsp&nbsp&nbsp&nbspGenmed best32.<br/>&nbsp&nbsp&nbsp&nbspOnG best32.<br/>&nbsp&nbsp&nbsp&nbspOphtal best32.<br/>&nbsp&nbsp&nbsp&nbspGP BEST32.<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist BEST32.<br/>&nbsp&nbsp&nbsp&nbspUro BEST32.<br/>&nbsp&nbsp&nbsp&nbspOrtho BEST32.<br/>&nbsp&nbsp&nbsp&nbspPSY BEST32.<br/>&nbsp&nbsp&nbsp&nbspDerm BEST32.<br/>&nbsp&nbsp&nbsp&nbspDMD_Ever $5.<br/>&nbsp&nbsp&nbsp&nbspAge Best32. <br/>&nbsp&nbsp&nbsp&nbspSES 8.<br/>&nbsp&nbsp&nbsp&nbspComorb_count Best32.<br/>&nbsp&nbsp&nbsp&nbspMental $10.<br/>&nbsp&nbsp&nbsp&nbspCOPD $10.<br/>&nbsp&nbsp&nbsp&nbspLipid $10.<br/>&nbsp&nbsp&nbsp&nbspHTN $10.<br/>&nbsp&nbsp&nbsp&nbspIHD $10.<br/>&nbsp&nbsp&nbsp&nbspDM $10.<br/>&nbsp&nbsp&nbsp&nbspEpilepsy $10.<br/>&nbsp&nbsp&nbsp&nbspCancer $10.00<br/>&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID First_admin_code_date SegStartDate SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspID=&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspIndex_date =StudyStartDate&#59/*The studyStartDate is the index_date in my version. It differs from the first_admin_code_year in<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthat for patients < 18 on first_admin date, the StudyStartDate was moved forward to the date of 18th birthday*/  <br/>&nbsp&nbsp&nbsp&nbspif X1_M1_Any = 'yes' then &nbsp&nbsp&nbsp&nbspDMD_No_DMD = 'Yes'&#59else DMD_No_DMD='No'&#59<br/>&nbsp&nbsp&nbsp&nbspCalendar_year = year(SegStartDate)&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( Calendar_year le 1999)  Calendar_year_CAT='1996-1999'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2000 le Calendar_year le 2004)  Calendar_year_CAT='2000-2004'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2005 le Calendar_year le 2009)  Calendar_year_CAT='2005-2009'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2010 le Calendar_year le 2014)  Calendar_year_CAT='2010-2014'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2015 le Calendar_year le 2018)  Calendar_year_CAT='2015-2018'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise Calendar_year_CAT='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPY=((SegEndDate - SegStartDate) + 1)/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspLOG_PY = log(py)&#59<br/>&nbsp&nbsp&nbsp&nbspsex1 = sex&#59 drop sex&#59 rename sex1=Sex&#59<br/>&nbsp&nbsp&nbsp&nbspDOB = Birth&#59<br/>&nbsp&nbsp&nbsp&nbspStudy_end =StudyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspFollow_up=((StudyEndDate - StudyStartDate) + 1 )/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then Period_N = 1&#59&nbsp&nbsp&nbsp&nbspelse Period_N+1&#59<br/>&nbsp&nbsp&nbsp&nbspStop_Interval = SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspStart_Interval = SegStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M3_Classes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Alemtuzumab')  DMD_No_Ind='Alemtuzumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fingolimod')  DMD_No_Ind='Fingolimod'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fumarate')  DMD_No_Ind='Dimethyl fumarate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Glatiramer')  DMD_No_Ind='Glatiramer acetate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'IFNB')  DMD_No_Ind='Beta-interferon'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Natalizumab')  DMD_No_Ind='Natalizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Teriflunomide')  DMD_No_Ind='Teriflunomide'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_Ind='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Daclizumab')  DMD_No_Ind='Daclizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Ocrelizumab ')  DMD_No_Ind='Ocrelizumab '&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_Ind='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M2_Generations)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'First')  DMD_No_First_Second='First'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Second')  DMD_No_First_Second='Second'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_First_Second='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_First_Second='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims = N_Encounters_Total&#59<br/>&nbsp&nbsp&nbsp&nbspNS=N_Encounters_NUS&#59<br/>&nbsp&nbsp&nbsp&nbspGS=N_Encounters_GNS&#59<br/>&nbsp&nbsp&nbsp&nbspGenmed=N_Encounters_INT&#59<br/>&nbsp&nbsp&nbsp&nbspOnG=N_Encounters_ONG&#59<br/>&nbsp&nbsp&nbsp&nbspOphtal=N_Encounters_OPH&#59<br/>&nbsp&nbsp&nbsp&nbspGP=N_Encounters_PCP&#59<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist=N_Encounters_PHY&#59<br/>&nbsp&nbsp&nbsp&nbspUro=N_Encounters_URO&#59<br/>&nbsp&nbsp&nbsp&nbspOrtho=N_Encounters_OTS&#59<br/>&nbsp&nbsp&nbsp&nbspPSY=N_Encounters_PSY&#59<br/>&nbsp&nbsp&nbsp&nbspDerm=N_Encounters_DER&#59<br/>&nbsp&nbsp&nbsp&nbspif X31_M4_WholeFW = 'yes' then DMD_Ever='Yes'&#59else DMD_Ever='No'&#59<br/>&nbsp&nbsp&nbsp&nbspAge=((SegStartDate - birth) + 1 )/ 365.24 &#59<br/>&nbsp&nbsp&nbsp&nbspSES = X4_SES&#59<br/>&nbsp&nbsp&nbsp&nbspif X6_NCoMB_Seg_CAT < 3 then Comorb_count =X6_NCoMB_Seg_CAT&#59 else Comorb_count=3&#59<br/>&nbsp&nbsp&nbsp&nbspif X14_CMB_P_MH=1 then Mental='Presence'&#59 else Mental= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X15_CMB_P_HN=1 then COPD='Presence'&#59 else COPD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X17_CMB_P_CL=1 then Lipid='Presence'&#59 else Lipid= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X16_CMB_P_HL=1 then HTN='Presence'&#59 else HTN= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X20_CMB_P_IH=1 then IHD='Presence'&#59 else IHD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X18_CMB_P_DB=1 then DM='Presence'&#59 else DM= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X19_CMB_P_EP=1 then Epilepsy='Presence'&#59 else Epilepsy= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X21_CMB_P_CA=1 then Cancer='Presence'&#59 else Cancer= 'Absence'&#59<br/>run&#59<br/><br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=&FTarget..zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=&FTarget..sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-HmIeBYWDUbHcHd3a","name":"F Covariates - Copy","NodeDescription":"///t<br/>///s<br/><br/>data _null_&#59run&#59<br/><br/>/*_F covariates.<br/>[_RD]<br/>*/<br/><br/><br/>%let theStudyID=key_hsn&#59<br/>%let hospdxdate = adm_date&#59<br/>%let physiciandxdate = dos&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\_E.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(_E.sas7bdat)<br/>)&#59<br/>/*%print(data=_E)&#59*/<br/><br/>/*_FA<br/>For records in data set _E, define the primary factors (Model 1: No exposure or Exposure&#59 <br/>Model 2: No exposure or 1st or 2nd generation DMD exposure&#59 Model 3: No exposure or exposure by individual DMD class). <br/>[Note:] these vars are period specific.<br/>*/<br/>data _FA&#59<br/>&nbsp&nbsp&nbsp&nbspset _E&#59<br/>&nbsp&nbsp&nbsp&nbspformat X1_M1_Any $4.&#59<br/>&nbsp&nbsp&nbsp&nbspif Class_short='null' then X1_M1_Any='null'&#59else X1_M1_Any='yes'&#59<br/>&nbsp&nbsp&nbsp&nbsprename Generation_short = X1_M2_Generations&#59<br/>&nbsp&nbsp&nbsp&nbsprename class_short = X1_M3_Classes&#59<br/>run&#59<br/><br/>/*%freq(data=_FA, table=X1_M2_Generations)&#59*/<br/><br/>/*make a variable to indicate the exposure to any DMT during follow up, regardless of segments*/<br/>%distinct(data=_FA, target=_FA1, vars=%str(&theStudyID, x1_M1_Any), filters=%str(X1_M1_Any='yes'))&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FA,<br/>&nbsp&nbsp&nbsp&nbspt2=_FA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FA2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifc(t2.&theStudyID = '', 'null', 'yes') as x31_M4_WholeFW),<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspjtype=left<br/>)&#59<br/><br/><br/>/*_FB, time-varying variables.<br/><br/>_FBA. For records in data set _E, determine patient's age at beginning (SegStartDate) of each segment (period)<br/>*/<br/>data _FB&#59<br/>&nbsp&nbsp&nbsp&nbspset _FA2&#59<br/>&nbsp&nbsp&nbsp&nbspX2_Age = INT(yrdif(Birth, SegStartDate, \"AGE\"))&#59<br/>run&#59<br/><br/>/*_FC, time-fixed variables<br/>*/<br/><br/>/*_FCA sex and starting calendar year */<br/>data _FCA&#59<br/>&nbsp&nbsp&nbsp&nbspset _FB&#59<br/>&nbsp&nbsp&nbsp&nbsprename Sex= X1_Sex&#59<br/>&nbsp&nbsp&nbsp&nbsprename First_admin_code_Year = X3_StudyStartYear&#59<br/>run&#59<br/><br/>/*_FCB income quintile<br/>[_Note] <br/>The income quitile is prepared on remote server by program \"F_R\". The results are saved in data set _F_R, which was downloaded and<br/>&nbsp&nbsp&nbsp&nbspsaved in the local target folder (libname = localt).<br/>The income quintile info is available until mid 2017. Individuals newly immigrated to SK after Jun 30, 2017 won't <br/>have income quintile info.<br/>*/<br/>%sort(data=localt._F_R, target= _FCB1, sorter=&theStudyID incqtl)&#59<br/>data _FCB2&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCB1&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID incqtl&#59<br/>&nbsp&nbsp&nbsp&nbspif incqtl =. then incqtl=9&#59<br/>run&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCB2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCB,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.INCQTL=., 9, t2.incqtl) as X4_SES),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/* test proportion of cohort membes missing SES status<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=_FCB, target=test, vars=%str(&theStudyID, X4_SES))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=test, table=X4_SES)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>/*_FCC comorbidities<br/><br/>*/<br/><br/>/*ICD code list of the comorbidities<br/>[_Note]<br/>the BC code *50B is not included<br/>*/<br/>/*mental conditions (anxiety, depression, bipolar disorder)*/<br/>%let ICD9_MSB_MH = %str('296', '298','300','311')&#59 <br/>%let ICD9_HOSP_MH = %str('3000', '3002', '2960', '2961', '29604', '29614', '2964', '29644', '2965', '2965', '29654', '2966', '2967', '2968', '2962', '2963', '2980', '3004', '311')&#59 <br/>%let ICD10_MH=%str('F40', 'F41', 'F31', 'F32', 'F33', 'F34')&#59<br/>/*Hypertension*/<br/>%let  ICD9_HN= %str('401', '402', '403', '404', '405')&#59<br/>%let ICD10_HN=%str('I10', 'I11', 'I12', 'I13', 'I15')&#59<br/>/*Hyperlipidemia*/<br/>%let ICD9_HL=%str('272')&#59<br/>%let ICD10_HL=%str('E780', 'E782', 'E784', 'E785')&#59<br/>/*Chronic Lung Disease*/<br/>%let ICD9_CL=%str('493', '491', '492', '496')&#59<br/>%let ICD10_CL=%str('J40', 'J42', 'J43', 'J44', 'J45', 'J46')&#59<br/>/*Diabetes*/<br/>%let ICD9_DB=%str('250')&#59<br/>%let ICD10_DB=%str('E10', 'E11', 'E12', 'E13', 'E14')&#59<br/>/*Epilepsy*/<br/>%let ICD9_EP=%str('345')&#59<br/>%let ICD10_EP=%str('G40', 'G41')&#59<br/>/*Ischemic Heart Disease*/<br/>%let ICD9_IH=%str('410', '411', '412', '413', '414')&#59<br/>%let ICD10_IH=%str('I20', 'I21', 'I22', 'I23', 'I24', 'I25')&#59<br/>/*Cancer: 140-172, 174-209, C00-C43, C45-C97*/<br/>/*added according to the new protocol: P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\INITIAL MODEL PLAN FOR DRUMS-Aim-1-GEE-Physician-visitsv_28June_FINAL.docx*/<br/>%let ICD9_CA=%str('140','141','142','143','144','145','146','147','148','149','150','151','152','153','154','155','156','157','158','159','160','161','162','163','164','165','166','167','168','169','170','171','172','174','175','176','177','178','179','180','181','182','183','184','185','186','187','188','189','190','191','192','193','194','195','196','197','198','199','200','201','202','203','204','205','206','207','208','209')&#59 <br/>%let ICD10_CA=%str('C00','C01','C02','C03','C04','C05','C06','C07','C08','C09','C10','C11','C12','C13','C14','C15','C16','C17','C18','C19','C20','C21','C22','C23','C24','C25','C26','C27','C28','C29','C30','C31','C32','C33','C34','C35','C36','C37','C38','C39','C40','C41','C42','C43','C45','C46','C47','C48','C49','C50','C51','C52','C53','C54','C55','C56','C57','C58','C59','C60','C61','C62','C63','C64','C65','C66','C67','C68','C69','C70','C71','C72','C73','C74','C75','C76','C77','C78','C79','C80','C81','C82','C83','C84','C85','C86','C87','C88','C89','C90','C91','C92','C93','C94','C95','C96','C97')&#59 <br/><br/>/*_FCCA the first dx of comorbidities from hopsital file*/<br/>/*_FCCA0 unzip the hospital file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br/>)&#59<br/><br/>/*_FCCA1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCA1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/><br/>/*FCCA2 get the admission date of the first ICD code for each comorbidity*/<br/>&nbsp&nbsp&nbsp&nbsp/*0. Create an empty target file*/<br/>data _FCCA&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_Hosp_DRUMS(data=, theICD9s=, theICD10s=, theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s theICD10s theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select hospital records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_Hosp_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&theICD10s) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &hospdxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select all dx of different dates, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_Hosp_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_Hosp_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &hospdxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_Hosp_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_Hosp_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_Hosp_DRUMS&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HOSP_MH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_MH, theCoMorb=MH_Mental, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HN, theCoMorb=HN_Hypertension, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_HL, theCoMorb=HL_Hyperlipidemia, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CL, theCoMorb=CL_ChronicLungDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_DB, theCoMorb=DB_Diabetes, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_EP, theCoMorb=EP_Eplilepsy, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_IH, theCoMorb=IH_IschemicHeartDz, Target=_FCCA, debug=)&#59<br/>%getComorb_Hosp_DRUMS(data=_FCCA1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheICD10s=&ICD10_CA, theCoMorb=CA_Cancer, Target=_FCCA, debug=)&#59<br/>/*%freq(data=_FCCA, table=CoMorb)&#59*/<br/><br/>/*_FCCB, the first dx of comorbidities from physician service file*/<br/>/*_FCCB0 unzip the physician service file*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/><br/>/*_FCCB1 <br/>Get hospitalization records of patient in data set  _C*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=localt._C,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCB1, <br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*FCCB2 get the service date of the first ICD code for each comorbidity*/<br/>/*0. Create an empty target file*/<br/>data _FCCB&#59<br/>&nbsp&nbsp&nbsp&nbspformat &theStudyID $11. coMorb $20. coMorbDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%Macro getComorb_MSB_DRUMS(data=, theICD9s=,  theCoMorb=, Target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local data theICD9s  theCoMorb Target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. Select physician service records with a matched ICD code*/<br/>&nbsp&nbsp&nbsp&nbspdata getComorb_MSB_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat coMorb $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif diag in: (&theICD9s)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoMorb = symget('theComorb')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &physiciandxdate comorb&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. Select the earliest date of diagnosis,  this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getComorb_MSB_tmp1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getComorb_MSB_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, &physiciandxdate as coMorbDate),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3. Attach results to the target file*/<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getComorb_MSB_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getComorb_MSB_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getComorb_MSB_DRUMS&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_MSB_MH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=MH_Mental, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HN, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HN_Hypertension, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_HL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=HL_Hyperlipidemia, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CL, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CL_ChronicLungDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_DB, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=DB_Diabetes, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_EP, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=EP_Eplilepsy, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_IH, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=IH_IschemicHeartDz, Target=_FCCB, debug=)&#59<br/>%getComorb_MSB_DRUMS(data=_FCCB1, theICD9s=&ICD9_CA, <br/>&nbsp&nbsp&nbsp&nbsptheCoMorb=CA_Cancer, Target=_FCCB, debug=)&#59<br/>/*%freq(data=_FCCB, table=CoMorb)&#59*/<br/><br/>/*_FCCC combine data set _FCCA and data set _FCCB, for each patient, keep the earlist date of comorbidity diagnosis*/<br/>/*1. Combine the data*/<br/>data _FCCC1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCA _FCCB&#59<br/>run&#59<br/>/*2. Select the earliest date of diagnosis, this part is changed so as to have all records of dx, and later used to determine<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhether there are dx between 1 year prior to the index_date, and start date of a specific period*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_FCCC1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCC,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, comorb, coMorbDate),<br/>&nbsp&nbsp&nbsp&nbspgroupby = %str(&theStudyID, comorb)<br/>)&#59<br/>/*%freq(data=_FCCC, table=CoMorb)&#59*/<br/><br/>/*_FCCD number of comorbidity at baseline (within 365 days prior to the studystartdate)*/<br/>/*_FCCD1 <br/>Join data set _FCB, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year prior to the studystartdate. However, patients may have the first diagnosis of comorbidity way earlier than 1 year.<br/>&nbsp&nbsp&nbsp&nbspTherefore the following is to trace back for 100 years. <br/>*/<br/><br/>/*Get the comorbidities before the StudyStartDate*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.StudyStartDate, t2.CoMorb), /*, t2.CoMorbDate*/<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.StudyStartDate-1)<br/>)&#59<br/><br/>/*_FCCD2, count total number of comorbidities at baseline*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.StudyStartDate, count(t1.CoMorb) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.StudyStartDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.StudyStartDate)<br/>)&#59<br/><br/>/*_FCCD3, link the date set _FCB, and date set FCCD2, add N_CoMorb_Baseline to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at baseline, let N_CoMorb_Baseline=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCB,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCD2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCD3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Baseline=., 0, t2.N_CoMorb_Baseline) as N_CoMorb_Baseline),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/><br/>/*_FCCD4, make categories for number of comorbidities at baseline*/<br/>data _FCCD&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD3&#59<br/>&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT =N_CoMorb_Baseline&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Baseline > 3 then X5_NCoMB_Base_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCD, table=X5_NCoMB_Base_CAT)&#59*/<br/><br/>/*_FCCE number of comorbidity at each period*/<br/>/*_FCCE1 <br/>Join data set _FCCD, and data set _FCCC, <br/>[_Note] <br/>The protocol said to trace back for one year. <br/>Question:<br/>However, patients may have the first diagnosis of comorbidity way earlier than 1 year?<br/>*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCC,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate, t2.CoMorb),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t2.CoMorbDate between t1.StudyStartDate-365*1 and t1.SegStartDate-1)<br/>)&#59<br/><br/>/*_FCCE2, count total number of comorbidities for each segment*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID,  t1.SegStartDate, t1.SegEndDate, count(t1.CoMorb) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspGroupby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate),<br/>&nbsp&nbsp&nbsp&nbspOrderby=%str(t1.&theStudyID, t1.SegStartDate, t1.SegEndDate)<br/>)&#59<br/><br/>/*_FCCE3, link the date set _FCCD, and date set FCCE2, add N_CoMorb_Seg to data set _FCB.<br/>&nbsp&nbsp&nbsp&nbspFor those not having comorbidities at each segment, let N_CoMorb_Seg=0.<br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCD,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCE2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCE3,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.N_CoMorb_Seg=., 0, t2.N_CoMorb_Seg) as N_CoMorb_Seg),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCE4, make categories for number of comorbidities at baseline*/<br/>data _FCCE&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE3&#59<br/>&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT =N_CoMorb_Seg&#59<br/>&nbsp&nbsp&nbsp&nbspif  N_CoMorb_Seg > 3 then X6_NCoMB_Seg_CAT = 4&#59<br/>run&#59<br/>/*%freq(data=_FCCE, table=X6_NCoMB_Seg_CAT)&#59*/<br/><br/>/*_FCCF status of each comorbidity at baseline*/<br/>data _FCCF1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCD1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+6) || '_CMB_B_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/>/*_FCCF2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCF2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCF2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID StudyStartDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCF3 link data set _FCCF2 back to _FCCE*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCE,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCF3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCF4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID StudyStartDate<br/>)&#59<br/><br/>/*Replace the missing value in encounter columns with 0*/<br/>data _FCCF&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCF4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_B_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/><br/>/*_FCCG status of each comorbidity at each period*/<br/>data _FCCG1&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCE1&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorb_Short =scan(coMorb, 1, \"_\")&#59<br/>run&#59 <br/>/*%freq(data=_FCCF1, table=coMorb_Short)&#59*/<br/><br/>data coMorbCodes2&#59<br/>&nbsp&nbsp&nbsp&nbspformat coMorb_short $2.&#59<br/>&nbsp&nbsp&nbsp&nbspinput coMorb_short $ @@&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbID=_N_&#59<br/>&nbsp&nbsp&nbsp&nbspcoMorbVar='X' || strip(coMorbID+13) || '_CMB_P_' || coMorb_short&#59 <br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>MH HN HL CL DB EP IH CA<br/>&#59<br/><br/><br/>/*_FCCG2, linke the above two to add the coMorbVars*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCG1,<br/>&nbsp&nbsp&nbsp&nbspt2=coMorbCodes2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.coMorbVar, 1 as CNT),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=coMorb_Short,<br/>&nbsp&nbsp&nbsp&nbsporderby = %str(&theStudyID)<br/>)&#59<br/><br/>/* Transpose data set _FCCG2 to have number of encounters in each column of specialty categories*/<br/>%transpose(<br/>&nbsp&nbsp&nbsp&nbspdata=_FCCG2,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsprowhead =&theStudyID SegStartDate SegEndDate,<br/>&nbsp&nbsp&nbsp&nbspcolhead = coMorbVar,<br/>&nbsp&nbsp&nbsp&nbspcontents=CNT<br/>)&#59<br/><br/>/*_FCCG4 link data set _FCCG2 back to _FCCF*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1= _FCCF,<br/>&nbsp&nbsp&nbsp&nbspt2=_FCCG3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_FCCG4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID SegStartDate SegEndDate<br/>)&#59<br/><br/>/*_FCCG5. Replace the missing value in encounter columns with 0*/<br/>data _FC&#59<br/>&nbsp&nbsp&nbsp&nbspset _FCCG4&#59<br/>&nbsp&nbsp&nbsp&nbsparray theXs  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX21_CMB_P_CA<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to dim(theXs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theXs(i) =. then theXs(i)=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>run&#59<br/><br/>/*_FD. adding variables compatible to the team template<br/>Ref.P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/>%sort(data=_FC, sorter=&theStudyID First_admin_code_date SegStartDate SegEndDate )&#59<br/>data _F&#59<br/>&nbsp&nbsp&nbsp&nbspset _Fc&#59<br/>&nbsp&nbsp&nbsp&nbspformat<br/>&nbsp&nbsp&nbsp&nbspID $11.<br/>&nbsp&nbsp&nbsp&nbspIndex_date yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_DMD $5.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year 8.<br/>&nbsp&nbsp&nbsp&nbspCalendar_year_CAT $11.<br/>&nbsp&nbsp&nbsp&nbspPY best32.<br/>&nbsp&nbsp&nbsp&nbspLOG_PY best32.<br/>&nbsp&nbsp&nbsp&nbspSex1 $3.<br/>&nbsp&nbsp&nbsp&nbspDOB yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStudy_end yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspFollow_up best32.<br/>&nbsp&nbsp&nbsp&nbspPeriod_N 8.<br/>&nbsp&nbsp&nbsp&nbspStop_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspStart_Interval yymmdd10.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind $20.<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second $8.<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims best32.<br/>&nbsp&nbsp&nbsp&nbspNS best32.<br/>&nbsp&nbsp&nbsp&nbspGS best32.<br/>&nbsp&nbsp&nbsp&nbspGenmed best32.<br/>&nbsp&nbsp&nbsp&nbspOnG best32.<br/>&nbsp&nbsp&nbsp&nbspOphtal best32.<br/>&nbsp&nbsp&nbsp&nbspGP BEST32.<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist BEST32.<br/>&nbsp&nbsp&nbsp&nbspUro BEST32.<br/>&nbsp&nbsp&nbsp&nbspOrtho BEST32.<br/>&nbsp&nbsp&nbsp&nbspPSY BEST32.<br/>&nbsp&nbsp&nbsp&nbspDerm BEST32.<br/>&nbsp&nbsp&nbsp&nbspDMD_Ever $5.<br/>&nbsp&nbsp&nbsp&nbspAge Best32. <br/>&nbsp&nbsp&nbsp&nbspSES 8.<br/>&nbsp&nbsp&nbsp&nbspComorb_count Best32.<br/>&nbsp&nbsp&nbsp&nbspMental $10.<br/>&nbsp&nbsp&nbsp&nbspCOPD $10.<br/>&nbsp&nbsp&nbsp&nbspLipid $10.<br/>&nbsp&nbsp&nbsp&nbspHTN $10.<br/>&nbsp&nbsp&nbsp&nbspIHD $10.<br/>&nbsp&nbsp&nbsp&nbspDM $10.<br/>&nbsp&nbsp&nbsp&nbspEpilepsy $10.<br/>&nbsp&nbsp&nbsp&nbspCancer $10.00<br/>&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID First_admin_code_date SegStartDate SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspID=&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbspIndex_date =StudyStartDate&#59/*The studyStartDate is the index_date in my version. It differs from the first_admin_code_year in<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthat for patients < 18 on first_admin date, the StudyStartDate was moved forward to the date of 18th birthday*/  <br/>&nbsp&nbsp&nbsp&nbspif X1_M1_Any = 'yes' then &nbsp&nbsp&nbsp&nbspDMD_No_DMD = 'Yes'&#59else DMD_No_DMD='No'&#59<br/>&nbsp&nbsp&nbsp&nbspCalendar_year = year(SegStartDate)&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( Calendar_year le 1999)  Calendar_year_CAT='1996-1999'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2000 le Calendar_year le 2004)  Calendar_year_CAT='2000-2004'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2005 le Calendar_year le 2009)  Calendar_year_CAT='2005-2009'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2010 le Calendar_year le 2014)  Calendar_year_CAT='2010-2014'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 2015 le Calendar_year le 2018)  Calendar_year_CAT='2015-2018'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise Calendar_year_CAT='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPY=((SegEndDate - SegStartDate) + 1)/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspLOG_PY = log(py)&#59<br/>&nbsp&nbsp&nbsp&nbspsex1 = sex&#59 drop sex&#59 rename sex1=Sex&#59<br/>&nbsp&nbsp&nbsp&nbspDOB = Birth&#59<br/>&nbsp&nbsp&nbsp&nbspStudy_end =StudyEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspFollow_up=((StudyEndDate - StudyStartDate) + 1 )/ 365.24&#59<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then Period_N = 1&#59&nbsp&nbsp&nbsp&nbspelse Period_N+1&#59<br/>&nbsp&nbsp&nbsp&nbspStop_Interval = SegEndDate&#59<br/>&nbsp&nbsp&nbsp&nbspStart_Interval = SegStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M3_Classes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Alemtuzumab')  DMD_No_Ind='Alemtuzumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fingolimod')  DMD_No_Ind='Fingolimod'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Fumarate')  DMD_No_Ind='Dimethyl fumarate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Glatiramer')  DMD_No_Ind='Glatiramer acetate'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'IFNB')  DMD_No_Ind='Beta-interferon'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Natalizumab')  DMD_No_Ind='Natalizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Teriflunomide')  DMD_No_Ind='Teriflunomide'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_Ind='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Daclizumab')  DMD_No_Ind='Daclizumab'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Ocrelizumab ')  DMD_No_Ind='Ocrelizumab '&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_Ind='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspselect  (X1_M2_Generations)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'First')  DMD_No_First_Second='First'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'Second')  DMD_No_First_Second='Second'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 'null')  DMD_No_First_Second='No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise DMD_No_First_Second='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspPhysician_claims = N_Encounters_Total&#59<br/>&nbsp&nbsp&nbsp&nbspNS=N_Encounters_NUS&#59<br/>&nbsp&nbsp&nbsp&nbspGS=N_Encounters_GNS&#59<br/>&nbsp&nbsp&nbsp&nbspGenmed=N_Encounters_INT&#59<br/>&nbsp&nbsp&nbsp&nbspOnG=N_Encounters_ONG&#59<br/>&nbsp&nbsp&nbsp&nbspOphtal=N_Encounters_OPH&#59<br/>&nbsp&nbsp&nbsp&nbspGP=N_Encounters_PCP&#59<br/>&nbsp&nbsp&nbsp&nbspPhysiatrist=N_Encounters_PHY&#59<br/>&nbsp&nbsp&nbsp&nbspUro=N_Encounters_URO&#59<br/>&nbsp&nbsp&nbsp&nbspOrtho=N_Encounters_OTS&#59<br/>&nbsp&nbsp&nbsp&nbspPSY=N_Encounters_PSY&#59<br/>&nbsp&nbsp&nbsp&nbspDerm=N_Encounters_DER&#59<br/>&nbsp&nbsp&nbsp&nbspif X31_M4_WholeFW = 'yes' then DMD_Ever='Yes'&#59else DMD_Ever='No'&#59<br/>&nbsp&nbsp&nbsp&nbspAge=((SegStartDate - birth) + 1 )/ 365.24 &#59<br/>&nbsp&nbsp&nbsp&nbspSES = X4_SES&#59<br/>&nbsp&nbsp&nbsp&nbspif X6_NCoMB_Seg_CAT < 3 then Comorb_count =X6_NCoMB_Seg_CAT&#59 else Comorb_count=3&#59<br/>&nbsp&nbsp&nbsp&nbspif X14_CMB_P_MH=1 then Mental='Presence'&#59 else Mental= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X15_CMB_P_HN=1 then COPD='Presence'&#59 else COPD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X17_CMB_P_CL=1 then Lipid='Presence'&#59 else Lipid= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X16_CMB_P_HL=1 then HTN='Presence'&#59 else HTN= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X20_CMB_P_IH=1 then IHD='Presence'&#59 else IHD= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X18_CMB_P_DB=1 then DM='Presence'&#59 else DM= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X19_CMB_P_EP=1 then Epilepsy='Presence'&#59 else Epilepsy= 'Absence'&#59<br/>&nbsp&nbsp&nbsp&nbspif X21_CMB_P_CA=1 then Cancer='Presence'&#59 else Cancer= 'Absence'&#59<br/>run&#59<br/><br/><br/>%vbsZip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=&localTargetPath, <br/>&nbsp&nbsp&nbsp&nbspzipFile=_F.zip, <br/>&nbsp&nbsp&nbsp&nbspsrcFile=_F.sas7bdat, <br/>&nbsp&nbsp&nbsp&nbspsrcDir=<br/>)&#59<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-WPm9dCxuJO5FP9C3"}]},{"idx":"CodeTask-2tnXuEPkTdQakTBf","name":"AIM1 Report Dummy","NodeDescription":"///t<br/>///s<br/>/*DRUMS******************************************************************************************<br/>Site: Saskatchewan<br/>Analyst: Shenzhen YAO<br/><br/>The following program was adapted from the SAS code provided by the DRUMS team in the mail from <br/><huahshin.ng@ubc.ca> to <shy516@mail.usask.ca> on 2019-06-28<br/>The original code file was saved at:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot<br/>************************************************************************************************/<br/>data _null_&#59run&#59<br/><br/>/*Routing SAS log to an external file --Shenzhen 2019-06-30*/<br/>%let Aim1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Dummy\\&#59<br/>%let theLogFile=&Aim1ReportPath.drums_log.txt&#59<br/>%put >>> theLogFile= &theLogFile&#59<br/>filename theLog \"&theLogFile\"&#59<br/>proc printto log=theLog&#59run&#59<br/><br/>/*define the source data (either the dummy data, or the real data) -- Shenzhen 2019-06-30*/<br/>%let theData=DRUMS_Dummy&#59<br/><br/>/*Part 0. Import data**************************************************/<br/>/*PROC IMPORT DATAFILE = 'DUMMY DATA FOR DRUMS MSP.CSV' OUT = DRUMS DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let srcPath = P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\&#59<br/>%let srcFile = DUMMY DATA FOR DRUMS MSP.CSV&#59<br/>%let srcFull = &srcPath.&srcFile&#59<br/>%put >>> srcFull= &srcFull&#59<br/><br/>/*this part is to import the dummy data from the csv file to a SAS data set<br/>&nbsp&nbsp&nbsp&nbspIt'll only work when theData = DRUMS_Dummy (case insensitive). <br/>&nbsp&nbsp&nbsp&nbspThis is to prevent confusion when load dummy or real data. <br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190702<br/>*/<br/>%macro getDummyData(src=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local src&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %lowcase(&src) = drums_dummy %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPROC IMPORT DATAFILE = \"&srcFull\" OUT = &src DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getDummyData&#59<br/>%getDummyData(src=&theData)&#59<br/><br/>/*******end of the current Part ***************************************/<br/><br/>/*Part A. Summary 1 & 2**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET &theData&#59 WHERE PERIOD_N = 1&#59 RUN&#59<br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 ODS OUTPUT MOMENTS = SUMMARY1 QUANTILES = SUMMARY2&#59RUN&#59<br/>DATA SUMMARY1&#59 SET SUMMARY1&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*PROC EXPORT DATA = SUMMARY1 OUTFILE = \"MENAS_SD_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY2 OUTFILE = \"MEDIAN_IQR_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum1= &Aim1ReportPath.MEANS_SD_ALL MSP.CSV&#59 /*changing 'MENAS' to 'MEANS'*/<br/>%let OutCSV_Sum2 = &Aim1ReportPath.MEDIAN_IQR_ALL MSP.CSV&#59<br/>%put >>> OutCSV_Sum1= &OutCSV_Sum1&#59<br/>%put >>> OutCSV_Sum2= &OutCSV_Sum2&#59<br/>PROC EXPORT DATA =  SUMMARY1 OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>PROC EXPORT DATA =  SUMMARY2 OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part B. Summary 3 & 4**************************************************/<br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59<br/>DATA SUMMARY3&#59 SET SUMMARY3&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY4&#59 SET SUMMARY4&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY3 OUTFILE = \"MENAS_SD_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY4 OUTFILE = \"MEDIAN_IQR_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum3= &Aim1ReportPath.MEANS_SD_DMD_EVER MSP.CSV&#59<br/>%let OutCSV_Sum4 = &Aim1ReportPath.MEDIAN_IQR_DMD_EVER MSP.CSV&#59<br/>%put >>>OutCSV_Sum3=  &OutCSV_Sum3&#59<br/>%put >>>OutCSV_Sum4 = &OutCSV_Sum4&#59<br/>PROC EXPORT DATA = SUMMARY3 OUTFILE = \"&OutCSV_Sum3\" DBMS = CSV REPLACE&#59 RUN&#59<br/>PROC EXPORT DATA = SUMMARY4 OUTFILE = \"&OutCSV_Sum4\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part C. Tabel 1**************************************************/<br/>PROC FREQ DATA = DRUMS_BASELINE&#59 <br/>TABLE SEX*DMD_EVER SES*DMD_EVER COMORB_COUNT*DMD_EVER MENTAL*DMD_EVER HTN*DMD_EVER <br/>      LIPID*DMD_EVER COPD*DMD_EVER DM*DMD_EVER EPILEPSY*DMD_EVER IHD*DMD_EVER CANCER*DMD_EVER CALENDAR_YEAR_CAT*DMD_EVER /NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE1&#59RUN&#59<br/>DATA TABLE1&#59 SET TABLE1&#59 WHERE _TYPE_ = \"11\"&#59 VAR_TEMP = CATT(SEX,SES,COMORB_COUNT,MENTAL,HTN,LIPID,COPD,DM,EPILEPSY,IHD,CANCER,CALENDAR_YEAR_CAT)&#59 VAR_NAMES = COMPRESS(VAR_TEMP,'.')&#59<br/>DROP _TYPE_ _TABLE_ SEX SES COMORB_COUNT MENTAL HTN LIPID COPD DM EPILEPSY IHD CANCER CALENDAR_YEAR_CAT VAR_TEMP&#59 RUN&#59<br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"CROSS_TABLE MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Table1= &Aim1ReportPath.CROSS_TABLE MSP.CSV&#59<br/>PROC EXPORT DATA = TABLE1 OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part D. Summary 5 & 6**************************************************/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_NO_IND/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE2&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE2&#59 SET TABLE2&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_Ind COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>PROC UNIVARIATE DATA = TABLE2&#59VAR COUNTS&#59 CLASS DMD_No_Ind&#59 ODS OUTPUT MOMENTS = SUMMARY5&#59RUN&#59<br/>DATA SUMMARY5&#59 SET SUMMARY5&#59 KEEP DMD_No_Ind Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY5 OUTFILE = \"EVER_DMD_IND MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum5= &Aim1ReportPath.EVER_DMD_IND MSP.CSV&#59<br/>%put >>> OutCSV_Sum5 = &OutCSV_Sum5&#59<br/>PROC EXPORT DATA = SUMMARY5 OUTFILE = \"&OutCSV_Sum5\" DBMS = CSV REPLACE&#59 RUN&#59<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_No_First_Second/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE3&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE3&#59 SET TABLE3&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_First_Second COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>PROC UNIVARIATE DATA = TABLE3&#59VAR COUNTS&#59 CLASS DMD_No_First_Second&#59 ODS OUTPUT MOMENTS = SUMMARY6&#59RUN&#59<br/>DATA SUMMARY6&#59 SET SUMMARY6&#59 KEEP DMD_No_First_Second Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY6 OUTFILE = \"EVER_DMD_First_Second MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum6= &Aim1ReportPath.EVER_DMD_First_Second MSP.CSV&#59<br/>%put >>> OutCSV_Sum6 = &OutCSV_Sum6&#59<br/>PROC EXPORT DATA = SUMMARY6 OUTFILE = \"&OutCSV_Sum6\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part E. PDF**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET DRUMS_BASELINE&#59AGE_INT = ROUND(AGE)&#59 RUN&#59<br/>/*ODS PDF FILE = \"BARPLOT_AGE_AT_INDEX_INTEGER.PDF\" STARTPAGE=NEVER&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutPDF =  &Aim1ReportPath.BARPLOT_AGE_AT_INDEX_INTEGER.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Routing SAS log back to the default place*/<br/>proc printto&#59 run&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-WPm9dCxuJO5FP9C3"}]},{"idx":"CodeTask-K3AW7UOvk3cdXoBp","name":"H_AIM1 Real Report_any","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>/*DRUMS******************************************************************************************<br/>Site: Saskatchewan<br/>Analyst: Shenzhen YAO<br/><br/>The following program was adapted from the SAS code provided by the DRUMS team in the mail from <br/><huahshin.ng@ubc.ca> to <shy516@mail.usask.ca> on 2019-06-28<br/>The original code file was saved at:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot<br/>************************************************************************************************/<br/>%let FData=_F_any&#59<br/><br/>/*Routing SAS log to an external file --Shenzhen 2019-06-30*/<br/>/*%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Dummy\\&#59*/<br/>%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Real&Fdata\\&#59<br/>%let theLogFile=&targetPilot1ReportPath.drums_log.txt&#59<br/>%put >>> theLogFile= &theLogFile&#59<br/>filename theLog \"&theLogFile\"&#59<br/>/*proc printto log=theLog&#59run&#59*/<br/><br/>/*Part 0. Import data**************************************************/<br/>/*Get the real data*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\&FData..zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(&FData..sas7bdat)<br/>)&#59<br/>%print(data=&FData.)<br/><br/>/*use the real data instead -- Shenzhen 20190702*/<br/>%let theData=&FData.&#59<br/><br/>/*get the dummy data*/<br/>/*PROC IMPORT DATAFILE = 'DUMMY DATA FOR DRUMS MSP.CSV' OUT = DRUMS DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let srcDummyPath = P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\&#59<br/>%let srcFile = DUMMY DATA FOR DRUMS MSP.CSV&#59<br/>%let srcFull = &srcDummyPath.&srcFile&#59<br/>%put >>> srcFull= &srcFull&#59<br/>/*PROC IMPORT DATAFILE = \"&srcFull\" OUT = DRUMSDUMMY DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*/<br/><br/>/*this part is to import the dummy data from the csv file to a SAS data set<br/>&nbsp&nbsp&nbsp&nbspIt'll only work when theData = DRUMS_Dummy (case insensitive). <br/>&nbsp&nbsp&nbsp&nbspThis is to prevent confusion when load dummy or real data. <br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190702<br/>*/<br/>%macro getDummyData(src=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local src&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %lowcase(&src) = drums_dummy %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPROC IMPORT DATAFILE = \"&srcFull\" OUT = &src DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getDummyData&#59<br/>%getDummyData(src=&theData)&#59<br/><br/>/*A file is created to map the two datasets:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/>/*******end of the current Part ***************************************/<br/><br/><br/>/*Part A. Summary 1 & 2**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET &theData&#59 WHERE PERIOD_N = 1&#59 RUN&#59 /*original line*/<br/>/*DATA DRUMS_BASELINE&#59 SET &theData&#59 AGE_INT = Round(Age)&#59AGE = AGE&#59 FOLLOW_UP=FOLLOW_UP&#59WHERE PERIOD_N = 1&#59 RUN&#59 */<br/>/*add integer age and follow up*/<br/><br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 ODS OUTPUT MOMENTS = SUMMARY1 QUANTILES = SUMMARY2&#59RUN&#59/*original line*/<br/>DATA SUMMARY1&#59 SET SUMMARY1&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*Add number of cohort members in summary1*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp01 as<br/>&nbsp&nbsp&nbsp&nbspselect count(distinct ID) as Npt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE&#59<br/>quit&#59<br/>Proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table SUMMARY1_withNpt as<br/>&nbsp&nbsp&nbsp&nbspselect t1.*, t2.Npt<br/>&nbsp&nbsp&nbsp&nbspfrom summary1 t1 cross join _tmp01 t2<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*report # of distinct individuals behind the median, Q1 and Q3*/<br/>%macro getDistinctNPt (data=, sumtable=, target=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data sumtable target nRows theVar debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a distinct list of varnames*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp2 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct varname<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the # of vars in getdistinctNpt_tmp2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect count(*) format 20. into :nRows <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspfrom getdistinctNpt_tmp2&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then %put >>> nRows = &nRows&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*loop for each varname, from summary 2, get rows with the current varname*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nRows&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a slice of the varnames from getdistinctNpt_tmp2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getdistinctNpt_tmp2 (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theVar', strip(VarName))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then  %put >>> the current variable =  &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the records in the summary table (e.g., summary 2) of the current VarName*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(Varname)=symget('theVar')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*count the distinct number of patients of the selected var, and by levels of the selected var&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp5 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(distinct t1.ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &data t1 inner join getdistinctNpt_tmp4 t2 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspon (t1.&theVar = t2.estimate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroup by t2.Varname, t2.Quantile<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*append results into the target table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getdistinctNpt_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getdistinctNpt_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getdistinctNpt&#59<br/>%getDistinctNPt(data=DRUMS_BASELINE, sumtable=SUMMARY2, target=SUMMARY2_withNPT, debug=)&#59<br/><br/><br/>/*PROC EXPORT DATA = SUMMARY1 OUTFILE = \"MENAS_SD_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY2 OUTFILE = \"MEDIAN_IQR_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum1= &targetPilot1ReportPath.MEANS_SD_ALL MSP.CSV&#59<br/>%let OutCSV_Sum2 = &targetPilot1ReportPath.MEDIAN_IQR_ALL MSP.CSV&#59<br/>%put >>> OutCSV_Sum1= &OutCSV_Sum1&#59<br/>%put >>> OutCSV_Sum2= &OutCSV_Sum2&#59<br/>/*PROC EXPORT DATA =  SUMMARY1 OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY1_withNPT OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*PROC EXPORT DATA =  SUMMARY2 OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY2_withNPT OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59 /*use the data set with N patients instead*/<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part B. Summary 3 & 4**************************************************/<br/>/*PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59*/<br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59<br/><br/>DATA SUMMARY3&#59 SET SUMMARY3&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>DATA SUMMARY4&#59 SET SUMMARY4&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/><br/>/*PROC EXPORT DATA = SUMMARY3 OUTFILE = \"MENAS_SD_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY4 OUTFILE = \"MEDIAN_IQR_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum3= &targetPilot1ReportPath.MEANS_SD_DMD_EVER MSP.CSV&#59<br/>%let OutCSV_Sum4 = &targetPilot1ReportPath.MEDIAN_IQR_DMD_EVER MSP.CSV&#59<br/>%put >>>OutCSV_Sum3=  &OutCSV_Sum3&#59<br/>%put >>>OutCSV_Sum4 = &OutCSV_Sum4&#59<br/>PROC EXPORT DATA = SUMMARY3 OUTFILE = \"&OutCSV_Sum3\" DBMS = CSV REPLACE&#59 RUN&#59/*original line*/<br/>PROC EXPORT DATA = SUMMARY4 OUTFILE = \"&OutCSV_Sum4\" DBMS = CSV REPLACE&#59 RUN&#59/*original line*/<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part C. Tabel 1**************************************************/<br/>PROC FREQ DATA = DRUMS_BASELINE&#59 <br/>TABLE SEX*DMD_EVER SES*DMD_EVER COMORB_COUNT*DMD_EVER MENTAL*DMD_EVER HTN*DMD_EVER <br/>      LIPID*DMD_EVER COPD*DMD_EVER DM*DMD_EVER EPILEPSY*DMD_EVER IHD*DMD_EVER CANCER*DMD_EVER CALENDAR_YEAR_CAT*DMD_EVER /NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE1&#59RUN&#59<br/>DATA TABLE1&#59 SET TABLE1&#59 WHERE _TYPE_ = \"11\"&#59 VAR_TEMP = CATT(SEX,SES,COMORB_COUNT,MENTAL,HTN,LIPID,COPD,DM,EPILEPSY,IHD,CANCER,CALENDAR_YEAR_CAT)&#59 VAR_NAMES = COMPRESS(VAR_TEMP,'.')&#59<br/>DROP _TYPE_ _TABLE_ SEX SES COMORB_COUNT MENTAL HTN LIPID COPD DM EPILEPSY IHD CANCER CALENDAR_YEAR_CAT VAR_TEMP&#59 RUN&#59<br/><br/>/*As the source data is from Baseline, each cohort member only appears once. As such, the # in the var 'Frequency' is the # of distinct patients<br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190703*/<br/><br/>/*The Table_1 contains small cells and should be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp1. As these are cross tables, a small cell, even suppressed, can be back calculated horizontally or vertically. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis means that once a small cell occurs, the whole cross table has to be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp[Comment:] Seems that we have to apply for releasing small cell results. Or there will be many suppressions, making Table 1 not informative.<br/>&nbsp&nbsp&nbsp&nbsp2. the numeric values should be changed to char values, so as to indicate those suppressed<br/>*/<br/>/*1. First, transpose the data so that the freq by DMD_EVER groups are listed in the same row. <br/>&nbsp&nbsp&nbsp&nbspThat way, it'll be easier to sum the total horizontally, and vertically. <br/>&nbsp&nbsp&nbsp&nbspThese summaries will be used to determine suppression and masking. <br/>*/<br/>proc sort data=TABLE1 out=_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbspby table  var_names &#59<br/>run&#59<br/>proc transpose data = _tmp1 out=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar Frequency&#59<br/>run&#59<br/>/*2. For each table, sort by freq in the DMD_EVER = Yes group. In this cohort,  the Yes group is more likely to have small cells.<br/>&nbsp&nbsp&nbsp&nbspFor rows of the same table, those with the smallest freq comes first<br/>*/<br/>proc sort data=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>run&#59<br/>/*3. Next, the number of levels of the current row will be counted. That way, if a small cell exists, we'll know how far is<br/>&nbsp&nbsp&nbsp&nbspthe current row away from the small cell. <br/>&nbsp&nbsp&nbsp&nbspThe suppression rule stresses that at least two levels should be suppressed. The calculation in this part helps identify <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe level next the level with the small cell. Such next level will be suppressed in the following steps.   <br/>*/<br/>data _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>&nbsp&nbsp&nbsp&nbspif first.table then N_levels =1&#59<br/>&nbsp&nbsp&nbsp&nbspelse N_levels +1&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>run&#59 <br/>/*3. Now, perform the suppression and masking for small cells.<br/>&nbsp&nbsp&nbsp&nbspSuppression is to suppress the cell with 1-5 individuals<br/>&nbsp&nbsp&nbsp&nbspMasking is to mask the neighboring cells of the small cell (both vertical and horizontal), so that the suppressed cannot be back calculated<br/>*/<br/>data _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp/*initially for each table, set everything to 0*/<br/>&nbsp&nbsp&nbsp&nbspif first.table then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1=0&#59sum_sup_v2=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h=sum_sup_v1 + sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*For small cells (Freq between 1 and 5):<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the suppressed freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked nubmer is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 's' standing for suppressed<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (suppress the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4) Indicate that a suppression starts (Sup=1)<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp/*approved for reporting small cells, no need to suppress*/<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+ Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Within the same table, the small cells always comes first (as level 1). To suppress at least two levels, level 2 should<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso be suppressed.However, level 3 does not have, unless the totally suppressed/masked is still < 6. So starting from level 3, the Suppression will be raisded <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(let Sup return to the value of 0). <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif N_levels > 2 and sum_sup_v1 > 5 and sum_sup_v2> 5 and sum_sup_h > 5 then sup=0&#59else sup+0&#59<br/>&nbsp&nbsp&nbsp&nbsp/*In the current level (current row), if suppression occurs (Sup=1), the neighboring column should be masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo mask the neighboring cell in the same row: <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the masked freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked number is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 'm' standing for masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (mask the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe above 3 actions are however only to take when the neighboring cell itself is not suppressed. Otherwise there is no need to mask again <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif sup=1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s1 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s2 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*lastly, when the current row is required for suppressing or masking, calculate the overall sum of suppressed/masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof the current table*/<br/>&nbsp&nbsp&nbsp&nbspif s1 ne '' and s2 ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h + sum_sup_v1+sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*Finally, rearrange the table so as to be conform with the orignal requirement*/<br/>data _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'Yes'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =2 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep Table DMD_Ever Frequency Var_Names Suppress_Mark&#59<br/>run&#59<br/>/*We can repeat the above for the column missing. but for SK data, there is no missing values. So the column will be simply added*/<br/>data Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspretain Table DMD_Ever Frequency Missing VAR_NAMES&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspMissing=.&#59<br/>run&#59<br/>/*Sort the tables by original levels*/<br/>proc sort data=Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>run&#59<br/><br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"CROSS_TABLE MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Table1= &targetPilot1ReportPath.CROSS_TABLE MSP.CSV&#59<br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-07-03*/<br/>PROC EXPORT DATA = Table1_Suppressed OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part D. Summary 5 & 6**************************************************/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_NO_IND/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE2&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE2&#59 SET TABLE2&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_Ind COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE2&#59VAR COUNTS&#59 CLASS DMD_No_Ind&#59 ODS OUTPUT MOMENTS = SUMMARY5&#59RUN&#59<br/>DATA SUMMARY5&#59 SET SUMMARY5&#59 KEEP DMD_No_Ind Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY5 OUTFILE = \"EVER_DMD_IND MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/><br/>/*What is it in sum5? is it about # of distinct patients ever received DMD per DMD class? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test1 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_Ind&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test1 generates the same results as in summary 5 -- Shenzhen 20190703*/<br/><br/>%let OutCSV_Sum5= &targetPilot1ReportPath.EVER_DMD_IND MSP.CSV&#59<br/>%put >>> OutCSV_Sum5 = &OutCSV_Sum5&#59<br/>PROC EXPORT DATA = SUMMARY5 OUTFILE = \"&OutCSV_Sum5\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_No_First_Second/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE3&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE3&#59 SET TABLE3&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_First_Second COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table3 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 6 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE3&#59VAR COUNTS&#59 CLASS DMD_No_First_Second&#59 ODS OUTPUT MOMENTS = SUMMARY6&#59RUN&#59<br/>DATA SUMMARY6&#59 SET SUMMARY6&#59 KEEP DMD_No_First_Second Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*What is it in sum6? is it about # of distinct patients ever received DMD per generation? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test2 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_First_Second&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test2 generates the same results as in summary 6 -- Shenzhen 20190703*/<br/><br/>/*PROC EXPORT DATA = SUMMARY6 OUTFILE = \"EVER_DMD_First_Second MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum6= &targetPilot1ReportPath.EVER_DMD_First_Second MSP.CSV&#59<br/>%put >>> OutCSV_Sum6 = &OutCSV_Sum6&#59<br/>PROC EXPORT DATA = SUMMARY6 OUTFILE = \"&OutCSV_Sum6\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part E. PDF**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET DRUMS_BASELINE&#59AGE_INT = ROUND(AGE)&#59 RUN&#59<br/>/*ODS PDF FILE = \"BARPLOT_AGE_AT_INDEX_INTEGER.PDF\" STARTPAGE=NEVER&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGE_AT_INDEX_INTEGER.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/><br/><br/><br/>/*This part seems to have # of patients by Age_INT, overall and by DMD_EVER group. <br/>&nbsp&nbsp&nbsp&nbspAs it is from baseline, each cohort member only appear once. As such, the # of frequency is the # of distinct patients*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp11 as<br/>&nbsp&nbsp&nbsp&nbspselect AGE_INT, DMD_EVER, count(AGE_INT) as N_pt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE<br/>&nbsp&nbsp&nbsp&nbspgroup by AGE_INT ,DMD_EVER<br/>&nbsp&nbsp&nbsp&nbsporder by AGE_INT<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>proc transpose data = _tmp11 out=_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspby AGE_INT&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar N_pt&#59<br/>run&#59<br/>data _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspNpt_Total = sum(Yes, No)&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbspdrop _name_&#59<br/>run&#59<br/><br/>data AgeDist_ForPDF_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_No ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_No < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_Yes ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*create an additional table for age distributions*/<br/>%let OutCSV_AgeDist= &targetPilot1ReportPath.AgeDist.CSV&#59<br/>PROC EXPORT DATA = AgeDist_ForPDF_Suppressed OUTFILE = \"&OutCSV_AgeDist\" DBMS = CSV REPLACE&#59 RUN&#59<br/><br/>/*******end of the current Part ***************************************/<br/><br/>/*Part F, by age groups*/<br/><br/><br/><br/>/*end of this part**/<br/>DATA DRUMS_BASELINE2&#59 <br/>&nbsp&nbsp&nbsp&nbspSET DRUMS_BASELINE&#59<br/>&nbsp&nbsp&nbsp&nbspformat AGE_GRP $10.&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT le 30)  AGE_GRP='00-30'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 31 le AGE_INT le 35)  AGE_GRP='31-35'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 36 le AGE_INT le 40)  AGE_GRP='36-40'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 41 le AGE_INT le 45)  AGE_GRP='41-45'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 46 le AGE_INT le 50)  AGE_GRP='46-50'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 51 le AGE_INT le 55)  AGE_GRP='51-55'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 56 le AGE_INT le 60)  AGE_GRP='56-60'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 61 le AGE_INT le 65)  AGE_GRP='61-65'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 66 le AGE_INT le 70)  AGE_GRP='66-70'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 71 le AGE_INT le 75)  AGE_GRP='71-75'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 76 le AGE_INT le 80)  AGE_GRP='76-80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT gt 80)  AGE_GRP='>80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise AGE_GRP='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>RUN&#59<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGEGROUP_AT_INDEX.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGEGROUP AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/>/*Routing SAS log back to the default place*/<br/>proc printto&#59 run&#59<br/>s///<br/>t///","children":[{"idx":"CodeTask-2Dj6PPmmhhvhxjXh","name":"Q H_AIM1","NodeDescription":"///t<br/>///s<br/><br/>/*if look at DMD_EVER, */<br/>%freq(data=DRUMS_BASELINE, table=DMD_EVER)&#59<br/><br/>/*1885 ever received a DMD during follow up, 3472 not*/<br/><br/>/*if look at DMD_No_First_Second*/<br/>data test2&#59<br/>&nbsp&nbsp&nbsp&nbspset  _F&#59<br/>&nbsp&nbsp&nbsp&nbspif DMD_EVER='Yes'&#59<br/>run&#59<br/><br/><br/>/*For those ever received a DMD during follow up, how many had first gen, how many ever had second gen, <br/>&nbsp&nbsp&nbsp&nbsphow many ever had unexposed period */<br/><br/>/*method 1*/<br/>%distinct(data=test2, target=test3, vars=%str(ID, DMD_No_First_Second))&#59<br/>%freq(data=test3, table = DMD_No_First_Second)&#59<br/><br/>/*method 2, same */<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_No_First_Second/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE3&#59RUN&#59<br/>ODS results on&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-K3AW7UOvk3cdXoBp"}]},{"idx":"CodeTask-si5WW4kgeXWzQqg2","name":"H_AIM1 Real Report -backup Copy","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>/*DRUMS******************************************************************************************<br/>Site: Saskatchewan<br/>Analyst: Shenzhen YAO<br/><br/>The following program was adapted from the SAS code provided by the DRUMS team in the mail from <br/><huahshin.ng@ubc.ca> to <shy516@mail.usask.ca> on 2019-06-28<br/>The original code file was saved at:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot<br/>************************************************************************************************/<br/><br/>/*Routing SAS log to an external file --Shenzhen 2019-06-30*/<br/>/*%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Dummy\\&#59*/<br/>%let targetPilot1ReportPath =P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\Real\\&#59<br/>%let theLogFile=&targetPilot1ReportPath.drums_log.txt&#59<br/>%put >>> theLogFile= &theLogFile&#59<br/>filename theLog \"&theLogFile\"&#59<br/>/*proc printto log=theLog&#59run&#59*/<br/><br/>/*Part 0. Import data**************************************************/<br/>/*Get the real data*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\_F.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(_F.sas7bdat)<br/>)&#59<br/>%print(data=_F)<br/><br/>/*use the real data instead -- Shenzhen 20190702*/<br/>%let theData=_F&#59<br/><br/>/*get the dummy data*/<br/>/*PROC IMPORT DATAFILE = 'DUMMY DATA FOR DRUMS MSP.CSV' OUT = DRUMS DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let srcDummyPath = P:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\AIM1 Pilot\\&#59<br/>%let srcFile = DUMMY DATA FOR DRUMS MSP.CSV&#59<br/>%let srcFull = &srcDummyPath.&srcFile&#59<br/>%put >>> srcFull= &srcFull&#59<br/>/*PROC IMPORT DATAFILE = \"&srcFull\" OUT = DRUMSDUMMY DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59*/<br/><br/>/*this part is to import the dummy data from the csv file to a SAS data set<br/>&nbsp&nbsp&nbsp&nbspIt'll only work when theData = DRUMS_Dummy (case insensitive). <br/>&nbsp&nbsp&nbsp&nbspThis is to prevent confusion when load dummy or real data. <br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190702<br/>*/<br/>%macro getDummyData(src=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local src&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %lowcase(&src) = drums_dummy %then %do&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspPROC IMPORT DATAFILE = \"&srcFull\" OUT = &src DBMS = CSV REPLACE&#59GUESSINGROWS=MAX&#59 RUN&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getDummyData&#59<br/>%getDummyData(src=&theData)&#59<br/><br/>/*A file is created to map the two datasets:<br/>P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports\\AIM 1 Pilot\\map data structure dummy and _F 20190630.xlsx<br/>*/<br/><br/>/*******end of the current Part ***************************************/<br/><br/>/*Part A. Summary 1 & 2**************************************************/<br/>/*DATA DRUMS_BASELINE&#59 SET &theData&#59 WHERE PERIOD_N = 1&#59 RUN&#59*/ /*original line*/<br/>DATA DRUMS_BASELINE&#59 SET &theData&#59 AGE_INT = Round(Age)&#59AGE = AGE&#59 FOLLOW_UP=FOLLOW_UP&#59WHERE PERIOD_N = 1&#59 RUN&#59 /*add integer age and follow up*/<br/><br/>/*PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 ODS OUTPUT MOMENTS = SUMMARY1 QUANTILES = SUMMARY2&#59RUN&#59*//*original line*/<br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 ODS OUTPUT MOMENTS = SUMMARY1 QUANTILES = SUMMARY2&#59RUN&#59<br/>DATA SUMMARY1&#59 SET SUMMARY1&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/><br/>/*Add number of cohort members in summary1*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp01 as<br/>&nbsp&nbsp&nbsp&nbspselect count(distinct ID) as Npt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE&#59<br/>quit&#59<br/>Proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table SUMMARY1_withNpt as<br/>&nbsp&nbsp&nbsp&nbspselect t1.*, t2.Npt<br/>&nbsp&nbsp&nbsp&nbspfrom summary1 t1 cross join _tmp01 t2<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>DATA SUMMARY2&#59 SET SUMMARY2&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/><br/>/*report # of distinct individuals behind the median, Q1 and Q3*/<br/>%macro getDistinctNPt (data=, sumtable=, target=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local data sumtable target nRows theVar debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*create an empty table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a distinct list of varnames*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp2 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct varname<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the # of vars in getdistinctNpt_tmp2*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect count(*) format 20. into :nRows <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspfrom getdistinctNpt_tmp2&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then %put >>> nRows = &nRows&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*loop for each varname, from summary 2, get rows with the current varname*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nRows&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get a slice of the varnames from getdistinctNpt_tmp2*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getdistinctNpt_tmp2 (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theVar', strip(VarName))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug=1 %then  %put >>> the current variable =  &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the records in the summary table (e.g., summary 2) of the current VarName*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getdistinctNpt_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &sumtable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(Varname)=symget('theVar')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*count the distinct number of patients of the selected var, and by levels of the selected var&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc sql&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcreate table getdistinctNpt_tmp5 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcount(distinct t1.ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &data t1 inner join getdistinctNpt_tmp4 t2 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspon (t1.&theVar = t2.estimate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroup by t2.Varname, t2.Quantile<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspquit&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*append results into the target table*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target getdistinctNpt_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getdistinctNpt_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend getdistinctNpt&#59<br/>%getDistinctNPt(data=DRUMS_BASELINE, sumtable=SUMMARY2, target=SUMMARY2_withNPT, debug=)&#59<br/><br/><br/>/*PROC EXPORT DATA = SUMMARY1 OUTFILE = \"MENAS_SD_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY2 OUTFILE = \"MEDIAN_IQR_ALL MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum1= &targetPilot1ReportPath.MEANS_SD_ALL MSP.CSV&#59<br/>%let OutCSV_Sum2 = &targetPilot1ReportPath.MEDIAN_IQR_ALL MSP.CSV&#59<br/>%put >>> OutCSV_Sum1= &OutCSV_Sum1&#59<br/>%put >>> OutCSV_Sum2= &OutCSV_Sum2&#59<br/>/*PROC EXPORT DATA =  SUMMARY1 OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY1_withNPT OUTFILE = \"&OutCSV_Sum1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*PROC EXPORT DATA =  SUMMARY2 OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA =  SUMMARY2_withNPT OUTFILE = \"&OutCSV_Sum2\" DBMS = CSV REPLACE&#59 RUN&#59 /*use the data set with N patients instead*/<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part B. Summary 3 & 4**************************************************/<br/>/*PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59*/<br/>PROC UNIVARIATE DATA = DRUMS_BASELINE&#59VAR AGE FOLLOW_UP&#59 CLASS DMD_EVER&#59 ODS OUTPUT MOMENTS = SUMMARY3 QUANTILES = SUMMARY4&#59RUN&#59<br/><br/>DATA SUMMARY3&#59 SET SUMMARY3&#59 WHERE LABEL1 IN (\"Mean\",\"Std Deviation\")&#59 DROP LABEL2 CVALUE2 NVALUE2&#59 RUN&#59<br/>/*Add number of cohort members to summary3*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp02 as<br/>&nbsp&nbsp&nbsp&nbspselect DMD_EVER, count(distinct ID) as Npt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_EVER<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/>Proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table SUMMARY3_withNpt as<br/>&nbsp&nbsp&nbsp&nbspselect t1.*, t2.Npt<br/>&nbsp&nbsp&nbsp&nbspfrom summary3 t1 inner join _tmp02 t2<br/>&nbsp&nbsp&nbsp&nbspon (t1.DMD_EVER=t2.DMD_EVER)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>DATA SUMMARY4&#59 SET SUMMARY4&#59 WHERE QUANTILE IN (\"50% Median\",\"25% Q1\",\"75% Q3\")&#59 RUN&#59<br/>/*in Summary table 4, add number of distinct patients*/<br/>%getDistinctNPt(data=DRUMS_BASELINE, sumtable=SUMMARY4, target=SUMMARY4_withNPT)&#59<br/><br/>/*PROC EXPORT DATA = SUMMARY3 OUTFILE = \"MENAS_SD_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>/*PROC EXPORT DATA = SUMMARY4 OUTFILE = \"MEDIAN_IQR_DMD_EVER MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum3= &targetPilot1ReportPath.MEANS_SD_DMD_EVER MSP.CSV&#59<br/>%let OutCSV_Sum4 = &targetPilot1ReportPath.MEDIAN_IQR_DMD_EVER MSP.CSV&#59<br/>%put >>>OutCSV_Sum3=  &OutCSV_Sum3&#59<br/>%put >>>OutCSV_Sum4 = &OutCSV_Sum4&#59<br/>/*PROC EXPORT DATA = SUMMARY3 OUTFILE = \"&OutCSV_Sum3\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA = SUMMARY3_withNPT OUTFILE = \"&OutCSV_Sum3\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY4 OUTFILE = \"&OutCSV_Sum4\" DBMS = CSV REPLACE&#59 RUN&#59*//*original line*/<br/>PROC EXPORT DATA = SUMMARY4_withNPT OUTFILE = \"&OutCSV_Sum4\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part C. Tabel 1**************************************************/<br/>PROC FREQ DATA = DRUMS_BASELINE&#59 <br/>TABLE SEX*DMD_EVER SES*DMD_EVER COMORB_COUNT*DMD_EVER MENTAL*DMD_EVER HTN*DMD_EVER <br/>      LIPID*DMD_EVER COPD*DMD_EVER DM*DMD_EVER EPILEPSY*DMD_EVER IHD*DMD_EVER CANCER*DMD_EVER CALENDAR_YEAR_CAT*DMD_EVER /NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE1&#59RUN&#59<br/>DATA TABLE1&#59 SET TABLE1&#59 WHERE _TYPE_ = \"11\"&#59 VAR_TEMP = CATT(SEX,SES,COMORB_COUNT,MENTAL,HTN,LIPID,COPD,DM,EPILEPSY,IHD,CANCER,CALENDAR_YEAR_CAT)&#59 VAR_NAMES = COMPRESS(VAR_TEMP,'.')&#59<br/>DROP _TYPE_ _TABLE_ SEX SES COMORB_COUNT MENTAL HTN LIPID COPD DM EPILEPSY IHD CANCER CALENDAR_YEAR_CAT VAR_TEMP&#59 RUN&#59<br/><br/>/*As the source data is from Baseline, each cohort member only appears once. As such, the # in the var 'Frequency' is the # of distinct patients<br/>&nbsp&nbsp&nbsp&nbsp-- Shenzhen 20190703*/<br/><br/>/*The Table_1 contains small cells and should be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp1. As these are cross tables, a small cell, even suppressed, can be back calculated horizontally or vertically. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis means that once a small cell occurs, the whole cross table has to be suppressed. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp[Comment:] Seems that we have to apply for releasing small cell results. Or there will be many suppressions, making Table 1 not informative.<br/>&nbsp&nbsp&nbsp&nbsp2. the numeric values should be changed to char values, so as to indicate those suppressed<br/>*/<br/>/*1. First, transpose the data so that the freq by DMD_EVER groups are listed in the same row. <br/>&nbsp&nbsp&nbsp&nbspThat way, it'll be easier to sum the total horizontally, and vertically. <br/>&nbsp&nbsp&nbsp&nbspThese summaries will be used to determine suppression and masking. <br/>*/<br/>proc sort data=TABLE1 out=_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbspby table  var_names &#59<br/>run&#59<br/>proc transpose data = _tmp1 out=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar Frequency&#59<br/>run&#59<br/>/*2. For each table, sort by freq in the DMD_EVER = Yes group. In this cohort,  the Yes group is more likely to have small cells.<br/>&nbsp&nbsp&nbsp&nbspFor rows of the same table, those with the smallest freq comes first<br/>*/<br/>proc sort data=_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>run&#59<br/>/*3. Next, the number of levels of the current row will be counted. That way, if a small cell exists, we'll know how far is<br/>&nbsp&nbsp&nbsp&nbspthe current row away from the small cell. <br/>&nbsp&nbsp&nbsp&nbspThe suppression rule stresses that at least two levels should be suppressed. The calculation in this part helps identify <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe level next the level with the small cell. Such next level will be suppressed in the following steps.   <br/>*/<br/>data _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp2&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Yes&#59<br/>&nbsp&nbsp&nbsp&nbspif first.table then N_levels =1&#59<br/>&nbsp&nbsp&nbsp&nbspelse N_levels +1&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>run&#59 <br/>/*3. Now, perform the suppression and masking for small cells.<br/>&nbsp&nbsp&nbsp&nbspSuppression is to suppress the cell with 1-5 individuals<br/>&nbsp&nbsp&nbsp&nbspMasking is to mask the neighboring cells of the small cell (both vertical and horizontal), so that the suppressed cannot be back calculated<br/>*/<br/>data _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp3&#59<br/>&nbsp&nbsp&nbsp&nbspby table  Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp/*initially for each table, set everything to 0*/<br/>&nbsp&nbsp&nbsp&nbspif first.table then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1=0&#59sum_sup_v2=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h=sum_sup_v1 + sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*For small cells (Freq between 1 and 5):<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the suppressed freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked nubmer is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 's' standing for suppressed<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (suppress the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4) Indicate that a suppression starts (Sup=1)<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp/*approved for reporting small cells, no need to suppress*/<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -16 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+ Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2 = 's'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsup=1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Within the same table, the small cells always comes first (as level 1). To suppress at least two levels, level 2 should<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso be suppressed.However, level 3 does not have, unless the totally suppressed/masked is still < 6. So starting from level 3, the Suppression will be raisded <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(let Sup return to the value of 0). <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif N_levels > 2 and sum_sup_v1 > 5 and sum_sup_v2> 5 and sum_sup_h > 5 then sup=0&#59else sup+0&#59<br/>&nbsp&nbsp&nbsp&nbsp/*In the current level (current row), if suppression occurs (Sup=1), the neighboring column should be masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo mask the neighboring cell in the same row: <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) add the masked freq into the sum of suppressed (this is for later steps to check if the total suppressed/masked number is greated than 6) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) in the columns S1 or S2 (each for  DMD_EVER = yes, DMD_EVER = no group, respectively, indicate 'm' standing for masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) change the freq to . (mask the freq)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe above 3 actions are however only to take when the neighboring cell itself is not suppressed. Otherwise there is no need to mask again <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspif sup=1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s1 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v1+Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps1='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif s2 ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_v2+Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsps2='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*lastly, when the current row is required for suppressing or masking, calculate the overall sum of suppressed/masked<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspof the current table*/<br/>&nbsp&nbsp&nbsp&nbspif s1 ne '' and s2 ne '' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsum_sup_h + sum_sup_v1+sum_sup_v2&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*Finally, rearrange the table so as to be conform with the orignal requirement*/<br/>data _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp4&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_Yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'Yes'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i =2 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFrequency = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuppress_Mark = s2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDMD_Ever = 'No'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspkeep Table DMD_Ever Frequency Var_Names Suppress_Mark&#59<br/>run&#59<br/>/*We can repeat the above for the column missing. but for SK data, there is no missing values. So the column will be simply added*/<br/>data Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspretain Table DMD_Ever Frequency Missing VAR_NAMES&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp5&#59<br/>&nbsp&nbsp&nbsp&nbspMissing=.&#59<br/>run&#59<br/>/*Sort the tables by original levels*/<br/>proc sort data=Table1_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspby Table Var_names&#59<br/>run&#59<br/><br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"CROSS_TABLE MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Table1= &targetPilot1ReportPath.CROSS_TABLE MSP.CSV&#59<br/>/*PROC EXPORT DATA = TABLE1 OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-07-03*/<br/>PROC EXPORT DATA = Table1_Suppressed OUTFILE = \"&OutCSV_Table1\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part D. Summary 5 & 6**************************************************/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_NO_IND/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE2&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE2&#59 SET TABLE2&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_Ind COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE2&#59VAR COUNTS&#59 CLASS DMD_No_Ind&#59 ODS OUTPUT MOMENTS = SUMMARY5&#59RUN&#59<br/>DATA SUMMARY5&#59 SET SUMMARY5&#59 KEEP DMD_No_Ind Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*PROC EXPORT DATA = SUMMARY5 OUTFILE = \"EVER_DMD_IND MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/><br/>/*What is it in sum5? is it about # of distinct patients ever received DMD per DMD class? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test1 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_Ind,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_Ind&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test1 generates the same results as in summary 5 -- Shenzhen 20190703*/<br/><br/>%let OutCSV_Sum5= &targetPilot1ReportPath.EVER_DMD_IND MSP.CSV&#59<br/>%put >>> OutCSV_Sum5 = &OutCSV_Sum5&#59<br/>PROC EXPORT DATA = SUMMARY5 OUTFILE = \"&OutCSV_Sum5\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*The process in Table2 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 5 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC FREQ DATA = &theData&#59 <br/>ODS results off&#59/*ODS output to report is turned off as PROC FREQ produces a huge table. --Shenzhen 20190630*/<br/>WHERE DMD_EVER = \"Yes\"&#59TABLE ID*DMD_No_First_Second/NOCOL NOROW NOPERCENT&#59 ODS OUTPUT CROSSTABFREQS = TABLE3&#59RUN&#59<br/>ODS results on&#59<br/>DATA TABLE3&#59 SET TABLE3&#59 COUNTS = Frequency&#59 IF Frequency >1 THEN COUNTS = 1&#59 KEEP DMD_No_First_Second COUNTS&#59 WHERE _TYPE_ = \"11\"&#59RUN&#59<br/>/*The process in Table3 ensures that each cohort member only gets counted for once.<br/>As such, the 'sum obs' in summary 6 are countings of distinct cohort members --Shenzhen 20190703*/<br/>PROC UNIVARIATE DATA = TABLE3&#59VAR COUNTS&#59 CLASS DMD_No_First_Second&#59 ODS OUTPUT MOMENTS = SUMMARY6&#59RUN&#59<br/>DATA SUMMARY6&#59 SET SUMMARY6&#59 KEEP DMD_No_First_Second Label2 cValue2&#59 WHERE Label2 = \"Sum Observations\"&#59 RUN&#59<br/>/*What is it in sum6? is it about # of distinct patients ever received DMD per generation? The following is to double confirm<br/>-- Shenzhen 20190703*/<br/>/*<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test2 as<br/>&nbsp&nbsp&nbsp&nbspselect distinct<br/>&nbsp&nbsp&nbsp&nbspDMD_No_First_Second,<br/>&nbsp&nbsp&nbsp&nbspcount(distinct ID) as N_Pt<br/>&nbsp&nbsp&nbsp&nbspfrom &theData<br/>&nbsp&nbsp&nbsp&nbspgroup by DMD_No_First_Second&#59<br/>quit&#59<br/>*/<br/>/*confirmed, test2 generates the same results as in summary 6 -- Shenzhen 20190703*/<br/><br/>/*PROC EXPORT DATA = SUMMARY6 OUTFILE = \"EVER_DMD_First_Second MSP.CSV\" DBMS = CSV REPLACE&#59 RUN&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutCSV_Sum6= &targetPilot1ReportPath.EVER_DMD_First_Second MSP.CSV&#59<br/>%put >>> OutCSV_Sum6 = &OutCSV_Sum6&#59<br/>PROC EXPORT DATA = SUMMARY6 OUTFILE = \"&OutCSV_Sum6\" DBMS = CSV REPLACE&#59 RUN&#59<br/>/*******end of the current Part ***************************************/<br/><br/>/*Part E. PDF**************************************************/<br/>DATA DRUMS_BASELINE&#59 SET DRUMS_BASELINE&#59AGE_INT = ROUND(AGE)&#59 RUN&#59<br/>/*ODS PDF FILE = \"BARPLOT_AGE_AT_INDEX_INTEGER.PDF\" STARTPAGE=NEVER&#59*//*original code --Shenzhen 2019-06-30*/<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGE_AT_INDEX_INTEGER.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_INT / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/><br/><br/><br/>/*This part seems to have # of patients by Age_INT, overall and by DMD_EVER group. <br/>&nbsp&nbsp&nbsp&nbspAs it is from baseline, each cohort member only appear once. As such, the # of frequency is the # of distinct patients*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table _tmp11 as<br/>&nbsp&nbsp&nbsp&nbspselect AGE_INT, DMD_EVER, count(AGE_INT) as N_pt<br/>&nbsp&nbsp&nbsp&nbspfrom DRUMS_BASELINE<br/>&nbsp&nbsp&nbsp&nbspgroup by AGE_INT ,DMD_EVER<br/>&nbsp&nbsp&nbsp&nbsporder by AGE_INT<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>quit&#59<br/><br/>proc transpose data = _tmp11 out=_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspby AGE_INT&#59<br/>&nbsp&nbsp&nbsp&nbspid DMD_EVER&#59<br/>&nbsp&nbsp&nbsp&nbspvar N_pt&#59<br/>run&#59<br/>data _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp12&#59<br/>&nbsp&nbsp&nbsp&nbspNpt_Total = sum(Yes, No)&#59<br/>&nbsp&nbsp&nbsp&nbsprename Yes=Npt_DMD_EVER_Yes No = Npt_DMD_EVER_No&#59<br/>&nbsp&nbsp&nbsp&nbspdrop _name_&#59<br/>run&#59<br/><br/>data AgeDist_ForPDF_Suppressed&#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp13&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_Yes < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_No ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspif -10 < Npt_DMD_EVER_No < -6 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_No=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_No='s'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif SUPR_DMD_EVER_Yes ne 's' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_DMD_EVER_Yes=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_DMD_EVER_Yes='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNpt_Total=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSUPR_Total='m'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/>/*create an additional table for age distributions*/<br/>%let OutCSV_AgeDist= &targetPilot1ReportPath.AgeDist.CSV&#59<br/>PROC EXPORT DATA = AgeDist_ForPDF_Suppressed OUTFILE = \"&OutCSV_AgeDist\" DBMS = CSV REPLACE&#59 RUN&#59<br/><br/>/*******end of the current Part ***************************************/<br/><br/>/*Part F, by age groups*/<br/><br/><br/><br/>/*end of this part**/<br/>DATA DRUMS_BASELINE2&#59 <br/>&nbsp&nbsp&nbsp&nbspSET DRUMS_BASELINE&#59<br/>&nbsp&nbsp&nbsp&nbspformat AGE_GRP $10.&#59<br/>&nbsp&nbsp&nbsp&nbspselect  &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT le 30)  AGE_GRP='00-30'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 31 le AGE_INT le 35)  AGE_GRP='31-35'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 36 le AGE_INT le 40)  AGE_GRP='36-40'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 41 le AGE_INT le 45)  AGE_GRP='41-45'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 46 le AGE_INT le 50)  AGE_GRP='46-50'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 51 le AGE_INT le 55)  AGE_GRP='51-55'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 56 le AGE_INT le 60)  AGE_GRP='56-60'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 61 le AGE_INT le 65)  AGE_GRP='61-65'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 66 le AGE_INT le 70)  AGE_GRP='66-70'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 71 le AGE_INT le 75)  AGE_GRP='71-75'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( 76 le AGE_INT le 80)  AGE_GRP='76-80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen ( AGE_INT gt 80)  AGE_GRP='>80'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise AGE_GRP='Wrong'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>RUN&#59<br/>%let OutPDF =  &targetPilot1ReportPath.BARPLOT_AGEGROUP_AT_INDEX.PDF&#59<br/>ODS PDF FILE = \"&OutPDF\" STARTPAGE=NEVER&#59<br/>ODS GRAPHICS / WIDTH= 15 IN HEIGHT= 3 IN &#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"Yes\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_YES\"&#59 RUN&#59<br/>PROC SGPLOT DATA = DRUMS_BASELINE2&#59WHERE DMD_EVER = \"No\"&#59 VBAR AGE_GRP / DATASKIN=GLOSS&#59 XAXIS DISPLAY = (NOLABEL NOTICKS)&#59 YAXIS GRID&#59 TITLE \"AGE AT INDEX DMD_EVER_No\"&#59 RUN&#59<br/>ODS PDF CLOSE&#59QUIT&#59<br/><br/>/*Routing SAS log back to the default place*/<br/>proc printto&#59 run&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-K3AW7UOvk3cdXoBp"}]}],"custparents":[{"idx":"CodeTask-WPm9dCxuJO5FP9C3"}]},{"idx":"CodeTask-CEhAKalbH2zWAsMc","name":"G Stat Models","NodeDescription":"///t<br/>///s<br/>/*_G Statistic models*/<br/>data _null_&#59run&#59<br/><br/>%let theStudyID=key_hsn&#59<br/><br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\_F.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(_F.sas7bdat)<br/>)&#59<br/>%print(data=_F)<br/><br/><br/>/*_GA prepare data*/<br/>data _GA&#59<br/>&nbsp&nbsp&nbsp&nbspset _F&#59<br/>&nbsp&nbsp&nbsp&nbspY1_N_ECNT_T = N_Encounters_Total&#59<br/>&nbsp&nbsp&nbsp&nbsptime =( SegEndDate - SegStartDate) /365.24&#59<br/>&nbsp&nbsp&nbsp&nbsplog_time = log(time)&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID Y1: X: log_time&#59<br/>run&#59<br/><br/><br/>/*_GB Negbin models */<br/><br/>proc genmod data=_GA &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass X1_M1_Any (ref=\"null\")  &theStudyID / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M1_Any /type3 dist=negbin offset=log_time &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving anyDMD yes vs no\" X1_M1_Any 1 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=&theStudyID /type=exch modelse printmle mcovb ecovb&#59<br/>run&#59quit&#59<br/>proc genmod data=_GA &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass X1_M2_Generations (ref=\"null\")  &theStudyID / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M2_Generations /type3 dist=negbin offset=log_time &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD first generations vs no\" X1_M2_Generations 1 0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD second vs no\" X1_M2_Generations 0 1 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD first vs second\" X1_M2_Generations 1 -1 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=&theStudyID /type=exch modelse printmle mcovb ecovb&#59<br/>run&#59quit&#59<br/>proc genmod data=_GA &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass X1_M3_Classes (ref=\"null\")  &theStudyID / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M3_Classes /type3 dist=negbin offset=log_time &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Alemtuzumab vs no\" X1_M3_Classes 1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Fingolimod vs no\" X1_M3_Classes 0 1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Fumarate vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0  -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Glatiramer vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD IFNB vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Natalizumab vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Teriflunomide vs no\" X1_M3_Classes 0 &nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  1 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=&theStudyID /type=exch modelse printmle mcovb ecovb&#59<br/>run&#59quit&#59<br/><br/><br/>proc genmod data=_GA &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theStudyID <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX1_M3_Classes (ref=\"null\")  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX4_SES (ref=\"1\")<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/ param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M3_Classes <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX2_Age<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX4_SES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/type3 dist=negbin offset=log_time &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Alemtuzumab vs no\" X1_M3_Classes 1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Fingolimod vs no\" X1_M3_Classes 0 1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Fumarate vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0  -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Glatiramer vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD IFNB vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1&nbsp&nbsp&nbsp&nbsp0  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Natalizumab vs no\" X1_M3_Classes 0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp1  0 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving DMD Teriflunomide vs no\" X1_M3_Classes 0 &nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0&nbsp&nbsp&nbsp&nbsp0  1 -1 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=&theStudyID /type=exch modelse printmle mcovb ecovb&#59<br/>run&#59quit&#59<br/><br/>/*beware of multicolinearity*/<br/>proc glm data=_GA&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theStudyID <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX1_M3_Classes (ref=\"null\")  <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX4_SES (ref=\"1\")<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH (ref='0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M3_Classes <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX2_Age<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX4_SES<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX5_NCoMB_Base_CAT <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX6_NCoMB_Seg_CAT <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX7_CMB_B_MH <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX8_CMB_B_HN <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX9_CMB_B_HL <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX10_CMB_B_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX11_CMB_B_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX12_CMB_B_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX13_CMB_B_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX14_CMB_P_MH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX15_CMB_P_HN<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX16_CMB_P_HL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX17_CMB_P_CL<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX18_CMB_P_DB<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX19_CMB_P_EP<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspX20_CMB_P_IH<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/tolerance<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-bIreBggj4pLILkOr","name":"G2 ZINB models","NodeDescription":"///t<br/>///s<br/>/*G2 /*_GC Zero Inflated NegBin (ZINB) models  <br/>&nbsp&nbsp&nbsp&nbspThe GEE (repeated terms) does not take zero-inflated models. <br/>&nbsp&nbsp&nbsp&nbsp <br/>*/<br/>%macro notrun&#59<br/>proc means data = _GA mean std min max var&#59<br/>  var Y1_N_ECNT_T&#59<br/>run&#59<br/><br/>ods graphics  / width=4in height=3in border=off&#59<br/>proc sgplot data = _GA&#59<br/>  histogram Y1_N_ECNT_T /binwidth=1&#59<br/>run&#59<br/>ods graphics off&#59<br/><br/>proc freq data = _GA&#59<br/>  tables X1_M1_Any&#59<br/>run&#59<br/><br/>proc means data = _GA mean var n nway&#59<br/>  class X1_M1_Any&#59<br/>  var Y1_N_ECNT_T&#59<br/>run&#59<br/><br/><br/>proc sort data = _GA&#59<br/>  by descending X1_M1_Any&#59<br/>run&#59<br/><br/>proc genmod data=_GA &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass X1_M1_Any (ref=\"null\")  &theStudyID / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M1_Any /type3 dist=zinb offset=log_time &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzeromodel X1_M1_Any&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving anyDMD yes vs no\" X1_M1_Any 1 -1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=&theStudyID /type=exch modelse printmle mcovb ecovb&#59<br/>run&#59quit&#59<br/><br/><br/><br/>%include \"P:\\DRUMS(EvansC)_Bio18-83\\SAS code\\vuong.sas\"&#59<br/>proc genmod data=_GA &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass X1_M1_Any (ref=\"null\")  &theStudyID / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M1_Any /type3 dist=zinb offset=log_time &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzeromodel X1_M1_Any&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=outzinb pred=predzinb pzero=p0&#59<br/>  &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstore m1&#59<br/>run&#59quit&#59<br/><br/>proc genmod data=_GA &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass X1_M1_Any (ref=\"null\")  &theStudyID / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel Y1_N_ECNT_T =X1_M1_Any /type3 dist=negbin offset=log_time &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=out pred=prednb&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"X1 receiving anyDMD yes vs no\" X1_M1_Any 1 -1 /exp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprepeated subject=&theStudyID /type=exch modelse printmle mcovb ecovb&#59<br/>run&#59quit&#59<br/><br/>%vuong(data=out, response=Y1_N_ECNT_T,<br/>       model1=zinb, p1=predzinb, dist1=zinb, scale1=0.8762, pzero1=p0, <br/>       model2=nb,   p2=prednb,   dist2=nb,   scale2=0.8762,<br/>nparm1=4,    nparm2=2)&#59<br/><br/>%mend notrun&#59<br/>*/<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-CEhAKalbH2zWAsMc"}]}],"custparents":[{"idx":"CodeTask-WPm9dCxuJO5FP9C3"}]}],"custparents":[{"idx":"EGTask-gypbEe5Mo1bSWBaR"},{"idx":"CodeTask-hCwPpuTe3FfovK1M"}]}],"custparents":[{"idx":"CodeTask-B2pHkFSjSlG6KfGW"}]}],"custparents":[{"idx":"EGTask-3uLoYqSzctLPiGks"}]}],"custparents":[{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]},{"idx":"CodeTask-WyqlrdM1j5inhehq","name":"C_Errorlog_MSB claims within coverage gaps","NodeDescription":"///t<br/>///s<br/><br/>/*in data _FC, there are period end date prior to start date*/<br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset _FC&#59<br/>&nbsp&nbsp&nbsp&nbspif segEnddate < segStartDate&#59<br/>run&#59<br/><br/>/*also in _D?*/<br/>data test2&#59<br/>&nbsp&nbsp&nbsp&nbspset _D&#59<br/>&nbsp&nbsp&nbsp&nbspif segEnddate < segStartDate&#59<br/>run&#59<br/><br/>/*these patients had a studyEndate earlier to the studyStartDate*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._C,<br/>&nbsp&nbsp&nbsp&nbspt2=test2,<br/>&nbsp&nbsp&nbsp&nbsptarget=test2a,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_hsn = t2.key_hsn &nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/><br/>/*PHRS coverage of these patients*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_CB1,<br/>&nbsp&nbsp&nbsp&nbspt2=test2,<br/>&nbsp&nbsp&nbsp&nbsptarget=test3a,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_hsn = t2.key_hsn &nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>data test3&#59<br/>&nbsp&nbsp&nbsp&nbspset test3a&#59<br/>&nbsp&nbsp&nbsp&nbspif days=0&#59<br/>run&#59<br/><br/>/*MS claims from hosp within a PHRS gap*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._BA,<br/>&nbsp&nbsp&nbsp&nbspt2=test3,<br/>&nbsp&nbsp&nbsp&nbsptarget=test4,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_hsn = t2.key_hsn and <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.epiadm_date between t2.coverStart and t2.coverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.epidschg_date between t2.coverStart and t2.coverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t2.coverStart < t1.epiadm_date and t2.coverend > t1.epidschg_date)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*MS claims from MSB within a PHRS gap*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt._BB,<br/>&nbsp&nbsp&nbsp&nbspt2=test3,<br/>&nbsp&nbsp&nbsp&nbsptarget=test5,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_hsn = t2.key_hsn and <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dxDate between t2.coverStart and t2.coverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>%print(data=master_msb)&#59<br/>/*to reconfirm, check the original msb data*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_msb,<br/>&nbsp&nbsp&nbsp&nbspt2=test3,<br/>&nbsp&nbsp&nbsp&nbsptarget=test6,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_hsn = t2.key_hsn and <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.dos between t2.coverStart and t2.coverEnd<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>/*to confirm again, thse coverage gaps can be seen in the original PHRS file*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_phrs_cov,<br/>&nbsp&nbsp&nbsp&nbspt2=test3,<br/>&nbsp&nbsp&nbsp&nbsptarget=test6,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.key_hsn = t2.key_hsn <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsporder=%str(t1.key_hsn, t1.eff_date, t1.exp_date)<br/>)&#59<br/><br/><br/>/*note: the following are different<br/><br/>&nbsp&nbsp&nbsp&nbspif not (StudyEndDate < StudyStartDate)&#59<br/>&nbsp&nbsp&nbsp&nbspif not StudyEndDate < StudyStartDate&#59<br/><br/>*/<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]},{"idx":"MY219112dd-f6cd-4f04-ab17-1ae5d840e7c8","name":"Questions","children":[{"idx":"Note-BT22MOO9Gg1fqpLM","name":"Q CA1","NodeDescription":"///t<br/>Question:What&nbspif&nbspthere&nbspare&nbsppatients&nbspmissing&nbspregistery&nbspinfo<br/>t///","custparents":[{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]},{"idx":"Note-HRoDXdkvft9ccLt8","name":"Q CA2","NodeDescription":"///t<br/>Q.CA2What&nbspare&nbspthe&nbspexit&nbsptype<br/>t///","children":[{"idx":"Note-wuRRb2ymgWbmtceW","name":"CA.QTest2","NodeDescription":"///t<br/>CA.Q22.1a.2.1.1.QTest2Tests&nbspfor&nbspQ_CA2What&nbspare&nbspthe&nbspexit&nbsptype?<br/>t///","children":[{"idx":"CodeTask-QduPbWLMDrehxwmm","name":"CAB.Qtest2","NodeDescription":"///t<br/>///s<br/>/*<br/>CAB.Q2<br/>2.1a.2.1.1.QTest2<br/>Tests for Q_CA2<br/>What are the exit type?<br/>*/<br/>data _null_&#59run&#59<br/><br/><br/>/*The exitType info has been prepared in CA*/<br/>%freq(data=localt.CA noprint, table=exitType, order=freq, option=%str(out=CAB1))&#59<br/>data localt.CAB&#59<br/>&nbsp&nbsp&nbsp&nbspset CAB1&#59<br/>&nbsp&nbsp&nbsp&nbsppercent=percent/100&#59<br/>run&#59<br/><br/><br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(ExitType)&#59<br/>%let CloseXls=0&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=localt.CAB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>)&#59<br/>s///<br/>t///","custparents":[{"idx":"Note-wuRRb2ymgWbmtceW"}]}],"custparents":[{"idx":"Note-HRoDXdkvft9ccLt8"}]}],"custparents":[{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]}]}],"custparents":[{"idx":"CodeTask-ejvYlwKSN3OCpqYL"}]},{"idx":"CodeTask-VRQknnlRWuBUykcA","name":"check coverage","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/><br/>/*gap<br/>If less than one year (<90% of the days) is available, shift the index date forward in time to allow an individual  <br/>to fulfill this criteria whenever possible. Exclude those who do not fulfil this criteria<br/>*/<br/><br/>/*an hypotheical case*/<br/>data test1&#59<br/>&nbsp&nbsp&nbsp&nbspformat key_hsn $1. startdate date9. enddate date9. gap 8. &#59<br/>&nbsp&nbsp&nbsp&nbspinput key_hsn @3 startdate anydtdte10. @14 enddate anydtdte10.  @24 gap &#59<br/>&nbsp&nbsp&nbsp&nbspindex_date = '01Jan2001'd+368&#59<br/>&nbsp&nbsp&nbsp&nbspformat index_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif gap=1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgapdays=enddate - startdate +1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverdays=0&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgapdays=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcoverdays=enddate - startdate +1&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspcards&#59<br/>a 2001-01-01 2001-11-22 0<br/>a 2001-11-23 2002-01-02 1<br/>a 2002-01-03 2002-10-30 0<br/>a 2002-10-31 2002-12-05 1<br/>a 2002-12-06 2003-01-15 0<br/>a 2003-01-16 2003-02-05 1<br/>a 2003-02-06 2018-12-31 0<br/>&#59<br/><br/>/*I would take the dumbest way, alright? I am going to list out all days between 1996-1-1 and 2018-03-01<br/>&nbsp&nbsp&nbsp&nbspand calculate whether each day is covered. <br/>*/<br/>data test2&#59<br/>&nbsp&nbsp&nbsp&nbspset test1&#59<br/>&nbsp&nbsp&nbsp&nbspformat newIndex_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif coverdays > 0&#59<br/>&nbsp&nbsp&nbsp&nbsparray covered_currentday[8096]  _temporary_&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 8096&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcovered_currentday[i]=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif covered_currentday[i] ne 1 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif startdate < '31dec1995'd + i  < enddate then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcovered_currentday[i]=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif i > 365 then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = i-365 to i-1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays=sumcoverdays + covered_currentday[j]&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif sumcoverdays > int(365*.9) and '31dec1995'd + i >= index_Date then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnewIndex_date = '31dec1995'd + i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/><br/><br/>%getCoverGAPs(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprawfile=master_phrs_cov, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspptFile=localt._BG, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCovXtrc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstart='01jan1995'd, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend= '31mar2018'd, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=_BH11, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcohortgroup=, <br/>&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>data _bh12&#59<br/>&nbsp&nbsp&nbsp&nbspset _bh11&#59<br/>&nbsp&nbsp&nbsp&nbspdrop First_admin: cohort: age_first: sex &#59<br/>&nbsp&nbsp&nbsp&nbspif days >0&#59<br/>&nbsp&nbsp&nbsp&nbspdrop start end coverPCT gapPCT days gaps src birth&#59<br/>run&#59<br/><br/><br/>data _BH13&#59<br/>&nbsp&nbsp&nbsp&nbspset _bh12&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn coverstart coverend&#59<br/>&nbsp&nbsp&nbsp&nbspformat newIndex_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbsparray covered_currentday[8491]  _temporary_&#59 /*it starts from covered_currentday[1], not covered_currentday[0]*/<br/>&nbsp&nbsp&nbsp&nbsp/*the temporary array values are automatically retained*/<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 8491&#59 /*8491 are days between '01jan1995' and '31mar2018'd, has to start from 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspas for studyStartDate ='01jan1996', it'll need to caculate covering days since '01jan1995'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.key_hsn then covered_currentday[i] =0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcurrentday = '31dec1994'd + i&#59 /*between '01jan1996' and '31mar2018'd*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif covered_currentday[i] ne 1 then do&#59 /*if the value is already 1 (covered), do not change it*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif coverstart <currentday < coverend then do&#59 /*if the currentday is within a coverage period, let the cover status =1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcovered_currentday[i]=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif currentday >= StudyStartDate then do&#59 /*only starting to look back the cumulative covering days since the index_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = i-365 to i-1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays=sumcoverdays + covered_currentday[j]&#59 /*calculate the cumulative covering days within 365 days prior to the current day*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the number cumulative covering days is greater than 90% of a year (365 days), the currentday is the earliest<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdate of the new index_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif sumcoverdays > int(365*.9)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnewIndex_date = currentday&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspdrop i j  currentday sumcoverdays&#59<br/>run&#59<br/><br/>data _BH14&#59<br/>&nbsp&nbsp&nbsp&nbspset _BH13&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn coverstart coverend&#59<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspif newIndex_date ne .&#59<br/>run&#59<br/><br/>/*how many person in _bh14: 5357*/<br/>/*how many in _bh4? 5389, more!. need to check...*/<br/>data _BH7&#59<br/>&nbsp&nbsp&nbsp&nbspset _BH4&#59<br/>&nbsp&nbsp&nbsp&nbspif &coverageVar = 0&#59<br/>&nbsp&nbsp&nbsp&nbspdrop cumuCoverGap MaxCoverGap&#59<br/>run&#59<br/><br/>/*for those in both _BH7 and _BH14, the studystartdate should be the same*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BH14,<br/>&nbsp&nbsp&nbsp&nbspt2=_BH7,<br/>&nbsp&nbsp&nbsp&nbsptarget=test11,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.studyStartDate as studystartDate_bh14, t2.studystartDate as studystartDate_bh7, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.newIndex_date),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*4899, those in _BH7 are all in _Bh14*/<br/><br/>/*these 4899 patients all had the same the studystartdates (not changed)*/<br/>data test12&#59<br/>&nbsp&nbsp&nbsp&nbspset test11&#59<br/>&nbsp&nbsp&nbsp&nbspif studystartDate_bh14 ne studystartDate_bh7 or studystartDate_bh14 ne newIndex_date or studystartDate_bh7 ne newIndex_date&#59<br/>run&#59<br/>/*Yes*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/* patients in _bh7 but not in _bh14, why???*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_bh7,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.key_hsn not in (select key_hsn from test11))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*original coverage records*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=_BH11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=test13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=test14,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset test14&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop First_admin: cohort: age_first: sex &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif days >0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop start end coverPCT gapPCT days gaps src birth&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata test16&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset test15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby key_hsn coverstart coverend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat newIndex_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsparray covered_currentday[8491]  _temporary_&#59 /*it starts from covered_currentday[1], not covered_currentday[0]*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the temporary array values are automatically retained*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo i = 1 to 8491&#59 /*8461 are days between '01jan1995' and '31mar2018'd, has to start from 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspas for studyStartDate ='01jan1996', it'll need to caculate covering days since '01jan1995'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.key_hsn then covered_currentday[i] =0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcurrentday = '31dec1994'd + i&#59 /*between '01jan1996' and '31mar2018'd*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif covered_currentday[i] ne 1 then do&#59 /*if the value is already 1 (covered), do not change it*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif coverstart <currentday < coverend then do&#59 /*if the currentday is within a coverage period, let the cover status =1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcovered_currentday[i]=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif currentday >= StudyStartDate then do&#59 /*only starting to look back the cumulative covering days since the index_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays = 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo j = i-365 to i-1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsumcoverdays=sumcoverdays + covered_currentday[j]&#59 /*calculate the cumulative covering days within 365 days prior to the current day*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the number cumulative covering days is greater than 90% of a year (365 days), the currentday is the earliest<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdate of the new index_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif sumcoverdays > int(365*.9)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnewIndex_date = currentday&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspleave&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat currentday date9.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbspdrop i j  currentday sumcoverdays&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*for those in _Bh14 but not in _bh7, the studystartdate is shifed*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_bh14,<br/>&nbsp&nbsp&nbsp&nbsptarget=test17,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*, <br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.key_hsn not in (select key_hsn from _bh7))<br/>)&#59<br/>data test18&#59<br/>&nbsp&nbsp&nbsp&nbspset test17&#59<br/>&nbsp&nbsp&nbsp&nbspdrop coverEnd coverstart&#59<br/>&nbsp&nbsp&nbsp&nbspdays_shift=newindex_date - studystartDate&#59<br/>run&#59<br/><br/>/*why some shifted for  >5000 days?*/<br/>data test19&#59<br/>&nbsp&nbsp&nbsp&nbspset _bh11&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ='74325324698'&#59<br/>run&#59<br/><br/>/*why some shfited for  0 days (why not in BH7)*/<br/>data test19&#59<br/>&nbsp&nbsp&nbsp&nbspset _bh11&#59<br/>&nbsp&nbsp&nbsp&nbspif key_hsn ='01345354612'&#59<br/>run&#59<br/>/*why? only havng a gap of 32 days*/<br/><br/>/*what about those having a newindex_date =. all the time?*/<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-ejvYlwKSN3OCpqYL"}]},{"idx":"CodeTask-SxoflCWfS6luicVg","name":"BHA. Qtest4","NodeDescription":"///t<br/>///s<br/>/*BHA. How many patients have the first onset dx before reaching 18<br/>&nbsp&nbsp&nbsp&nbspHow many received the first DMT before 25<br/>&nbsp&nbsp&nbsp&nbspThe question was raised by Charity on 2019-10-09<br/>&nbsp&nbsp&nbsp&nbspsee the document at<br/>&nbsp&nbsp&nbsp&nbspP:\\DRUMS(EvansC)_Bio18-83\\Documentation\\Researcher - Analyst Documentation\\Doc from the project team\\DRUMs Jr Onset Digging 20191010.pdf<br/><br/>The idea is to get all the MS and demyelinating(dmlt) related diagnosis code, as well as DINs<br/>&nbsp&nbsp&nbsp&nbspfrom hosp, msb, and drug claims. <br/>&nbsp&nbsp&nbsp&nbspSo as to determine:<br/>&nbsp&nbsp&nbsp&nbsp1. the date of the first MS/dmlt ICD code<br/>&nbsp&nbsp&nbsp&nbsp2. the date of the first DMT drug dispensation<br/><br/>Patients were from localt._b, in which the MS diagnosis qualification date has been determined. <br/>&nbsp&nbsp&nbsp&nbspIn _b, patients with first onset of ms/dmlt are not excluded. ms-related ICD codes ealier than the date reaching 18 were ignored. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSo the young patients should be there. <br/>&nbsp&nbsp&nbsp&nbsp(Those missing age, sex info or not fully covered with the previous 365 days are removed though)<br/>*/<br/><br/>%print(data=localt._b)&#59<br/>/*In _b: <br/>First_admin_code_date is the date with the first MS related icd/din code of which patients are qualified for MS diagnosis. <br/>&nbsp&nbsp&nbsp&nbspe.g., if a patient had three MS related ICD/DIN codes on distinct dates,  First_admin_code_date is the earliest of such dates in a roll.<br/>&nbsp&nbsp&nbsp&nbspAge at this date can be < 18. However, it is only related to MS related codes, the DMLT related codes are not examined. <br/>&nbsp&nbsp&nbsp&nbspThis field is the diagnosis qualification date of MS (MS_DQDATe)<br/>Birth and sex. These are useful to determine age/sex.<br/>*/<br/><br/>data _BHA1&#59<br/>&nbsp&nbsp&nbsp&nbspset localt._b&#59<br/>&nbsp&nbsp&nbsp&nbspkeep First_admin_code_date  birth key_hsn sex&#59 <br/>run&#59<br/><br/>/*for patients in _BHA1, get their hosp/msb/drugclaim records*/<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_benefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_benefit.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_dp_nonbenefit.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_dp_nonbenefit.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_hosp.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_hosp.sas7bdat)<br/>)&#59<br/><br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localDataPath.\\master_msb.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(master_msb.sas7bdat)<br/>)&#59<br/><br/>/*the ICD codes*/<br/>%let msdlmtICDH = %str('340', '341', '3419', '323', '32382', '3773', 'G35', 'G360', 'G378', 'G369', 'G37', 'H46')&#59 <br/>%let msdlmtICDM=%str('340', '341', '323', '377')&#59<br/>/*2a. Hosp MS-DMLT dx of the cohort in _BHA1*/<br/>/*2a1 hosp records of the cohort in _BHA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_hosp,<br/>&nbsp&nbsp&nbsp&nbspt2=_BHA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA2a1,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*2a2 From _BHA2a1, select all ICD_Codes matching the MS/DMLT related ICD codes (msdlmtICDH)<br/>&nbsp&nbsp&nbsp&nbspthe setting allows to pick up all records with interested code. <br/>&nbsp&nbsp&nbsp&nbspIt could be that an interested ICD10 is picked up from a conv_dx_code (which is supposed to have ICD9) code. <br/>&nbsp&nbsp&nbsp&nbspThat is fine. As the CIHI data, esp those before 2001 are quite messed up. <br/>&nbsp&nbsp&nbsp&nbspThe approach adopted here allows to have all possible diagnoses.<br/>&nbsp&nbsp&nbsp&nbspConforming with the same rule in BA, the adm_date is used as the DxDate<br/>*/<br/>data _BHA2a&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA2a1&#59<br/>&nbsp&nbsp&nbsp&nbspsrc='h'&#59<br/>&nbsp&nbsp&nbsp&nbsparray dxs $ dx_code_1 - dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbsparray cdxs $ conv_dx_code_1 - conv_dx_code_25&#59<br/>&nbsp&nbsp&nbsp&nbspformat type $5.&#59<br/>&nbsp&nbsp&nbsp&nbspformat code $10.&#59<br/>&nbsp&nbsp&nbsp&nbspdo i = 1 to 25&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxs(i) in: (&msdlmtICDH) then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='dx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=dxs(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxdate = adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif cdxs(i) in: (&msdlmtICDH)  then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptype='cdx'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxN=i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcode=cdxs(i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxdate = adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspformat dxdate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspkeep  key_hsn type dxN code adm_date dschg_date src  Dxdate&#59<br/>run&#59<br/><br/>/*2b. From MSB file, MS-DMLT dx of the cohort in _BHA1*/<br/>/*2b1 MSB records of the cohort in _BHA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_MSB,<br/>&nbsp&nbsp&nbsp&nbspt2=_BHA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA2b1,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*2b2 From above, select records with a diag code in msdlmtICDM*/<br/>data _BHA2b&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA2b1&#59<br/>&nbsp&nbsp&nbsp&nbspformat type $5. DxDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif diag in: (&msdlmtICDM)&#59<br/>&nbsp&nbsp&nbsp&nbspDxDate = dos&#59<br/>&nbsp&nbsp&nbsp&nbsprename diag=code&#59<br/>&nbsp&nbsp&nbsp&nbspsrc = 'p'&#59<br/>run&#59<br/><br/>/*2c1 From pharmacy files, MS-DMLT dx of the cohort in _BHA1*/<br/>/*From benefit and nonbenefit files, select claims of DMT (localT.a6_DINDx, which was saved by prog A)*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_benefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localT.a6_dindx,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA2c1a,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN<br/>)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=master_dp_nonbenefit,<br/>&nbsp&nbsp&nbsp&nbspt2=localT.a6_dindx,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA2c1b,<br/>&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=DIN<br/>)&#59<br/>/*Putting together*/<br/>data _BHA2c1&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA2c1a _BHA2c1b&#59<br/>run&#59<br/><br/>/*2c2 DMT records of the cohort in _BHA1*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BHA2c1,<br/>&nbsp&nbsp&nbsp&nbspt2=_BHA1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA2c,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd as DxDate, t1.DIN as code, 'm' as src),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*To this step<br/>&nbsp&nbsp&nbsp&nbsp2a contains MS/DMLT related dx from hospital<br/>&nbsp&nbsp&nbsp&nbsp2b MS/DMLT related dx from MSB<br/>&nbsp&nbsp&nbsp&nbsp2c DMT medication from drug claims (from both benefit and nonbenefit files)<br/>*/<br/><br/>/*3. Onset of MS/DMLT before 18<br/>&nbsp&nbsp&nbsp&nbspThe approach here is to merge 2a-2c together, and determine the earliest dxDate for each patient<br/>&nbsp&nbsp&nbsp&nbspNext<br/>*/<br/>/*3a, merge dx records from hosp, msb, and pharmacy claims*/<br/>data _BHA3a&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA2a _BHA2b _BHA2c&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn dxDate src code&#59<br/>run&#59<br/>/*3b. sort and for each patient keep the earlist DxDate*/<br/>%sort(data=_BHA3a, sorter=key_hsn dxdate src code)&#59<br/>data _BHA3b&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA3a&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn dxdate src code&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsprename dxDate = MSDLMTDMT_FirstDate&#59<br/>run&#59<br/>/*3c. link the above to the cohort (_BHA1), add the dxdate src code info into the cohort*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BHA1,<br/>&nbsp&nbsp&nbsp&nbspt2=_BHA3b,<br/>&nbsp&nbsp&nbsp&nbsptarget=%str(_BHA3c (rename = (first_admin_code_date = MS_DQDate ))) ,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.MSDLMTDMT_FirstDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspint(yrdif(t1.birth, t2.MSDLMTDMT_FirstDate, 'age')) as Age_MSDLMTDMT_FirstDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspint(yrdif(t1.birth, t1.first_admin_code_date, 'age')) as Age_MS_DQDate,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.src, t2.code),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/>/*3d. from above, select those with Age_MSDLMTDMT_FirstDate < 18*/<br/>data _BHA3&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA3c&#59<br/>&nbsp&nbsp&nbsp&nbspwhere Age_MSDLMTDMT_FirstDate < 18&#59<br/>run&#59<br/><br/>%freq(data=_BHA3, table=code)&#59<br/><br/>/*4. Of patients in 3d, the first DMT claim date */<br/>/*4a. get dmt claims (in _BHA2c1) of patients in _BHA3*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BHA2c1,<br/>&nbsp&nbsp&nbsp&nbspt2=_BHA3,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA4a,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.Rx_ddddd, t1.DIN as code, 'm' as src),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn,<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn, Rx_ddddd)<br/>)&#59<br/><br/>/*4b. for each patient, select the earliest Rx_ddddd*/<br/>data _BHA4b&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA4a&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn Rx_ddddd&#59<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsprename Rx_ddddd = DMT_FirstDate&#59<br/>run&#59<br/><br/>/*4c. add the DMT_FirstDate to _BHA3*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BHA3,<br/>&nbsp&nbsp&nbsp&nbspt2=_BHA4b,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA4c ,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.DMT_FirstDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspint(yrdif(t1.birth, t2.DMT_FirstDate, 'age')) as Age_DMT_FirstDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=key_hsn<br/>)&#59<br/><br/>/*4d. keep the patients received a DMT before age 25*/<br/>data _BHA4d&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspset _BHA4c&#59<br/>&nbsp&nbsp&nbsp&nbspif Age_DMT_FirstDate < 25&#59<br/>run&#59<br/><br/><br/>/*5. More quesions from Helen<br/>&nbsp&nbsp&nbsp&nbspe.g. Which calendar years first Rx was filled <br/>*/<br/>/*<br/>5.a Which calendar years first Rx was filled<br/>*/<br/>data _BHA5a&#59<br/>&nbsp&nbsp&nbsp&nbspset _BHA4c&#59<br/>&nbsp&nbsp&nbsp&nbspagecat_DMT_FirstDate = '<25'&#59<br/>&nbsp&nbsp&nbsp&nbspif Age_DMT_FirstDate ge 25 then agecat_DMT_FirstDate='25+'&#59<br/>&nbsp&nbsp&nbsp&nbspyear_DMT_FirstDate=year(DMT_FirstDate)&#59<br/>run&#59<br/>%freq(data=_BHA5a, table = year_DMT_FirstDate * agecat_DMT_FirstDate)&#59<br/><br/>/*5.b What first DMT were prescribed*/<br/>%print(data=_BHA2c1)&#59<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_BHA5a,<br/>&nbsp&nbsp&nbsp&nbspt2=_BHA2c1,<br/>&nbsp&nbsp&nbsp&nbsptarget=_BHA5b,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.DIN, t2.generic_name, t2.class_short),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjterm = %str(t1.key_hsn = t2.key_hsn and t1.DMT_FirstDate=t2.Rx_ddddd),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(key_hsn)<br/>)&#59<br/><br/><br/>proc tabulate data=_BHA5b &#59<br/>/*&nbsp&nbsp&nbsp&nbspwhere Age_DMT_FirstDate < 25 &#59*/<br/>&nbsp&nbsp&nbsp&nbspclass Generic_Name  year_DMT_FirstDate agecat_DMT_FirstDate&#59<br/>&nbsp&nbsp&nbsp&nbsptable<br/>&nbsp&nbsp&nbsp&nbsp/*rows*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyear_DMT_FirstDate<br/>&nbsp&nbsp&nbsp&nbsp,<br/>&nbsp&nbsp&nbsp&nbsp/*cols*/<br/>&nbsp&nbsp&nbsp&nbspagecat_DMT_FirstDate * &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspGeneric_Name <br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-ejvYlwKSN3OCpqYL"}]}],"custparents":[{"idx":"CodeTask-FbJWB8KdTyTzpLCr"}]}],"custparents":[{"idx":"CodeTask-wSmjgQBu1BFXjMFE"}]},{"idx":"MY827082a1-12dc-466b-91aa-76ff0512cad6","name":"Questions","children":[{"idx":"Note-IGQmwxv9ULQirj9t","name":"Q BFA","NodeDescription":"///t<br/>Question:What&nbspif&nbspthere&nbspare&nbsppatients&nbspmissing&nbspage&nbspand&nbspsex&nbspinfo<br/>t///","custparents":[{"idx":"CodeTask-wSmjgQBu1BFXjMFE"}]},{"idx":"Note-JblTiYcw7VVcCzQ2","name":"Q BFB","NodeDescription":"///t<br/>Q&nbspBBHow&nbspmany&nbsppatients&nbsp<&nbsp18&nbspyeas&nbspold&nbspat&nbspentryHow&nbspmany&nbsphad&nbspan&nbsponset&nbsp(the&nbspfirst&nbspMS&nbspdx)&nbspbefore&nbsp18&nbsp<br/>t///","children":[{"idx":"Note-FaeMxdCUJkhIE5ma","name":"QBFB Test","NodeDescription":"///t<br/>BB&nbspQ11.1a.2.Q1Tests&nbspfor&nbspQ_BBHow&nbspmany&nbsppatients&nbsphad&nbspan&nbsponset&nbsp(the&nbspfirst&nbspMS&nbspdx)&nbspbefore&nbsp18How&nbspmany&nbspreceived&nbspa&nbspDMT&nbspbefore&nbsp18&nbsp[Why]Re&nbspCharity's&nbspemail&nbspto&nbspshy516&nbspon&nbsp20181213.&nbspThe&nbspteam&nbspwant&nbspto&nbspknow&nbspwhether&nbspor&nbspnot&nbspthere&nbspare&nbspenough&nbspnumber&nbspof&nbspyoung&nbsppatients&nbspfor&nbspseparate&nbspanalyses&nbsp[End&nbspof&nbspwhy]<br/>t///","children":[{"idx":"CodeTask-PCOv1BtUAFLWCx2v","name":"QBFB","NodeDescription":"///t<br/>///s<br/>/*Q BB # patients <= 18 at entry*/<br/><br/>/*%print(data=localt.ba)<br/>%freq(data=localt.ba, table=first_admin_code_year)<br/>*/<br/>data _null_&#59run&#59<br/><br/>/*QBB1, from localt.ba (the cohort, select those with age_first_admin_code_date < 18 )*/<br/>data QBB1&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.ba&#59<br/>&nbsp&nbsp&nbsp&nbspif age_first_admin_code_date < 18&#59<br/>&nbsp&nbsp&nbsp&nbspfirstRxYear=year(firstRxDate_ever)&#59<br/>&nbsp&nbsp&nbsp&nbspfirstDxYear = year(DxDate)&#59<br/>run&#59<br/><br/>/*QBB2, # patients < 18 at the first dx group them by firstDxYear*/<br/>%MakeCategories(<br/>                Data=QBB1, <br/>                theVar=firstDxYear,<br/>                theTargetVar=FirstYear_Cat,<br/>                theCutOffs=1996 1999 2002 2005 2008 2011 2015, <br/>                dlmt=, <br/>                debug=, <br/>                closeSide=left,<br/>                target=QBB2a<br/>)&#59<br/>%freq(data=QBB2a, table=FirstYear_Cat, option=%str(nopct norow nocol out=QBB2))&#59<br/><br/>/*QBB3, # patients < 18 at the first Rx of DMT by firstRxYear*/<br/>&nbsp&nbsp&nbsp&nbsp/*QBB3a. get those with firstRxDate_ever <= dxDate*/<br/>&nbsp&nbsp&nbsp&nbspdata QBB3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset QBB1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif firstRxDate_ever ne . &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage_firstRx = int( yrdif(birth, firstRxDate_ever, 'age'))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif age_firstRx <18&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>%freq(data=QBB3a, table=firstDxYear)&#59<br/>%freq(data=QBB3a, table=firstRxYear)&#59<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"Note-FaeMxdCUJkhIE5ma"}]}],"custparents":[{"idx":"Note-JblTiYcw7VVcCzQ2"}]}],"custparents":[{"idx":"CodeTask-wSmjgQBu1BFXjMFE"}]}]}],"custparents":[{"idx":"CodeTask-uyuDGQlQbkUGnfwI"}]},{"idx":"MYd17e78a7-4c78-46d7-958d-21a7131870dc","name":"Questions","children":[{"idx":"Note-gsmBnNzG7r9h3wED","name":"Q_AE1","NodeDescription":"///t<br/>Q_AE1How&nbspmany&nbspcases&nbspin&nbspthe&nbspfirst&nbspyear&nbspare&nbsppossibly&nbspprevalent&nbspusers?<br/>t///","children":[{"idx":"Note-DYWToDln4CQTN7N9","name":"AE.QTest1","NodeDescription":"///t<br/>AE.Q11.1a.1.5.QTest1Tests&nbspfor&nbspQ_AE1How&nbspmany&nbspcases&nbspin&nbspthe&nbspfirst&nbspyear&nbspare&nbsppossibly&nbspprevalent&nbspusers?[Why][End&nbspof&nbspWhy]1.&nbspList&nbspout&nbspthe&nbspcases&nbspby&nbspyear&nbsp(from&nbspCA.&nbspIn&nbspCA,&nbspthose&nbspare&nbspexcluded&nbspif&nbspnot&nbsphaving&nbspage,&nbspsex,&nbspand&nbspcoverage&nbspinfo)2.&nbspFrom&nbspCA,&nbspexclud&nbspthose&nbspwho,&nbspwithin&nbsp1&nbspto&nbsp5&nbspyears&nbspprior&nbspto&nbspthe&nbspfirst_admin_code_date,&nbsphad&nbspMS&nbsprelated&nbspdiagnostic&nbspcodes&nbspin&nbsphospitalization&nbspor&nbspphysician&nbspservice&nbsprecords,&nbspor&nbsphad&nbspMS&nbspDMD&nbspclaims&nbspin&nbspthe&nbsppharmacy&nbspdata.2.1&nbspFrom&nbspAEA1,&nbspselect&nbspcases&nbspsince&nbspthe&nbspfirst_admin_code_year&nbsp>=&nbsp&amp&#59DataStartYear&nbsp+&nbsp&amp&#59Years_lookback&nbspe.g.,&nbspif&nbspDataStartYear=1996&nbspand&nbsp&amp&#59Years_lookback&nbsp=&nbsp1,&nbspthen&nbspselect&nbspcases&nbspsince&nbsp1997.&nbspCases&nbspin&nbsp1996&nbspwill&nbspbe&nbspexcluded&nbspas&nbspunable&nbspto&nbspdetermine&nbspthe&nbspprior&nbspMS&nbspdiagnoses&nbspand&nbspDMD&nbspdispensations2.2&nbspCombine&nbspthe&nbspMS&nbspdiagnostic&nbsprecords&nbspand&nbspDMD&nbspclaims&nbspfrom&nbspthe&nbsphospital&nbspdata&nbsp(in&nbspAA),&nbspthe&nbspphysician&nbspservice&nbspdata&nbsp(in&nbspAB),and&nbspthe&nbsppharamcy&nbspclaims&nbsp(in&nbspAD4)2.2.1Get&nbspa&nbspdistinct&nbsplist&nbspof&nbsppatient&nbspand&nbspdxdate&nbspfrom&nbspthe&nbspaforementioned&nbspthree&nbspsources2.2.2&nbspkeep&nbspdistinct&nbspcombination&nbspof&nbspstudyID&nbspand&nbspdxDate2.3&nbspFor&nbspcases&nbspin&nbspAEA2a,&nbspexclude&nbspthose&nbspin&nbspAEA2b&nbspif&nbsp&nbspfirst_admin_code_date&nbsp-&nbspdxDate&nbspbetween&nbsp1&nbspand&nbsp&amp&#59Years_lookback&nbsp*&nbsp365.24&nbspdaysi.e.,&nbspexcluding&nbspthose&nbspwith&nbspMS&nbspdiagnosis&nbspor&nbspreceiving&nbspDMD&nbspwithin&nbsp&amp&#59years_lookback&nbspprior&nbspto&nbspthe&nbspfirst_admin_code_date2.3.1,&nbspfrom&nbspAEA2a,&nbspselect&nbspthose&nbsphaving&nbspMS&nbspdiagnosis&nbspor&nbspDMD&nbspclaims&nbspwithin&nbspthe&nbsplookback&nbspperiod2.3.2,&nbspform&nbspAEA2a,&nbspexclude&nbspthose&nbspin&nbspAEA2c1&nbsp(excluding&nbspthose&nbsphaving&nbspMS&nbspdiagnoses&nbspor&nbspDMD&nbspclaims&nbspwithin&nbspthe&nbsplookback)3.&nbspreport&nbspthe&nbspnumber&nbspof&nbspcases&nbspby&nbspfirst_admin_code_year<br/>t///","children":[{"idx":"CodeTask-VPYz77cFPHyZwFdi","name":"AEA Qtest1","NodeDescription":"///t<br/>///s<br/>/*<br/>AE.Q1<br/>1.1a.1.5.QTest1<br/>Tests for Q_AE1<br/><br/>How many cases in the first year are possibly prevalent users?<br/><br/>[Why]<br/><br/><br/>[End of Why]<br/>*/<br/><br/>data _null_&#59run&#59<br/><br/>%let theStudyID=Key_hsn&#59<br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(MS patients by year)&#59<br/>%let CloseXls=&#59<br/><br/>%let DataStartYear=1996&#59<br/>/*<br/>1. List out the cases by year (from the data set CA. In CA, those are excluded if not having age, sex or coverage info)<br/>*/<br/>%freq(data=localt.CA noprint, table=first_admin_code_year, option=%str(out=AEA1a))&#59<br/>data AEA1b&#59<br/>&nbsp&nbsp&nbsp&nbspset AEA1a&#59<br/>&nbsp&nbsp&nbsp&nbspcol='c' || strip(first_admin_code_year)&#59<br/>run&#59<br/>%transpose(data=AEA1b, target=AEA1, rowhead=, colhead=col, contents=count)&#59<br/>/*report*/<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEA1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&DataStartYear - 1982), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*2. From CA, exclud those who, within 1 to 5 years prior to the first_admin_code_date, had MS related diagnostic codes in <br/>&nbsp&nbsp&nbsp&nbsphospitalization or physician service records, or had MS DMD claims in the pharmacy data.*/<br/>/*2.1 From AEA1, select cases since the first_admin_code_year >= &DataStartYear + &Years_lookback <br/>&nbsp&nbsp&nbsp&nbspe.g., if DataStartYear=1996 and &Years_lookback = 1, then select cases since 1997. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCases in 1996 will be excluded as unable to determine the prior MS diagnoses and DMD dispensations<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>%macro TestExcludePrevCase&#59<br/>&nbsp&nbsp&nbsp&nbsp%local Years_lookback&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do Years_lookback = 1 %to 1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData AEA2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.CA&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first_admin_code_year >= %eval( &DataStartYear + &Years_lookback )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.2 Combine the MS diagnostic records and DMD claims from the hospital data (in AA), the physician service data (in AB),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand the pharamcy claims (in AD4)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.2.1&nbsp&nbsp&nbsp&nbsp%print(data=localt.AA)&#59%print(data=localt.AB)&#59%print(data=localt.AD4)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEA2b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.AA localT.AB localt.AD4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.2.2 keep distinct combination of studyID and dxDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=AEA2b1, target=AEA2b, vars=%str(&theStudyID, dxDate))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.3 For cases in AEA2a, exclude those in AEA2b if  first_admin_code_date - dxDate between 1 and &Years_lookback * 365.24 days<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspi.e., excluding those with MS diagnosis or receiving DMD within &years_lookback prior to the first_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.3.1, from AEA2a, select those having MS diagnosis or DMD claims within the lookback period*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEA2a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=AEA2b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEA2c1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t1.first_admin_code_date - t2.dxDate between 1 and &Years_lookback * 365.24)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.3.2, form AEA2a, exclude those in AEA2c1 (excluding those having MS diagnoses or DMD claims within the lookback)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEA2a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEA2C,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from AEA2c1))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*3. report the number of cases by first_admin_code_year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=AEA2C noprint, table=first_admin_code_year, option=%str(out=AEA3a))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEA3b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEA3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='c' || strip(first_admin_code_year)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%transpose(data=AEA3b, target=AEA3, rowhead=, colhead=col, contents=count)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Report it */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEA3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=%eval(3 + &Years_lookback), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&DataStartYear - 1982 + &Years_lookback), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%end&#59 /*end looping Years_lookback*/<br/>%mend TestExcludePrevCase&#59<br/>%TestExcludePrevCase&#59<br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-YdsnpCcHOEIR1NmW","name":"AEAA Qtest1A","NodeDescription":"///t<br/>///s<br/>/*AEAA. test look back for MS cases */<br/>%let theStudyID=Key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/>data _null_&#59run&#59<br/><br/>%macro n3&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Combine AA and AB to get diagnostic records (dx records) from hospital file (hosp), and physician claims (phy)*/<br/>&nbsp&nbsp&nbsp&nbspdata AEAA0a1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.AA localt.AB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDisease='MS'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID DxDate Src Disease&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*keep records of patients in (excluding those not have phrs info on age sex, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAA0a1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=localt.DA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAA0a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*prepare a list of DMD claims by distinct patients and dates*/<br/>&nbsp&nbsp&nbsp&nbsp/*1. From localt.AD1 (all DMD Rx), select distinct records of patientID, DIN and serveDate*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=localt.AD1, target=AEAA0b1a, vars=%str(&theStudyID, DIN, &theServeDate))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*keep records of patients in (excluding those not have phrs info on age sex, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAA0b1a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=localt.DA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAA0b1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. From above, select distinct records of patientID, serveDate, and src*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=AEAA0b1, target=AEAA0b2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, &theServeDate), orderby=%str(&theStudyID, &theServeDate))&#59<br/><br/>%mend n3&#59<br/><br/>%macro testLookbackYr&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local dataStartYear NCasesFound NCasesExcld target i&#59<br/>&nbsp&nbsp&nbsp&nbsp%let target=localt.test_lookback&#59<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do dataStartYear=1996 %to 2018&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAA1. combine AA and AB to get diagnostic records (dx records) from hospital file (hosp), and physician claims (phy)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAA0a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif year(dxDate) ge &dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*%macro n&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAA2. select qualified MS cases according to dx records from AEAA1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%CaseDefV2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEAA1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAA2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstudyID=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxDateCol=dxDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnDX=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxYears=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxGapDays=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDQDateOrder=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheDiseaseCol=Disease, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsameDxcode=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*%mend n&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAA3 determine those solely identified by MSDMD claims (Rx)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the Rx claims since &dataStartYear*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA3a0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAA0b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif year(&theServeDate) ge &dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*a. From above, select the earliest servedate by patient, and indicate the date as the dxDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAA3a0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theServeDate = dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*b. Select those in AEAA3a but not in AEAA2. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThose are MS cases only can be identified from the dispensation claims*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAA3a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAA3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, 1 as Cohort1a_ID_DMD_onlyYN),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from AEAA2))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAA4, combine AC and AD, drop the col 'disease'. For those missing value of Cohort1a_ID_DMD_onlyYN (from hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service claims), indicate Cohort1a_ID_DMD_onlyYN=0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEAA4 contains all patients identified from hosp, phy, and Rx files*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAA2 AEAA3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop disease&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Cohort1a_ID_DMD_onlyYN=. then Cohort1a_ID_DMD_onlyYN=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=AEAA4, table=src * Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAA5. Determine the First_admin_code_date by linking the first date of DMD (in AEAA3a) to the cases in AEAA4<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote. It could be that MS cases were identified from the hospital/physician service records, while also receiving <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMS medications (DMD), and the date of the first dispensation of DMD is earleir than any dxDates from the hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service file. In that case, the First_admin_code_date = the first First_admin_code_date date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp??? need to check<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAA4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=AEAA3a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAA5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dxDate as firstRxDate_Ever, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcase<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate=. then t1.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate <= t2.dxDate then t1.DxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate > t2.dxDate then t2.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat date9. as First_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAA6 From above, drop the colum firstRxDate, indicate the calendar year<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEAA6 contains all MS patients who can be identified since &dataStartYear, with first_admin timing data*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAA5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year=year(First_admin_code_date)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*combine all records of dx from hosp and phy files, and Rx from DMD claims (between 1996 and 2018 )*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAA0a AEAA0b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxDate= . then dxDate=&theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for each patients, select dx records before the first_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAA6, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=AEAA7, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAA8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.First_admin_code_date, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.First_admin_code_year,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspint((t1.First_admin_code_date - t2.dxDate )/365.24)+1 as lookbackYr<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t2.dxDate < t1.First_admin_code_date)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the # cases found since &dataStartYear*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEAA6)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let NCasesFound=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro lookbackYears&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 0 %to &dataStartYear - 1996&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &i = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdataStartYear=&dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesfound=&ncasesfound&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplookback=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesExcld=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesRemain=&ncasesfound&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%goto skipforfirstYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*those can be found if looking back for i years (cases to be excluded)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=AEAA8, target=AEAA9a, vars=&theStudyID, filters=%str(lookbackyr le &i))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEAA9a)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let NCasesExcld=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*those in AEAA6, but not in AEAA9a (the remaining cases)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=AEAA6, target=AEAA9, vars=&theStudyID, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from AEAA9a)))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEAA9)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAA10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdataStartYear=&dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesfound=&ncasesfound&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplookback=&i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesExcld=&NCasesExcld&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesRemain=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>%skipforfirstYear:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target AEAA10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete AEAA9a AEAA9 AEAA10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend lookbackYears&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%lookbackYears&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete AEAA1: AEAA2: AEAA3: AEAA4: AEAA5: AEAA6: AEAA7: AEAA8:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 /*end looping for years*/<br/><br/><br/>%mend testLookbackYr&#59<br/>*%testLookbackYr&#59<br/>data AEAA21&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.test_lookback&#59<br/>&nbsp&nbsp&nbsp&nbspsy='sy' || strip(datastartyear)&#59<br/>run&#59<br/><br/>/*make a template of complete combination of datastartyears and lookbackyears*/<br/>data AEAA22&#59<br/>&nbsp&nbsp&nbsp&nbspdo dataStartYear = 1996 to 2018&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo lookback = 0 to 2018-1996&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsy= 'sy' || strip(datastartyear)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>/*Link the test data to the complete combination  */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=AEAA22,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.test_lookback,<br/>&nbsp&nbsp&nbsp&nbsptarget=AEAA23,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ncasesRemain),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=dataStartYear lookback<br/>)&#59<br/>%transpose(data=AEAA23, rowhead=lookback, colhead=sy, contents=ncasesRemain, target=AEAA24)&#59<br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Incidence by lookback)&#59<br/>%let CloseXls=&#59<br/>%let theDataStartYear=1996&#59<br/>/*report*/<br/>data AEAA25&#59<br/>&nbsp&nbsp&nbsp&nbspset AEAA24&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookback&#59<br/>run&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEAA25, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theDataStartYear - 1981), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-T43wW9VkU8pebxUz","name":"AEAA Qtest1A2","NodeDescription":"///t<br/>///s<br/>/*AEAB. test look back for MS cases */<br/>data _null_&#59run&#59<br/><br/><br/>%let theStudyID=Key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/><br/>%macro n3&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Combine AA and AB to get diagnostic records (dx records) from hospital file (hosp), and physician claims (phy)*/<br/>&nbsp&nbsp&nbsp&nbspdata AEAB0a1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.AA localt.AB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDisease='MS'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID DxDate Src Disease&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*keep records of patients in (excluding those not have phrs info on age sex, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAB0a1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=localt.DA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAB0a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*prepare a list of DMD claims by distinct patients and dates*/<br/>&nbsp&nbsp&nbsp&nbsp/*1. From localt.AD1 (all DMD Rx), select distinct records of patientID, DIN and serveDate*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=localt.AD1, target=AEAB0b1a, vars=%str(&theStudyID, DIN, &theServeDate))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*keep records of patients in (excluding those not have phrs info on age sex, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAB0b1a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=localt.DA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAB0b1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2. From above, select distinct records of patientID, serveDate, and src*/<br/>&nbsp&nbsp&nbsp&nbsp%distinct(data=AEAB0b1, target=AEAB0b2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, &theServeDate), orderby=%str(&theStudyID, &theServeDate))&#59<br/><br/>%mend n3&#59<br/><br/>%macro testLookbackYr2&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local dataStartYear NCasesFound NCasesExcld target i&#59<br/>&nbsp&nbsp&nbsp&nbsp%let target=localt.test_lookback2&#59<br/>&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do dataStartYear=1996 %to 2018&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAB1. combine AA and AB to get diagnostic records (dx records) from hospital file (hosp), and physician claims (phy)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAB0a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif year(dxDate) ge &dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*%macro n&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAB2. select qualified MS cases according to dx records from AEAB1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%CaseDefV2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEAB1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAB2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstudyID=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdxDateCol=dxDate, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnDX=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxYears=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDxGapDays=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDQDateOrder=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheDiseaseCol=Disease, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsameDxcode=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*%mend n&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAB3 determine those solely identified by MSDMD claims (Rx)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the Rx claims since &dataStartYear*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB3a0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAB0b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif year(&theServeDate) ge &dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59 <br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*a. From above, select the earliest servedate by patient, and indicate the date as the dxDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAB3a0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theServeDate = dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*b. Select those in AEAB3a but not in AEAB2. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThose are MS cases only can be identified from the dispensation claims*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAB3a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAB3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, 1 as Cohort1a_ID_DMD_onlyYN),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from AEAB2))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAB4, combine AC and AD, drop the col 'disease'. For those missing value of Cohort1a_ID_DMD_onlyYN (from hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service claims), indicate Cohort1a_ID_DMD_onlyYN=0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEAB4 contains all patients identified from hosp, phy, and Rx files, and the */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAB2 AEAB3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop disease&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Cohort1a_ID_DMD_onlyYN=. then Cohort1a_ID_DMD_onlyYN=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=AEAB4, table=src * Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAB5. Determine the First_admin_code_date by linking the first date of DMD (in AEAB3a) to the cases in AEAB4<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote. It could be that MS cases were identified from the hospital/physician service records, while also receiving <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMS medications (DMD), and the date of the first dispensation of DMD is earleir than any dxDates from the hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor physician service file. In that case, the First_admin_code_date = the first First_admin_code_date date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp??? need to check<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAB4,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=AEAB3a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAB5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dxDate as firstRxDate_Ever, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcase<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate=. then t1.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate <= t2.dxDate then t1.DxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate > t2.dxDate then t2.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat date9. as First_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*AEAB6 From above, drop the colum firstRxDate, indicate the calendar year<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEAB6 contains all MS patients who can be identified since &dataStartYear, with first_admin timing data<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand those withi the first_admin_code_date in the &dataStartYear*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAB5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year=year(First_admin_code_date)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif year(First_admin_code_date) =&dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*combine all records of dx from hosp and phy files, and Rx from DMD claims (between 1996 and 2018 )*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEAB0a AEAB0b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxDate= . then dxDate=&theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*for each patients, select dx records before the first_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEAB6, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=AEAB7, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEAB8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.First_admin_code_date, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1.First_admin_code_year,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspint((t1.First_admin_code_date - t2.dxDate )/365.24)+1 as lookbackYr<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(t2.dxDate < t1.First_admin_code_date)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the # cases found since &dataStartYear*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEAB6)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let NCasesFound=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro lookbackYears2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 0 %to &dataStartYear - 1996&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &i = 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdataStartYear=&dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesfound=&ncasesfound&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplookback=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesExcld=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesRemain=&ncasesfound&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%goto skipforfirstYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*those can be found if looking back for i years (cases to be excluded)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=AEAB8, target=AEAB9a, vars=&theStudyID, filters=%str(lookbackyr le &i))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEAB9a)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let NCasesExcld=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*those in AEAB6, but not in AEAB9a (the remaining cases)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=AEAB6, target=AEAB9, vars=&theStudyID, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID not in (select &theStudyID from AEAB9a)))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEAB9)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEAB10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdataStartYear=&dataStartYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesfound=&ncasesfound&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplookback=&i&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesExcld=&NCasesExcld&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspncasesRemain=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>%skipforfirstYear:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata &target&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &target AEAB10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete AEAB9a AEAB9 AEAB10&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend lookbackYears2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%lookbackYears2&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete AEAB1: AEAB2: AEAB3: AEAB4: AEAB5: AEAB6: AEAB7: AEAB8:&#59*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 /*end looping for years*/<br/><br/><br/>%mend testLookbackYr2&#59<br/>%testLookbackYr2&#59<br/>data AEAB21&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.test_lookback2&#59<br/>&nbsp&nbsp&nbsp&nbspsy='sy' || strip(datastartyear)&#59<br/>run&#59<br/><br/>/*make a template of complete combination of datastartyears and lookbackyears*/<br/>data AEAB22&#59<br/>&nbsp&nbsp&nbsp&nbspdo dataStartYear = 1996 to 2018&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo lookback = 0 to 2018-1996&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsy= 'sy' || strip(datastartyear)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>/*Link the test data to the complete combination  */<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=AEAB22,<br/>&nbsp&nbsp&nbsp&nbspt2=localt.test_lookback2,<br/>&nbsp&nbsp&nbsp&nbsptarget=AEAB23,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.ncasesRemain),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=dataStartYear lookback<br/>)&#59<br/>%transpose(data=AEAB23, rowhead=lookback, colhead=sy, contents=ncasesRemain, target=AEAB24)&#59<br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Incidence by lookback2)&#59<br/>%let CloseXls=&#59<br/>%let theDataStartYear=1996&#59<br/>/*report*/<br/>data AEAB25&#59<br/>&nbsp&nbsp&nbsp&nbspset AEAB24&#59<br/>&nbsp&nbsp&nbsp&nbspdrop lookback&#59<br/>run&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEAB25, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theDataStartYear - 1981), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>s///<br/>t///","custparents":[{"idx":"CodeTask-YdsnpCcHOEIR1NmW"}]}],"custparents":[{"idx":"CodeTask-VPYz77cFPHyZwFdi"}]}],"custparents":[{"idx":"Note-DYWToDln4CQTN7N9"},{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]}],"custparents":[{"idx":"Note-gsmBnNzG7r9h3wED"}]}],"custparents":[{"idx":"CodeTask-uyuDGQlQbkUGnfwI"}]},{"idx":"Note-YZbmBlZuTuEJlPmt","name":"Q_AE2","NodeDescription":"///t<br/>Q_AE2The&nbspnonadjudicated&nbspclaims&nbspwere&nbspsince&nbsp2008,&nbsphow&nbspmany&nbspwere&nbspmissing&nbspbetween&nbsp1996&nbspand&nbsp2008<br/>t///","children":[{"idx":"Note-bIGY93lFp31eE9MT","name":"AE.QTest2","NodeDescription":"///t<br/>AE.Q21.1a.1.5.QTest2Tests&nbspfor&nbspQ_AE2[Why]Missing&nbspof&nbspdata&nbspin&nbspa&nbspparticular&nbsptime&nbspperiod(e.g.,&nbspmissing&nbspnon-adjudicated&nbsppharamcy&nbspclaims&nbspbefore&nbsp2008)&nbspmay&nbsphave&nbspimpact&nbspto&nbspMS&nbspcase&nbspidentification.&nbspThe&nbsptypes&nbspof&nbspimpact&nbspinclude:Despite&nbspof&nbspthe&nbspvarious&nbsppatterns,&nbspthe&nbspinterest&nbsprests&nbspon&nbspthe&nbspfollowing:1)&nbspwhether&nbspthe&nbsppatient&nbspcan&nbspstill&nbspbe&nbspidentified2)&nbspis&nbspthe&nbspfirst_admin_code_date&nbspchangedFor&nbspthese&nbsptwo&nbspmeasures,&nbspthe&nbspidea&nbspis&nbspto&nbspcompare&nbspthe&nbspdifference&nbspbetween&nbsptwo&nbspscenarios&nbspof&nbspa&nbspselected&nbspcalendar&nbspyear:1)&nbspwith&nbspall&nbspdata&nbspsources&nbsp(physician&nbspservice,&nbsphospitalizaiton,&nbsppharmacy&nbspclaims)2)&nbspwith&nbspdata&nbspsource&nbspbut&nbspnon-adjudicated&nbsppharmacy&nbsprecords&nbspof&nbspa&nbspyear.&nbspThe&nbspanalysis&nbspis&nbsprepeated&nbspfor&nbspcalendar&nbspyears&nbsp(for&nbspSK,&nbspfrom&nbsp2006&nbspto&nbsp2017),&nbspsuch&nbspto&nbspillustrate&nbspthe&nbspimpact&nbspby&nbspdifferent&nbspyears.&nbsp[End&nbspof&nbspwhy]0.The&nbspcases&nbspidentified&nbspfrom&nbspall&nbspsources0.0.1&nbspCreate&nbspan&nbspempty&nbspdataset&nbsp(AEB)&nbspto&nbspstore&nbspthe&nbspfinal&nbspresults.0.0.2&nbspCases&nbspidentified&nbspby&nbspall&nbspsources&nbsp(in&nbspData&nbspset&nbspCA,&nbspwhich&nbspexcludes&nbspthose&nbspnot&nbsphave&nbspage,&nbspsex,&nbspor&nbspcoverage&nbspinfo)&nbsp0.1.&nbspadd&nbspthe&nbspnumber&nbspof&nbspcases&nbsp(by&nbspcomplete&nbspdata)&nbspinto&nbspthe&nbspfinal&nbspreport&nbspdata1.&nbspCases&nbspidentified&nbspby&nbspsources&nbspwithout&nbspnon-adjudicated&nbspclaim&nbspdata&nbspbefore&nbspand&nbspin&nbspthe&nbspspecified&nbspyear&nbsp(e.g.,&nbsp2006)1.1.&nbspMS&nbspcases&nbspidentified&nbspfrom&nbsphospital&nbspand&nbspMSB&nbspdata&nbsp(in&nbspAC)1.2.&nbspFrom&nbspms_DMD&nbsprelated&nbsppharmacy&nbspclaims(AD1,&nbspprepared&nbspin&nbspprogram&nbspAD),&nbspselect&nbspclaims&nbspfrom&nbspadjudicated&nbspdata&nbspof&nbspall&nbsptime,&nbsp&nbspand&nbspthose&nbspfrom&nbspnon-adjudicated&nbspdata&nbspafter&nbspthe&nbspspecified&nbspyeare.g.,&nbspafter&nbsp20081.2.1.&nbspFrom&nbspAD1,&nbspselect&nbspdistinct&nbsprecords&nbspof&nbsppatientID,&nbspDIN&nbspand&nbspserveDate1.2.2.&nbspFrom&nbspabove,&nbspselect&nbspdistinct&nbsprecords&nbspof&nbsppatientID,&nbspserveDate,&nbspand&nbspsrc1.2.3.&nbspFrom&nbspabove,&nbspselect&nbspthe&nbspearliest&nbspservedate&nbspby&nbsppatient,&nbspand&nbspindicate&nbspthe&nbspdate&nbspas&nbspthe&nbspdxDate1.2.4.&nbspSelect&nbspthose&nbspin&nbspAEB_1B3&nbspbut&nbspnot&nbspin&nbspAEB_1A.&nbspThose&nbspare&nbspMS&nbspcases&nbsponly&nbspcan&nbspbe&nbspidentified&nbspfrom&nbspthe&nbspdispensation&nbspclaims1.3&nbspCombine&nbspAEB_1A&nbspand&nbspAEB_1B,&nbspto&nbsphave&nbspthe&nbspcohort&nbspidentified&nbspfrom&nbspsources&nbspother&nbspthan&nbspthe&nbspnon-adjudicated&nbsppharamcy&nbspclaim&nbspof&nbspthe&nbspyear1.3.1,&nbspcombine&nbspAEB_1A&nbspand&nbspAEB_1B,&nbspdrop&nbspthe&nbspcol&nbsp'disease'.&nbspFor&nbspthose&nbspmissing&nbspvalue&nbspof&nbspCohort1a_ID_DMD_onlyYN&nbsp(from&nbsphospitalor&nbspnon-adjudicated&nbsppharamcy&nbspclaim&nbspclaims),&nbspindicate&nbspCohort1a_ID_DMD_onlyYN=01.3.2.&nbspDetermine&nbspthe&nbspFirst_admin_code_date&nbspby&nbsplinking&nbspthe&nbspfirst&nbspdate&nbspof&nbspDMD&nbsp(in&nbspAEB_1B3)&nbspto&nbspthe&nbspcases&nbspin&nbspAEB_1C1Note.&nbspIt&nbspcould&nbspbe&nbspthat&nbspMS&nbspcases&nbspwere&nbspidentified&nbspfrom&nbspthe&nbsphospital/non-adjudicated&nbsppharamcy&nbspclaim&nbsprecords,&nbspwhile&nbspalso&nbspreceiving&nbspMS&nbspmedications&nbsp(DMD),&nbspand&nbspthe&nbspdate&nbspof&nbspthe&nbspfirst&nbspdispensation&nbspof&nbspDMD&nbspis&nbspearleir&nbspthan&nbspany&nbspdxDates&nbspfrom&nbspthe&nbsphospitalor&nbspnon-adjudicated&nbsppharamcy&nbspclaim&nbspfile.&nbspIn&nbspthat&nbspcase,&nbspthe&nbspFirst_admin_code_date&nbsp=&nbspthe&nbspfirst&nbspFirst_admin_code_date&nbsp???&nbspneed&nbspto&nbspcheck1.3.3&nbspFrom&nbspabove,&nbspdrop&nbspthe&nbspcolum&nbspfirstRxDate,&nbspindicate&nbspthe&nbspcalendar&nbspyear1.3.4&nbspexlcuding&nbsppatients&nbspnot&nbspin&nbspdata&nbspset&nbspCA&nbsp(those&nbspnot&nbsphaving&nbspsex&nbspor&nbspcoverage&nbspinfo)2.compare&nbspthe&nbspcases&nbspidentified&nbspin&nbspstep&nbsp1&nbsp(AEB_1C)&nbspwith&nbspcases&nbspidentifed&nbspfrom&nbspall&nbspsources&nbsp(AEB_0A)indicate&nbspthose&nbsponly&nbspidentified&nbspwhen&nbspnot&nbspmissing&nbspnon-adjudicated&nbsppharamcy&nbspclaim&nbspdata&nbspof&nbspthe&nbspyear2.1.1&nbspcompare&nbspthe&nbsptwo&nbspdata&nbspsets&nbsp(AEB_1C&nbspis&nbspfrom&nbspdata&nbspmissing&nbspnon-adjudicated&nbsppharamcy&nbspclaim&nbspdata&nbspof&nbspthe&nbspyear,&nbspAEB_0A&nbspis&nbspfrom&nbspdata&nbspnot&nbspmissing&nbspnon-adjudicated&nbsppharamcy&nbspclaim&nbspdata&nbspof&nbspthe&nbspyear)2.1.2&nbspcount&nbsp#&nbsppatient&nbspmissing&nbspbecause&nbspof&nbspabense&nbspof&nbspnon-adjudicated&nbsppharamcy&nbspclaim&nbspdata&nbspof&nbspthe&nbspyear3.compare&nbspthe&nbspcases&nbspidentified&nbspin&nbspstep&nbsp1&nbsp(AEB_1C)&nbspwith&nbspcases&nbspidentifed&nbspfrom&nbspall&nbspsources&nbsp(AEB_0A)indicate&nbspthose&nbspwith&nbspa&nbspdifferent&nbspFirst_admin_code_date3.1&nbspselect&nbspcases&nbspin&nbspboth&nbspAEB_1C&nbspand&nbspAEB_0A,&nbspindicate&nbspwhether&nbspor&nbspnot&nbsphaving&nbspthe&nbspsame&nbspFirst_admin_code_date3.2&nbspestimate&nbspthe&nbspmean,&nbspmedian&nbspof&nbspFirst_admin_code_date&nbspdays&nbspchanged&nbspbecause&nbspof&nbspabsence&nbspof&nbspthe&nbspphysician&nbspdata3.2.1&nbspthe&nbspmean&nbspand&nbspSTD&nbspof&nbspdays&nbspdelayed3.2.2&nbspthe&nbspmedian&nbspand&nbspIQR&nbspof&nbspdays&nbspdelayed3.2.3&nbspthe&nbspnumber&nbspof&nbspcases&nbspwith&nbspexactly&nbspthe&nbspmedian&nbspdays-delayed3.2.4&nbspPutting&nbspthe&nbspstats&nbspof&nbspthe&nbspspecified&nbspyear&nbsptogether4.Merge&nbspthe&nbspyear&nbspspecific&nbspresults&nbspinto&nbspthe&nbspfinal&nbspreport&nbspdata&nbspset&nbsp(AEB)<br/>t///","children":[{"idx":"CodeTask-u9Ww47jncKOLS8ES","name":"AEB.Qtest2","NodeDescription":"///t<br/>///s<br/>/*<br/>AEB.Q2<br/>1.1a.1.5.QTest2<br/>Tests for Q_AE2<br/><br/>[Why]<br/>&nbsp&nbsp&nbsp&nbspMissing of data in a particular time period(e.g., missing non-adjudicated pharamcy claims before 2008) may have impact to MS case identification. The types of impact include:<br/><br/>&nbsp&nbsp&nbsp&nbspDespite of the various patterns, the interest rests on the following:<br/>&nbsp&nbsp&nbsp&nbsp1) whether the patient can still be identified<br/>&nbsp&nbsp&nbsp&nbsp2) is the first_admin_code_date changed<br/><br/>&nbsp&nbsp&nbsp&nbspFor these two measures, the idea is to compare the difference between two scenarios of a selected calendar year:<br/>&nbsp&nbsp&nbsp&nbsp1) with all data sources (non-adjudicated pharamcy claim, hospitalizaiton, pharmacy claims)<br/>&nbsp&nbsp&nbsp&nbsp2) with data source but non-adjudicated pharmacy records of a year. <br/>&nbsp&nbsp&nbsp&nbspThe analysis is repeated for calendar years (for SK, from 2008 to 2017), such to illustrate the impact by different years. <br/>[End of why]<br/>*/<br/><br/><br/>data _null_&#59run&#59<br/><br/>%let theStudyID=key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/><br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Missing Pharmacy Claims)&#59<br/>%let CloseXls=&#59<br/><br/>%macro test_MissingPharmacyData(debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local theYear debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*0.0.1 Create an empty dataset (AEB) to store the final results.*/<br/>&nbsp&nbsp&nbsp&nbspdata localt.AEB&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*0.0.2 Cases identified by all sources (in Data set CA, which excludes those not have age, sex, or coverage info) */<br/>&nbsp&nbsp&nbsp&nbspdata AEB_0A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.CA&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do theYear = 2008 %to 2018&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*0.1. add the number of cases (by complete data) into the final report data*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEB_0A)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_0B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_completeData'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_completeDATA=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(N_completeDATA, comma8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1. Cases identified by sources without non-adjudicated claim data before and in the specified year (e.g., 2006)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.1. MS cases identified from hospital and MSB data (in AC)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData AEB_1A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset localt.AC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=AEB_1A, table=src)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1.2. From ms_DMD related pharmacy claims(AD1, prepared in program AD), select <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclaims from adjudicated data of all time,  and those from non-adjudicated data after the specified year<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., after 2008<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.1. From AD1, select distinct records of patientID, DIN and serveDate*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=localt.AD1, target=AEB_1B1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(&theStudyID, DIN, &theServeDate), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(dpSrc='be' or (DpSrc='nb' and year(&theServeDate) GT &theYear))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.2. From above, select distinct records of patientID, serveDate, and src*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=AEB_1B1, target=AEB_1B2, vars=%str(&theStudyID, &theServeDate), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=%str(&theStudyID, &theServeDate))&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.3. From above, select the earliest servedate by patient, and indicate the date as the dxDate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_1B3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_1B2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theServeDate = dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsrc='m'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.2.4. Select those in AEB_1B3 but not in AEB_1A. Those are MS cases only can be identified from the dispensation claims*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEB_1B3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEB_1B, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, 1 as Cohort1a_ID_DMD_onlyYN),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(key_hsn not in (select key_hsn from AEB_1A))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3 Combine AEB_1A and AEB_1B, to have the cohort identified from sources other than the non-adjudicated pharamcy claim of the year*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.1, combine AEB_1A and AEB_1B, drop the col 'disease'. For those missing value of Cohort1a_ID_DMD_onlyYN (from hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor non-adjudicated pharamcy claim claims), indicate Cohort1a_ID_DMD_onlyYN=0*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_1C1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_1A AEB_1B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop disease&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Cohort1a_ID_DMD_onlyYN=. then Cohort1a_ID_DMD_onlyYN=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=AEB_1C1, table=src * Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.2. Determine the First_admin_code_date by linking the first date of DMD (in AEB_1B3) to the cases in AEB_1C1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote. It could be that MS cases were identified from the hospital/non-adjudicated pharamcy claim records, while also receiving <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMS medications (DMD), and the date of the first dispensation of DMD is earleir than any dxDates from the hospital<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor non-adjudicated pharamcy claim file. In that case, the First_admin_code_date = the first First_admin_code_date <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp??? need to check<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEB_1C1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=AEB_1B3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEB_1C2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.dxDate as firstRxDate_Ever, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcase<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate=. then t1.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate <= t2.dxDate then t1.DxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen t2.dxDate ne . and t1.dxDate > t2.dxDate then t2.dxDate<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat date9. as First_admin_code_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.3 From above, drop the colum firstRxDate_Ever, indicate the calendar year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_1C3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_1C2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year=year(First_admin_code_date)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop firstRxDate_Ever dxDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1.3.4 exlcuding patients not in data set CA (those not having sex or coverage info)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEB_1C3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEB_1C,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=*,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters=%str(&theStudyID in (select &theStudyID from localt.CA))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*%freq(data=AEB_1C, table=src*Cohort1a_ID_DMD_onlyYN)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.compare the cases identified in step 1 (AEB_1C) with cases identifed from all sources (AEB_0A)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindicate those only identified when not missing non-adjudicated pharamcy claim data of the year<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.1.1 compare the two data sets (AEB_1C is from data missing non-adjudicated pharamcy claim data of the year, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_0A is from data not missing non-adjudicated pharamcy claim data of the year)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%compAB(a=AEB_0A, b=AEB_1C, target=AEB_2A1, vars=&theStudyID)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*2.1.2 count # patient missing because of abense of non-adjudicated pharamcy claim data of the year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=AEB_2A1 noprint, table=compAB, option=%str(out=AEB_2A2))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_2A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_2A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif compAB='InA'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_Missing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEB_2A)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_2A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_Missing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_2B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_2A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif compAB='Both'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_NotMissing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEB_2B)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_2B&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_NotMissing'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*3.compare the cases identified in step 1 (AEB_1C) with cases identifed from all sources (AEB_0A)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspindicate those with a different First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*3.1 select cases in both AEB_1C and AEB_0A, indicate whether or not having the same First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=AEB_0A,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=AEB_1C,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEB_3A1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t2.src,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.First_admin_code_date - t1.First_admin_code_date as First_admin_code_date_diff),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyId<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3A&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_3A1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_diff >0 then First_admin_code_date_change=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_diff <0  then First_admin_code_date_change=-1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_diff =0 then First_admin_code_date_change=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=AEB_3A noprint, table=First_admin_code_date_change, option=%str(out=AEB_3A2))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3A3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_3A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_change=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_not_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEB_3A3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3A3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_not_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3A4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_3A2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date_change=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(count,comma8.)) || \"(\" || strip(put(percent/100, percent8.1)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if the above data set is empty, create a dummy and make theStat=0. This is to ensure that in <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe later combined summary table, the statistics about the current measure is not skipped*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=AEB_3A4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &nobs=0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3A4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='First_admin_code_date_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat='0'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*3.2 estimate the mean, median of First_admin_code_date days changed because of absence of the physician data*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEB_3A,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=First_admin_code_date_change ne 0,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=First_admin_code_date_diff,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=AEB_3B1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the mean and STD of days delayed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3B2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_3B1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='Mean_days_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(mean,comma8.)) || byte(177) || strip(put(std/100, comma8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the median and IQR of days delayed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3B3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_3B1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='Median_days_changed'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(median,comma8.)) || \"(\" || strip(put(std/100, comma8.)) || \")\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the number of cases with exactly the median days-delayed*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3B4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheYear=&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset AEB_3B1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theCat $100. theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCat='N_Median'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(N_Patients_median,comma8.)) &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theYear theCat theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Creat a row for the specified year*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3B5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat theStat $100.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStat=strip(put(&theYear, 8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Putting the stats together*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata AEB_3B6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_3B5<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_0B<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_2A<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_2B<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_3A3<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_3A4<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbspAEB_3B2<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_3B3<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAEB_3B4<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep theStat&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename theStat=theStat_&theYear&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Merge the year specific data into the final dataset*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata localt.AEB&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmerge localT.AEB AEB_3B6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete AEB_:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59 /*end of loop for years*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=Localt.AEB, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(2008 - 1981), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>%mend test_MissingPharmacyData&#59<br/>%test_MissingPharmacyData(debug=)&#59<br/>s///<br/>t///","custparents":[{"idx":"Note-bIGY93lFp31eE9MT"},{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]}],"custparents":[{"idx":"Note-YZbmBlZuTuEJlPmt"}]}],"custparents":[{"idx":"CodeTask-uyuDGQlQbkUGnfwI"}]},{"idx":"Note-4jO8rCgWGdGF8lav","name":"Q_AE3","NodeDescription":"///t<br/>Q_AE3What&nbspif&nbspthe&nbsppatient&nbspwas&nbspdiagnosed&nbspof&nbspMS&nbspfrom&nbsphospital&nbspor&nbspphysician&nbspservice&nbspfiles,&nbspbut&nbspthere&nbspis&nbspa&nbspMS&nbspdrug&nbspclaim&nbspahead&nbspof&nbspthe&nbspdiagnosis&nbspby&nbsphosp&nbspor&nbspphysician?<br/>t///","children":[{"idx":"Note-3lmG9NBZAnmBWiwT","name":"AE.QTest3","NodeDescription":"///t<br/>AE.Q31.1a.1.5.QTest3Tests&nbspfor&nbspQ_AE3What&nbspif&nbspthe&nbsppatient&nbspwas&nbspdiagnosed&nbspof&nbspMS&nbspfrom&nbsphospital&nbspor&nbspphysician&nbspservice&nbspfiles,&nbspbut&nbspthere&nbspis&nbspa&nbspMS&nbspdrug&nbspclaim&nbspahead&nbspof&nbspthe&nbspdiagnosis&nbspby&nbsphosp&nbspor&nbspphysician?[Why]To&nbspillustrate&nbspthe&nbspsequence&nbspof&nbspdiagnoses:How&nbspmany&nbsppatients&nbsphad&nbspMS&nbspDMD&nbspclaims&nbspbefore,&nbspon,&nbspand&nbspafter&nbspthe&nbspfirst_admin_code_dateIn&nbspAE,&nbspthe&nbspdxDate&nbspis&nbspthe&nbspdata&nbspof&nbspdiagnosis&nbspfrom&nbsphospital&nbspand&nbspphysician&nbspservice&nbspdata.&nbspIt&nbspis&nbspthe&nbspearliest&nbspdate&nbspof&nbspdiagnosis&nbspamong&nbspthe&nbspqualified&nbsp3.&nbspThe&nbspfirstRxDate&nbspis&nbspthe&nbspearliestdate&nbspreceiving&nbspan&nbspMS&nbspDMDThe&nbspfollowing&nbspis&nbspto&nbspcompare&nbspthe&nbspDxDate&nbspand&nbspthe&nbspfirstRxDate,&nbspindicate&nbspwhich&nbspone&nbspcomes&nbspfirst,&nbspand&nbsp[End&nbspof&nbspwhy]<br/>t///","children":[{"idx":"CodeTask-NLMXqbHSiYzrBORr","name":"AEC.Qtest3","NodeDescription":"///t<br/>///s<br/>/*AEC.Q3<br/>1.1a.1.5.QTest3<br/>Tests for Q_AE3<br/>What if the patient was diagnosed of MS from hospital or physician service files, but there is a MS drug claim ahead of the diagnosis by hosp or physician?<br/>[Why]<br/>&nbsp&nbsp&nbsp&nbspTo illustrate the sequence of diagnoses:<br/>&nbsp&nbsp&nbsp&nbspHow many patients had MS DMD claims before, on, and after the first_admin_code_date<br/><br/>&nbsp&nbsp&nbsp&nbspIn CA, the dxDate is the data of diagnosis from hospital and physician service data. It is the earliest date of diagnosis among the qualified 3. The firstRxDate_Ever is the earliest<br/>&nbsp&nbsp&nbsp&nbspdate receiving an MS DMD<br/><br/>&nbsp&nbsp&nbsp&nbspThe following is to compare the DxDate and the firstRxDate_Ever, indicate which one comes first, and <br/>[End of why]<br/>*/<br/><br/>data _null_&#59run&#59<br/><br/>/*%print(data=localt.CA)&#59*/<br/>data AEC_1A&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.CA&#59<br/>&nbsp&nbsp&nbsp&nbspformat DxVsRx $100.&#59<br/>&nbsp&nbsp&nbsp&nbspif firstRxDate_Ever =. then DxVsRx = 'No DMD dispensations'&#59<br/>&nbsp&nbsp&nbsp&nbspif firstRxDate_Ever ne . then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxDate > firstRxDate_Ever then DxVsRx = 'DMD dispensation eariler than hospital or physician diagnoses'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxDate = firstRxDate_Ever then DxVsRx = 'DMD dispensation and the earilest hospital or physician diagnosis on the same day'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif dxDate < firstRxDate_Ever then DxVsRx = 'DMD dispensation later than hospital or physician diagnoses'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>%freq(data=AEC_1A noprint, table=DxVsRx, option=%str(out=AEC_1b))&#59<br/><br/>data AEC_1c&#59<br/>&nbsp&nbsp&nbsp&nbspset AEC_1b&#59<br/>&nbsp&nbsp&nbsp&nbsppercent=percent /100&#59<br/>run&#59<br/><br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Time of RxVsDx)&#59<br/>%let CloseXls=&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=AEC_1c, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>)&#59<br/>s///<br/>t///","custparents":[{"idx":"Note-3lmG9NBZAnmBWiwT"},{"idx":"CodeTask-Rzvu6tEl1M3VaXSr"}]}],"custparents":[{"idx":"Note-4jO8rCgWGdGF8lav"}]}],"custparents":[{"idx":"CodeTask-uyuDGQlQbkUGnfwI"}]}]}],"custparents":[{"idx":"CodeTask-cLh4y7zaB5X4Ksey"},{"idx":"CodeTask-L5A9CGOhgG1qO2ZT"}]}],"custparents":[{"idx":"Note-NZOhHiUvfcTeff7f"}]}]},{"idx":"Note-CrZzK8TTAMz2LfoQ","name":"DA","NodeDescription":"///t<br/>DA&nbsp3.1a.2.1.1&nbsp&nbspVariables&nbspduringthe&nbspstudy&nbspfollow-up&nbspperiod1.&nbspdetermine&nbspthe&nbspFirst_to_last_admin_date&nbspin&nbspyearsFirst_to_last_admin_date&nbsp=&nbsp(Last_reg_date&nbsp-&nbspFirst_admin_code_date)/365.242.&nbspthe&nbspuse&nbspof&nbspMS&nbspmedications&nbsp(DMD)&nbspduring&nbspfollow-upfor&nbspthis&nbsppart,&nbsp2.1&nbspget&nbspall&nbspDMD&nbspclaims2.2&nbspdetermine&nbspwhether&nbspor&nbspnot&nbspreceiving&nbspANY&nbspDMD&nbspbetween&nbsp&nbspFirst_admin_code_date&nbspand&nbspLast_reg_date2.3&nbspdetermine&nbspwhether&nbspor&nbspnot&nbspreceiving&nbspa&nbspspecific&nbspDMD&nbspbetween&nbsp&nbspFirst_admin_code_date&nbspand&nbspLast_reg_date,&nbspand&nbspthe&nbspearliest&nbspdate&nbspreceiving&nbspa&nbspspecific&nbspDMD&nbspbetween&nbsp&nbspFirst_admin_code_date&nbspand&nbspLast_reg_date2.1,&nbspget&nbspthe&nbspDMD&nbspclaims&nbsp(from&nbspAD1&nbspprepared&nbspin&nbspprogram&nbspAD)received&nbspby&nbspthe&nbsppatients&nbspin&nbspDA1&nbspbetween&nbsp&nbspFirst_admin_code_date&nbspand&nbspLast_reg_date2.2&nbspfrom&nbspDA2a(DMD&nbspclaims&nbspbetween&nbsp&nbspFirst_admin_code_date&nbspand&nbspLast_reg_date)determine&nbspwhether&nbspor&nbspnot&nbspthe&nbsppatient&nbsphad&nbspreceived&nbspANY&nbspDMD2.2.1&nbspget&nbspa&nbspdistinct&nbsplist&nbspof&nbsppatient&nbspIDs&nbspof&nbspthose&nbspappear&nbspin&nbspDA2a&nbsp(those&nbspare&nbspwho&nbspreceived&nbspDMD&nbspduring&nbspfollow-up)2.2.2&nbsplink&nbspthe&nbspabove&nbspback&nbspto&nbspDA1,&nbspfor&nbspthose&nbspmatched&nbspon&nbspstudyIDs,&nbsplet&nbspAnyDMD_FollowUp=1for&nbspthose&nbspnot&nbspmatched,&nbsplet&nbsp&nbspAnyDMD_FollowUp=0&nbsp2.3&nbspfrom&nbspDA2a(DMD&nbspclaims&nbspbetween&nbsp&nbspFirst_admin_code_date&nbspand&nbspLast_reg_date)determine&nbspwhether&nbspor&nbspnot&nbspthe&nbsppatient&nbsphad&nbspreceived&nbspa&nbspspecific&nbspsubclass&nbspof&nbspDMD,&nbspand&nbspthe&nbspearliest&nbspdate&nbspof&nbspdispensationThis&nbspis&nbspachieved&nbspby&nbsprunning&nbspthe&nbspmacro&nbsp'getUseofSpecDMD'&nbspfor&nbspthe&nbspfollowing&nbspsteps:1)&nbspselect&nbspDMD&nbspclaims&nbspsatisfying&nbspthe&nbspcriteria&nbsp(e.g.,&nbspsubClass&nbspin&nbsp('IFNB_1B'))2)&nbspsort&nbspand&nbspkeep&nbspthe&nbspearliest&nbspclaim3)&nbsplink&nbspto&nbspthe&nbspCohort&nbsp(e.g.,&nbspDA2B)&nbspto&nbspindicate&nbspwhether&nbspor&nbspnot&nbspthe&nbsppatient&nbspreceived&nbspa&nbspspecific&nbspDMD,&nbspand&nbspthe&nbspfirstRxDate1.&nbsp'IFNB-1A_IM',&nbsp'IFNB-1A_SC',&nbsp'IFNB_1B',&nbsp'PEGINTERFERON_BETA_1A',&nbsp'EXTAVIA'AnyIFNB2.&nbsp'IFNB_1B'IFNB1B3.'IFNB-1A_SC'IFNB1ASC4.'IFNB-1A_IM'IFNB1AIM5.&nbsp'EXTAVIA'EXTA6.'PEGINTERFERON_BETA_1A'PEGI7.&nbsp'GLATIRAMER_ACETATE'AnyGLAT8.'GLATIRAMER_ACETATE'not&nbsp'02456915'GLAT209.'GLATIRAMER_ACETATE'is&nbsp'02456915'GLAT4010.'NATALIZUMAB'NATA11.'FINGOLIMOD'FING12.'DIMETHYL_FUMARATE'DIME13.'TERIFLUNOMIDE'TERI14.'DACLIZUMAB'DACL15.'OCRELIZUMAB'OCRE<br/>t///","children":[{"idx":"CodeTask-z5y9EOw6yBEkFHWQ","name":"DA. 3.1a.2.1.1  Variables duringthe study follow-up period","NodeDescription":"///t<br/>///s<br/>/*<br/>DA. 3.1a.2.1.1  <br/>Variables during the study follow-up period<br/>*/<br/><br/>data _null_&#59run&#59<br/><br/>%let theStudyID=key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/><br/>/* 1. determine the First_to_last_admin_date in years<br/>&nbsp&nbsp&nbsp&nbspFirst_to_last_admin_date = (Last_reg_date minus First_admin_code_date)/365.24<br/>*/<br/>Data DA1&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.ca&#59<br/>&nbsp&nbsp&nbsp&nbspFirst_to_last_admin_date = (Last_reg_date - First_admin_code_date)/365.24&#59<br/>run&#59 <br/><br/>/*2. the use of MS medications (DMD) during follow-up<br/>&nbsp&nbsp&nbsp&nbspfor this part, <br/>&nbsp&nbsp&nbsp&nbsp2.1 get all DMD claims<br/>&nbsp&nbsp&nbsp&nbsp2.2 determine whether or not receiving ANY DMD between First_admin_code_date and Last_reg_date<br/>&nbsp&nbsp&nbsp&nbsp2.3 determine whether or not receiving a specific DMD between First_admin_code_date and Last_reg_date, and <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe earliest date receiving a specific DMD between First_admin_code_date and Last_reg_date<br/>*/<br/><br/>/*2.1, get the DMD claims (from AD1 prepared in program AD)<br/>&nbsp&nbsp&nbsp&nbspreceived by the patients in DA1 between  First_admin_code_date and Last_reg_date<br/>*/<br/>/*%print(data=localt.ad1)&#59*/<br/><br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=localt.ad1,<br/>&nbsp&nbsp&nbsp&nbspt2=DA1,<br/>&nbsp&nbsp&nbsp&nbspTarget=DA2a,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theStudyID, t1.&theServeDate, t1.DIN, t1.Generic_name, t1.subClass),<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(t1.&theServeDate between First_admin_code_date and Last_reg_date ),<br/>&nbsp&nbsp&nbsp&nbsporderby=%str(DIN, &theStudyID, &theServeDate)<br/>)&#59<br/><br/>/*2.2 from DA2a(DMD claims between  First_admin_code_date and Last_reg_date)<br/>&nbsp&nbsp&nbsp&nbspdetermine whether or not the patient had received ANY DMD*/<br/>/*2.2.1 get a distinct list of patient IDs of those appear in DA2a (those are who received DMD during follow-up)*/<br/>%distinct(data=DA2a, target=DA2B1, vars=&theStudyID)&#59<br/>/*2.2.2 link the above back to DA1, for those matched on studyIDs, let AnyDMD_FollowUp=1<br/>&nbsp&nbsp&nbsp&nbspfor those not matched, let  AnyDMD_FollowUp=0 <br/>*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=DA1,<br/>&nbsp&nbsp&nbsp&nbspt2=DA2b1,<br/>&nbsp&nbsp&nbsp&nbspTarget=DA2B,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.&theStudyID = \"\", 0, 1) as AnyDMD_FollowUp),<br/>&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>)&#59<br/>%freq(data=DA2B, table=AnyDMD_FollowUp)&#59<br/>%freq(data=DA2A, table=subClass)&#59<br/><br/><br/>/*2.3 from DA2a(DMD claims between  First_admin_code_date and Last_reg_date)<br/>&nbsp&nbsp&nbsp&nbspdetermine whether or not the patient had received a specific subclass of DMD, and the earliest date of dispensation*/<br/><br/>%macro getUseofSpecDMD(theRxData=, theCohortData=, theSubClass=, theDINsAre=, theDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheReportClass=, target=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local theRxData theCohortData theSubClass theDINsAre theDINsAreNot theReportClass target debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theRxData=DA2a&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theCohortData=DA2b&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theSubClass=%str('IFNB-1A_IM', 'IFNB-1A_SC', 'IFNB_1B', 'PEGINTERFERON_BETA_1A', 'EXTAVIA')&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theDINsAre=&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theDINsAreNot=&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theReportClass=AnyIFNB&#59*/<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*1) select DMD claims satisfying the criteria*/<br/>&nbsp&nbsp&nbsp&nbspdata getUseofSpecDMD_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theRxData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(upcase(SubClass)) in (&theSubClass)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&theDINsAreNot) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand DIN not in (&theDINsAreNot)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %length(&theDINsAre) ne 0 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand DIN in (&theDINsAre)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*2) sort and keep the earliest claim */ <br/>&nbsp&nbsp&nbsp&nbsp%sort(data=getUseofSpecDMD_tmp1, sorter=%str(&theStudyID &theServeDate))&#59<br/>&nbsp&nbsp&nbsp&nbspdata getUseofSpecDMD_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUseofSpecDMD_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.&theStudyID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theServeDate = &theReportClass._firstRxDate_Flwp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep &theStudyID &theServeDate&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*3) link to the Cohort (e.g., DA2B) to indicate whether or not the patient received a specific DMD, and the firstRxDate_Flwp */<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=&theCohortData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUseofSpecDMD_tmp2,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTarget=&target,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, ifn(t2.&theReportClass._firstRxDate_Flwp = . , 0, 1) as &theReportClass._FollowUp,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2.&theReportClass._firstRxDate_Flwp,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(t1.last_reg_date - t2.&theReportClass._firstRxDate_Flwp)/365.24 as &theReportClass._Yrs1stRx2End<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theStudyID<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp%freq(data=&target, table=&theReportClass._FollowUp)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getUseofSpecDMD_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getUseofSpecDMD&#59<br/><br/>/*<br/>1. <br/>'IFNB-1A_IM', 'IFNB-1A_SC', 'IFNB_1B', 'PEGINTERFERON_BETA_1A', 'EXTAVIA'<br/>AnyIFNB<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA2b, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str('IFNB-1A_IM', 'IFNB-1A_SC', 'IFNB_1B', 'PEGINTERFERON_BETA_1A', 'EXTAVIA'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=AnyIFNB, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A1, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*The specific DMD groups are<br/>2. <br/>'IFNB_1B'<br/>IFNB1B<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A1, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'IFNB_1B'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=IFNB1B, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A2, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*3. <br/>'IFNB-1A_SC'<br/>IFNB1ASC<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A2, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'IFNB-1A_SC'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=IFNB1ASC, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A3, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>4.<br/>'IFNB-1A_IM'<br/>IFNB1AIM<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A3, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'IFNB-1A_IM'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=IFNB1AIM, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A4, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp<br/>5. <br/>'EXTAVIA'<br/>EXTA<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A4, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'EXTAVIA'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=EXTA, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A5, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>6.<br/>'PEGINTERFERON_BETA_1A'<br/>PEGI<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A5, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'PEGINTERFERON_BETA_1A'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=PEGI, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A6, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>7. <br/>'GLATIRAMER_ACETATE'<br/>AnyGLAT<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A6, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'GLATIRAMER_ACETATE'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=AnyGLAT, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A7, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>8.<br/>'GLATIRAMER_ACETATE'<br/>not '02456915'<br/>GLAT20<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A7, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'GLATIRAMER_ACETATE'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot='02456915', <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=GLAT20, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A8, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>9.<br/>'GLATIRAMER_ACETATE'<br/>is '02456915'<br/>GLAT40<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A8, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'GLATIRAMER_ACETATE'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre='02456915', <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=GLAT40, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A9, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>10.<br/>'NATALIZUMAB'<br/>NATA<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A9, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'NATALIZUMAB'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=NATA, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A10, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>11.<br/>'FINGOLIMOD'<br/>FING<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A10, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'FINGOLIMOD'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=FING, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A11, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>12.<br/>'DIMETHYL_FUMARATE'<br/>DIME<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A11, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'DIMETHYL_FUMARATE'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=DIME, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A12, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>13.<br/>'TERIFLUNOMIDE'<br/>TERI<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A12, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'TERIFLUNOMIDE'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=TERI, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A13, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>14.<br/>'DACLIZUMAB'<br/>DACL<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A13, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'DACLIZUMAB'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=DACL, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A14, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/>/*<br/>15.<br/>'OCRELIZUMAB'<br/>OCRE<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A14, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'OCRELIZUMAB'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=OCRE, <br/>&nbsp&nbsp&nbsp&nbsptarget=DA3A15, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*<br/>16.<br/>'ALEMTUZUMAB'<br/>ALEM<br/>*/<br/>%getUseofSpecDMD(<br/>&nbsp&nbsp&nbsp&nbsptheRxData=DA2a, <br/>&nbsp&nbsp&nbsp&nbsptheCohortData=DA3A15, <br/>&nbsp&nbsp&nbsp&nbsptheSubClass=%str( 'ALEMTUZUMAB'), <br/>&nbsp&nbsp&nbsp&nbsptheDINsAre=, <br/>&nbsp&nbsp&nbsp&nbsptheDINsAreNot=, <br/>&nbsp&nbsp&nbsp&nbsptheReportClass=ALEM, <br/>&nbsp&nbsp&nbsp&nbsptarget=localt.DA, <br/>&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"Note-ElEJ5ZnHjBKHmJZf","name":"DB","NodeDescription":"///t<br/>DB&nbsp3.1a.2.1&nbsp&nbspReport&nbspcohort&nbspcharacteristicsReport&nbspcohort&nbspcharacteristics3.1a.2.1.1For&nbspthis&nbspreport,&nbspeach&nbspcolumn&nbspis&nbspfor&nbspa&nbspspecified&nbspsubgroup&nbsp(or&nbspall)&nbspof&nbspthe&nbspcohort.&nbspThe&nbspfollowing&nbspreport&nbspis&nbspdone&nbspby&nbspcolumnIn&nbspthis&nbspprogram,&nbspthe&nbspreport&nbspis&nbspabout&nbspthe&nbspsubgroup&nbspof&nbspwhich&nbspCohort1a_ID_DMD_onlyYN=0.&nbspThe&nbspsource&nbspdataset&nbspis&nbspDA,&nbspwhich&nbspis&nbspprepared&nbspin&nbspprgram&nbspDA0.&nbspprepare&nbspthe&nbspsource&nbspdata&nbspset&nbspby&nbspselecting&nbspthose&nbspwith&nbspCohort1a_ID_DMD_onlyYN=0.&nbsp1.&nbspprepare&nbspand&nbspreport&nbspin&nbsprow4,&nbsp#&nbspof&nbspmembers&nbspin&nbspthe&nbspselected&nbspgroup2.&nbsprow5,&nbsp#&nbspof&nbspmembers&nbspby&nbspsex,&nbspi.e.,&nbspfemale&nbspand&nbspmale3.&nbsprow8,&nbsp#&nbspof&nbspmembers&nbspnot&nbspmissing&nbsp'First_admin_code_date'4.&nbsprow9,&nbsp#&nbspof&nbspmembers&nbspmissing&nbsp'First_admin_code_date&nbsp(which&nbspis&nbspthe&nbspdifference&nbspbetween&nbspDB1&nbspand&nbspDB3)5.&nbsprow10,&nbspmean,&nbspSD,&nbspmedian(IQR)&nbspof&nbspage&nbspat&nbsp'First_admin_code_date'5.1&nbspget&nbspmean&nbspSD&nbspmedian&nbspIQR&nbspof&nbspage&nbspon&nbsp\"First_admin_code_date\"5.2&nbspget&nbspmean&nbspand&nbspSD,&nbspand&nbsprearrange&nbspthem&nbspinto&nbsprows&nbspin&nbspthe&nbspsame&nbsptable,&nbspreport&nbspmean&nbspand&nbspSD5.3&nbspget&nbspmedian&nbspand&nbspIQR,&nbspand&nbsprearrange&nbspthem&nbspas&nbspmedian&nbsp(IQR)&nbspin&nbspthe&nbspsame&nbsprow,&nbspand&nbspthen&nbspreport5.4&nbspreport&nbspthe&nbspnumber&nbspof&nbsppatients&nbspwith&nbspexactly&nbspthe&nbspmedian&nbspage&nbsp(as&nbsprequested&nbspby&nbspprivacy&nbspregulations)6.&nbsprow13,&nbsp#&nbspof&nbspmembers&nbspnot&nbspmissing&nbsp'Age_First_admin_code_date7.&nbsprow15,&nbsp#&nbspof&nbspmembers&nbspcategorized&nbspby&nbspcalender&nbspyear&nbspat&nbsp'First_admin_code_date'&nbsp(i.e.,&nbspthe&nbspvar&nbsp'First_admin_code_date'&nbspcreated&nbspin&nbspprogram&nbspAE.&nbspNote,&nbspto&nbspavoid&nbspmissing&nbspvalues&nbspfor&nbspa&nbsplevel,&nbspalways&nbspcreate&nbspa&nbsptemplate&nbspwith&nbspall&nbsplevels*/8.&nbsprow22,&nbsp#&nbspof&nbspmembers&nbspnot&nbspmissing&nbsp'First_admin_code_year9.&nbsprow24,&nbspmean,&nbspSD,&nbspmedian(IQR)&nbspof&nbsp'First_to_last_admin_date9.1&nbspget&nbspmean&nbspSD&nbspmedian&nbspIQR&nbspof&nbspage&nbspon&nbsp\"First_to_last_admin_date\"9.2&nbspget&nbspmean&nbspand&nbspSD,&nbspand&nbsprearrange&nbspthem&nbspinto&nbsprows&nbspin&nbspthe&nbspsame&nbsptable,&nbspreport&nbspmean&nbspand&nbspSD9.3&nbspget&nbspmedian&nbspand&nbspIQR,&nbspand&nbsprearrange&nbspthem&nbspas&nbspmedian&nbsp(IQR)&nbspin&nbspthe&nbspsame&nbsprow,&nbspand&nbspthen&nbspreport9.4&nbspreport&nbspthe&nbspnumber&nbspof&nbsppatients&nbspwith&nbspexactly&nbspthe&nbspmedian&nbspage&nbsp(as&nbsprequested&nbspby&nbspprivacy&nbspregulations)11.&nbsprow27,&nbsp#&nbspof&nbspmembers&nbspnot&nbspmissing&nbsp'First_to_last_admin_date'*/12.&nbsprow29,&nbsp#&nbspof&nbspmembers&nbspby&nbspAny&nbsprecord&nbspof&nbspMS-specific&nbspdisease-modifying&nbspdrug,&nbspi.e.,&nbspAnyDMD_FollowUp14.&nbsprow31-46,&nbsp#&nbspof&nbspmembers&nbspreceiving&nbspa&nbspspecific&nbspsubclass&nbspof&nbspDMD,&nbspe.g.,&nbspAnyIFNB_FollowUp,&nbspetcNote,&nbspto&nbspavoid&nbspmissing&nbspvalues&nbspfor&nbspa&nbsplevel,&nbspalways&nbspcreate&nbspa&nbsptemplate&nbspwith&nbspall&nbsplevelsThe&nbspreport&nbspis&nbspdone&nbspby&nbspthe&nbspmacro&nbsp'ReportNRecieveSub',&nbsplooping&nbspfor&nbspAnyIFNB_FollowUp=1IFNB1B_FollowUp=1IFNB1ASC_FollowUp=1IFNB1AIM_FollowUp=1EXTA_FollowUp=1PEGI_FollowUp=1AnyGLAT_FollowUp=1GLAT20_FollowUp=1GLAT40_FollowUp=1Nata_FollowUp=1Fing_FollowUp=1Dime_FollowUp=1Teri_FollowUp=1Alem_FollowUp=1Dacl_FollowUp=1Ocre_FollowUp=115.&nbspLoop&nbspfor&nbspselected&nbspsubClass&nbspof&nbspDMD,&nbspand&nbspreport&nbsp#&nbspof&nbspusers&nbspby&nbspsex&nbspand&nbspcalendarYear&#59&nbspage&nbspstatistics&nbspand&nbspFirstRx_to_last_admin_date&nbspstatistics&nbsp(mean,&nbspsd,&nbspmedian&nbsp(IQR))The&nbspreport&nbspis&nbspdone&nbspby&nbspthe&nbspmacro&nbsp'ReportNRecieveSub',&nbsplooping&nbspfor:&nbspNote&nbspthat&nbspfor&nbspeach&nbspsubgroup,&nbspcarefully&nbspcheck&nbspthe&nbspyear&nbspcut&nbspoff&nbspgroups.&nbspAnyIFNB_FollowUp=1AnyGLAT_FollowUp=1Nata_FollowUp=1Fing_FollowUp=1Dime_FollowUp=1Teri_FollowUp=1Alem_FollowUp=1[The&nbspfollowing&nbspare&nbspnot&nbspseen&nbspin&nbspSK&nbspdrug&nbspclaims]Dacl_FollowUp=1Ocre_FollowUp=13.1a.2.1.2For&nbspthis&nbspreport,&nbspeach&nbspcolumn&nbspis&nbspfor&nbspa&nbspspecified&nbspsubgroup&nbsp(or&nbspall)&nbspof&nbspthe&nbspcohort.&nbspThe&nbspfollowing&nbspreport&nbspis&nbspdone&nbspby&nbspcolumnIn&nbspthis&nbspprogram,&nbspthe&nbspreport&nbspis&nbspabout&nbspall&nbspmembers&nbspin&nbspdataset&nbspDA,&nbspwhich&nbspis&nbspprepared&nbspin&nbspprogram&nbspDA0.&nbspprepare&nbspthe&nbspsource&nbspdata&nbspset&nbspby&nbspselecting&nbspall&nbsprecords&nbspin&nbspData&nbspset&nbspDA.&nbspStep1&nbspto&nbsp15&nbspare&nbspthe&nbspsimilar&nbspto&nbspthe&nbspanalyses&nbspin&nbsp3.1a.2.1.1<br/>t///","children":[{"idx":"CodeTask-edlISfeYt2xc9mEK","name":"DB1 3.1a.2.1.2.1  Report cohort characteristics","NodeDescription":"///t<br/>///s<br/>/*DB1 <br/>3.1a.2.1.2.1  <br/>Report cohort characteristics<br/>For this report, each column is for a specified subgroup (or all) of the cohort. The following report is done by column<br/>&nbsp&nbsp&nbsp&nbspIn this program, the report is about the subgroup of which Cohort1a_ID_DMD_onlyYN=0<br/>*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>%let theStudyID=key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Cohort 1a&1b-demogr-SK)&#59<br/>%let CloseXls=&#59<br/><br/>/*All the variables for reporting is in dataset DA, which is prepared in program DA*/<br/>/*%print(data=localt.DA)&#59*/<br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData=localt.DA&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theReportCol=4&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theSubgroupCondition=%str(if Cohort1a_ID_DMD_onlyYN=0)&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theSubgroupCondition&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*1. row4, # of members in the selected group*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=4&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=theReportingData)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN1=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db1&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*2. row5, # of members by sex, i.e., female and male*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=sex&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=5&#59<br/>&nbsp&nbsp&nbsp&nbspData DB2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='F'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='M'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=theReportingData noprint, table=&theReportVar, option=%str(out=db2b))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=DB2a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=DB2b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(DB2 (drop = &theReportVar)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db2&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp/*3. row8, # of members not missing 'First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=8&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB3a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db3&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*4. row9, # of members missing 'First_admin_code_date (which is the difference between DB1 and DB3*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=9&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmerge db1 db3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspn_missing= n1-n2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep n_missing&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db4&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*5. row10, mean, SD, median(IQR) of age at 'First_admin_code_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=10&#59<br/>&nbsp&nbsp&nbsp&nbsp/*5.1 get mean SD median IQR of age on \"First_admin_code_date\"*/<br/>&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theReportingData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=age_first_admin_code_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=db5a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*5.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbspdata db5b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5b1 db5b2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db5b&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*5.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbspdata db5c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db5c&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=12&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*5.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbspdata db5d1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p75)'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5d2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5d1 db5d2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db5d&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=11&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*6. row13, # of members not missing 'Age_First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=13&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Age_First_admin_code_date ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB6a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db6&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*7. row15, # of members categorized by calender year at 'First_admin_code_date' (i.e., the var 'First_admin_code_date' created in program AE)*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=First_admin_code_Year&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=15&#59<br/>&nbsp&nbsp&nbsp&nbspData DB7a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theReportVar._CAT $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='pre-1990'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='1990-1994'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='1995-1999'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2000-2004'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2005-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2010-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2015-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%MakeCategories(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData=theReportingData, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=&theReportVar, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheTargetVar=&theReportVar._CAT, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCutOffs=1990 1995 2000 2005 2010 2015 , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdlmt=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=DB7b, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCloseSide=left<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=DB7b noprint, table=&theReportVar._CAT, option=%str(out=db7c))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*compress the spaces*/<br/>&nbsp&nbsp&nbsp&nbspdata db7d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT=compress(&theReportVar._CAT, \" \")&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*the level '1996 - 1999' is different from the level '1995 - 1999' in the template, change it back to the level as in the template*/<br/>&nbsp&nbsp&nbsp&nbspdata db7e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db7d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theReportVar._CAT = '1996-1999' then &theReportVar._CAT ='1995-1999'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link to the template to report # of individuals by each level*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=DB7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=db7e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(DB7 (drop=id &theReportVar._CAT) ),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar._CAT,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=id<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=DB7&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*8. row22, # of members not missing 'First_admin_code_year*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=22&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB8a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB8a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db8&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*9. row24, mean, SD, median(IQR) of 'First_to_last_admin_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=24&#59<br/>&nbsp&nbsp&nbsp&nbsp/*9.1 get mean SD median IQR of age on \"First_to_last_admin_date\"*/<br/>&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theReportingData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=First_to_last_admin_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=db9a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*9.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbspdata db9b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9b1 db9b2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db9b&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*9.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbspdata db9c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db9c&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=26&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*9.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbspdata db9d1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p75)'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9d2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9d1 db9d2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db9d&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=25&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*there is no 10. (the number 10 was skipped by accident)*/<br/><br/>&nbsp&nbsp&nbsp&nbsp/*11. row27, # of members not missing 'First_to_last_admin_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=27&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB11a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_to_last_admin_date ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB11a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db11&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*12. row29, # of members by Any record of MS-specific disease-modifying drug, i.e., AnyDMD_FollowUp*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=AnyDMD_FollowUp&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=29&#59<br/>&nbsp&nbsp&nbsp&nbspData DB12a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar=1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar=0&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=theReportingData noprint, table=&theReportVar, option=%str(out=db12b))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=DB12a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=DB12b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(DB12 (drop = &theReportVar)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=&theReportVar desc<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db12&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*14. row31-46, # of members receiving a specific subclass of DMD, e.g., AnyIFNB_FollowUp, etc*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%macro ReportNRecieveSub(theReportVar=, theRowN=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theReportVar=AnyIFNB_FollowUp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theRowN=31&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local theReportVar theRowN debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData ReportNRecieveSub_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theReportVar=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ReportNRecieveSub_tmp1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ReportNRecieveSub_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=ReportNRecieveSub_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete ReportNRecieveSub_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%mend ReportNRecieveSub&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=AnyIFNB_FollowUp, theRowN=31, debug=1)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=IFNB1B_FollowUp, theRowN=32, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=IFNB1ASC_FollowUp, theRowN=33, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=IFNB1AIM_FollowUp, theRowN=34, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=EXTA_FollowUp, theRowN=35, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=PEGI_FollowUp, theRowN=36, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=AnyGLAT_FollowUp, theRowN=37, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=GLAT20_FollowUp, theRowN=38, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=GLAT40_FollowUp, theRowN=39, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Nata_FollowUp, theRowN=40, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Fing_FollowUp, theRowN=41, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Dime_FollowUp, theRowN=42, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Teri_FollowUp, theRowN=43, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Alem_FollowUp, theRowN=44, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Dacl_FollowUp, theRowN=45, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Ocre_FollowUp, theRowN=46, debug=)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*15. Loop for selected subClass of DMD, and report # of users by sex and calendarYear&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage statistics and FirstRx_to_last_admin_date statistics (mean, sd, median (IQR))*/<br/>%macro ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local theSub theStartRow_Sex theStartRow_Age theStartRow_Year yearCutoff changeCatLines theStartRow_Rx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.1, determine the subClass of DMD*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata theSubData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theSub._FollowUP=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.2. row = &theStartRow_Sex, # of members by sex, i.e., female and male*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theReportVar=sex&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Sex&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData RptUsrSubCls_tmp1a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='F'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='M'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=theSubData noprint, table=&theReportVar, option=%str(out=RptUsrSubCls_tmp1b))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=RptUsrSubCls_tmp1a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=RptUsrSubCls_tmp1b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(RptUsrSubCls_tmp1 (drop = &theReportVar)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3. row=theStartRow_Age, mean, SD, median(IQR) of age at 'First_admin_code_date'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Age&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.1 get mean SD median IQR of age on \"First_admin_code_date\"*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theSubData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=age_first_admin_code_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=RptUsrSubCls_tmp2a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp2b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp2c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp2d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2b RptUsrSubCls_tmp2c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp2d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Age + 2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp4a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p75)'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp4b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp4a RptUsrSubCls_tmp4b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Age +1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*15.4. row=&theStartRow_Year, # of members categorized by calender year at 'First_admin_code_Year' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp( the var 'First_admin_code_date' created in program AE)*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=First_admin_code_Year&#59 <br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Year&#59<br/>&nbsp&nbsp&nbsp&nbspData RptUsrSubCls_tmp5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theReportVar._CAT $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&yearCatLines&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%MakeCategories(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData=theSubData, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=&theReportVar, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheTargetVar=&theReportVar._CAT, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCutOffs=&yearCutOff , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdlmt=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=RptUsrSubCls_tmp5b, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCloseSide=left<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=RptUsrSubCls_tmp5b noprint, table=&theReportVar._CAT, option=%str(out=RptUsrSubCls_tmp5c))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*compress the spaces*/<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp5d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp5c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT=compress(&theReportVar._CAT, \" \")&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*change the cat name, e.g., the level '1996 - 1999' is different from the level '1995 - 1999' in the template, change it back to the level as in the template*/<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp5e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp5d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&changeCatLines&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link to the template to report # of individuals by each level*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=RptUsrSubCls_tmp5a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=RptUsrSubCls_tmp5e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(RptUsrSubCls_tmp5 (drop=id &theReportVar._CAT) ),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar._CAT,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=id<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5 row=theStartRow_Rx, mean, SD, median(IQR) of age at &theSub._Yrs1stRx2End, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., 'AnyIFNB_Yrs1stRx2End'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Rx&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.1 get mean SD median IQR of &theSub._Yrs1stRx2End*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theSubData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=&theSub._Yrs1stRx2End,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=RptUsrSubCls_tmp6a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp6b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp6d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6b RptUsrSubCls_tmp6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp6d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Rx + 2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp8a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p75)'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp8b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp8a RptUsrSubCls_tmp8b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Rx +1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*15.6 row=, # of members not missing 'First_to_last_admin_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Rx+3)&#59<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theSubData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theSub._Yrs1stRx2End ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=RptUsrSubCls_tmp9a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete RptUsrSubCls_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend ReportUserBySubClass&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=ANYIFNB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=49,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=51,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=55, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=61,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=1995 2000 2005 2010 2015,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-1999' then First_admin_code_Year_CAT='1995-1999'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2015-2017' then First_admin_code_Year_CAT='2015-2018'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-1995'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='1995-1999'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2000-2004'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2005-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2010-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=ANYGLAT,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=66,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=68,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=72, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=78,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=1995 2000 2005 2010 2015,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(if First_admin_code_Year_CAT = '1996-1999' then First_admin_code_Year_CAT ='1995-1999'&#59),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-1995'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='1995-1999'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2000-2004'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2005-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2010-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=NATA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=83,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=85,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=89, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=100,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=2009 2010 2011 2012 2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2008' then First_admin_code_Year_CAT ='pre-2008'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2015-2016' then First_admin_code_Year_CAT ='2015-2015'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2008'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2009-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2010-2010'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2011-2011'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2012-2012'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=FING,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=105,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=107,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=111, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=120,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=2011 2012 2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2010' then First_admin_code_Year_CAT ='pre-2011'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2014-2015' then First_admin_code_Year_CAT ='2014-2014'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2011'&#59output&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2011-2011'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2012-2012'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=DIME,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=125,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=127,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=131, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=138,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2012' then First_admin_code_Year_CAT ='pre-2013'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2016-2017' then First_admin_code_Year_CAT ='2016-2016'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=TERI,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=143,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=145,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=149, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=156,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff= 2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2012' then First_admin_code_Year_CAT ='pre-2013'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2016-2017' then First_admin_code_Year_CAT ='2016-2016'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=ALEM,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=161,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=163,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=167, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=173,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff= 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1997-2013' then First_admin_code_Year_CAT ='pre-2014'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2016-2017' then First_admin_code_Year_CAT ='2016-2016'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-RXvHOkhryjF55suP","name":"DB2 3.1a.2.1.2.2  Report cohort characteristics","NodeDescription":"///t<br/>///s<br/>/*DB2 <br/>3.1a.2.1.2.2  <br/>Report cohort characteristics<br/>For this report, each column is for a specified subgroup (or all) of the cohort. The following report is done by column<br/>*/<br/><br/>data _null_&#59&nbsp&nbsp&nbsp&nbsprun&#59<br/>%let theStudyID=key_hsn&#59<br/>%let theServeDate=Rx_ddddd&#59<br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Cohort 1a&1b-demogr-SK)&#59<br/>%let CloseXls=&#59<br/><br/>/*All the variables for reporting is in dataset DA, which is prepared in program DA*/<br/>/*%print(data=localt.DA)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp%let theData=localt.DA&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theReportCol=3&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theSubgroupCondition=&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdata theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &theData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theSubgroupCondition&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*%macro notrun&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*1. row4, # of members in the selected group*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=4&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=theReportingData)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN1=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db1&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*2. row5, # of members by sex, i.e., female and male*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=sex&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=5&#59<br/>&nbsp&nbsp&nbsp&nbspData DB2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='F'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='M'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=theReportingData noprint, table=&theReportVar, option=%str(out=db2b))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=DB2a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=DB2b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(DB2 (drop = &theReportVar)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db2&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp/*3. row8, # of members not missing 'First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=8&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB3a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_date ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB3a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db3&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*4. row9, # of members missing 'First_admin_code_date (which is the difference between DB1 and DB3*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=9&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmerge db1 db3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspn_missing= n1-n2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep n_missing&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db4&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*%mend notrun&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*5. row10, mean, SD, median(IQR) of age at 'First_admin_code_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=10&#59<br/>&nbsp&nbsp&nbsp&nbsp/*5.1 get mean SD median IQR of age on \"First_admin_code_date\"*/<br/>&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theReportingData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=age_first_admin_code_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=db5a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*5.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbspdata db5b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5b1 db5b2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db5b&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>/*%macro notrun2&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*5.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbspdata db5c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db5c&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=12&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*5.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbspdata db5d1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p50)'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5d2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db5d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db5d1 db5d2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db5d&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=11&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*6. row13, # of members not missing 'Age_First_admin_code_date*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=13&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif Age_First_admin_code_date ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB6a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db6&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*7. row15, # of members categorized by calender year at 'First_admin_code_date' (i.e., the var 'First_admin_code_date' created in program AE)*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=First_admin_code_Year&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=15&#59<br/>&nbsp&nbsp&nbsp&nbspData DB7a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theReportVar._CAT $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='pre-1990'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='1990-1994'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='1995-1999'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2000-2004'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2005-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2010-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT='2015-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%MakeCategories(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData=theReportingData, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=&theReportVar, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheTargetVar=&theReportVar._CAT, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCutOffs=1990 1995 2000 2005 2010 2015 , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdlmt=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=DB7b, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCloseSide=left<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=DB7b noprint, table=&theReportVar._CAT, option=%str(out=db7c))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*compress the spaces*/<br/>&nbsp&nbsp&nbsp&nbspdata db7d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db7c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT=compress(&theReportVar._CAT, \" \")&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*the level '1996 - 1999' is different from the level '1995 - 1999' in the template, change it back to the level as in the template*/<br/>&nbsp&nbsp&nbsp&nbspdata db7e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db7d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theReportVar._CAT = '1996-1999' then &theReportVar._CAT ='1995-1999'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link to the template to report # of individuals by each level*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=DB7a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=db7e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(DB7 (drop=id &theReportVar._CAT) ),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar._CAT,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=id<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=DB7&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*8. row22, # of members not missing 'First_admin_code_year*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=22&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB8a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB8a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db8&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*9. row24, mean, SD, median(IQR) of 'First_to_last_admin_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=24&#59<br/>&nbsp&nbsp&nbsp&nbsp/*9.1 get mean SD median IQR of age on \"First_to_last_admin_date\"*/<br/>&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theReportingData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=First_to_last_admin_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=db9a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*9.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbspdata db9b1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9b2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9b1 db9b2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db9b&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*9.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbspdata db9c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db9c&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=26&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*9.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbspdata db9d1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p50)'&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9d2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbspdata db9d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset db9d1 db9d2&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db9d&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=25&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*there is no 10. (the number 10 was skipped by accident)*/<br/><br/>&nbsp&nbsp&nbsp&nbsp/*11. row27, # of members not missing 'First_to_last_admin_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=27&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB11a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_to_last_admin_date ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=DB11a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata DB11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN2=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db11&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*12. row29, # of members by Any record of MS-specific disease-modifying drug, i.e., AnyDMD_FollowUp*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=AnyDMD_FollowUp&#59<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=29&#59<br/>&nbsp&nbsp&nbsp&nbspData DB12a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar=1&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar=0&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=theReportingData noprint, table=&theReportVar, option=%str(out=db12b))&#59<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=DB12a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=DB12b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(DB12 (drop = &theReportVar)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder=&theReportVar desc<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=db12&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*14. row31-46, # of members receiving a specific subclass of DMD, e.g., AnyIFNB_FollowUp, etc*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%macro ReportNRecieveSub(theReportVar=, theRowN=, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theReportVar=AnyIFNB_FollowUp&#59*/<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp%let theRowN=31&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local theReportVar theRowN debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData ReportNRecieveSub_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theReportVar=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=ReportNRecieveSub_tmp1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata ReportNRecieveSub_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=ReportNRecieveSub_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete ReportNRecieveSub_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp%mend ReportNRecieveSub&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=AnyIFNB_FollowUp, theRowN=31, debug=1)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=IFNB1B_FollowUp, theRowN=32, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=IFNB1ASC_FollowUp, theRowN=33, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=IFNB1AIM_FollowUp, theRowN=34, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=EXTA_FollowUp, theRowN=35, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=PEGI_FollowUp, theRowN=36, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=AnyGLAT_FollowUp, theRowN=37, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=GLAT20_FollowUp, theRowN=38, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=GLAT40_FollowUp, theRowN=39, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Nata_FollowUp, theRowN=40, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Fing_FollowUp, theRowN=41, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Dime_FollowUp, theRowN=42, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Teri_FollowUp, theRowN=43, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Alem_FollowUp, theRowN=44, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Dacl_FollowUp, theRowN=45, debug=)&#59<br/>&nbsp&nbsp&nbsp&nbsp%ReportNRecieveSub(theReportVar=Ocre_FollowUp, theRowN=46, debug=)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*15. Loop for selected subClass of DMD, and report # of users by sex and calendarYear&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspage statistics and FirstRx_to_last_admin_date statistics (mean, sd, median (IQR))*/<br/>%macro ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%local theSub theStartRow_Sex theStartRow_Age theStartRow_Year yearCutoff changeCatLines theStartRow_Rx<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.1, determine the subClass of DMD*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata theSubData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theReportingData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theSub._FollowUP=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.2. row = &theStartRow_Sex, # of members by sex, i.e., female and male*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theReportVar=sex&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Sex&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData RptUsrSubCls_tmp1a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='F'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar='M'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%freq(data=theSubData noprint, table=&theReportVar, option=%str(out=RptUsrSubCls_tmp1b))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=RptUsrSubCls_tmp1a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=RptUsrSubCls_tmp1b,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(RptUsrSubCls_tmp1 (drop = &theReportVar)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3. row=theStartRow_Age, mean, SD, median(IQR) of age at 'First_admin_code_date'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Age&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.1 get mean SD median IQR of age on \"First_admin_code_date\"*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theSubData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=age_first_admin_code_date,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=RptUsrSubCls_tmp2a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp2b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp2c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp2d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2b RptUsrSubCls_tmp2c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp2d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Age + 2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.3.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp4a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p50)'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp4b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp2a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp4a RptUsrSubCls_tmp4b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Age +1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*15.4. row=&theStartRow_Year, # of members categorized by calender year at 'First_admin_code_Year' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp( the var 'First_admin_code_date' created in program AE)*/<br/>&nbsp&nbsp&nbsp&nbsp/*Note, to avoid missing values for a level, always create a template with all levels*/<br/>&nbsp&nbsp&nbsp&nbsp%let theReportVar=First_admin_code_Year&#59 <br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Year&#59<br/>&nbsp&nbsp&nbsp&nbspData RptUsrSubCls_tmp5a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theReportVar._CAT $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&yearCatLines&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%MakeCategories(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData=theSubData, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=&theReportVar, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheTargetVar=&theReportVar._CAT, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCutOffs=&yearCutOff , <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdlmt=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=RptUsrSubCls_tmp5b, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCloseSide=left<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%freq(data=RptUsrSubCls_tmp5b noprint, table=&theReportVar._CAT, option=%str(out=RptUsrSubCls_tmp5c))&#59<br/>&nbsp&nbsp&nbsp&nbsp/*compress the spaces*/<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp5d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp5c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theReportVar._CAT=compress(&theReportVar._CAT, \" \")&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*change the cat name, e.g., the level '1996 - 1999' is different from the level '1995 - 1999' in the template, change it back to the level as in the template*/<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp5e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp5d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&changeCatLines&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*link to the template to report # of individuals by each level*/<br/>&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=RptUsrSubCls_tmp5a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=RptUsrSubCls_tmp5e,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=%str(RptUsrSubCls_tmp5 (drop=id &theReportVar._CAT) ),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.*, t2.count),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theReportVar._CAT,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=id<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5 row=theStartRow_Rx, mean, SD, median(IQR) of age at &theSub._Yrs1stRx2End, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., 'AnyIFNB_Yrs1stRx2End'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=&theStartRow_Rx&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.1 get mean SD median IQR of &theSub._Yrs1stRx2End*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%GetMeanStats(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=theSubData,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroupVars=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVar=&theSub._Yrs1stRx2End,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStats=mean median p25 p75,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=RptUsrSubCls_tmp6a,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.2 get mean and SD, and rearrange them into rows in the same table, report mean and SD*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp6b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep mean&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename mean =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep std&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename std =col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp6d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6b RptUsrSubCls_tmp6c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report mean and SD, note that mean and SD are reported separately from median and IQR<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn so, all decimal places of the mean and SD are kept, which is favored for future meta analyses<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp6d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.3 get median and IQR, and rearrange them as median (IQR) in the same row, and then report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol=strip(median) || '(' || strip(p25) || \",\" || strip(p75) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Rx + 2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*15.5.4 report the number of patients with exactly the median age (as requested by privacy regulations)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp8a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat col $200.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol='N_patients_at_median(p25,p50)'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp8b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp6a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcol= strip(put(N_Patients_median, 8.)) || '(' || strip(put(N_Patients_p25, 8.)) || \",\" || strip(put(N_Patients_p75, 8.)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep col&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset RptUsrSubCls_tmp8a RptUsrSubCls_tmp8b&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Rx +1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=%eval(&theReportCol+3), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*15.6 row=, # of members not missing 'First_to_last_admin_date'*/<br/>&nbsp&nbsp&nbsp&nbsp%let theRowN=%eval(&theStartRow_Rx+3)&#59<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp9a&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset theSubData&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif &theSub._Yrs1stRx2End ne .&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=RptUsrSubCls_tmp9a)&#59<br/>&nbsp&nbsp&nbsp&nbspdata RptUsrSubCls_tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN=&nobs&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp%let reportTable=RptUsrSubCls_tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=&reportTable, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&theRowN, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=&theReportCol, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=3, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete RptUsrSubCls_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>%mend ReportUserBySubClass&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=ANYIFNB,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=49,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=51,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=55, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=61,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=1995 2000 2005 2010 2015,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(if First_admin_code_Year_CAT = '1996-1999' then First_admin_code_Year_CAT='1995-1999'&#59),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-1995'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='1995-1999'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2000-2004'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2005-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2010-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=ANYGLAT,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=66,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=68,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=72, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=78,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=1995 2000 2005 2010 2015,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(if First_admin_code_Year_CAT = '1996-1999' then First_admin_code_Year_CAT ='1995-1999'&#59),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-1995'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='1995-1999'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2000-2004'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2005-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2010-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>)&#59<br/><br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=NATA,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=83,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=85,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=89, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=100,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=2009 2010 2011 2012 2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2008' then First_admin_code_Year_CAT ='pre-2008'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2015-2016' then First_admin_code_Year_CAT ='2015-2015'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2008'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2009-2009'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2010-2010'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2011-2011'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2012-2012'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=FING,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=105,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=107,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=111, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=120,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=2011 2012 2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2010' then First_admin_code_Year_CAT ='pre-2011'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2017-2018' then First_admin_code_Year_CAT ='2017-2017'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2011'&#59output&#59&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2011-2011'&#59output&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2012-2012'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=DIME,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=125,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=127,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=131, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=138,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff=2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2012' then First_admin_code_Year_CAT ='pre-2013'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2017-2018' then First_admin_code_Year_CAT ='2017-2017'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=TERI,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=143,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=145,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=149, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=156,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff= 2013 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1996-2012' then First_admin_code_Year_CAT ='pre-2013'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2017-2018' then First_admin_code_Year_CAT ='2017-2017'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2013-2013'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>%ReportUserBySubClass(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSub=ALEM,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_sex=161,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Age=163,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Year=167, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheStartRow_Rx=173,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCutOff= 2014 2015 2016 2017 2018,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspchangeCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '1997-2013' then First_admin_code_Year_CAT ='pre-2014'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif First_admin_code_Year_CAT = '2017-2018' then First_admin_code_Year_CAT ='2017-2017'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspyearCatLines=%str(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='pre-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2014-2014'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2015-2015'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2016-2016'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2017-2017'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspid=11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFirst_admin_code_Year_CAT='2018-2018'&#59output&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=1<br/>)&#59<br/><br/>/*%mend notrun2&#59*/<br/>s///<br/>t///","custparents":[{"idx":"CodeTask-edlISfeYt2xc9mEK"}]}],"custparents":[{"idx":"Note-ElEJ5ZnHjBKHmJZf"}]}],"custparents":[{"idx":"CodeTask-z5y9EOw6yBEkFHWQ"}]},{"idx":"Note-jKro4WPc7o2Ny8ww","name":"Q DA1","NodeDescription":"///t<br/>Question:What&nbspif&nbspa&nbsppatient&nbspstart&nbsp2&nbspdiff&nbspclass&nbspof&nbspdrugs&nbspon&nbspthe&nbspsame&nbspdate?&nbspAre&nbspthe&nbspuse&nbspof&nbspDMDs&nbspmutually&nbspexclusive?<br/>t///","children":[{"idx":"Note-wRK53pIG5zi6D2Dq","name":"DAA.Qtest1","NodeDescription":"///t<br/>DA.Q1DAA.&nbsp3.1a.2.1.QTest1Tests&nbspfor&nbspQ_DA1What&nbspif&nbspa&nbsppatient&nbspstart&nbsp2&nbspdiff&nbspclass&nbspof&nbspdrugs&nbspon&nbspthe&nbspsame&nbspdate?&nbspAre&nbspthe&nbspuse&nbspof&nbspDMDs&nbspmutually&nbspexclusive?[Why]The&nbspfollowing&nbspis&nbspto&nbspillustrate&nbspthe&nbsppatterns&nbspof&nbspstart/receiving&nbspDMD&nbspmedication&nbspgroups&nbspduring&nbspthe&nbspfollow&nbspup[End&nbspof&nbspWhy]1.&nbspfor&nbspall&nbsppatients&nbspin&nbspDA&nbsp(the&nbspfinal&nbspcohort&nbspwith&nbspcovariate&nbspinfo,&nbspin&nbspparticular,&nbspthe&nbspfirstRxDate_Flwp&nbspof&nbspspecified&nbspMD&nbspDMD&nbspgroups.&nbspTranspose&nbspthe&nbspdata&nbspinto&nbsprows&nbspwith&nbsppatient&nbspid,&nbspthe&nbspDMD&nbspgroup,&nbspand&nbspthe&nbspfirstRxDate_Flwp&nbspreceiving&nbspa&nbspmedication&nbspof&nbspthe&nbspselect&nbspDMD&nbspgroup&nbspduring&nbspfollow&nbspup2.&nbspsort&nbspthe&nbspabove&nbspdata&nbspby&nbspstudyID,&nbspthefirstRxDate_Flwps,&nbspand&nbspDMDgroup,&nbspand&nbspassign&nbspa&nbspshortCode&nbspfor&nbspthe&nbspDMD&nbspgroups3.&nbspdetermine&nbspthe&nbsppatterns&nbspof&nbspreceiving&nbspdifferent&nbspgroups&nbspof&nbspDMDs&nbspduring&nbspfollow&nbspup<br/>t///","children":[{"idx":"CodeTask-my7iRLkPKGgvELWy","name":"DAA.Qtest1","NodeDescription":"///t<br/>///s<br/>/*<br/>DAA.Q1<br/>DAA. 3.1a.2.1.QTest1<br/>Tests for Q_DA1<br/>*/<br/><br/><br/>data _null_&#59run&#59<br/><br/><br/>%let theStudyID=key_hsn&#59<br/><br/><br/>/*1. for all patients in DA (the final cohort with covariate info, in particular, the firstRxDate_Flwp of specified MD DMD groups<br/>&nbsp&nbsp&nbsp&nbsptranspose the data into rows with patient id, the DMD group, and the firstRxDate_Flwp receiving a medication of the select DMD group<br/>&nbsp&nbsp&nbsp&nbspduring follow up<br/>*/<br/>data DAA1&#59<br/>&nbsp&nbsp&nbsp&nbspset localt.da&#59<br/>&nbsp&nbsp&nbsp&nbspdo DMDGroup='AnyIFNB', 'AnyGLAT', 'NATA', 'FING', 'DIME', 'TERI', 'DACL', 'OCRE', 'ALEM'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVarNameStr=strip(DMDGroup) || '_firstRxDate_Flwp'&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Output if the specified firstRxDate_Flwp is not null<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1) it does not work to have lines such as:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif thefirstRxDate_Flwp ne . then do&#59.... end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhen the if line is executed (),  thefirstRxDate_Flwp is not created yet (values for<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthefirstRxDate_Flwp are saved in a temp variable before outputing into the target data set). Consequently<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe if lines cannot find values of thefirstRxDate_Flwp for all records, and no rows will be kept.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe correct way is to check the original values in vars like 'AnyIFNB_firstRxDate_Flwp', or the derivatives from such values.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) the function VVALUEX() always returns values in character type, and may have healding or trailing spaces. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif strip(vvaluex(theVarNameStr)) ne '' and strip(vvaluex(theVarNameStr)) ne '.' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthefirstRxDate_Flwp=input(vvaluex(theVarNameStr), anydtdte12.)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>/*&nbsp&nbsp&nbsp&nbspformat thefirstRxDate_Flwp date9.&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat thefirstRxDate_Flwp date9.&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &theStudyID theVarNameStr DMDGroup thefirstRxDate_Flwp &#59<br/>run&#59<br/>/*%freq(data=DAA1, table=DMDGroup)&#59*/<br/><br/>/*2. sort the above data by studyID, thefirstRxDate_Flwps, and DMDgroup, and assign a shortCode for the DMD groups*/<br/>data DAA2&#59<br/>&nbsp&nbsp&nbsp&nbspset DAA1&#59<br/>&nbsp&nbsp&nbsp&nbspselect &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup='AnyIFNB')  ShortDMDGrp='I'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'AnyGLAT') ShortDMDGrp='G'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'NATA') ShortDMDGrp='N'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'FING') ShortDMDGrp='F'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'DIME') ShortDMDGrp='M'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'TERI') ShortDMDGrp=  'T'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'DACL') ShortDMDGrp=  'C'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'OCRE') ShortDMDGrp=  'O'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen (DMDGroup= 'ALEM') ShortDMDGrp=  'A'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspotherwise ShortDMDGrp= '9'&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>run&#59<br/>%sort(data=DAA2, sorter=&theStudyID thefirstRxDate_Flwp DMDgroup)&#59<br/>/*%distinct(data=DAA2, target=DAA5, vars=ShortDMDGrp, orderby=ShortDMDGrp)&#59*/<br/><br/>/*3. determine the patterns of receiving different groups of DMDs during follow up*/<br/>Data localt.DAA&#59<br/>&nbsp&nbsp&nbsp&nbspset DAA2&#59<br/>&nbsp&nbsp&nbsp&nbspformat thePattern $100.&#59<br/>&nbsp&nbsp&nbsp&nbspby &theStudyID thefirstRxDate_Flwp DMDgroup&#59<br/>&nbsp&nbsp&nbsp&nbsp/*for the first record of each patient, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsave the short code of DMDgrp into the var thePattern<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsave the firstRxDate_Flwp into the currentDate (theCurDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremember the values in thePattern and theCurDate (retain)*/<br/>&nbsp&nbsp&nbsp&nbspif first.&theStudyID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePattern=ShortDMDGrp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCurDate=thefirstRxDate_Flwp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain thePattern theCurDate&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp/*if it is not the first record of the patient*/<br/>&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if thefirstRxDate_Flwp is the same as the remembered (retained) theCurDate:*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif thefirstRxDate_Flwp = theCurDate then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Concatenate the shortCode of DMD group to the existing values of thePattern<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwith a prefix of '_' to indicate that the current DMD group and the previous DMD group were received on the same date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePattern=strip(thePattern) || '-' || strip(ShortDMDGrp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*if thefirstRxDate_Flwp is not the same as the remembered (retained) theCurDate:*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*concatenate the short code of DMDgrp to the existing values in thePattern<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspupdate the value of theCurDate with the firstRxDate_Flwp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePattern=strip(thePattern) || strip(ShortDMDGrp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheCurDate=thefirstRxDate_Flwp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspformat theCurDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspdrop theCurDate&#59<br/>&nbsp&nbsp&nbsp&nbsp/*for each patient only keep the last row,which contains all the patterns of the same patient*/<br/>&nbsp&nbsp&nbsp&nbspif last.&theStudyID&#59<br/>run&#59<br/>%freq(data=localt.DAA noprint, table=thePattern, order=freq, option=%str(out=DAA3))&#59<br/>data DAA4&#59<br/>&nbsp&nbsp&nbsp&nbspset DAA3&#59<br/>&nbsp&nbsp&nbsp&nbsppercent=percent/100&#59<br/>run&#59<br/>data DAA5&#59<br/>&nbsp&nbsp&nbsp&nbspformat ftnote $300.&#59<br/>&nbsp&nbsp&nbsp&nbspftnote = 'A=Alemtuzumab&#59F=Fingolimod&#59G=Glatiramer acetat&#59I=Beta-interferon(IFNB)&#59M=Dimethyl fumarate&#59N=Natalizumab&#59T=Teriflunomide'&#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59<br/>&nbsp&nbsp&nbsp&nbspftnote = 'Examples. Pattern=I: patients only received medications of the beta-interferon (IFNB) class during follow-up&#59Pattern = IG: patients received IFNB, and then Glatiramer acetat during follow-up&#59Pattern=I_G:patients started IFNB and Glatiramer acetat on the same date during follow up (such patterns that patients started two DMD classes on the same date were not observed in the SK site)'&#59<br/>&nbsp&nbsp&nbsp&nbspoutput&#59<br/>run&#59<br/><br/>%let theCohortReportPath=%str(P:\\DRUMS(EvansC)_Bio18-83\\Output\\Reports)&#59<br/>%let theCohortReportFile=%str(Cohort-characteristics-DRUMS-Aug2018v10-SK.xlsx)&#59<br/><br/>%let theSheet=%str(Pattern_FirstRx_Followup)&#59<br/>%let CloseXls=&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=DAA4, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=5, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>)&#59<br/><br/>%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&theCohortReportPath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&theCohortReportFile, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=DAA5, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=2, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectSheet=1, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcloseFile=&CloseXls<br/>)&#59<br/><br/>s///<br/>t///","children":[{"idx":"Note-FqZcEj9Hw1Ch94b4","name":"Learning1","NodeDescription":"///t<br/>Learning&nbsp1VNAME&nbspVVALUE&nbspVVALUExdata&nbspDAA1&#59set&nbsplocalt.da&#59do&nbspDMDGroup='AnyIFNB',&nbsp'AnyGLAT',&nbsp'NATA',&nbsp'FING',&nbsp'DIME',&nbsp'TERI',&nbsp'DACL',&nbsp'OCRE',&nbsp'ALEM'&#59theVarNameStr=strip(DMDGroup)&nbsp||&nbsp'_firstRxDate'&#59/*Output&nbspif&nbspthe&nbspspecified&nbspfirstRxDate&nbspis&nbspnot&nbspnullNote&nbsp1)&nbspit&nbspdoes&nbspnot&nbspwork&nbspto&nbsphave&nbsplines&nbspsuch&nbspas:if&nbsptheFirstRxDate&nbspne&nbsp.&nbspthen&nbspdo&#59....&nbspend&#59When&nbspthe&nbspif&nbspline&nbspis&nbspexecuted&nbsp(),&nbsp&nbsptheFirstRxDate&nbspis&nbspnot&nbspcreated&nbspyet&nbsp(values&nbspfortheFirstRxDate&nbspare&nbspsaved&nbspin&nbspa&nbsptemp&nbspvariable&nbspbefore&nbspoutputing&nbspinto&nbspthe&nbsptarget&nbspdata&nbspset).&nbspConsequentlythe&nbspif&nbsplines&nbspcannot&nbspfind&nbspvalues&nbspof&nbsptheFirstRxDate&nbspfor&nbspall&nbsprecords,&nbspand&nbspno&nbsprows&nbspwill&nbspbe&nbspkept.the&nbspcorrect&nbspway&nbspis&nbspto&nbspcheck&nbspthe&nbsporiginal&nbspvalues&nbspin&nbspvars&nbsplike&nbsp'AnyIFNB_firstRxDate',&nbspor&nbspthe&nbspderivatives&nbspfrom&nbspsuch&nbspvalues.2)&nbspthe&nbspfunction&nbspVVALUEX()&nbspalways&nbspreturns&nbspvalues&nbspin&nbspcharacter&nbsptype,&nbspand&nbspmay&nbsphave&nbsphealding&nbspor&nbsptrailing&nbspspaces.&nbsp*/if&nbspstrip(vvaluex(theVarNameStr))&nbspne&nbsp''&nbspand&nbspstrip(vvaluex(theVarNameStr))&nbspne&nbsp'.'&nbspthen&nbspdo&#59theFirstRxDate=input(vvaluex(theVarNameStr),&nbspanydtdte12.)&#59output&#59end&#59end&#59/*format&nbsptheFirstRxDate&nbspdate9.&#59*/format&nbsptheFirstRxDate&nbspdate9.&#59keep&nbsp&amp&#59theStudyID&nbsptheVarNameStr&nbspDMDGroup&nbsptheFirstRxDate&nbsp&#59run&#59Learning&nbsp2/*calcuate&nbspwhich&nbspvar&nbspfirst&nbsp*/Wrong1&nbsp(the&nbsporder&nbspmaters)&nbsp:data&nbsp_db3a&#59set&nbsp_db2&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop&#59output&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59/*insert&nbspan&nbspunexposed&nbspperiod&nbspif&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspstudyenddate&nbspand&nbspthe&nbspstop&nbspof&nbspcurrent&nbspclaim&nbsp(which&nbspis&nbspthe&nbsplast&nbspwithin&nbspthe&nbspstudy&nbspperiod)*/if&nbspadj_stop&nbsp<&nbspstudyEndDate&nbspthen&nbspdo&#59adj_start&nbsp=&nbspadj_stop&nbsp+1&#59/*calculate&nbspadj_start&nbspfirst,&nbspas&nbspthe&nbspadj_stop&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_stop&nbsp=&nbspstudyEndDate&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59output&#59end&#59end&#59if&nbsplast.&amp&#59theStudyID&nbspthen&nbspdo&#59/*insert&nbspan&nbspunexposed&nbspperiod&nbspif&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspstudystartdate&nbspand&nbspthe&nbspstart&nbspof&nbspcurrent&nbspclaim&nbsp(which&nbspis&nbspthe&nbspfirst&nbspwithin&nbspthe&nbspstudy&nbspperiod)*/if&nbspadj_start&nbsp>&nbspstudyStartDate&nbspthen&nbspdo&#59adj_start&nbsp=&nbspstudyStartDate&#59adj_stop&nbsp=&nbspadj_start&nbsp-1&#59&nbsp/*Wrong!,&nbspas&nbspthe&nbspadj_start&nbspvalue&nbsphas&nbspbeen&nbspchanged*/Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59output&#59end&#59end&#59run&#59Wrong&nbsp2(the&nbspoutput&nbsporder&nbspconfounds&nbspthe&nbspcorrect&nbspsetting&nbspof&nbspdates,&nbspAdd&nbspheading&nbspand&nbsptrailing&nbspunexposed&nbspperiods&nbspin&nbspseparate&nbspsteps,&nbspeach&nbsptime,&nbspre-sort&nbspthe&nbspdata)&#59Data&nbsp_db3a&#59set&nbsp_db2&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop&#59output&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59/*insert&nbspan&nbspunexposed&nbspperiod&nbspif&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspstudyenddate&nbspand&nbspthe&nbspstop&nbspof&nbspcurrent&nbspclaim&nbsp(which&nbspis&nbspthe&nbsplast&nbspwithin&nbspthe&nbspstudy&nbspperiod)*/if&nbspadj_stop&nbsp<&nbspstudyEndDate&nbspthen&nbspdo&#59adj_start&nbsp=&nbspadj_stop&nbsp+1&#59/*calculate&nbspadj_start&nbspfirst,&nbspas&nbspthe&nbspadj_stop&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_stop&nbsp=&nbspstudyEndDate&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59output&#59end&#59end&#59if&nbsplast.&amp&#59theStudyID&nbspthen&nbspdo&#59/*insert&nbspan&nbspunexposed&nbspperiod&nbspif&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspstudystartdate&nbspand&nbspthe&nbspstart&nbspof&nbspcurrent&nbspclaim&nbsp(which&nbspis&nbspthe&nbspfirst&nbspwithin&nbspthe&nbspstudy&nbspperiod)*/if&nbspadj_start&nbsp>&nbspstudyStartDate&nbspthen&nbspdo&#59adj_stop&nbsp=&nbspadj_start&nbsp-1&#59&nbsp/*calculate&nbspadj_stop&nbspfirst,&nbspas&nbspthe&nbspadj_start&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_start&nbsp=&nbspstudyStartDate&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59output&#59end&#59end&#59run&#59correct:data&nbsp_db3a&#59set&nbsp_db2&#59if&nbspkey_hsn&nbsp=&nbsp'06335354647'&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop&#59output&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59/*insert&nbspan&nbspunexposed&nbspperiod&nbspif&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspstudyenddate&nbspand&nbspthe&nbspstop&nbspof&nbspcurrent&nbspclaim&nbsp(which&nbspis&nbspthe&nbsplast&nbspwithin&nbspthe&nbspstudy&nbspperiod)*/if&nbspadj_stop&nbsp<&nbspstudyEndDate&nbspthen&nbspdo&#59adj_start&nbsp=&nbspadj_stop&nbsp+1&#59/*calculate&nbspadj_start&nbspfirst,&nbspas&nbspthe&nbspadj_stop&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_stop&nbsp=&nbspstudyEndDate&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59mark='t'&#59output&#59end&#59end&#59run&#59/*2.&nbspinsert&nbspunexposed&nbspperiods&nbspbetween:&nbspthe&nbsplast&nbspclaim&nbspand&nbspthe&nbspstudyenddate*/%sort(data=_db3a,&nbspsorter=%str(&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop))&#59data&nbsp_db3b&#59set&nbsp_db3a&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop&#59output&#59if&nbsplast.&amp&#59theStudyID&nbspthen&nbspdo&#59/*insert&nbspan&nbspunexposed&nbspperiod&nbspif&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspstudystartdate&nbspand&nbspthe&nbspstart&nbspof&nbspcurrent&nbspclaim&nbsp(which&nbspis&nbspthe&nbspfirst&nbspwithin&nbspthe&nbspstudy&nbspperiod)*/if&nbspadj_start&nbsp>&nbspstudyStartDate&nbspthen&nbspdo&#59adj_stop&nbsp=&nbspadj_start&nbsp-1&#59&nbsp/*calculate&nbspadj_stop&nbspfirst,&nbspas&nbspthe&nbspadj_start&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_start&nbsp=&nbspstudyStartDate&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59mark='h'&#59output&#59end&#59end&#59run&#59Learning&nbsp3:Whether&nbspto&nbspuse&nbsplag&nbspor&nbspretain:Correct:data&nbsp_db3c&#59set&nbsp_db3b&#59lagAdjSart&nbsp=&nbsplag(adj_start)&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59lagAdjSart&nbsp=&nbspadj_start&#59output&#59end&#59else&nbspdo&#59output&#59/*if&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspadj_stop&nbspand&nbspthe&nbspnext&nbspclaim's&nbspadj&nbspstart&nbsp(preAdjStart)insert&nbspan&nbspunexposed&nbspperiod*/if&nbsp&nbsplagAdjSart&nbsp-adj_stop&nbsp>&nbsp1&nbspthen&nbspdo&#59adj_start&nbsp=&nbspadj_stop&nbsp+1&#59/*calculate&nbspadj_start&nbspfirst,&nbspas&nbspthe&nbspadj_stop&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_stop&nbsp=&nbsplagAdjSart&nbsp-1&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59mark='s'&#59output&#59end&#59lagAdjSart=adj_start&#59end&#59format&nbsplagAdjSart&nbspdate9.&#59run&#59Wrong1&nbsp(is&nbspit&nbspthe&nbspsame&nbspas&nbspabove,&nbspif&nbspso&nbspit&nbspis&nbspcorrect):data&nbsp_db3b&#59set&nbsp_db3a&#59lagAdjStart=lag(adj_start)&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59lagAdjStart&nbsp=&nbspadj_start&#59output&#59end&#59else&nbspdo&#59output&#59/*if&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspadj_stop&nbspand&nbspthe&nbspnext&nbspclaim's&nbspadj&nbspstart&nbsp(lagAdjStart)insert&nbspan&nbspunexposed&nbspperiod*/if&nbspadj_stop&nbsp<&nbsplagAdjStart&nbspthen&nbspdo&#59adj_start&nbsp=&nbspadj_stop&nbsp+1&#59/*calculate&nbspadj_start&nbspfirst,&nbspas&nbspthe&nbspadj_stop&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_stop&nbsp=&nbsplagAdjStart&nbsp-1&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59output&#59end&#59end&#59format&nbsplagAdjStart&nbspdate9.&#59run&#59Wrong2&nbsp(redundent&nbspperiod&nbspbetween&nbspthe&nbsplast&nbspclaim&nbspand&nbspthe&nbspstudy&nbspend):data&nbsp_db3b&#59set&nbsp_db3a&#59retain&nbsppreAdjStart&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspadj_start&nbspdescending&nbspadj_stop&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59preAdjStart&nbsp=&nbspadj_start&#59output&#59end&#59else&nbspdo&#59output&#59/*if&nbspthere&nbspis&nbspa&nbspgap&nbspbetween&nbspadj_stop&nbspand&nbspthe&nbspnext&nbspclaim's&nbspadj&nbspstart&nbsp(preAdjStart)insert&nbspan&nbspunexposed&nbspperiod*/if&nbspadj_stop&nbsp-&nbsppreAdjStart&nbsp>&nbsp1&nbspthen&nbspdo&#59adj_start&nbsp=&nbspadj_stop&nbsp+1&#59/*calculate&nbspadj_start&nbspfirst,&nbspas&nbspthe&nbspadj_stop&nbspvalue&nbspwill&nbspbe&nbspchanged*/adj_stop&nbsp=&nbsppreAdjStart&nbsp-1&#59Rx_ddddd&nbsp=.&#59Class_short&nbsp='null'&#59generation_short='null'&#59supplydays=.&#59mark='s'&#59output&#59end&#59preAdjStart=adj_start&#59end&#59format&nbsppreAdjStart&nbspdate9.&#59run&#59Learning&nbsp4:&nbspcleaning&nbspoverlappingWrong:data&nbsp_db2d&#59set&nbsp_db2c&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspstart&nbspdescending&nbspstop&#59if&nbspnot&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59&nbsp/*the&nbspfirst&nbsprecord&nbspshould&nbspnot&nbspbe&nbspchanged*/if&nbspadj_stop&nbsp>&nbsplagStart&nbspthen&nbspdo&#59adj_stop&nbsp=&nbsplagStart&nbsp-1&#59end&#59end&#59run&#59correct:data&nbsp_db2d&#59set&nbsp_db2c&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspstart&nbspdescending&nbspstop&#59if&nbspnot&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59&nbsp/*the&nbspfirst&nbsprecord&nbspshould&nbspnot&nbspbe&nbspchanged*/if&nbspadj_stop&nbsp>=&nbsplagStart&nbspthen&nbspdo&#59adj_stop&nbsp=&nbsplagStart&nbsp-1&#59end&#59end&#59run&#59Learning&nbsp5:&nbsphandling&nbspthe&nbspgap&nbspbetween&nbspthe&nbsplast&nbspclaim&nbspand&nbspthe&nbspstudy&nbspend:Wrong:data&nbsp_Db2b&#59set&nbsp_Db2a&#59lagstart=lag(start)&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspstart&nbspdescending&nbspstop&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59lagstart&nbsp=&nbspstart&#59gap=0&#59end&#59else&nbspdo&#59gap&nbsp=&nbsplagstart&nbsp-&nbspstop&nbsp-1&#59end&#59format&nbsplagstart&nbspdate9.&#59run&#59Correct:data&nbsp_Db2b&#59set&nbsp_Db2a&#59lagstart=lag(start)&#59by&nbsp&amp&#59theStudyID&nbspdescending&nbspstart&nbspdescending&nbspstop&#59if&nbspfirst.&amp&#59theStudyID&nbspthen&nbspdo&#59lagstart&nbsp=&nbspstart&#59gap=StudyEndDate&nbsp-&nbspstop&nbsp-1&#59end&#59else&nbspdo&#59gap&nbsp=&nbsplagstart&nbsp-&nbspstop&nbsp-1&#59end&#59format&nbsplagstart&nbspdate9.&#59run&#59/*if&nbspa&nbspgap&nbspis&nbspbetween&nbsp0&nbspand&nbsp89,&nbspextend&nbspthe&nbspstop&nbspdate&nbspby&nbsp+&nbsp89&nbspdaysif&nbspa&nbspgap&nbspis&nbsp90&nbspor&nbspmore,&nbspadd&nbspa&nbspgrace&nbspperiod&nbspby&nbsp+&nbsp30&nbspdays[Comment]There&nbspmight&nbspbe&nbspa&nbsppotential&nbspproblem&nbsphere.&nbspIs&nbspit&nbspfair&nbspthat&nbsp-&nbspfor&nbspa&nbspgap&nbspwithin&nbsp90&nbspdays,&nbspadd&nbsp89&nbspdays&nbsp(treat&nbspas&nbspcontinuously&nbspcovered)-&nbspfor&nbspa&nbspgap&nbspof&nbsp90&nbspdays&nbspand&nbspbeyond,&nbspadd&nbsp30&nbspdays&nbsp(grace&nbspperiod)*/data&nbsp_db2c&#59set&nbsp_db2b&#59adj_stop=stop&#59if&nbsp0&nbsp<=&nbspgap&nbsp<&nbsp90&nbspthen&nbspdo&#59adj_stop&nbsp=&nbspstop&nbsp+&nbsp89&#59end&#59else&nbspdo&#59if&nbspgap&nbspge&nbsp90&nbspthen&nbspdo&#59adj_stop&nbsp=&nbspstop&nbsp+&nbsp30&#59end&#59end&#59format&nbspadj_stop&nbspdate9.&#59run&#59Learning&nbsp7:&nbspusing&nbspthe&nbspvar&nbspnames&nbspbefore&nbsprenamingWrong:data&nbsp_db5&#59retain&nbsp&amp&#59theStudyID&nbspstudyStartDate&nbspstudyEndDate&nbspNSeg_Any&nbspexposure_status&nbspsegStartDate_Any&nbspsegEndDate_Any&#59set&nbsp_db5a&#59by&nbsp&amp&#59theStudyID&nbsp&nbspextend_adj_start&nbsp&nbspadj_stop&#59if&nbsplast.extend_adj_start&#59drop&nbspadj_start&nbsp&nbspClass_Short&nbspGeneration_short&nbsplag_exposure_status&#59rename&nbspextend_adj_start&nbsp=&nbspsegStartDate_Any&nbspadj_stop&nbsp=&nbspsegEndDate_Any&#59run&#59Correct:data&nbsp_db5&#59retain&nbsp&amp&#59theStudyID&nbspstudyStartDate&nbspstudyEndDate&nbspNSeg_Any&nbspexposure_status&nbspextend_adj_start&nbspsegEndDate_Any&#59set&nbsp_db5a&#59by&nbsp&amp&#59theStudyID&nbsp&nbspextend_adj_start&nbsp&nbspadj_stop&#59if&nbsplast.extend_adj_start&#59drop&nbspadj_start&nbsp&nbspClass_Short&nbspGeneration_short&nbsplag_exposure_status&#59rename&nbspextend_adj_start&nbsp=&nbspsegStartDate_Any&nbspadj_stop&nbsp=&nbspsegEndDate_Any&#59run&#59<br/>t///","custparents":[{"idx":"CodeTask-my7iRLkPKGgvELWy"}]}],"custparents":[{"idx":"Note-wRK53pIG5zi6D2Dq"}]}],"custparents":[{"idx":"Note-jKro4WPc7o2Ny8ww"}]}],"custparents":[{"idx":"CodeTask-z5y9EOw6yBEkFHWQ"}]},{"idx":"Note-Pdm2Ru69xXW6UKuJ","name":"Q DA2","NodeDescription":"///t<br/>Q.DA2How&nbspdoes&nbspmissing&nbspnon-adjudicated&nbsppharmacy&nbspclaims&nbspaffect&nbspthe&nbspAnyDMD_firstRxDate_Flwp&nbspduring&nbspthe&nbspfollow&nbspup&nbspperiod&nbsp<br/>t///","children":[{"idx":"Note-PjKHFJcQZkZhaK6b","name":"DAB.Qtest2","NodeDescription":"///t<br/>DA.Q2DAB.&nbsp3.1a.2.1.QTest2Tests&nbspfor&nbspQ_DA2How&nbspdoes&nbspmissing&nbspnon-adjudicated&nbsppharmacy&nbspclaims&nbspaffect&nbspthe&nbspAnyDMD_firstRxDate_Flwp&nbspduring&nbspthe&nbspfollow&nbspup&nbspperiod&nbsp[Why]The&nbspimpact&nbspwill&nbspbe&nbspin&nbsptwo&nbspfolds:1)&nbspIt&nbspaffects&nbspthe&nbspFirst_Admin_Code_Date&nbsp(as&nbsptested&nbspin&nbspAEB.Qtest2)2)&nbspIt&nbspaffects&nbspthe&nbspfirstRxDate&nbspduring&nbspflow&nbspup&nbsp(AnyDMD_firstRxDate_Flwp)It&nbspis&nbspcomplicated&nbspto&nbspgauge&nbspboth&nbspfolds&nbspof&nbspimpact&nbspat&nbspthis&nbspmoment.&nbspComparing&nbspto&nbspthe&nbspcohort&nbspfrom&nbspcomplete&nbspdata,&nbspboth&nbspthe&nbspFirst_admin_code_date,&nbspand&nbspthe&nbspAnyDMD_firstRxDate_flwp&nbspmay&nbspchnage,&nbspmaking&nbspit&nbspdifficult&nbspto&nbspinterpret.&nbspIn&nbspgeneral,&nbspthe&nbspfollow&nbspup&nbspshould&nbspstart&nbspwhen&nbspall&nbspdata&nbspis&nbspavailable.&nbspIn&nbspother&nbspwords,&nbspthe&nbspcases&nbspshould&nbspbe&nbspexcluded&nbspif&nbspin&nbsptime&nbspwhen&nbspdata&nbspwere&nbspnot&nbspcompletely&nbspavailable&nbsp(including&nbspthe&nbsplook&nbspback&nbspwindow).[End&nbspof&nbspWhy]<br/>t///","custparents":[{"idx":"Note-Pdm2Ru69xXW6UKuJ"}]}],"custparents":[{"idx":"CodeTask-z5y9EOw6yBEkFHWQ"}]}],"custparents":[{"idx":"Note-CrZzK8TTAMz2LfoQ"}]}]},{"idx":"MYe54b6774-db6c-4949-aea1-984b569a6216","name":"Poisson Zero Inflated","children":[{"idx":"CodeTask-QPdOXWnZs7mo2owu","name":"Sample Zero_inflated model","NodeDescription":"///t<br/>///s<br/>libname AIMS '/SAS_data/dw0/HQC_share/Xinya/AIMS/data'&#59<br/><br/><br/>%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_share/Xinya/Macros/EOH.sas'&#59<br/><br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/PRS_assign.sas'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/calc_age_discr.sas'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/coverage_days.sas'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_CIHI.sas'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug.sas'&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/ExpandLst.sas'&#59<br/><br/>/*%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Charlson_Elixhauser_Score.sas'&#59*/<br/><br/>***all din input file&#59<br/><br/>%let alldinfile=clean15.ALLDIN_1_OND14_02FEB2015&#59<br/>%let hosp_file = Clean15.CIHI_EOC_1_JAS14_13FEB2015&#59<br/>%LET input_cvrg_file  = hqc.PHRS_PERS_PROG&#59<br/>%let input_death_file= Clean15.verf_dths_1_amj14_13jan2015&#59<br/>%let alphanumeric=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"&#59<br/><br/>%let start_date='01Jan1996'd&#59<br/>%let end_date='01APR2014'd&#59<br/>%let cihi_start_date='01Jan1996'd&#59<br/>%let cihi_end_date='01APR2014'd&#59<br/>%let most_recent_date='01APR2014'd&#59<br/><br/>%LET input_geo_file  = hqc.GEO_NSREL_HQC&#59<br/><br/><br/>/*din list for MS Drugs&#59*/<br/>%let din_MS = 02169649 02337819 02281708 02277492 02237317 02237319 02237320 02318253 02318261 02237770 02269201 <br/>&nbsp&nbsp&nbsp&nbsp02233014 02245619 02286386 02365480&#59<br/>%let din_Betaseron  = 02169649&#59<br/>%let din_Extavia   = 02337819&#59<br/>%let din_Rebif    = 02281708 02277492 02237317 02237319 02237320 02318253 02318261&#59<br/>%let din_Avonex   = 02237770 02269201&#59<br/>%let din_Copaxone = 02233014 02245619&#59<br/>%let din_Tysabri  = 02286386&#59<br/>%let din_Gilenya  = 02365480&#59<br/><br/>/*ICDs for all diagnosis*/<br/>%let ICD9_MS = 340 3773 32382 323 3419 3410&#59<br/>%let ICD10_MS = G35 H46 G37 G369 G378 G36 G360&#59<br/>%let ICD9_Pregnancy  = 650-676&#59<br/>%let ICD9_Pregnancy2= %ExpandLst(&ICD9_Pregnancy)&#59<br/>%put &ICD9_Pregnancy2&#59<br/>%let ICD9_Pregnancy2= 650 651 652 653 654 655 656 657 658 659 660 <br/>&nbsp&nbsp&nbsp&nbsp661 662 663 664 665 666 667 668 669 670 671 672 673 674 <br/>&nbsp&nbsp&nbsp&nbsp675 676 &#59<br/><br/>%let ICD10_Pregnancy  =O30-O48 O60-O75 O80-O92&#59<br/>%let ICD10_Pregnancy2= %ExpandLst(&ICD10_Pregnancy)&#59<br/>%put &ICD10_Pregnancy2&#59<br/><br/>%put ICD10_Pregnancy2=O30 O31 O32 O33 O34 O35 O36 O37 O38 O39 O40 O41 O42 O43 O44 O45 O46 O47 O48 O60 O61 O62 O63 O64 O65 O66 O67 O68 O69 O70 O71 O72 O73 <br/>O74 O75 O80 O81 O82 O83 O84 O85 O86 O87 O88 O89 O90 O91 O92&#59<br/><br/>/*ICDs for MS or demyelinating disease*/<br/>%let ICD9_MS_demyelinating = 3773 32382 323 3419 G36 340 3410&#59<br/>%let ICD10_MS_demyelinating = H46 G37 G369 G378 G35 G360&#59<br/><br/><br/>/* macro puts quotes around words&#59*/<br/>%macro checkquotes(list)&#59<br/>&nbsp&nbsp&nbsp&nbsp%local i clist token&#59<br/>&nbsp&nbsp&nbsp&nbsp%let clist=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp%do i=1 %to %sysfunc(countw(&list))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let token =  %sysfunc(compress(%scan(&list,&i),%str(%'%\")))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let clist = &clist %sysfunc(quote(&token))&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&clist<br/>%mend&#59<br/><br/>%let din_Betaseron_q= %checkquotes (&din_Betaseron)&#59<br/>%put &din_Betaseron_q&#59<br/>%let din_Extavia_q= %checkquotes (&din_Extavia)&#59<br/>%put &din_Extavia_q&#59<br/>%let din_Tysabri_q= %checkquotes (&din_Tysabri)&#59<br/>%put &din_Tysabri_q&#59<br/>%let din_Gilenya_q= %checkquotes (&din_Gilenya)&#59<br/>%put &din_Gilenya_q&#59<br/>%let din_Rebif_q= %checkquotes (&din_Rebif)&#59<br/>%put &din_Rebif_q&#59<br/>%let din_Avonex_q= %checkquotes (&din_Avonex)&#59<br/>%put &din_Avonex_q&#59<br/>%let din_Copaxone_q= %checkquotes (&din_Copaxone)&#59<br/>%put &din_Copaxone_q&#59<br/><br/>%let din_MS_q= %checkquotes (&din_MS)&#59<br/>%put &din_MS_q&#59<br/><br/>/****************************************************************************************/<br/>/*Source population*/<br/>/****************************************************************************************/<br/>options mprint mlogic symbolgen&#59<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(rx_ddddd) as min_rx_date ,  max(rx_ddddd) as max_rx_date <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom hqc.dp_claim&#59<br/>quit&#59<br/>/*11AUG1994:00:00:00&nbsp&nbsp&nbsp&nbsp01APR2014:00:00:00*/<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(adm_date) as min_adm_date ,  max(adm_date) as max_adm_date <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom hqc.HOSP_F_1996&#59<br/>quit&#59<br/><br/>/*31JAN1979:00:00:00&nbsp&nbsp&nbsp&nbsp31MAR1999:00:00:00*/<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(dos) as min_dos format date9. ,  max(dos) as max_dos format  date9.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom hqc.MSB_BILLING_NEW&#59<br/>quit&#59<br/>/*19JAN1993&nbsp&nbsp&nbsp&nbsp19MAR2014*/<br/><br/><br/>/*extract the antiparkisonian descriptions for all subject from 01Jan1996 to 01APR2014*/<br/>%Extract_Drug(xtrc_start_dt='06APR2006'd, <br/>&nbsp&nbsp&nbsp&nbspxtrc_end_dt='16JUL2014'd, <br/>&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.MS_Drug_extract,<br/>&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsphsn_file=,<br/>&nbsp&nbsp&nbsp&nbspdin_list=&din_ms,<br/>&nbsp&nbsp&nbsp&nbspdin_file=,<br/>&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbspstrt_dt=&start_date,<br/>&nbsp&nbsp&nbsp&nbspend_dt= &end_date)&#59 /*95948 obs 1443  key_hsn*/<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_MS_Drug_extract as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_Drug_extract&#59<br/>quit&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(rx_ddddd) as min_rx_date format date9.,  max(rx_ddddd) as max_rx_date format date9.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_Drug_extract&#59<br/>quit&#59/*02DEC1997&nbsp&nbsp&nbsp&nbsp31MAR2014*/<br/><br/>/*diagnosis from cihi*/<br/>%Extract_CIHI( ds_in = &hosp_file,<br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.MS_CIHI_extract, <br/>&nbsp&nbsp&nbsp&nbspadms_start_date=&cihi_start_date,      <br/>&nbsp&nbsp&nbsp&nbspadms_end_date=&cihi_end_date,                     <br/>&nbsp&nbsp&nbsp&nbspICD_field_list=1-25,<br/>&nbsp&nbsp&nbsp&nbspICD9_list=, <br/>&nbsp&nbsp&nbsp&nbspICD9_exact_list=&ICD9_ms, <br/>&nbsp&nbsp&nbsp&nbspICD10_list=,   <br/>&nbsp&nbsp&nbsp&nbspICD10_exact_list=&ICD10_ms, <br/>&nbsp&nbsp&nbsp&nbsphsn_file=<br/>&nbsp&nbsp&nbsp&nbsp)&#59/* 9030 obs  2803 key_hsn*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_MS_CIHI_extract as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_CIHI_extract&#59<br/>quit&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(adm_date) as min_adm_date format date9.,  max(adm_date) as max_adm_date format date9.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_CIHI_extract&#59<br/>quit&#59/*02JAN1996&nbsp&nbsp&nbsp&nbsp24MAR2014*/<br/><br/>/*diagnosis from MSB*/<br/>%Extract_MSB(xtrc_start_dt='24MAR2006'd, <br/>&nbsp&nbsp&nbsp&nbspxtrc_end_dt='20JAN2014'd, <br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.MS_MSB_extract, <br/>&nbsp&nbsp&nbsp&nbspds_out_hsn_only=,<br/>&nbsp&nbsp&nbsp&nbsphsn_file=,<br/>&nbsp&nbsp&nbsp&nbspdostart=&start_date,<br/>&nbsp&nbsp&nbsp&nbspdosend=&end_date,<br/>&nbsp&nbsp&nbsp&nbspdiagcode=&ICD9_ms, <br/>&nbsp&nbsp&nbsp&nbspfscode=)&#59/*306797 obs 20472 keys*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_MS_MSB_extract as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_MSB_extract&#59<br/>quit&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(dos_1) as min_dos_1 format date9.,  max(dos_1) as max_dos_1 format date9.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_MSB_extract&#59<br/>quit&#59 /*02JAN1996&nbsp&nbsp&nbsp&nbsp21DEC2013*/<br/><br/>/*test*/<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspmerge key_MS_Drug_extract (in=id) key_MS_MSB_extract (in=id2) key_MS_CIHI_extract (in=id3)&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif id=0  and id3=1&#59<br/>run&#59<br/><br/>data key&#59<br/>&nbsp&nbsp&nbsp&nbspset key_MS_MSB_extract key_MS_CIHI_extract key_MS_Drug_extract&#59<br/>run&#59/*24718*/<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table AIMS.cohort_keys as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom key&#59<br/>quit&#59/*20831 keys in study cohort source*/<br/><br/>/*persistence/adherence analyses*/<br/>proc freq data=AIMS.MS_Drug_extract&#59<br/>&nbsp&nbsp&nbsp&nbsptable RX_QTY_AMT&#59<br/>run&#59<br/><br/>/*create supply_end_date*/<br/>data AIMS.MS_Drug_extract&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.MS_Drug_extract&#59<br/>&nbsp&nbsp&nbsp&nbspsupply_end=rx_ddddd+30&#59<br/>&nbsp&nbsp&nbsp&nbspformat supply_end date9.&#59<br/>run&#59<br/><br/>/*create index_date*/<br/>data ms_drug (rename=(rx_ddddd=index_date))&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.MS_Drug_extract&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn rx_ddddd&#59<br/>run&#59<br/>/*1443 obs*/<br/><br/>data AIMS.MS_Drug_index&#59<br/>&nbsp&nbsp&nbsp&nbspmerge AIMS.MS_Drug_extract ms_drug&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>run&#59<br/><br/>/*create pregnancy variables*/<br/>options mprint mlogic symbolgen&#59<br/><br/>%Extract_CIHI( ds_in = &hosp_file,<br/>&nbsp&nbsp&nbsp&nbspds_out=MS_CIHI_Pregnancy, <br/>&nbsp&nbsp&nbsp&nbspadms_start_date=&cihi_start_date,      <br/>&nbsp&nbsp&nbsp&nbspadms_end_date=&cihi_end_date,                     <br/>&nbsp&nbsp&nbsp&nbspICD_field_list=1-25,<br/>&nbsp&nbsp&nbsp&nbspICD9_list=, <br/>&nbsp&nbsp&nbsp&nbspICD9_exact_list=&ICD9_Pregnancy2, <br/>&nbsp&nbsp&nbsp&nbspICD10_list=,   <br/>&nbsp&nbsp&nbsp&nbspICD10_exact_list=&ICD10_Pregnancy2, <br/>&nbsp&nbsp&nbsp&nbsphsn_file=ms_drug<br/>&nbsp&nbsp&nbsp&nbsp)&#59/* 22 key_hsn*/<br/><br/>data AIMS.MS_CIHI_Pregnancy&#59<br/>set MS_CIHI_Pregnancy&#59<br/>if prov_loc_sk~=''&#59 run&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_MS_CIHI_Pregnancy as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_CIHI_Pregnancy&#59<br/>quit&#59<br/><br/>/*diagnosis from MSB*/<br/>%Extract_MSB(xtrc_start_dt='24MAR2006'd, <br/>&nbsp&nbsp&nbsp&nbspxtrc_end_dt='20JAN2014'd, <br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.MS_MSB_Pregnancy, <br/>&nbsp&nbsp&nbsp&nbspds_out_hsn_only=,<br/>&nbsp&nbsp&nbsp&nbsphsn_file=AIMS.MS_Drug_index,<br/>&nbsp&nbsp&nbsp&nbspdostart=&start_date,<br/>&nbsp&nbsp&nbsp&nbspdosend=&end_date,<br/>&nbsp&nbsp&nbsp&nbspdiagcode=&ICD9_Pregnancy2, <br/>&nbsp&nbsp&nbsp&nbspfscode=)&#59/*1811 obs 281 keys*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_MS_MSB_Pregnancy as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_MSB_Pregnancy&#59<br/>quit&#59<br/><br/>data key&#59<br/>&nbsp&nbsp&nbsp&nbspset key_MS_CIHI_Pregnancy key_MS_MSB_Pregnancy&#59<br/>run&#59/*303 keys*/<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_MSB_CIHI_Pregnancy as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom key&#59<br/>quit&#59/*282 Pregnancy keys*/<br/><br/>data MS_CIHI_Pregnancy&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.MS_CIHI_Pregnancy&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &nbsp&nbsp&nbsp&nbspkey_hsn  adm_date&#59<br/>run&#59<br/><br/>data MS_MSB_Pregnancy&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.MS_MSB_Pregnancy&#59<br/>&nbsp&nbsp&nbsp&nbspkeep &nbsp&nbsp&nbsp&nbspkey_hsn  dos_1&#59<br/>run&#59<br/><br/>data Pregnancy&#59<br/>&nbsp&nbsp&nbsp&nbspmerge ms_drug MS_CIHI_Pregnancy MS_MSB_Pregnancy&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn index_date adm_date dos_1&#59<br/>run&#59<br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset pregnancy&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif dos_1 ne .&#59<br/>run&#59<br/><br/>/*test*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_Pregnancy as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom Pregnancy&#59<br/>quit&#59/*1443 keys*/<br/><br/>/*select the pregnancy data post index date*/<br/>proc sort data=pregnancy out=pregnancy2 (keep=key_hsn index_date adm_date dos_1) nodupkey&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn  dos_1 adm_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspwhere index_date<adm_date or index_date<dos_1&#59<br/>run&#59<br/>/*213 obs*/<br/><br/>/*create preg_delivery_date(s) variable*/<br/>data pregnancy3&#59<br/>&nbsp&nbsp&nbsp&nbspset pregnancy2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsppregnancy=1&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif adm_date=. then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppreg_delivery_date=dos_1&#59<br/>&nbsp&nbsp&nbsp&nbspelse if dos_1=. then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppreg_delivery_date=adm_date&#59<br/>&nbsp&nbsp&nbsp&nbspelse preg_delivery_date=min(adm_date, dos_1)&#59<br/>&nbsp&nbsp&nbsp&nbspformat preg_delivery_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbsppreg_year_prior=preg_delivery_date-365&#59<br/>&nbsp&nbsp&nbsp&nbspformat preg_year_prior date9.&#59<br/>&nbsp&nbsp&nbsp&nbsppreg_delivery_post_date=preg_delivery_date+365&#59<br/>&nbsp&nbsp&nbsp&nbspformat preg_delivery_post_date date9.&#59<br/>run&#59<br/><br/>proc sort data=pregnancy3 out=AIMS.pregnancy nodupkey&#59<br/>by  key_hsn preg_delivery_date&#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_Pregnancy as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom pregnancy3&#59<br/>quit&#59/*79 keys had pregnancy post index date*/<br/><br/><br/>/*merge with drug file and creat preg_stop_date variable: if pregnancy=1: select the lastest date of preg_year_prior or supply_ends<br/>some patients have different exit_date when their supply_end_date later than perg_year_prior and choose the last one before preg_ICD_date*/<br/><br/><br/>proc sql noprint&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table pregnancy4 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect a.*, b.* from <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAIMS.pregnancy a, AIMS.MS_DRUG_INDEX b<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere a.key_hsn=b.key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder by key_hsn, preg_year_prior, supply_end&#59<br/>quit&#59<br/><br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset pregnancy4&#59<br/>&nbsp&nbsp&nbsp&nbspwhere index_date<preg_delivery_date and  supply_end<preg_delivery_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn index_date supply_end preg_year_prior preg_delivery_date preg_stop_date&#59<br/>run&#59<br/><br/>data pregnancy5&#59<br/>&nbsp&nbsp&nbsp&nbspset pregnancy4&#59<br/>&nbsp&nbsp&nbsp&nbspwhere index_date<preg_delivery_date and  supply_end<preg_delivery_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif preg_year_prior ne . then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppreg_stop_date=max ( preg_year_prior, supply_end)&#59<br/>&nbsp&nbsp&nbsp&nbspelse preg_stop_date=.&#59<br/>&nbsp&nbsp&nbsp&nbspformat preg_stop_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn index_date supply_end preg_year_prior preg_delivery_date preg_stop_date&#59<br/>run&#59<br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset pregnancy5&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif  preg_stop_date=.&#59<br/>run&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table Pregnancy6 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn, preg_delivery_date, preg_stop_date<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom pregnancy5&#59<br/>quit&#59/*208 keys: 1 patients have no drug use before preg_ICD_date*/<br/><br/><br/>/*for each pregnancy claim, choose the last supply or preg_delivery_date to be the max_preg_stop_date */<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table Pregnancy7 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn, preg_delivery_date, max(preg_stop_date) as max_preg_stop_date format date9.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom pregnancy6<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgroup by key_hsn, preg_delivery_date&#59<br/>quit&#59/*208 keys: 1 patients have no drug use before preg_ICD_date*/<br/><br/>proc sort data=pregnancy7&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn max_preg_stop_date&#59<br/>run&#59<br/><br/>/*select the first max_preg_stop_date as the earliest_preg_stop_date, will be used for the exit_date identification*/<br/>data pregnancy8&#59<br/>&nbsp&nbsp&nbsp&nbspset pregnancy7&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspearliest_preg_stop_date=max_preg_stop_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn earliest_preg_stop_date&#59<br/>run&#59<br/><br/>/* merge back to drug file, make sure everyone has a no missing preg_stop_date&#59*/<br/>data pregnancy9&#59<br/>&nbsp&nbsp&nbsp&nbspmerge  ms_drug pregnancy8&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspif earliest_preg_stop_date=. then earliest_preg_stop_date='31Dec9999'd&#59<br/>&nbsp&nbsp&nbsp&nbspformat earliest_preg_stop_date date9.&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn earliest_preg_stop_date&#59<br/>run&#59<br/><br/>data test&#59<br/>set pregnancy9&#59<br/>if earliest_preg_stop_date ne '31Dec9999'd&#59<br/>run&#59<br/><br/>/*test how many case no drug after preg_year_prior&#59*/<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset pregnancy9&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif earliest_preg_stop_date=preg_year_prior and preg_year_prior ne .&#59<br/>run&#59/*25 keys*/<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test2 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn from test&#59<br/>quit&#59<br/><br/>/*create exit_date*/<br/>/*death*/<br/>/*select death date after entry_date*/<br/>data cohort_death&#59<br/>&nbsp&nbsp&nbsp&nbspmerge  ms_drug (in=id) &input_death_file&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif id&#59<br/>run&#59<br/><br/>proc sort data=cohort_death out=cohort_death2 (keep=key_hsn  index_date  best_dt)&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn  best_dt&#59<br/>&nbsp&nbsp&nbsp&nbspwhere best_dt>index_date&#59<br/>run&#59/* 59 obs */<br/><br/>data cohort_death3 (rename=(best_dt=death_date))&#59<br/>&nbsp&nbsp&nbsp&nbspset cohort_death2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn  index_date  best_dt&#59<br/>run&#59/*59 obs*/<br/><br/>/*select the first date of stopping health coverage after entry date*/<br/>data cohort_stop_cvg&#59<br/>&nbsp&nbsp&nbsp&nbspmerge ms_drug (in=id) HQC.PHRS_PERS_PROG&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif id&#59<br/>&nbsp&nbsp&nbsp&nbspexp_dt = datepart(exp_date)&#59<br/>&nbsp&nbsp&nbsp&nbspformat exp_dt date9.&#59<br/>run&#59<br/><br/>proc sort data=cohort_stop_cvg out=cohort_stop_cvg2 (keep=key_hsn  index_date  exp_dt)&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn exp_dt&#59<br/>&nbsp&nbsp&nbsp&nbspwhere exp_dt>index_date&#59<br/>run&#59 /* 1622 obs*/<br/><br/>data cohort_stop_cvg3&#59<br/>&nbsp&nbsp&nbsp&nbspset cohort_stop_cvg2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>run&#59/*232 keys*/<br/><br/>/*merge all stop date files*/<br/>data all_stop&#59<br/>&nbsp&nbsp&nbsp&nbspmerge AIMS.MS_Drug_index cohort_death3 cohort_stop_cvg3 pregnancy9&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspstudy_end='30Jun2013'd&#59<br/>&nbsp&nbsp&nbsp&nbspformat study_end date9.&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn index_date  death_date exp_dt earliest_preg_stop_date study_end&#59<br/>run&#59<br/><br/>data all_stop2&#59<br/>&nbsp&nbsp&nbsp&nbspset all_stop&#59<br/>&nbsp&nbsp&nbsp&nbsparray stop[*] death_date exp_dt earliest_preg_stop_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspdo i=1 to dim (stop)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif stop[i]=. then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstop[i]='31Dec9999'd&#59<br/>&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbspformat entry_date date9.&#59*/<br/>&nbsp&nbsp&nbsp&nbspdrop i&#59<br/>&nbsp&nbsp&nbsp&nbspexit_date=min(death_date, exp_dt, earliest_preg_stop_date, study_end)&#59<br/>&nbsp&nbsp&nbsp&nbspformat exit_date date9.&#59<br/>run&#59<br/><br/>/*test*/<br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset all_stop2&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif exit_date ne '30Jun2013'd&#59<br/>run&#59<br/><br/>proc sort data=all_stop2 out=all_stop3 nodup&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn  exit_date&#59<br/>run&#59<br/><br/>data AIMS.MS_index_exit_date&#59<br/>&nbsp&nbsp&nbsp&nbspset all_stop3&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>run&#59/*1443 keys*/<br/><br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.MS_index_exit_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif earliest_preg_stop_date=exit_date and exit_date ne '30Jun2013'd&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn&#59<br/>run&#59/*  pregnancy left, 4 patients exit at exp_date before preg_stop_date*/<br/><br/>/*merge exit date to drug file to identify the gap variable: need the exit date for the last dispensation*/<br/>data ms_drug_index_exit&#59<br/>&nbsp&nbsp&nbsp&nbspmerge AIMS.ms_drug_index AIMS.MS_index_exit_date&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>run&#59<br/><br/><br/><br/>data test&#59<br/>set  ms_drug_index_exit&#59<br/>if key_hsn='63645334610'&#59<br/>run&#59<br/><br/>/*create the variable for the drug type*/<br/>data ms_drug_index_exit2&#59<br/>&nbsp&nbsp&nbsp&nbspset  ms_drug_index_exit&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif din in (&din_Betaseron_q) then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrug='Betaseron'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if din in (&din_Extavia_q) then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrug='Extavia'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if din in (&din_Tysabri_q) then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrug='Tysabri'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if din in (&din_Gilenya_q) then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrug='Gilenya'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if din in (&din_Rebif_q) then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrug='Rebif'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if din in (&din_Avonex_q) then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrug='Avonex'&#59<br/>&nbsp&nbsp&nbsp&nbspelse if din in (&din_Copaxone_q) then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrug='Copaxone'&#59<br/>&nbsp&nbsp&nbsp&nbspelse drug='missing'&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif supply_end=<exit_date or exit_date>rx_ddddd>= index_date&#59<br/>run&#59<br/><br/>/*key_hsn= 63645334610 had only one dispensation and supply_end>exit_date, exit_date - index_date<90*/<br/><br/>data test&#59<br/>set  ms_drug_index_exit2&#59<br/>if key_hsn='63645334610'&#59<br/>run&#59<br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset ms_drug_index_exit2&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif drug ='missing'&#59<br/>run&#59<br/><br/>/*gap variable*/<br/>data ms_drug_index_exit2&#59<br/>&nbsp&nbsp&nbsp&nbspset ms_drug_index_exit2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsppre_key=lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbsppre_supply=lag(supply_end)&#59<br/>&nbsp&nbsp&nbsp&nbsppre_drug=lag(drug)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbspfirst drug dispensation*/<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppre_key = ''&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppre_supply =.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppre_drug=''&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinitial_IMD=drug&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspformat pre_supply date9.&#59<br/>&nbsp&nbsp&nbsp&nbspgap=rx_ddddd-pre_supply&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsplast drug dispensation before exit_date*/<br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplast_supply_end=supply_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplast_gap= exit_date- supply_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplast_gap= .&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplast_supply_end=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspformat last_supply_end date9.&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsponly one drug dispensation*/<br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn and last.key_hsn then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_first_disp=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse disc_first_disp=0&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbspidentify the gaps >90*/<br/>&nbsp&nbsp&nbsp&nbspif gap>90 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspbig_gap=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse big_gap=0&#59<br/>run&#59<br/><br/>data ms_drug_index_exit3&#59<br/>&nbsp&nbsp&nbsp&nbspset ms_drug_index_exit2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspdrop initial_IMD&#59<br/>run&#59<br/><br/><br/><br/>/*assign the initial_IMD to every record*/<br/>data ms_drug_index_exit4&#59<br/>&nbsp&nbsp&nbsp&nbspset ms_drug_index_exit2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif initial_IMD  ne ''&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn initial_IMD&#59<br/>run&#59<br/><br/><br/><br/>data AIMS.ms_drug_index_exit&#59<br/>&nbsp&nbsp&nbsp&nbspmerge ms_drug_index_exit3  ms_drug_index_exit4&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>run&#59<br/><br/>/*exclude the patients with less than 365 days follow */<br/>data AIMS.ms_drug_index_exit&#59<br/>set  AIMS.ms_drug_index_exit&#59<br/>follow_up=exit_date-index_date>=365&#59<br/>if   exit_date-index_date>=365&#59<br/>run&#59<br/><br/>proc freq data=AIMS.ms_drug_index_exit&#59<br/>table follow_up FOLLOW_UP_DAYS&#59<br/>run&#59<br/><br/><br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.ms_drug_index_exit&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif disc_first_disp=1&#59<br/>run&#59<br/><br/>/*persistence outcome for initial IMD*/<br/><br/>/*stop_date_initial*/<br/>data stop_date_initial&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.ms_drug_index_exit&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif big_gap=1 or (big_gap=0 and drug ne initial_IMD) or last.key_hsn&#59<br/>run&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn from stop_date_initial&#59<br/>quit&#59<br/><br/>proc sort data=stop_date_initial&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn rx_ddddd&#59<br/>run&#59<br/><br/>data stop_date_initial2&#59<br/>&nbsp&nbsp&nbsp&nbspset stop_date_initial&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>run&#59<br/><br/>data stop_date_initial3&#59<br/>&nbsp&nbsp&nbsp&nbspset stop_date_initial2&#59<br/>&nbsp&nbsp&nbsp&nbspstop_date_initial=pre_supply&#59<br/>&nbsp&nbsp&nbsp&nbspcensor=0&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif last_gap>90 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo stop_date_initial=supply_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcensor=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse if . < last_gap<=90 then /*some patients have a negetive value of last_gap, ie, they exit before the last supply end date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo stop_date_initial=exit_date&#59<br/>&nbsp&nbsp&nbsp&nbspcensor=1&#59<br/>end&#59<br/><br/>&nbsp&nbsp&nbsp&nbspformat stop_date_initial date9.&#59<br/>&nbsp&nbsp&nbsp&nbsppersistence_time_initial=stop_date_initial-index_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif persistence_time_initial =. then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo disc_180_initial=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_365_initial=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif persistence_time_initial ne . and persistence_time_initial<=180 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_180_initial=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse if persistence_time_initial ne . and persistence_time_initial>180 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_180_initial=0&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif persistence_time_initial ne . and persistence_time_initial<=365 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_365_initial=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse if persistence_time_initial ne . and persistence_time_initial>=365 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_365_initial=0&#59<br/><br/><br/>run&#59<br/><br/>data test&#59<br/>&nbsp&nbsp&nbsp&nbspset stop_date_initial3&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif disc_first_disp=1&#59<br/>run&#59<br/><br/>/*stop_date_any*/<br/>data stop_date_any&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.ms_drug_index_exit&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif big_gap=1 or  last.key_hsn&#59<br/>run&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn from stop_date_any&#59<br/>quit&#59<br/><br/><br/>proc sort data=stop_date_any&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn rx_ddddd&#59<br/>run&#59<br/><br/>data stop_date_any2&#59<br/>&nbsp&nbsp&nbsp&nbspset stop_date_any&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>run&#59<br/><br/>data stop_date_any3&#59<br/>&nbsp&nbsp&nbsp&nbspset stop_date_any2&#59<br/>&nbsp&nbsp&nbsp&nbspstop_date_any=pre_supply&#59<br/>&nbsp&nbsp&nbsp&nbspcensor=0&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif last_gap>90 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo stop_date_any=supply_end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcensor=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse if . < last_gap<=90 then  /*some patients have a negetive value of last_gap, ie, they exit before the last supply end date*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo stop_date_any=exit_date&#59<br/>&nbsp&nbsp&nbsp&nbspcensor=1&#59<br/>end&#59<br/><br/>&nbsp&nbsp&nbsp&nbspformat stop_date_any date9.&#59<br/>&nbsp&nbsp&nbsp&nbsppersistence_time_any=stop_date_any-index_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif persistence_time_any =. then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo disc_180_any=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_365_any=.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif persistence_time_any ne . and persistence_time_any<=180 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_180_any=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse if persistence_time_any ne . and persistence_time_any>180 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_180_any=0&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif persistence_time_any ne . and persistence_time_any<=365 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_365_any=1&#59<br/>&nbsp&nbsp&nbsp&nbspelse if persistence_time_any ne . and persistence_time_any>=365 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdisc_365_any=0&#59<br/>run&#59<br/><br/>/***************************************************************************/<br/>/*****outcome initial IMD***************************************************/<br/>/***************************************************************************/<br/><br/>data stop_date_initial3&#59<br/>set stop_date_initial3 (rename=(disc_first_disp=disc_first_disp_initial))&#59<br/>run&#59<br/><br/>proc freq data=stop_date_initial3&#59<br/>table disc_first_disp_initial censor disc_180_initial disc_365_initial&#59<br/>run&#59<br/><br/>/***************************************************************************/<br/>/*****outcome any IMD***************************************************/<br/>/***************************************************************************/<br/><br/>data stop_date_any3&#59<br/>set stop_date_any3 (rename=(disc_first_disp=disc_first_disp_any))&#59<br/>run&#59<br/><br/>proc freq data=stop_date_any3&#59<br/>table disc_first_disp_any censor disc_180_any disc_365_any&#59<br/>run&#59<br/><br/><br/>/*create permanent file for stop data*/<br/>data AIMS.stop&#59<br/>merge stop_date_initial3 stop_date_any3&#59<br/>by key_hsn&#59<br/>keep key_hsn persistence_time_initial persistence_time_any <br/>disc_first_disp_initial censor disc_180_initial disc_365_initial disc_first_disp_any censor disc_180_any disc_365_any&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.stop&#59<br/>table disc_first_disp_initial censor disc_180_initial disc_365_initial disc_first_disp_any censor disc_180_any disc_365_any&#59<br/>run&#59<br/><br/><br/>data test&#59<br/>set stop_date_initial3&#59<br/>if . < last_gap<0 &#59<br/>run&#59<br/><br/>data test&#59<br/>set stop_date_any3&#59<br/>if stop_date_any=pre_supply &#59<br/>run&#59<br/><br/>/*K_M analysis*/<br/>proc lifetest data=stop_date_initial3 plots=survival&#59<br/>time persistence_time_initial*censor(1)&#59 survival out=surci conftype=loglog&#59<br/>run&#59<br/><br/><br/>proc lifetest data=stop_date_any3 plots=survival&#59<br/>time persistence_time_any*censor(1)&#59survival out=surci conftype=loglog&#59<br/>run&#59<br/><br/><br/>/*******************************************************************************************************************/<br/>/*adherence outcomes for entire study period and any IMD, only for subjects with >=365 days followup after index*/<br/>/*******************************************************************************************************************/<br/><br/>data adherence&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.ms_drug_index_exit&#59<br/>days_in_study_period=exit_date-index_date&#59<br/>if index_date<=rx_ddddd<=exit_date&#59<br/><br/>if exit_date<supply_end then days_supply=exit_date-rx_ddddd&#59<br/>else days_supply=30&#59<br/>run&#59<br/><br/>data test&#59<br/>set adherence&#59<br/>if exit_date<supply_end&#59<br/>run&#59<br/><br/>proc sql&#59<br/>create table adherence2 as<br/>select distinct key_hsn,days_in_study_period, sum (days_supply) as totl_days_supply_entire<br/>from adherence<br/>group by key_hsn&#59<br/>quit&#59<br/><br/>data adherence3&#59<br/>set adherence2&#59<br/>adherence_entire=totl_days_supply_entire/days_in_study_period&#59<br/>if adherence_entire>=0.8 then good_adherence_entire=1&#59<br/>else good_adherence_entire=0&#59<br/>run&#59<br/><br/><br/>/*******************************************************************************************************************/<br/>/*adherence outcomes for one year after index and any IMD, only for subjects with >=365 days followup after index*/<br/>/*******************************************************************************************************************/<br/><br/>data adherence4&#59<br/>&nbsp&nbsp&nbsp&nbspset AIMS.ms_drug_index_exit&#59<br/>days_in_study_period=exit_date-index_date&#59<br/>if index_date<=rx_ddddd<=index_date+365&#59<br/><br/>if index_date+365<supply_end then days_supply=index_date+365-rx_ddddd&#59<br/>else days_supply=30&#59<br/>run&#59<br/><br/>data test&#59<br/>set adherence4&#59<br/>if index_date+365<supply_end&#59<br/>run&#59<br/><br/>proc sql&#59<br/>create table adherence5 as<br/>select distinct key_hsn,sum (days_supply) as totl_days_supply_one_year<br/>from adherence4<br/>group by key_hsn&#59<br/>quit&#59<br/><br/>data adherence6&#59<br/>set adherence5&#59<br/>adherence_one_year=totl_days_supply_one_year/365&#59<br/>if adherence_one_year>=0.8 then good_adherence_one_year=1&#59<br/>else good_adherence_one_year=0&#59<br/>run&#59<br/><br/><br/>/*******************************************************************************************************************/<br/>/*adherence outcomes for persistent period and any IMD, only for subjects with >=365 days followup after index*/<br/>/*******************************************************************************************************************/<br/><br/>data adherence7&#59<br/>set stop_date_any3&#59<br/>if stop_date_any ne .&#59<br/>keep key_hsn stop_date_any&#59<br/>run&#59<br/><br/>data adherence8&#59<br/>merge AIMS.ms_drug_index_exit adherence7 (in=id)&#59<br/>by key_hsn&#59<br/>if id&#59<br/>run&#59<br/><br/><br/>data adherence9&#59<br/>&nbsp&nbsp&nbsp&nbspset adherence8&#59<br/>days_in_persistent_period=stop_date_any-index_date&#59<br/>if index_date<=rx_ddddd<=stop_date_any&#59<br/><br/>if stop_date_any<supply_end then days_supply=stop_date_any-rx_ddddd&#59<br/>else days_supply=30&#59<br/>run&#59<br/><br/>/*test the stop_date_any<supply_end, should be 0, because stop_date_any=supply_end&#59*/<br/>data test&#59<br/>set adherence9&#59<br/>if stop_date_any<supply_end&#59<br/>run&#59<br/><br/>proc sql&#59<br/>create table adherence10 as<br/>select distinct key_hsn,days_in_persistent_period, sum (days_supply) as totl_days_supply_persistent<br/>from adherence9<br/>group by key_hsn&#59<br/>quit&#59<br/><br/>data adherence11&#59<br/>set adherence10&#59<br/>adherence_persistent_period=totl_days_supply_persistent/days_in_persistent_period&#59<br/>if totl_days_supply_persistent/days_in_persistent_period>=0.8 then good_adherence_persistent_period=1&#59<br/>else good_adherence_persistent_period=0&#59<br/>run&#59<br/><br/><br/>proc freq data=adherence3&#59<br/>table good_adherence_entire&#59<br/>run&#59<br/><br/><br/>proc freq data=adherence6&#59<br/>table good_adherence_one_year&#59<br/>run&#59<br/><br/><br/>proc freq data=adherence11&#59<br/>table good_adherence_persistent_period&#59<br/>run&#59<br/><br/>/*create permanent file for adherence*/<br/>data AIMS.adherence&#59<br/>merge adherence3 adherence6 adherence11&#59<br/>by key_hsn&#59<br/>keep key_hsn adherence_one_year adherence_entire good_adherence_entire good_adherence_one_year good_adherence_persistent_period&#59<br/>run&#59<br/><br/><br/>/*identify location */<br/><br/><br/>proc sort data=&input_geo_file out=geo&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>run&#59<br/><br/>%reformat_datevars (work, geo)&#59<br/><br/><br/>proc sql&#59<br/>create table AIMS.keys_index as<br/>select distinct key_hsn, index_date from AIMS.ms_drug_index_exit&#59<br/>quit&#59<br/><br/><br/>data keys_index_geo&#59<br/>&nbsp&nbsp&nbsp&nbspmerge AIMS.keys_index (in=id)  geo&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbsppre_geo=index_date-eff_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif id&#59<br/>run&#59<br/><br/>data keys_index_geo2&#59<br/>&nbsp&nbsp&nbsp&nbspset  keys_index_geo&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif index_date>=eff_date&#59<br/>run&#59<br/><br/>proc sort data=keys_index_geo2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn eff_date&#59<br/>run&#59<br/><br/>data keys_index_geo3&#59<br/>&nbsp&nbsp&nbsp&nbspset  keys_index_geo2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif last.key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/***frequency of missing: 10***/<br/>&nbsp&nbsp&nbsp&nbspif urban_rural_ind=' ' then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspurban_rural_ind='Urban'&#59<br/><br/>run&#59<br/><br/>proc freq data=keys_index_geo3&#59<br/>&nbsp&nbsp&nbsp&nbsptable urban_rural_ind&#59<br/>run&#59 <br/><br/>/*Charlson_Elixhauser_Score*/<br/><br/>%Charlson_Elixhauser_Score_tmp(charlson=Y, <br/>   elixhauser=Y, <br/>   lib=AIMS,<br/>   msb_xtrc_start_dt='24MAR2006'd,<br/>   msb_xtrc_end_dt='20JAN2014'd, <br/>   hosp_file=&hosp_file, <br/>   hsn_file=keys_index, <br/>   ref_date_var=index_date, <br/>   charlson_var_out=charlson_index, <br/>   Elix_postfix=index, <br/>   ds_out=keys_index_charlson<br/>   ) <br/><br/>   proc freq data=aims.keys_index_charlson&#59<br/>   table charlson_index&#59<br/>   run&#59<br/><br/>/*   ************************************/<br/>/*covariates*/<br/>/*   ********************************************/<br/><br/>/*IMD at index date*/<br/><br/>data IMD_Index&#59<br/>set AIMS.ms_drug_index_exit&#59<br/>if rx_ddddd=index_date and din in(\"02281708\" \"02277492\" \"02237317\" \"02237319\" \"02237320\" \"02318253\" \"02318261\") then IMD_Index=\"IFNB_1a_SC\"&#59<br/>else if rx_ddddd=index_date and din in(\"02237770\" \"02269201\" ) then IMD_Index=\"IFNB_1a_IM\"&#59<br/>else if rx_ddddd=index_date and din in(\"02169649\" \"02337819\" ) then IMD_Index=\"IFNB_1b\"&#59<br/>else if rx_ddddd=index_date and din in(\"02233014\" \"02245619\" ) then IMD_Index=\"Glatiramer\"&#59<br/>else if rx_ddddd=index_date and din in(\"02286386\" ) then IMD_Index=\"Natalizumab\"&#59<br/>else if rx_ddddd=index_date and din in(\"02365480\" ) then IMD_Index=\"Fingolimod\"&#59<br/>if rx_ddddd=index_date and din not in(\"02286386\" ) &#59 <br/>/*delete Natalizumab: only one patients had this and deleted*/<br/>keep key_hsn index_date IMD_Index  rx_ddddd&#59<br/>run&#59<br/><br/>proc sort data=IMD_Index nodup&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/>proc freq data=IMD_Index&#59<br/>table IMD_Index&#59<br/>run&#59<br/><br/><br/>/*age*/<br/>proc sql&#59<br/>create table key_index as<br/>select distinct key_hsn, index_date<br/>from IMD_Index&#59<br/>quit&#59<br/><br/>data key_index_geo&#59<br/>merge key_index (in=id) hqc.PHRS_PERS_INFO&#59<br/>by key_hsn&#59<br/>if id&#59<br/>keep key_hsn index_date BORN_MONTH BORN_YEAR SEX_DESC&#59<br/>run&#59<br/><br/>%calc_age_discr(ds_in=key_index_geo,ds_out=IMD_Index_age,refday_var=index_date,agevar=age)&#59<br/><br/>proc sort data=IMD_Index_age nodup&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/>/*number of hospitalization in year prior to index date*/<br/>%Extract_CIHI( ds_in = &hosp_file,<br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.IMD_Index_age_CIHI, <br/>&nbsp&nbsp&nbsp&nbspadms_start_date=&cihi_start_date,      <br/>&nbsp&nbsp&nbsp&nbspadms_end_date=&cihi_end_date,                     <br/>&nbsp&nbsp&nbsp&nbsphsn_file=IMD_Index_age<br/>&nbsp&nbsp&nbsp&nbsp)&#59/*  key_hsn*/<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_IMD_Index_age_CIHI as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.IMD_Index_age_CIHI&#59<br/>quit&#59<br/><br/><br/>data IMD_Index_age_CIHI2&#59<br/>set AIMS.IMD_Index_age_CIHI&#59<br/>if index_date-365<=adm_date<index_date then num_cihi=1&#59<br/>else num_cihi=0&#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table IMD_Index_age_CIHI3 as<br/>select distinct key_hsn, sum (num_cihi) as total_num_cihi<br/>from IMD_Index_age_CIHI2<br/>group by key_hsn&#59<br/>quit&#59<br/><br/>data IMD_Index_age_CIHI3&#59<br/>set IMD_Index_age_CIHI3&#59<br/>if total_num_cihi>0 then c_num_cihi=1&#59<br/>else c_num_cihi=0 &#59<br/>run&#59<br/><br/>proc freq data=IMD_Index_age_CIHI3&#59<br/>table total_num_cihi c_num_cihi&#59<br/>run&#59<br/><br/><br/>/*number of physician visit in year prior to index date*/<br/>%Extract_MSB(xtrc_start_dt='24MAR2006'd, <br/>&nbsp&nbsp&nbsp&nbspxtrc_end_dt='16OCT2013'd, <br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.IMD_Index_age_MSB, <br/>&nbsp&nbsp&nbsp&nbspds_out_hsn_only=,<br/>&nbsp&nbsp&nbsp&nbsphsn_file=IMD_Index_age,<br/>&nbsp&nbsp&nbsp&nbspdostart=&start_date,<br/>&nbsp&nbsp&nbsp&nbspdosend=&end_date,<br/>&nbsp&nbsp&nbsp&nbspfscode=)&#59/* keys*/<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_IMD_Index_age_MSB as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.IMD_Index_age_MSB&#59<br/>quit&#59<br/><br/>data IMD_Index_age_MSB2&#59<br/>set AIMS.IMD_Index_age_MSB&#59<br/>if index_date-365<=dos_1<index_date then num_msb=1&#59<br/>else num_msb=0&#59<br/>run&#59<br/><br/>proc sql&#59<br/>create table IMD_Index_age_MSB3 as<br/>select distinct key_hsn,index_date,age,sex_desc, sum (num_msb) as total_num_msb<br/>from IMD_Index_age_MSB2<br/>group by key_hsn&#59<br/>quit&#59<br/><br/>proc freq data=IMD_Index_age_MSB3&#59<br/>table total_num_msb&#59<br/>run&#59<br/><br/>data IMD_Index_age_MSB4&#59<br/>set IMD_Index_age_MSB3&#59<br/>if total_num_msb <=3 then c_num_msb=1&#59<br/>else if 4<=total_num_msb <=11 then c_num_msb=2&#59<br/>else if total_num_msb>=12 then c_num_msb=3&#59<br/><br/>if total_num_msb =0 then c_num_msb2=1&#59<br/>else if 1<=total_num_msb <=3 then c_num_msb2=2&#59<br/>else if 4<=total_num_msb<=11 then c_num_msb2=3&#59<br/>else if total_num_msb>=12 then c_num_msb2=4&#59<br/>run&#59<br/><br/>data IMD_Index_age_cihi_msb&#59<br/>merge IMD_Index_age_CIHI3  IMD_Index_age_MSB4&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/>/*concurrent ATV code*/<br/><br/>%Extract_Drug(xtrc_start_dt='06APR2006'd, <br/>&nbsp&nbsp&nbsp&nbspxtrc_end_dt='03JUL2013'd, <br/>&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbspds_out=drug,<br/>&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsphsn_file=IMD_Index_age,<br/>&nbsp&nbsp&nbsp&nbspdin_list=,<br/>&nbsp&nbsp&nbsp&nbspdin_file=,<br/>&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbspstrt_dt=&start_date,<br/>&nbsp&nbsp&nbsp&nbspend_dt= &end_date)&#59 <br/><br/>data drug2&#59<br/>set drug&#59<br/>if index_date-365<=rx_ddddd<index_date&#59<br/>run&#59<br/><br/>proc sort data=drug2&#59<br/>by din&#59<br/>run&#59<br/><br/>proc sort data=aims.ATC_Codes (KEEP=DIN ATC4)&#59<br/>by din&#59<br/>run&#59<br/><br/>data atc&#59<br/>set aims.ATC_Codes&#59<br/>if din ne \"#NULL!\"&#59<br/>run&#59<br/><br/><br/>data drug3&#59<br/>merge drug2 (in=id) atc&#59<br/>by din&#59<br/>if id&#59<br/>run&#59<br/><br/>proc freq data=drug3&#59<br/>table ATC4&#59<br/>run&#59<br/><br/>data drug3&#59<br/>set drug3&#59<br/>if din in (&din_MS_q) then IMD=1&#59 else IMD=0&#59<br/>run&#59<br/><br/>proc sort data=drug3&#59<br/>by IMD&#59<br/>run&#59<br/><br/>proc freq data=drug3&#59<br/>by IMD&#59<br/>table ATC4&#59<br/>run&#59<br/><br/>data drug4&#59<br/>set drug3&#59<br/>if IMD=0 and ATC4 ne ''&#59<br/>run&#59<br/><br/><br/>proc freq data=drug4&#59<br/>by IMD&#59<br/>table ATC4&#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table drug5 as<br/>select distinct key_hsn, count (distinct ATC4) as total_ATC4 from drug4<br/>group by key_hsn&#59<br/>quit&#59<br/><br/><br/>proc freq data=drug5 nlevels&#59<br/>table total_ATC4&#59<br/>run&#59<br/><br/><br/>/*income*/<br/>data PHRS_PERS&#59<br/>set hqc.PHRS_PERS_RESC&#59<br/>run&#59<br/><br/>%reformat_datevars (work, PHRS_PERS)&#59<br/><br/><br/>proc sort data=PHRS_PERS&#59<br/>by key_hsn dauid&#59<br/>run&#59<br/><br/>data  PHRS_PERS&#59<br/>&nbsp&nbsp&nbsp&nbspset  PHRS_PERS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif DAUID not = ''&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn DAUID&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif first.DAUID then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprEff_date = Eff_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprExp_date = Exp_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain rEff_Date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain rExp_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif eff_date <= rExp_date then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif exp_date > rExp_date then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprExp_date = exp_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprEff_date = Eff_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprExp_date = Exp_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat rEff_date datetime20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat rExp_date datetime20.&#59<br/>run&#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/><br/>data PHRS_PERS2&#59<br/>set PHRS_PERS&#59<br/>/*if year(eff_date)<= 2006<=year(exp_date) and dauid ne ''&#59*/<br/>run&#59<br/><br/><br/>proc sort data=PHRS_PERS2&#59<br/>by key_hsn exp_date&#59<br/>run&#59<br/><br/>data PHRS_PERS3&#59<br/>set PHRS_PERS2&#59<br/>by key_hsn&#59<br/>if last.key_hsn&#59<br/>run&#59<br/><br/>proc sort data=PHRS_PERS3&#59<br/>by dauid&#59<br/>run&#59<br/>proc sort data=AIMS.income&#59<br/>by dauid&#59<br/>run&#59<br/><br/>data PHRS_PERS_income&#59<br/>merge PHRS_PERS3 AIMS.income&#59<br/>by dauid&#59<br/>run&#59<br/>data PHRS_PERS_income2&#59<br/>set PHRS_PERS_income&#59<br/>if IncomeConsolidated = . then dauid=substr(dauid,1,4)&#59<br/>keep key_hsn dauid&#59<br/>run&#59<br/><br/><br/>proc sort data=PHRS_PERS_income2&#59<br/>by dauid&#59<br/>run&#59<br/><br/>data AIMS.PHRS_PERS_income&#59<br/>merge PHRS_PERS_income2 AIMS.income&#59<br/>by dauid&#59<br/>run&#59<br/><br/>data tt&#59<br/>set AIMS.PHRS_PERS_income&#59<br/>if IncomeConsolidated = .&#59<br/>run&#59<br/><br/><br/><br/>proc freq data=AIMS.PHRS_PERS_income&#59<br/>table IncomeConsolidated&#59<br/>run&#59<br/><br/>data income_qtr&#59<br/>set AIMS.PHRS_PERS_income&#59<br/>if IncomeConsolidated ne . and key_hsn ne .&#59&#59<br/>run&#59<br/><br/><br/>proc freq data=income_qtr&#59<br/>table IncomeConsolidated&#59<br/>run&#59<br/><br/>proc rank data=income_qtr out=rankincome groups=5 &#59<br/>var IncomeConsolidated&#59<br/>ranks rank_IncomeConsolidated&#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table rankincome2 as <br/>select distinct key_hsn, dauid, rank_IncomeConsolidated from rankincome<br/>where key_hsn in (select key_hsn from IMD_INDEX_AGE)&#59<br/>quit&#59<br/><br/><br/>proc freq data=rankincome2&#59<br/>table rank_IncomeConsolidated&#59<br/>run&#59<br/><br/>/*create permanent income rank file*/<br/>data AIMS.rankincome &#59<br/>set rankincome2 (rename=(rank_IncomeConsolidated=qtr_income))&#59<br/>keep key_hsn dauid IncomeConsolidated qtr_income&#59<br/>run&#59<br/><br/>/*1297 key_hsn left*/<br/><br/>proc sort data=AIMS.rankincome nodup&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/><br/>/*merge all covariates */<br/>data AIMS.covariates&#59<br/>merge AIMS.rankincome (in=id) drug5 IMD_Index_age_cihi_msb  IMD_Index&#59<br/>by key_hsn&#59<br/>if id&#59<br/>if total_ATC4=. then total_ATC4=0&#59<br/>run&#59<br/><br/>/*merge with outcomes*/<br/><br/>data AIMS.analyses_file&#59<br/>merge AIMS.covariates (in=id) AIMS.stop AIMS.adherence&#59<br/>by key_hsn&#59<br/>if id&#59<br/>index_yr=year(index_date)&#59<br/>if 1996<=index_yr<=1998 then c_index_yr=\"yr1996_1998\"&#59<br/>else if 1999<=index_yr<=2000 then c_index_yr=\"yr1999_2000\"&#59<br/>else if 2001<=index_yr<=2002 then c_index_yr=\"yr2001_2002\"&#59<br/>else if 2003<=index_yr<=2005 then c_index_yr=\"yr2003_2005\"&#59<br/>else if 2006<=index_yr<=2008 then c_index_yr=\"yr2006_2008\"&#59<br/>else if 2009<=index_yr  then c_index_yr=\"yr2009_2013\"&#59<br/><br/>if total_ATC4>0 then c_total_ATC4=1&#59<br/>else c_total_ATC4=0&#59<br/><br/><br/>if total_ATC4=0 then c_total_ATC4_4level=1&#59<br/>else if 1<=total_ATC4<=2 then c_total_ATC4_4level=2&#59<br/>else if 3<=total_ATC4<=4 then c_total_ATC4_4level=3&#59<br/>else if 5<=total_ATC4 then c_total_ATC4_4level=4&#59<br/><br/><br/>if total_num_cihi>0 then c_total_num_cihi=1&#59<br/>else c_total_num_cihi=0&#59<br/><br/>if total_num_msb>=5 then total_num_msb_more_5=1&#59<br/>else total_num_msb_more_5=0&#59<br/><br/><br/>keep key_hsn adherence_one_year adherence_entire good_adherence_entire good_adherence_one_year good_adherence_persistent_period<br/>index_date index_yr c_index_yr SEX_DESC age total_ATC4 c_total_ATC4 c_total_ATC4_4level <br/>total_num_msb total_num_msb_more_5 total_num_cihi c_total_num_cihi c_num_cihi c_num_msb c_num_msb2 IMD_Index IncomeConsolidated qtr_income<br/>disc_first_disp_initial  disc_180_initial disc_365_initial disc_first_disp_any disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>run&#59<br/><br/><br/>/*descriptive analyses */<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table SEX_DESC*good_adherence_entire index_yr*good_adherence_entire good_adherence_one_year <br/>c_total_num_cihi c_index_yr qtr_income c_total_ATC4  /chisq&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table IMD_Index*good_adherence_one_year <br/>IMD_Index*c_total_num_cihi IMD_Index*SEX_DESC   IMD_Index*c_index_yr IMD_Index*qtr_income IMD_Index*c_total_ATC4 /chisq&#59<br/>run&#59<br/><br/>proc univariate data=AIMS.analyses_file&#59<br/>var adherence_one_year  age total_num_msb  total_ATC4&#59<br/>run&#59 <br/><br/>/*check the freq of min max median*/<br/>proc freq data=AIMS.analyses_file&#59<br/>table age total_num_msb  total_ATC4&#59<br/>run&#59<br/><br/>proc sort data=AIMS.analyses_file&#59<br/>by IMD_Index&#59<br/>run&#59<br/><br/><br/>proc univariate data=AIMS.analyses_file&#59<br/>by IMD_Index&#59<br/>var adherence_one_year  age total_num_msb  total_ATC4&#59<br/>run&#59 <br/><br/>/*update on Feb 23, 2015: add subgroup for physician visit 0-3, 4-11, 12+ in sheet 1*/<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table c_num_msb&#59<br/>run&#59<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>by IMD_Index&#59<br/>table c_num_msb&#59<br/>run&#59<br/><br/>/*update end*/<br/><br/>/*check the freq of min max median*/<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>by IMD_Index&#59<br/>table total_num_msb  total_ATC4&#59<br/>run&#59<br/><br/>/*persisitence-descriptive table*/<br/>/*table 1-3*/<br/>proc sort data=AIMS.analyses_file&#59<br/>by index_yr&#59<br/>run&#59<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table index_yr*disc_first_disp_initial index_yr*disc_180_initial index_yr*disc_365_initial<br/>index_yr*disc_first_disp_any index_yr*disc_180_any index_yr*disc_365_any &#59<br/>run&#59<br/><br/><br/>proc sort data=AIMS.analyses_file&#59<br/>by IMD_Index&#59<br/>run&#59<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table IMD_Index*disc_first_disp_initial IMD_Index*disc_180_initial IMD_Index*disc_365_initial<br/>IMD_Index*disc_first_disp_any IMD_Index*disc_180_any IMD_Index*disc_365_any /chisq exact&#59<br/>run&#59<br/><br/>/*table 4*/<br/><br/>/*initial*/<br/><br/>proc sort data=AIMS.analyses_file&#59<br/>by disc_180_initial&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_180_initial*SEX_DESC  disc_180_initial*IMD_Index  disc_180_initial*c_index_yr disc_180_initial*c_total_num_cihi <br/>disc_180_initial*total_num_msb_more_5 disc_180_initial*c_total_ATC4 /chisq &#59<br/>run&#59<br/><br/><br/>/*update on Feb 23, 2015: add subgroup for physician visit 0-3, 4-11, 12+ in table 4*/<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_180_initial*SEX_DESC  disc_180_initial*IMD_Index  disc_180_initial*c_index_yr disc_180_initial*c_total_num_cihi <br/>disc_180_initial*c_num_msb disc_180_initial*c_total_ATC4 /chisq &#59<br/>run&#59<br/><br/><br/>/*update end*/<br/><br/>proc sort data=AIMS.analyses_file&#59<br/>by disc_365_initial&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_365_initial*SEX_DESC  disc_365_initial*IMD_Index  disc_365_initial*c_index_yr disc_365_initial*c_total_num_cihi <br/>disc_365_initial*total_num_msb_more_5 disc_365_initial*c_total_ATC4 /chisq &#59<br/>run&#59<br/><br/><br/>/*update on Feb 23, 2015: add subgroup for physician visit 0-3, 4-11, 12+ in table 4*/<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_365_initial*SEX_DESC  disc_365_initial*IMD_Index  disc_365_initial*c_index_yr disc_365_initial*c_total_num_cihi <br/>disc_365_initial*c_num_msb disc_365_initial*c_total_ATC4 /chisq &#59<br/>run&#59<br/><br/><br/>/*update end*/<br/><br/>proc univariate data=AIMS.analyses_file&#59<br/>by disc_180_initial&#59<br/>var total_num_msb total_ATC4&#59<br/>run&#59<br/><br/><br/><br/>proc univariate data=AIMS.analyses_file&#59<br/>by disc_365_initial&#59<br/>var total_num_msb total_ATC4&#59<br/>run&#59<br/><br/>/*any*/<br/><br/>proc sort data=AIMS.analyses_file&#59<br/>by disc_180_any&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_180_any*SEX_DESC  disc_180_any*IMD_Index disc_180_any*c_index_yr  disc_180_any*c_total_num_cihi <br/>disc_180_any*total_num_msb_more_5 disc_180_any*c_total_ATC4/chisq &#59<br/>run&#59<br/><br/><br/>/*update on Feb 23, 2015: add subgroup for physician visit 0-3, 4-11, 12+ in table 4*/<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_180_any*SEX_DESC  disc_180_any*IMD_Index disc_180_any*c_index_yr  disc_180_any*c_total_num_cihi <br/>disc_180_any*c_num_msb disc_180_any*c_total_ATC4/chisq &#59<br/>run&#59<br/><br/><br/>/*update end*/<br/><br/>proc sort data=AIMS.analyses_file&#59<br/>by disc_365_any&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_365_any*SEX_DESC  disc_365_any*IMD_Index  disc_365_any*c_index_yr disc_365_any*c_total_num_cihi <br/>disc_365_any*total_num_msb_more_5 disc_365_any*c_total_ATC4/chisq &#59<br/>run&#59<br/><br/><br/>/*update on Feb 23, 2015: add subgroup for physician visit 0-3, 4-11, 12+ in table 4*/<br/><br/>proc freq data=AIMS.analyses_file&#59<br/>table disc_365_any*SEX_DESC  disc_365_any*IMD_Index  disc_365_any*c_index_yr disc_365_any*c_total_num_cihi <br/>disc_365_any*c_num_msb disc_365_any*c_total_ATC4/chisq &#59<br/>run&#59<br/><br/><br/>/*update end*/<br/><br/>proc univariate data=AIMS.analyses_file&#59<br/>by disc_180_any&#59<br/>var total_num_msb total_ATC4&#59<br/>run&#59<br/><br/><br/>proc univariate data=AIMS.analyses_file&#59<br/>by disc_365_any&#59<br/>var total_num_msb total_ATC4&#59<br/>run&#59<br/><br/>/*update on Feb 24, 2015: distribution for number of hospital*/<br/>proc freq data=AIMS.analyses_file&#59<br/>table total_num_cihi/plot&#59<br/>run&#59<br/>/*update end*/<br/><br/>/*update on March 04, 2016: freq of hospital, ATC and MSB visit*/<br/><br/>data hospital&#59<br/>set AIMS.analyses_file&#59<br/>length new_total_num_cihi $ 6&#59<br/>if total_num_cihi=0 then new_total_num_cihi='0'&#59<br/>else if total_num_cihi=1 then new_total_num_cihi='1'&#59<br/>else if 2<=total_num_cihi<=4 then new_total_num_cihi='2-4'&#59<br/>else if 5<=total_num_cihi then new_total_num_cihi='>=5'&#59<br/>else new_total_num_cihi='missing'&#59<br/>run&#59<br/><br/>proc freq data=hospital&#59<br/>table good_adherence_one_year*new_total_num_cihi&#59<br/>run&#59<br/><br/>/*MS hospital visit*/<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table keys as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn, index_date,good_adherence_one_year<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.analyses_file&#59<br/>quit&#59<br/>/*1297*/<br/><br/>%Extract_CIHI( ds_in = &hosp_file,<br/>&nbsp&nbsp&nbsp&nbspds_out=ms_hospital, <br/>&nbsp&nbsp&nbsp&nbspadms_start_date=&cihi_start_date,      <br/>&nbsp&nbsp&nbsp&nbspadms_end_date=&cihi_end_date,                     <br/>&nbsp&nbsp&nbsp&nbspICD_field_list=1-25,<br/>&nbsp&nbsp&nbsp&nbspICD9_list=, <br/>&nbsp&nbsp&nbsp&nbspICD9_exact_list=&ICD9_ms, <br/>&nbsp&nbsp&nbsp&nbspICD10_list=,   <br/>&nbsp&nbsp&nbsp&nbspICD10_exact_list=&ICD10_ms, <br/>&nbsp&nbsp&nbsp&nbsphsn_file=keys<br/>&nbsp&nbsp&nbsp&nbsp)&#59/* 2449 obs   key_hsn*/<br/><br/><br/>data ms_hospital2&#59<br/>set ms_hospital&#59<br/>if index_date-365<=adm_date<index_date then num_cihi=1&#59<br/>else num_cihi=0&#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table ms_hospital3 as<br/>select distinct key_hsn, index_date,good_adherence_one_year, sum (num_cihi) as total_num_MS_cihi<br/>from ms_hospital2<br/>group by key_hsn&#59<br/>quit&#59<br/><br/>data ms_hospital4&#59<br/>merge keys ms_hospital3&#59<br/>by key_hsn&#59<br/>length new_total_num_MS_cihi $ 6&#59<br/>if total_num_MS_cihi=0 or total_num_MS_cihi=. then new_total_num_MS_cihi='0'&#59<br/>else if total_num_MS_cihi=1 then new_total_num_MS_cihi='1'&#59<br/>else if 2<=total_num_MS_cihi<=4 then new_total_num_MS_cihi='2-4'&#59<br/>else if 5<=total_num_MS_cihi then new_total_num_MS_cihi='>=5'&#59<br/>else new_total_num_MS_cihi='missing'&#59<br/>if total_num_MS_cihi=. then total_num_MS_cihi=0&#59<br/>run&#59<br/><br/>proc freq data=ms_hospital4&#59<br/>table good_adherence_one_year*new_total_num_MS_cihi&#59<br/>run&#59<br/><br/>proc means data=hospital&#59<br/>by good_adherence_one_year&#59<br/>var total_num_cihi&#59<br/>run&#59<br/><br/>proc sort data=ms_hospital4&#59<br/>by good_adherence_one_year&#59<br/>run&#59<br/><br/>proc means data=ms_hospital4&#59<br/>by good_adherence_one_year&#59<br/>var total_num_MS_cihi&#59<br/>run&#59<br/><br/>/*ATC and MSB at abseline*/<br/><br/>proc means data=AIMS.analyses_file&#59<br/>var total_ATC4 total_num_msb&#59<br/>run&#59<br/><br/>/*update end*/<br/><br/><br/>/*regression analyses*/<br/><br/>/*good_adherence_one_year*/<br/>/*unadjusted*/<br/><br/>proc logistic data=AIMS.analyses_file descending &#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year=  IMD_Index &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= SEX_DESC &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= age &#59<br/>run&#59<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= qtr_income &#59<br/>run&#59<br/><br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= c_index_yr &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= c_num_msb &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= c_total_num_cihi &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= c_total_ATC4_4level &#59<br/>run&#59<br/><br/><br/>/*adjusted*/<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_one_year= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>run&#59<br/><br/>/*adherence in entire study period*/<br/><br/>/*unadjusted*/<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire=  IMD_Index &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= SEX_DESC &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= age &#59<br/>run&#59<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= qtr_income &#59<br/>run&#59<br/><br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= c_index_yr &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= c_num_msb &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= c_total_num_cihi &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= c_total_ATC4_4level &#59<br/>run&#59<br/><br/><br/>/*adjusted*/<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model good_adherence_entire= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>run&#59<br/><br/>/*6 month initial*/<br/><br/>/*unadjusted*/<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial=  IMD_Index &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= SEX_DESC &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= age &#59<br/>run&#59<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= qtr_income &#59<br/>run&#59<br/><br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= c_index_yr &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= c_num_msb &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= c_total_num_cihi &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= c_total_ATC4_4level &#59<br/>run&#59<br/><br/><br/>/*adjusted*/<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_initial= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>run&#59<br/><br/><br/>/*6 month any*/<br/>/*unadjusted*/<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any=  IMD_Index &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= SEX_DESC &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= age &#59<br/>run&#59<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= qtr_income &#59<br/>run&#59<br/><br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= c_index_yr &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= c_num_msb &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= c_total_num_cihi &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= c_total_ATC4_4level &#59<br/>run&#59<br/><br/><br/>/*adjusted*/<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_180_any= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>run&#59<br/><br/><br/>/*12 month initial*/<br/><br/>/*unadjusted*/<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial=  IMD_Index &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= SEX_DESC &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= age &#59<br/>run&#59<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= qtr_income &#59<br/>run&#59<br/><br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= c_index_yr &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= c_num_msb &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= c_total_num_cihi &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= c_total_ATC4_4level &#59<br/>run&#59<br/><br/><br/>/*adjusted*/<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_initial= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>run&#59<br/><br/><br/>/*12 month any*/<br/>/*unadjusted*/<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any=  IMD_Index &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= SEX_DESC &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= age &#59<br/>run&#59<br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= qtr_income &#59<br/>run&#59<br/><br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= c_index_yr &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= c_num_msb &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= c_total_num_cihi &#59<br/>run&#59<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= c_total_ATC4_4level &#59<br/>run&#59<br/><br/><br/>/*adjusted*/<br/><br/><br/>proc logistic data=AIMS.analyses_file descending&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model disc_365_any= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>run&#59<br/><br/><br/>/*cox regression*/<br/><br/>data stop&#59<br/>set AIMS.stop&#59<br/>keep key_hsn persistence_time_initial persistence_time_any censor&#59<br/>run&#59<br/> <br/>proc sort data=stop&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/><br/>proc sort data=AIMS.analyses_file&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/><br/>data cox&#59<br/>merge AIMS.analyses_file (in=id) AIMS.stop&#59<br/>by key_hsn&#59<br/>if id&#59<br/>run&#59<br/><br/>/*time to dicontinuation - initial IMD*/<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=IMD_Index/rl&#59<br/>run&#59<br/><br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=SEX_DESC/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=age/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=qtr_income/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=c_index_yr/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=c_num_msb/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=c_num_cihi/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=c_total_ATC4_4level/rl&#59<br/>run&#59<br/><br/>/*adjusted */<br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=IMD_Index SEX_DESC  age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level/rl&#59<br/>run&#59<br/>/*Time to Discontinuation - ANY IMD*/<br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=IMD_Index/rl&#59<br/>run&#59<br/><br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=SEX_DESC/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=age/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=qtr_income/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=c_index_yr/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=c_num_msb/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=c_num_cihi/rl&#59<br/>run&#59<br/><br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=c_total_ATC4_4level/rl&#59<br/>run&#59<br/><br/>/*adjusted */<br/><br/>proc phreg data=cox&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=IMD_Index SEX_DESC  age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level/rl&#59<br/>run&#59<br/><br/>/******************************************/<br/>/*aim3: adherence and mortality*/<br/>/********************************************/<br/>/*extract the records before 1996 among the final cohort population, if so then delete them and identify the death records*/<br/><br/>/*diagnosis from cihi*/<br/>%Extract_CIHI( ds_in = &hosp_file,<br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.MS_demyelinating_CIHI_extract, <br/>&nbsp&nbsp&nbsp&nbspadms_start_date='01Jan1980'd,      <br/>&nbsp&nbsp&nbsp&nbspadms_end_date=&cihi_end_date,                     <br/>&nbsp&nbsp&nbsp&nbspICD_field_list=1-25,<br/>&nbsp&nbsp&nbsp&nbspICD9_list=, <br/>&nbsp&nbsp&nbsp&nbspICD9_exact_list=&ICD9_MS_demyelinating, <br/>&nbsp&nbsp&nbsp&nbspICD10_list=,   <br/>&nbsp&nbsp&nbsp&nbspICD10_exact_list=&ICD10_MS_demyelinating, <br/>&nbsp&nbsp&nbsp&nbsphsn_file=AIMS.analyses_file<br/>&nbsp&nbsp&nbsp&nbsp)&#59/* 3066 obs  1297 key_hsn*/<br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_MS_demyelinating as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_demyelinating_CIHI_extract&#59<br/>quit&#59<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(adm_date) as min_adm_date format date9.,  max(adm_date) as max_adm_date format date9.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.MS_demyelinating_CIHI_extract&#59<br/>quit&#59/*15APR1996&nbsp&nbsp&nbsp&nbsp24MAR2014*/<br/><br/><br/>/*nobody has records before 1996, so keep all of them to identify the death */<br/><br/>/*identify the number of patients who die during study among the final cohort population*/<br/><br/><br/>data analyses_file_death&#59<br/>&nbsp&nbsp&nbsp&nbspmerge  AIMS.analyses_file (in=id) clean13.VERF_DTHS_JFM13_02OCT2013&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif id&#59<br/>run&#59<br/><br/>proc sort data=analyses_file_death out=analyses_file_death2 (keep=key_hsn  index_date  best_dt)&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn  best_dt&#59<br/>&nbsp&nbsp&nbsp&nbspwhere best_dt>index_date&#59<br/>run&#59/* 57 obs */<br/><br/>data analyses_file_death3 (rename=(best_dt=death_date))&#59<br/>&nbsp&nbsp&nbsp&nbspset analyses_file_death2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn  index_date  best_dt&#59<br/>run&#59/*57 obs*/<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table test as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct min(adm_date) as min_adm_date format date9.,  max(adm_date) as max_adm_date format date9.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom &hosp_file&#59<br/>quit&#59/*15APR1996&nbsp&nbsp&nbsp&nbsp24MAR2014*/<br/><br/><br/>/*aim2 - Zero-inflated possion regression: adherence and hospitallization*/<br/><br/>/*create variable total_hospitalization*/<br/>/*any IMD, any hospitalization diagnosis*/<br/>%Extract_CIHI( ds_in = &hosp_file,<br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.analyses_file_any_diag_hosp, <br/>&nbsp&nbsp&nbsp&nbspadms_start_date='01Jan1980'd,      <br/>&nbsp&nbsp&nbsp&nbspadms_end_date=&cihi_end_date,                     <br/>&nbsp&nbsp&nbsp&nbspICD_field_list=1-25,<br/>&nbsp&nbsp&nbsp&nbspICD9_list=, <br/>&nbsp&nbsp&nbsp&nbspICD9_exact_list=, <br/>&nbsp&nbsp&nbsp&nbspICD10_list=,   <br/>&nbsp&nbsp&nbsp&nbspICD10_exact_list=, <br/>&nbsp&nbsp&nbsp&nbsphsn_file=AIMS.analyses_file<br/>&nbsp&nbsp&nbsp&nbsp)&#59/* 6884 obs  1297 key_hsn*/<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.analyses_file_any_diag_hosp&#59<br/>quit&#59<br/><br/>data analyses_file_any_diag_hosp2&#59<br/>set AIMS.analyses_file_any_diag_hosp&#59<br/>if index_date+366<=adm_date<=index_date+730&#59<br/>run&#59<br/><br/>/*452 obs 253 key_hsn*/<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key_analyses_file_hosp2 as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom analyses_file_any_diag_hosp2&#59<br/>quit&#59<br/>proc sort data=analyses_file_any_diag_hosp2&#59<br/>by key_hsn adm_date&#59<br/>run&#59<br/><br/>data analyses_file_any_diag_hosp3&#59<br/>&nbsp&nbsp&nbsp&nbspset analyses_file_any_diag_hosp2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsplag_adm=lag(adm_date)&#59<br/>&nbsp&nbsp&nbsp&nbsplag_dschg=lag(DSCHG_DATE)&#59<br/>&nbsp&nbsp&nbsp&nbsplag_key_hsn=lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspgap=adm_date-lag_dschg&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif DSCHG_DATE=adm_date then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstay=0&#59<br/>&nbsp&nbsp&nbsp&nbspelse stay=1&#59<br/>&nbsp&nbsp&nbsp&nbsplag_stay=lag(stay)&#59<br/>&nbsp&nbsp&nbsp&nbspretain _adm_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_adm_date=adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnew_adm_date=_adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspback_to_back=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif  gap<2 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspback_to_back=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnew_adm_date=_adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo back_to_back=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnew_adm_date=adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_adm_date=adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspformat new_adm_date lag_adm lag_dschg lag_new_adm_date _adm_date new_adm_date yymmdd10.&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn gap index_date  lag_key_hsn lag_adm    lag_dschg adm_DATE DSCHG_DATE back_to_back stay lag_stay _adm_date new_adm_date&#59<br/>run&#59<br/><br/>proc sql&#59<br/>create table analyses_file_any_diag_hosp4 as<br/>select distinct key_hsn, sum(stay) as total_stay,new_adm_date<br/>from analyses_file_any_diag_hosp3<br/>group by key_hsn, new_adm_date&#59<br/>quit&#59<br/><br/><br/>data analyses_file_any_diag_hosp5&#59<br/>set analyses_file_any_diag_hosp4&#59<br/>if total_stay>0 &#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table analyses_file_any_diag_hosp6 as<br/>select distinct key_hsn,  count (distinct new_adm_date) as any_diag_inpatients_adm <br/>from analyses_file_any_diag_hosp5<br/>group by key_hsn&#59<br/>quit&#59<br/><br/><br/>data analyses_file_any_diag_hosp7&#59<br/>set analyses_file_any_diag_hosp4&#59<br/>if total_stay=0 &#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table analyses_file_any_diag_hosp8 as<br/>select distinct key_hsn,  count (distinct new_adm_date) as any_diag_day_adm <br/>from analyses_file_any_diag_hosp7<br/>group by key_hsn&#59<br/>quit&#59<br/><br/><br/>data any_diag_adm&#59<br/>merge analyses_file_any_diag_hosp6 analyses_file_any_diag_hosp8&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/><br/>/*any IMD, primary hospitalization diagnosis*/<br/> options mprint mlogic symbolgen&#59<br/><br/> %let Primary_ICD9_MS = 340 &#59<br/>%let Primary_ICD10_MS = G35 &#59<br/><br/><br/>%Extract_CIHI( ds_in = &hosp_file,<br/>&nbsp&nbsp&nbsp&nbspds_out=AIMS.analyses_file_primary_diag_hosp, <br/>&nbsp&nbsp&nbsp&nbspadms_start_date=&cihi_start_date,      <br/>&nbsp&nbsp&nbsp&nbspadms_end_date=&cihi_end_date,                     <br/>&nbsp&nbsp&nbsp&nbspICD_field_list=1-1,<br/>&nbsp&nbsp&nbsp&nbspICD9_list=, <br/>&nbsp&nbsp&nbsp&nbspICD9_exact_list=340, <br/>&nbsp&nbsp&nbsp&nbspICD10_list=,   <br/>&nbsp&nbsp&nbsp&nbspICD10_exact_list=G35, <br/>&nbsp&nbsp&nbsp&nbsphsn_file=AIMS.analyses_file<br/>&nbsp&nbsp&nbsp&nbsp)&#59/* 1297 key_hsn*/<br/><br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom AIMS.analyses_file_primary_diag_hosp&#59<br/>quit&#59<br/><br/>data analyses_file_primary_diag_hosp2&#59<br/>set AIMS.analyses_file_primary_diag_hosp&#59<br/>if index_date+366<=adm_date<=index_date+730&#59<br/>run&#59<br/><br/>/*136 obs 54 key_hsn*/<br/><br/>proc sql&#59<br/>&nbsp&nbsp&nbsp&nbspcreate table key as<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselect distinct key_hsn<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfrom analyses_file_primary_diag_hosp2&#59<br/>quit&#59<br/><br/><br/>proc sort data=analyses_file_primary_diag_hosp2&#59<br/>by key_hsn adm_date&#59<br/>run&#59<br/><br/>data analyses_file_primary_diag_hosp3&#59<br/>&nbsp&nbsp&nbsp&nbspset analyses_file_primary_diag_hosp2&#59<br/>&nbsp&nbsp&nbsp&nbspby key_hsn&#59<br/>&nbsp&nbsp&nbsp&nbsplag_adm=lag(adm_date)&#59<br/>&nbsp&nbsp&nbsp&nbsplag_dschg=lag(DSCHG_DATE)&#59<br/>&nbsp&nbsp&nbsp&nbsplag_key_hsn=lag(key_hsn)&#59<br/>&nbsp&nbsp&nbsp&nbspgap=adm_date-lag_dschg&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif DSCHG_DATE=adm_date then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstay=0&#59<br/>&nbsp&nbsp&nbsp&nbspelse stay=1&#59<br/>&nbsp&nbsp&nbsp&nbsplag_stay=lag(stay)&#59<br/>&nbsp&nbsp&nbsp&nbspretain _adm_date&#59<br/><br/>&nbsp&nbsp&nbsp&nbspif first.key_hsn then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_adm_date=adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnew_adm_date=_adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspback_to_back=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbspelse<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif  gap<2 then<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspback_to_back=1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnew_adm_date=_adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdo back_to_back=0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnew_adm_date=adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_adm_date=adm_date&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/><br/>&nbsp&nbsp&nbsp&nbspformat new_adm_date lag_adm lag_dschg lag_new_adm_date _adm_date new_adm_date yymmdd10.&#59<br/>&nbsp&nbsp&nbsp&nbspkeep key_hsn gap index_date  lag_key_hsn lag_adm    lag_dschg adm_DATE DSCHG_DATE back_to_back stay lag_stay _adm_date new_adm_date&#59<br/>run&#59<br/><br/>proc sql&#59<br/>create table analyses_file_primary_diag_hosp4 as<br/>select distinct key_hsn, sum(stay) as total_stay,new_adm_date<br/>from analyses_file_primary_diag_hosp3<br/>group by key_hsn, new_adm_date&#59<br/>quit&#59<br/><br/><br/>data analyses_file_primary_diag_hosp5&#59<br/>set analyses_file_primary_diag_hosp4&#59<br/>if total_stay>0 &#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table analyses_file_primary_diag_hosp6 as<br/>select distinct key_hsn,  count (distinct new_adm_date) as primary_diag_inpatients_adm <br/>from analyses_file_primary_diag_hosp5<br/>group by key_hsn&#59<br/>quit&#59<br/><br/><br/>data analyses_file_primary_diag_hosp7&#59<br/>set analyses_file_primary_diag_hosp4&#59<br/>if total_stay=0 &#59<br/>run&#59<br/><br/><br/>proc sql&#59<br/>create table analyses_file_primary_diag_hosp8 as<br/>select distinct key_hsn,  count (distinct new_adm_date) as primary_diag_day_adm <br/>from analyses_file_primary_diag_hosp7<br/>group by key_hsn&#59<br/>quit&#59<br/><br/><br/>data primary_diag_adm&#59<br/>merge analyses_file_primary_diag_hosp6 analyses_file_primary_diag_hosp8&#59<br/>by key_hsn&#59<br/>run&#59<br/><br/>/*merge all admission variables*/<br/>data all_admission&#59<br/>merge AIMS.analyses_file (in=id) any_diag_adm primary_diag_adm&#59<br/>by key_hsn&#59<br/>if id&#59<br/>run&#59<br/><br/>data all_admission2&#59<br/>set all_admission&#59<br/>if any_diag_day_adm=. then any_diag_day_adm=0&#59<br/>if any_diag_inpatients_adm=. then any_diag_inpatients_adm=0&#59<br/>if primary_diag_day_adm=. then primary_diag_day_adm=0&#59<br/>if primary_diag_inpatients_adm=. then primary_diag_inpatients_adm=0&#59<br/>any_diag_both=any_diag_day_adm+any_diag_inpatients_adm&#59<br/>primary_diag_both=primary_diag_day_adm+primary_diag_inpatients_adm&#59<br/>run&#59<br/><br/>proc freq data=all_admission2&#59<br/>table any_diag_day_adm any_diag_inpatients_adm primary_diag_day_adm primary_diag_inpatients_adm <br/>any_diag_both primary_diag_both&#59<br/>run&#59<br/><br/>/* coverage_days calculate to identify the offset variable*/<br/>data all_admission3&#59<br/>set all_admission2&#59<br/>index_366=index_date+366&#59<br/>index_730=index_date+730&#59<br/>run&#59<br/><br/>%coverage_days (xtrc_dt='08OCT2014'd,<br/>            ds_in =all_admission3,<br/>            ds_out=all_admission3, <br/>            strt_dt_var=index_366,      <br/>            end_dt_var=index_730,<br/>            def_strt_dt=07DEC1994,<br/>            def_end_dt=&sysdate9,<br/>            cvrg_strt_dt_var=eff_date,<br/>            cvrg_end_dt_var=exp_date )&#59<br/><br/> data AIMS.analyses_file_possion&#59<br/> set all_admission3&#59<br/>logcvg=log(CVGdays/365)&#59<br/><br/>if any_diag_day_adm>=1 then c_any_diag_day_adm=1&#59 else c_any_diag_day_adm=0&#59<br/>if any_diag_inpatients_adm>=1 then c_any_diag_inpatients_adm=1&#59 else c_any_diag_inpatients_adm=0&#59<br/>if primary_diag_day_adm >=1 then c_primary_diag_day_adm=1&#59 else c_primary_diag_day_adm=0&#59<br/>if primary_diag_inpatients_adm>=1 then c_primary_diag_inpatients_adm=1&#59else c_primary_diag_inpatients_adm=0&#59<br/>if any_diag_both>=1 then c_any_diag_both=1&#59else c_any_diag_both=0&#59<br/>if primary_diag_both>=1 then c_primary_diag_both=1&#59else c_primary_diag_both=0&#59<br/><br/> run&#59<br/><br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table  logcvg any_diag_day_adm any_diag_inpatients_adm primary_diag_day_adm primary_diag_inpatients_adm <br/>any_diag_both primary_diag_both c_any_diag_day_adm c_any_diag_inpatients_adm c_primary_diag_day_adm c_primary_diag_inpatients_adm<br/>c_any_diag_both c_primary_diag_both&#59<br/>run&#59<br/><br/>/****************************************************/<br/>/*any_diag_inpatients_adm analysis*/<br/>/****************************************************/<br/><br/>/*test each individual covariate to determine those should be included in zero inflation part of model*/<br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = SEX_DESC&#59<br/>run&#59 <br/>/*p=0.5803*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = age&#59<br/>run&#59 <br/>/*p=0.8682*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = qtr_income&#59<br/>run&#59 <br/>/*p=0.4785*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = c_index_yr&#59<br/>run&#59 <br/>/*p=0.4045*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = c_num_msb&#59<br/>run&#59 <br/>/*p=0.0067*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = c_num_cihi&#59<br/>run&#59 <br/>/*p=0.0001*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = c_total_ATC4_4level&#59<br/>run&#59 <br/>/*p=0.0001*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_inpatients_adm = good_adherence_one_year&#59<br/>run&#59 <br/>/*p=0.0261*/<br/><br/>/*based on above results, choose c_total_ATC4_4level c_num_cihi c_num_msb good_adherence_one_year to zero inflation part of model*/<br/><br/>/*any_diag_inpatients_adm analysis*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_total_ATC4_4level c_num_cihi c_num_msb good_adherence_one_year/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/****************************************************/<br/>/*c_any_diag_both analysis*/<br/>/****************************************************/<br/><br/>/*test each individual covariate to determine those should be included in zero inflation part of model*/<br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = SEX_DESC&#59<br/>run&#59 <br/>/*p=0.7127*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = age&#59<br/>run&#59 <br/>/*p=0.2087*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = qtr_income&#59<br/>run&#59 <br/>/*p=0.8919*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = c_index_yr&#59<br/>run&#59 <br/>/*p=0.0029*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = c_num_msb&#59<br/>run&#59 <br/>/*p=0.0105*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = c_num_cihi&#59<br/>run&#59 <br/>/*p=0.0001*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = c_total_ATC4_4level&#59<br/>run&#59 <br/>/*p=0.0001*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_both = good_adherence_one_year&#59<br/>run&#59 <br/>/*p=0.7165*/<br/><br/>/*based on above results, choose c_total_ATC4_4level c_num_cihi c_num_msb c_index_yr to zero inflation part of model*/<br/><br/>/*c_any_diag_both analysis*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_both = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_total_ATC4_4level c_num_cihi c_num_msb c_index_yr/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>/****************************************************/<br/>/*c_any_diag_day_adm analysis*/<br/>/****************************************************/<br/><br/>/*test each individual covariate to determine those should be included in zero inflation part of model*/<br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = SEX_DESC&#59<br/>run&#59 <br/>/*p=0.2540*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = age&#59<br/>run&#59 <br/>/*p=0.1535*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = qtr_income&#59<br/>run&#59 <br/>/*p=0.0442*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = c_index_yr&#59<br/>run&#59 <br/>/*p=0.0032*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = c_num_msb&#59<br/>run&#59 <br/>/*p=0.6047*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = c_num_cihi&#59<br/>run&#59 <br/>/*p=0.0117*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = c_total_ATC4_4level&#59<br/>run&#59 <br/>/*p=0.0479*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_any_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_any_diag_day_adm = good_adherence_one_year&#59<br/>run&#59 <br/>/*p=0.4401*/<br/><br/>/*based on above results, choose qtr_income c_total_ATC4_4level c_num_cihi  c_index_yr to zero inflation part of model*/<br/><br/>/*c_any_diag_day_adm analysis: Any IMD, any diagnosis, day admission*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_day_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel qtr_income c_total_ATC4_4level c_num_cihi  c_index_yr/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/****************************************************/<br/>/*c_primary_diag_inpatients_adm analysis*/<br/>/****************************************************/<br/><br/>/*test each individual covariate to determine those should be included in zero inflation part of model*/<br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = SEX_DESC&#59<br/>run&#59 <br/>/*p=0.6320*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = age&#59<br/>run&#59 <br/>/*p=0.1613*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = qtr_income&#59<br/>run&#59 <br/>/*p=0.5156*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = c_index_yr&#59<br/>run&#59 <br/>/*p=0.6773*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = c_num_msb&#59<br/>run&#59 <br/>/*p=0.0985*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = c_num_cihi&#59<br/>run&#59 <br/>/*p=0.0001*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = c_total_ATC4_4level&#59<br/>run&#59 <br/>/*p=0.1576*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_inpatients_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_inpatients_adm = good_adherence_one_year&#59<br/>run&#59 <br/>/*p=0.1557*/<br/><br/>/*based on above results, choose c_num_cihi to zero inflation part of model*/<br/>/*c_primary_diag_inpatients_adm analysis*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/>/*WARNING: The specified model did not converge.*/<br/>/*ERROR: The mean parameter is either invalid or at a limit of its range for some observations.*/<br/><br/>/*crosstable test first*/<br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table primary_diag_inpatients_adm primary_diag_inpatients_adm*SEX_DESC primary_diag_day_adm*SEX_DESC primary_diag_inpatients_adm*c_index_yr  primary_diag_day_adm*c_index_yr <br/>primary_diag_inpatients_adm*c_num_msb primary_diag_day_adm*c_num_msb primary_diag_inpatients_adm*c_num_cihi primary_diag_day_adm*c_num_cihi <br/>primary_diag_inpatients_adm*qtr_income primary_diag_day_adm*qtr_income primary_diag_inpatients_adm*c_total_ATC4_4level primary_diag_day_adm*c_total_ATC4_4level<br/>primary_diag_inpatients_adm*good_adherence_one_year primary_diag_day_adm*good_adherence_one_year <br/>primary_diag_inpatients_adm*c_total_ATC4_4level primary_diag_day_adm*c_total_ATC4_4level&#59<br/>run&#59<br/><br/>/*test one by one*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/>/* delete either c_num_msb or c_total_ATC4_4level good_adherence_one_year will complete the analysis*/<br/><br/>/*quasi possion*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/  param=reference&#59<br/>model primary_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/<br/>scale=Pearson dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/****************************************************/<br/>/*c_primary_diag_both analysis*/<br/>/****************************************************/<br/><br/>/*test each individual covariate to determine those should be included in zero inflation part of model*/<br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = SEX_DESC&#59<br/>run&#59 <br/>/*p=0.1769*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = age&#59<br/>run&#59 <br/>/*p=0.1217*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = qtr_income&#59<br/>run&#59 <br/>/*p=0.963*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = c_index_yr&#59<br/>run&#59 <br/>/*p=0.0083*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = c_num_msb&#59<br/>run&#59 <br/>/*p=0.1297*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = c_num_cihi&#59<br/>run&#59 <br/>/*p=0.0001*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = c_total_ATC4_4level&#59<br/>run&#59 <br/>/*p=0.7296*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_both  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_both = good_adherence_one_year&#59<br/>run&#59 <br/>/*p=0.2456*/<br/><br/>/*based on above results, choose c_num_cihi c_index_yr to zero inflation part of model*/<br/>/*c_primary_diag_both analysis*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_both = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/<br/> dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi c_index_yr /link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>/*test one by one*/<br/><br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_both = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/<br/> dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi c_index_yr /link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>/*quasi poisson*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_both = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/<br/>scale=P dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi c_index_yr /link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/****************************************************/<br/>/*c_primary_diag_day_adm analysis*/<br/>/****************************************************/<br/><br/>/*test each individual covariate to determine those should be included in zero inflation part of model*/<br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = SEX_DESC&#59<br/>run&#59 <br/>/*p=0.0077*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = age&#59<br/>run&#59 <br/>/*p=0.4883*/<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = qtr_income&#59<br/>run&#59 <br/>/*p=0.0793*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = c_index_yr&#59<br/>run&#59 <br/>/*p=0.0002*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = c_num_msb&#59<br/>run&#59 <br/>/*p=0.9561*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = c_num_cihi&#59<br/>run&#59 <br/>/*p=0.0007*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = c_total_ATC4_4level&#59<br/>run&#59 <br/>/*p=0.6667*/<br/><br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class c_primary_diag_day_adm  SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model c_primary_diag_day_adm = good_adherence_one_year&#59<br/>run&#59 <br/>/*p=0.9762*/<br/><br/>/*based on above results, choose SEX_DESC c_num_cihi c_index_yr to zero inflation part of model*/<br/><br/>/*c_primary_diag_day_adm analysis*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_day_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel SEX_DESC c_num_cihi c_index_yr /link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/><br/><br/>/*test the overdispersion*/<br/>data fit&#59<br/>set fit (where=(criterion='Scaled Pearson X2'))&#59<br/>format pvalue pvalue6.4&#59<br/>pvalue=1-probchi(value,df)&#59<br/>run&#59<br/><br/>proc print data=fit noobs&#59<br/>var criterion value df pvalue&#59<br/>run&#59<br/>/*output reveals a p-value <0.0001 indicating rejection of null hypothesis of no overdispersion at the most commonly use confidence levels*/<br/><br/>/*another method for the assessing the goodness-of-fit of model*/<br/>/*first: observe the value of the largest count and the sample size and save them into macro variables*/<br/>proc means data=AIMS.analyses_file_possion noprint&#59<br/>var total_hosp&#59<br/>output out=maxcount max=max n=n&#59<br/>run&#59<br/><br/>data _null_&#59<br/>set maxcount&#59<br/>call symput('N',N)&#59<br/>call symput('max',max)&#59<br/>run&#59<br/><br/>%let max=%sysfunc(strip(&max))&#59<br/><br/>/*next use the model predications and the estimated zero-inflation probabilities that are stored in the output data zip to compute the */<br/>/*conditional probabilities*/<br/>data zip(drop=i)&#59<br/>set zip&#59<br/>lambda=pred/(1-pzero)&#59<br/>array ep{0:&max} ep0-ep&max&#59<br/>array c(0:&max) c0-c&max&#59<br/>do i=1 to &max&#59<br/>if i=0 then ep{i}=pzero+(1-pzero)*pdf('POISSON',i,lambda)&#59<br/>else        ep{i}=      (1-pzero)*pdf('POISSON',i,lambda)&#59<br/>c{i}=ifn(total_hosp=i,1,0)&#59<br/>end&#59<br/>run&#59<br/><br/>proc means data=zip noprint&#59<br/>var ep0-ep&max c0-c&max&#59<br/>output out=ep(drop=_type_ _freq_) mean(ep0-ep&max)=ep0-ep&max&#59<br/>output out=p(drop=_type_ _freq_) mean(c0-c&max)=ep0-ep&max&#59<br/>run&#59<br/><br/>proc transpose data=ep out=ep(rename=(col1=zip) drop=_name_)&#59<br/>run&#59<br/><br/><br/>proc transpose data=p out=p(rename=(col1=p) drop=_name_)&#59<br/>run&#59<br/><br/>data zipprob&#59<br/>&nbsp&nbsp&nbsp&nbspmerge ep p&#59<br/>&nbsp&nbsp&nbsp&nbspzipdiff=p-zip&#59<br/>&nbsp&nbsp&nbsp&nbsptotal_hosp=_n_-1&#59<br/>&nbsp&nbsp&nbsp&nbsplabel zip='ZIP Probabilities'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspp='Relative Frequencies'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspzipdiff='Observed minus Predicted'&#59<br/>run&#59<br/><br/>proc sgplot data=zipprob&#59<br/>scatter x=total_hosp y=p/<br/>markerattrs=(symbol=circlefilled size=5px color=blue)&#59<br/>scatter x=total_hosp y=zip/<br/>markerattrs=(symbol=trianglefilled size=5px color=red)&#59<br/>xaxis type=discrete&#59<br/>run&#59<br/><br/>proc sgplot data=zipprob&#59<br/>series x=total_hosp y=zipdiff/<br/>lineattrs=(pattern=shortdash color=blue)<br/>markers markerattrs=(symbol=circlefilled size=5px color=blue)&#59<br/>refline 0/axis=y&#59<br/>xaxis type=discrete&#59<br/>run&#59<br/><br/>/*above two plots shows that the zip model account for the excess zeros quite well and*/<br/>/*that the zip distribution reasonably captures the shape od fistribution of the relative freq*/<br/><br/><br/><br/><br/>/*test the predictor of probability of a zero count: */<br/>/*if the zero distribution is different in different levels, then it might be a predictor of probability of a zero count*/<br/><br/>ods graphics on&#59<br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>run&#59<br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by SEX_DESC&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by SEX_DESC&#59<br/>run&#59<br/><br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by SEX_DESC&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by SEX_DESC&#59<br/>run&#59<br/><br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by qtr_income&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by qtr_income&#59<br/>run&#59<br/><br/><br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by c_index_yr&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by c_index_yr&#59<br/>run&#59<br/><br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by c_num_msb&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by c_num_msb&#59<br/>run&#59<br/><br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by c_num_cihi&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by c_num_cihi&#59<br/>run&#59<br/><br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by c_total_ATC4_4level&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by c_total_ATC4_4level&#59<br/>run&#59<br/><br/><br/><br/>proc sort data=AIMS.analyses_file_possion&#59<br/>by good_adherence_one_year&#59<br/>run&#59<br/><br/><br/>proc freq data=AIMS.analyses_file_possion&#59<br/>table total_hosp/plots(only)=freqplot(scale=percent)&#59<br/>by good_adherence_one_year&#59<br/>run&#59<br/><br/>/* all of above variables are not the predictor of probability of a zero count*/<br/><br/><br/>/*remove number of msb visit, 20Mar2015*/<br/><br/>/*any_diag_inpatients_adm analysis: Any IMD, any diagnosis, only inpatients admission*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_total_ATC4_4level c_num_cihi c_num_msb good_adherence_one_year/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/*c_any_diag_both analysis: Any IMD, any diagnosis, day AND inpatients admission*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_both = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_total_ATC4_4level c_num_cihi c_num_msb c_index_yr/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>/*c_any_diag_day_adm analysis: Any IMD, any diagnosis, day admission*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_day_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel qtr_income c_total_ATC4_4level c_num_cihi  c_index_yr/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/*ERROR: c_primary_diag_inpatients_adm analysis: remove number of physician visit from model due to coverge*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr  c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>/*ERROR: c_primary_diag_both analysis: remove number of physician visit from model due to coverge*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_both = SEX_DESC age qtr_income c_index_yr  c_num_cihi c_total_ATC4_4level good_adherence_one_year/<br/> dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi c_index_yr /link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/*c_primary_diag_day_adm analysis: Any IMD, primary diagnosis, day admission*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_day_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel SEX_DESC c_num_cihi c_index_yr /link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr  c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>/*covariance matrices for aim1: March 31 2015*/<br/>/*Predictors of Adherence In First Year after Index Date*/<br/>proc logistic covout data=AIMS.analyses_file descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model good_adherence_one_year= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/>/*Predictors of Adherence In Entire Study Period*/<br/>proc logistic covout data=AIMS.analyses_file descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model good_adherence_entire= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/>/*Predictors of Persistence - 6 months, INITITAL*/<br/><br/>proc logistic covout data=AIMS.analyses_file descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model disc_180_initial= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/>/*Predictors of Persistence - 6 months, ANY*/<br/><br/>proc logistic covout data=AIMS.analyses_file descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model disc_180_any= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/>/*Predictors of Persistence - 12 months, INITITAL*/<br/><br/>proc logistic covout data=AIMS.analyses_file descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model disc_365_initial= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/>/*Predictors of Persistence - 12 months, ANY*/<br/><br/>proc logistic covout data=AIMS.analyses_file descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model disc_365_any= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/>/*Time to Discontinuation -  INITIAL IMD*/<br/><br/>proc phreg covout data=cox outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_initial*censor(1)=IMD_Index SEX_DESC  age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level/rl&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/>/*Time to Discontinuation - ANY IMD*/<br/><br/>proc phreg covout data=cox outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year&#59<br/>model persistence_time_any*censor(1)=IMD_Index SEX_DESC  age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level/rl&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/><br/>/*covariance matrices for aim1: Aug 25 2015*/<br/>/*all cause (inpatient only)*/<br/>proc logistic covout data=AIMS.analyses_file_possion descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref &#59<br/>model c_any_diag_inpatients_adm= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint <br/>&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/>/*all cause (inpatient + day surgery)*/<br/>proc logistic covout data=AIMS.analyses_file_possion descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_any_diag_both= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint scale=deviance&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/>/*MS-specfic (inpatient only)*/<br/>proc logistic covout data=AIMS.analyses_file_possion descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_primary_diag_inpatients_adm= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint <br/>scale=deviance &#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/>/*MS-specfic (inpatient + day surgery)*/<br/>proc logistic covout data=AIMS.analyses_file_possion descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_primary_diag_both= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/>/*test for Feng: increase iteration and adjust the scale parameter*/<br/><br/><br/>/*any_diag_inpatients_adm analysis: Any IMD, any diagnosis, only inpatients admission*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/<br/>dist=zip offset=logcvg maxiter=10000  scale=deviance&#59<br/>zeromodel c_total_ATC4_4level c_num_cihi c_num_msb good_adherence_one_year/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/>/*test*/<br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_inpatients_adm = c_num_msb c_num_cihi&#59<br/>run&#59<br/><br/><br/>/*test proc countreg: use local SAS to run, can't find on server*/<br/>/*test the mean and variance of number of hospital with/without zeros*/<br/>proc means data=AIMS.analyses_file_possion&#59<br/>var total_num_cihi&#59<br/>run&#59<br/><br/>data tt&#59<br/>set AIMS.analyses_file_possion&#59<br/>if total_num_cihi ne 0&#59<br/>run&#59<br/> <br/>proc means data=tt&#59<br/>var total_num_cihi&#59<br/>run&#59<br/><br/>proc means data=AIMS.analyses_file n min max  mean median p25 p75&#59<br/>var total_num_msb total_ATC4&#59<br/>run&#59<br/><br/>/*test proc logistic*/<br/><br/>proc freq data= AIMS.analyses_file_possion&#59<br/>table primary_diag_inpatients_adm * good_adherence_one_year &#59<br/>run&#59<br/><br/>data AIMS.analyses_file_possion&#59<br/>set AIMS.analyses_file_possion&#59<br/>CVGdays_ratio=CVGdays/365&#59<br/>run&#59<br/><br/>proc means data=AIMS.analyses_file_possion mean std min max median range &#59<br/>var CVGdays_ratio logcvg&#59<br/>run&#59<br/><br/>proc freq data= AIMS.analyses_file_possion&#59<br/>table CVGdays_ratio logcvg&#59<br/>run&#59<br/><br/>proc logistic data=AIMS.analyses_file_possion&#59<br/>class  c_total_num_cihi(ref=\"0\")  good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_inpatients_adm  = c_total_num_cihi good_adherence_one_year /lackfit&#59<br/>run&#59<br/>/*test proc logistic END*/<br/><br/><br/>/*c_any_diag_both analysis: Any IMD, any diagnosis, day AND inpatients admission*/<br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model any_diag_both = SEX_DESC age qtr_income c_index_yr c_num_msb c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_total_ATC4_4level c_num_cihi c_num_msb c_index_yr/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_inpatients_adm = SEX_DESC age qtr_income c_index_yr  c_num_cihi c_total_ATC4_4level good_adherence_one_year/dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi/link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/>/*ERROR: c_primary_diag_both analysis: remove number of physician visit from model due to coverge*/<br/><br/>proc genmod data=AIMS.analyses_file_possion&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year(ref=\"0\")/ param=reference&#59<br/>model primary_diag_both = SEX_DESC age qtr_income c_index_yr  c_num_cihi c_total_ATC4_4level good_adherence_one_year/<br/> dist=zip offset=logcvg&#59<br/>zeromodel c_num_cihi c_index_yr /link=logit&#59<br/>output out=zip predicted= pred pzero=pzero&#59<br/>ods output modelfit=fit&#59<br/>run&#59<br/><br/><br/><br/>/****************************************************/<br/>/*Two years post index*/<br/>/****************************************************/<br/>/*all cause (inpatient only)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_2yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref &#59<br/>model c_any_diag_inpatients_adm= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Two years post index: all cause (inpatient only)'&#59<br/>proc print data=est&#59<br/><br/>run&#59<br/><br/>/*all cause (inpatient + day surgery)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_2yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_any_diag_both= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Two years post index: all cause (inpatient + day surgery)'&#59<br/>proc print data=est&#59<br/><br/>run&#59<br/><br/><br/>/*MS-specfic (inpatient only)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_2yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_primary_diag_inpatients_adm= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Two years post index: MS-specfic (inpatient only)'&#59<br/>proc print data=est&#59<br/><br/>run&#59<br/><br/><br/>/*MS-specfic (inpatient + day surgery)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_2yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_primary_diag_both= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Two years post index: MS-specfic (inpatient + day surgery)'&#59<br/>proc print data=est&#59<br/><br/>run&#59<br/><br/><br/><br/>/****************************************************/<br/>/*Five years post index*/<br/>/****************************************************/<br/><br/>/*all cause (inpatient only)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_5yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref &#59<br/>model c_any_diag_inpatients_adm= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Five years post index: all cause (inpatient only)'&#59<br/><br/>proc print data=est&#59<br/>run&#59<br/><br/>/*all cause (inpatient + day surgery)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_5yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_any_diag_both= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Five years post index: all cause (inpatient + day surgery)'&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/>/*MS-specfic (inpatient only)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_5yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_primary_diag_inpatients_adm= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Five years post index: MS-specfic (inpatient only)'&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/>/*MS-specfic (inpatient + day surgery)*/<br/>proc logistic covout data=AIMS.analyses_file_possion_5yr descending outest=est&#59<br/>class SEX_DESC (ref=\"F\") c_index_yr (ref=\"yr1996_1998\") c_num_cihi c_total_num_cihi(ref=\"0\") c_num_msb (ref=\"1\")c_num_msb2 IMD_Index qtr_income (ref=\"0\")<br/>c_total_ATC4_4level (ref=\"1\") disc_first_disp_initial  disc_180_initial disc_365_initial  disc_180_any disc_365_any <br/>good_adherence_entire good_adherence_one_year/param=ref&#59<br/>model c_primary_diag_both= IMD_Index SEX_DESC age qtr_income c_index_yr c_num_msb c_total_num_cihi c_total_ATC4_4level/maxiter=1000 itprint&#59<br/>title 'Five years post index: MS-specfic (inpatient + day surgery)'&#59<br/>proc print data=est&#59<br/>run&#59<br/><br/><br/><br/>/*COHORT FOLLOW UP DAYS*/<br/><br/>PROC SQL&#59<br/>CREATE TABLE FU AS <br/>SELECT * FROM AIMS.MS_INDEX_EXIT_DATE  AS A<br/>WHERE A.KEY_HSN IN (SELECT KEY_HSN FROM AIMS.analyses_file)&#59<br/>QUIT&#59<br/><br/><br/>PROC MEANS DATA=FU N MEAN STD MEDIAN P25 P50 P75 RANGE&#59<br/>VAR FOLLOW_UP_DAYS&#59<br/>RUN&#59<br/><br/>PROC FREQ DATA=FU&#59<br/>TABLE FOLLOW_UP_DAYS&#59<br/>RUN&#59<br/><br/>/*updated: Feb 17 2016. Frequency check*/<br/><br/>data din_check_list&#59<br/>set aims.ATC_CODES_UPDATED&#59<br/>if ATC4 in('C10AA' 'H03AA' 'C09AA' 'C09CA')&#59<br/>RUN&#59<br/><br/>PROC FREQ DATA=din_check_list&#59<br/>TABLE ATC4&#59<br/>RUN&#59<br/><br/>%Extract_Drug(xtrc_start_dt='06APR2006'd, <br/>&nbsp&nbsp&nbsp&nbspxtrc_end_dt='15OCT2015'd, <br/>&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbspds_out=ATC_FREQ,<br/>&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsphsn_file=AIMS.ANALYSES_FILE,<br/>&nbsp&nbsp&nbsp&nbspdin_list=,<br/>&nbsp&nbsp&nbsp&nbspdin_file=din_check_list,<br/>&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbspstrt_dt='01Jan2001'd,<br/>&nbsp&nbsp&nbsp&nbspend_dt= '30JUN2015'd)&#59 /*31463 obs   key_hsn*/<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/>PROC SQL&#59<br/>CREATE TABLE TT2 AS<br/>SELECT MIN(RX_DDDDD) AS MIN_DATE FORMAT=DATE9., MAX(RX_DDDDD) AS MAX_DATE FORMAT=DATE9. FROM ATC_FREQ&#59<br/>QUIT&#59<br/>/*04JAN2001&nbsp&nbsp&nbsp&nbsp30JUN2015*/<br/><br/><br/>&nbsp&nbsp&nbsp&nbspPROC SORT DATA=ATC_FREQ&#59<br/>&nbsp&nbsp&nbsp&nbspBY DIN&#59<br/>&nbsp&nbsp&nbsp&nbspRUN&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspPROC SORT DATA=aims.ATC_CODES_UPDATED&#59<br/>&nbsp&nbsp&nbsp&nbspBY DIN&#59<br/>&nbsp&nbsp&nbsp&nbspRUN&#59<br/><br/>&nbsp&nbsp&nbsp&nbspDATA ATC_FREQ2&#59<br/>&nbsp&nbsp&nbsp&nbspMERGE ATC_FREQ (IN=ID) aims.ATC_CODES_UPDATED&#59<br/>&nbsp&nbsp&nbsp&nbspBY DIN&#59<br/>&nbsp&nbsp&nbsp&nbspIF ID&#59<br/>&nbsp&nbsp&nbsp&nbspRUN&#59<br/><br/>PROC FREQ DATA=ATC_FREQ2&#59<br/>TABLE ATC4 &#59<br/>RUN&#59<br/><br/>DATA ATC_FREQ3&#59<br/>SET ATC_FREQ2&#59<br/>IF ATC4 NE ''&#59<br/>RUN&#59<br/><br/>PROC FREQ DATA=ATC_FREQ3&#59<br/>TABLE ATC4 &#59<br/>RUN&#59<br/><br/>PROC SQL&#59<br/>CREATE TABLE TT AS<br/>SELECT DISTINCT KEY_HSN FROM ATC_FREQ3&#59<br/>QUIT&#59<br/>/* 500 OF 1297 HAD atc4 CODE*/<br/><br/>/*OVERALL*/<br/>PROC SQL&#59<br/>CREATE TABLE ALL_HSN AS<br/>SELECT DISTINCT KEY_HSN FROM AIMS.MS_Drug_extract&#59<br/>QUIT&#59<br/>/*1443*/<br/><br/>%Extract_Drug(xtrc_start_dt='06APR2006'd, <br/>&nbsp&nbsp&nbsp&nbspxtrc_end_dt='15OCT2015'd, <br/>&nbsp&nbsp&nbsp&nbspexcl_xtrc_dt=,<br/>&nbsp&nbsp&nbsp&nbspds_out=ALL_ATC_FREQ,<br/>&nbsp&nbsp&nbsp&nbspalldin_file=&alldinfile,<br/>&nbsp&nbsp&nbsp&nbsphsn_list=,<br/>&nbsp&nbsp&nbsp&nbsphsn_file=ALL_HSN,<br/>&nbsp&nbsp&nbsp&nbspdin_list=,<br/>&nbsp&nbsp&nbsp&nbspdin_file=din_check_list,<br/>&nbsp&nbsp&nbsp&nbspgenname_list=,                    <br/>&nbsp&nbsp&nbsp&nbspgenname_file=,<br/>&nbsp&nbsp&nbsp&nbspstrt_dt='01Jan2001'd,<br/>&nbsp&nbsp&nbsp&nbspend_dt= '30JUN2015'd)&#59 /*107011 obs   key_hsn*/<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/><br/>PROC SQL&#59<br/>CREATE TABLE TT2 AS<br/>SELECT MIN(RX_DDDDD) AS MIN_DATE FORMAT=DATE9., MAX(RX_DDDDD) AS MAX_DATE FORMAT=DATE9. FROM ALL_ATC_FREQ&#59<br/>QUIT&#59<br/>/*04JAN2001&nbsp&nbsp&nbsp&nbsp30JUN2015*/<br/><br/><br/>&nbsp&nbsp&nbsp&nbspPROC SORT DATA=ALL_ATC_FREQ&#59<br/>&nbsp&nbsp&nbsp&nbspBY DIN&#59<br/>&nbsp&nbsp&nbsp&nbspRUN&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbspPROC SORT DATA=aims.ATC_CODES_UPDATED&#59<br/>&nbsp&nbsp&nbsp&nbspBY DIN&#59<br/>&nbsp&nbsp&nbsp&nbspRUN&#59<br/><br/>&nbsp&nbsp&nbsp&nbspDATA ALL_ATC_FREQ2&#59<br/>&nbsp&nbsp&nbsp&nbspMERGE ALL_ATC_FREQ (IN=ID) aims.ATC_CODES_UPDATED&#59<br/>&nbsp&nbsp&nbsp&nbspBY DIN&#59<br/>&nbsp&nbsp&nbsp&nbspIF ID&#59<br/>&nbsp&nbsp&nbsp&nbspRUN&#59<br/><br/>PROC FREQ DATA=ALL_ATC_FREQ2&#59<br/>TABLE ATC4 &#59<br/>RUN&#59<br/><br/>DATA ALL_ATC_FREQ3&#59<br/>SET ALL_ATC_FREQ2&#59<br/>IF ATC4 NE ''&#59<br/>RUN&#59<br/><br/>PROC FREQ DATA=ALL_ATC_FREQ3&#59<br/>TABLE ATC4 &#59<br/>RUN&#59<br/><br/>/*'C10AA' 'H03AA' 'C09AA' 'C09CA'*/<br/>DATA ALL_ATC_FREQ4&#59<br/>SET ALL_ATC_FREQ3&#59<br/>IF ATC4='C10AA' THEN C10AA=1&#59 ELSE C10AA=0&#59<br/> IF ATC4='H03AA' THEN H03AA=1&#59 ELSE H03AA=0&#59<br/> IF ATC4='C09AA' OR ATC4='C09CA' THEN C09AA_C09CA=1&#59 ELSE C09AA_C09CA=0&#59<br/>  IF ATC4='C09AA'  THEN C09AA=1&#59 ELSE C09AA=0&#59<br/>  IF ATC4='C09CA'  THEN C09CA=1&#59 ELSE C09CA=0&#59<br/><br/>RUN&#59<br/><br/>PROC SQL&#59<br/>CREATE TABLE ALL_ATC_FREQ5 AS<br/>SELECT DISTINCT KEY_HSN, SUM(C10AA) AS TOTAL_C10AA, SUM(H03AA) AS TOTAL_H03AA, SUM(C09AA_C09CA) AS TOTAL_C09AA_C09CA,<br/>SUM(C09AA) AS TOTAL_C09AA, SUM(C09CA) AS TOTAL_C09CA FROM ALL_ATC_FREQ4<br/>GROUP BY KEY_HSN&#59<br/>QUIT&#59<br/><br/>DATA ALL_ATC_FREQ6&#59<br/>SET ALL_ATC_FREQ5&#59<br/>IF TOTAL_C10AA>=1 AND TOTAL_H03AA>=1 AND TOTAL_C09AA_C09CA>=1 <br/>THEN ALL_FOUR_ATC4 =1 &#59ELSE ALL_FOUR_ATC4 =0 &#59<br/>RUN&#59<br/><br/>PROC FREQ DATA=ALL_ATC_FREQ6&#59<br/>TABLE ALL_FOUR_ATC4&#59<br/>RUN&#59<br/><br/>/*529 OF 1443 HAD ATC4 CODES, 23 OF 529 HAD ALL FOUR ATC4 CODES*/<br/>/* 500 OF 1297 HAD atc4 CODE*/<br/><br/>s///<br/>t///"},{"idx":"CodeTask-MQ9rsrcGodxxOchH","name":"Sample poisson models","NodeDescription":"///t<br/>///s<br/>/*example of poisson models*/<br/><br/>/*VHF. For Preg episodes, get results from the univariate poisson model and report to the xls file<br/><br/>&nbsp&nbsp&nbsp&nbspto highlight:<br/><br/>&nbsp&nbsp&nbsp&nbsp1) Report of mean and 95%CI is by statements like:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. General syntax to have mean of predicted values<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income quintile = 2\" intercept 1 qaippe 0 1 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe income var has 6 levels (i.e, 1 to 5, and missing) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby default, SAS automatically creates 5 dummy vars each for a level except the reference level, like<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp+beta1 * incomeLevel1 + beta2 * incomeLevel2 ... beta5 * incomeLevel5 (each for income level 1 to 5).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not specified, the last level (income = missing) will be the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs such the digits after 'qaippe' (i.e, 0 1 0 0 0) each represents a level of income (i.e., income levels 1 to 5)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo estimate the mean of income level 2, make the 2nd digit as 1, while keeping the rest as 0 (i.e., 'qaippe 0 1 0 0 0') <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTo estimate the mean of income level 3, make the 3rd digit as 1, while keeping the rest as 0 (i.e., 'qaippe 0 0 1 0 0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. Specifying the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn this case, the income level =1 is expected to be the reference level.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThere are two ways to set reference level, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspone is by (ref='') and /param=ref,e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass qaippe (ref='1') /param=ref&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe other is by sorting the values and using the last in the sort as the reference, e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspClass qaippe / param=effect descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspc. Estimate mean predict value of the referecen level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that the following two is quite different from each other (given that income=1 as reference):<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of ALL income levels\" intercept 1 qaippe 0 0 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of income quintile = 1 (reference)\" intercept 1 qaippe -1 -1 -1 -1 -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe first is to estimate the mean of ALL levels. The second is to truly estimate the mean of the reference level.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe second Estimate statement has to be used within the second method of setting reference. Specifically, it only works<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhen the option is specified as Class ... /param = effect.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt won't work if setting as Class ... /param = ref.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis means that the levels of income has to be sorted, instead of specifying the reference level. In this case, the levels <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsphas to be sorted in descending order, such to have level=1 as the last, and as the reference.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhen in descending order, the model is different in that the levels appearing in the model in descending order:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp+beta1 * incomeLevel_missing + beta2 * incomeLevel5 ... beta2 * incomeLevel1 (each for income level 'missing', and 5 to 2)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis time there is no level 1 (as it is the reference)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that the report also follow the descending order (i.e., mean of incomelevel _missing comes first), check the label in the<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreport table.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp2) Report of OR and 95%CI is easier as it does not involve the estimate of the reference level, e.g., <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"IR of income quintile = 2\" qaippe 0 1 0 0 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"IR of income quintile = 3\" qaippe 0 0 1 0 0 /exp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that to estimate the OR, there is no terms and arguments for 'intercept'<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp3) Discrepancy of the orders in analyses and in reports<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs aforementioned, the levels of an interested var is ordered descendingly. However, the results are requested to be in ascending<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporder. This are taken into account in the following macro.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp4) Customizing orders of the levels in the report. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspFor most variables, the levels are reported in ascending order, the ref either the first or the last level. However there is always <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspexceptions. To make the ordering more flexibile, the orders can be specified by the following macro.<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp5) Each var may have different levels. As such, the estimate arguments need to be determined. e.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor EntryAgeGroupA (3 levels, 1 as ref, 2 as non-ref levels)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp Estimate \"mean of age groupA = '65+ '\" intercept 1 qaippe 1 0 &#59 (the argument is '1 0')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor income (6 levels, 1 as ref, 5 as non-ref levels)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEstimate \"mean of income quintile = 2 \" intercept 1 qaippe 0 0 0 0 1 &#59 (the argument is '0 0 0 0 1')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp(Note that the levels are all sorted in descending order. The hightest level comes first as 1 0, while the second lowest comes<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspat the last)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe following macro enables:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspa. determine the number of digits in the argument (e.g., whether it is 1 0 or 1 0 0 0 0, depending on the levels of the var)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspb. determine where the number '1' and '0's should be positioned in the argument (e.g., '0 0 1', or '0 1 0')<br/>*/<br/><br/>/*VDE0 is based on VFA with more variables (fromProg VDE)*/<br/>%vbsUnzip(<br/>&nbsp&nbsp&nbsp&nbsptgtDir=,<br/>&nbsp&nbsp&nbsp&nbspzipFile=%str(&localTargetPath.\\VGE.zip),<br/>&nbsp&nbsp&nbsp&nbspsrcFile=%str(VGE.sas7bdat)<br/>)&#59<br/>%print(data=VGE)&#59<br/><br/>/*Note that the genmod will run for twice. The first is to get the mean of all levels (using param=effect, the ref is the average<br/>&nbsp&nbsp&nbsp&nbspof all levels)<br/>&nbsp&nbsp&nbsp&nbspThe second to get the ORs comparing to the specified reference level */<br/><br/>%macro getUniPoiPreg(data=, theVar=, theRef=, customizedOrder=, theReport=, startRow=, theSheet=, debug=)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%local data theVar theReport theSheet startRow theRef<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnLevels i refMeanArg j theLevelValue theLevelArg levelMeanEst levelOREst LEVELMEANESTSTR LEVELORESTSTR <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcurLevel customizedOrder nZerosBefore nZerosAfter debug&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*1. from the source data set, change data format, and add a log term (to be used for offset in the Poisson model)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset &data&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat &theVar._tmp $100.&#59 /*make the length long enough to avoid truncate*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*change numeric values to chars<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThis is to be conformed with the report.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhen creating the statistical results form models, SAS changes numeric values into labels. Labels are in character format.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLater we'll need to match the result levels (in labels) with the levels in the source table (in numeric values).<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSuch matching requires both to be in the same type, preferred to be in character type.*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheVarType=vType(&theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif theVarType='N' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theVar._tmp = strip(put(&theVar, 8.))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&theVar._tmp = &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop &theVar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename &theVar._tmp = &theVar&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspN_thsd = coverYears /1000&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_timeInCohort= log(coverYears_afterEntry)&#59 /*creating the offset term*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplog_timeInCohort= log(N_thsd)&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%FREQ(data=getUniPoiPreg_tmp3, table=&theVar)&#59 */<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the levels of the selected var<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe number of levels is to be used later for determining the number of digits in the estimate argument. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspeach particular level is to be used later for determining the position of 1 in the estmiate argument.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe order of the levels takes into accound of the reference level, and the order to report in the final xls file<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the distinct levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%distinct(data=getUniPoiPreg_tmp3, target=getUniPoiPreg_tmp4, vars=&theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheLevel=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&customizedOrder&#59 /*the levels and the references can be customozed for order*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*from above, the order of the orginal levels are determined, and transferred into standard levels in numeric values.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe standard levels are saved in the new variable 'theLevel'. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThat way, no matter the original values are, the standard levels are always in numbers (1, 2, ....) with the reference<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplevel as 'theLevel=1'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNext, the levels are ordered by the standard level. Such order is conformed with the order in the final xls report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sort(data=getUniPoiPreg_tmp5, sorter=theLevel)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Adding theLevel back to the original dataset, for the following Poisson analyses, the standard level will be used<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspinstead of the original values<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIn the following, the variable 'resitype', and qaippe are always kept for checking random effects later<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoiPreg_tmp3,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoiPreg_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoiPreg_tmp6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.key_hsn, t1.num_us_Preg, t1.log_timeInCohort , t1.&theVar, t2.theLevel, t1.resitype, t1.qaippe),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjvars=&theVar<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>/*2. construct estimate statements*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The arguments (e.g., -1 -1 depends on the number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor example, for sex_desc, there is only 1 non-ref levels, therefore the argument is ... theLevel -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor EntryAgeGroupA, however, there are 2 non-ref levels, therefore the argement is ... theLevel -1 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following is to make dynamic arguments based on number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get number of levels of the interested variable*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%nobs(data=getUniPoiPreg_tmp5)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the number of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nLevels=%eval(&nobs-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the number of  -1 in the argument (for estimating mean of reference level) = the number of non-ref levels<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following is to get a string with the repeating '-1' <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., for the reference income level, make it -1 -1 -1 -1 -1 (repeat for 5 times, corresponding to 5 non-ref levles*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 1 %to &nLevels&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let refMeanArg= &refMeanArg -1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevel &refMeanArg&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*make the complete Estimate statment for estimate the mean at reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g.,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =1 (ref\") intercept 1 theLevel -1 -1 -1 -1 -1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspNote that we'll no longer use the original values (QAIPPE=1), instead we'll use the standard levels (in the var 'theLevel')<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let estRefMean=%str(estimate &theRef intercept 1 theLevel &refMeanArg&#59)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> estRefMean= &estRefMean&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in the following proc genmod, the levels are no longer sorted descendingly <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIt is kind of noticed that, in previous SAS versions,  when param=effect, the ref specification does not work<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g., <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=effect &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAs 'param=effect' is specified instead of 'param=ref', the reference level of theLevel would be the <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplast level of theLevel in the ascending order (i.e., the ref level is 6). Even if (ref='1') was specified, SAS neglects it.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, such situation was for old version of SAS.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspAt least since SAS 9.3, the ref specification works for param=effect)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following is to determine the values for argument<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspe.g.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor theLevel=2 out of 6 levels, make the argument as 1 0 0 0 0 (if the ref level = 1)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor theLevel =3, make the argument as 0 1 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBasically, to determine the number of '0's before 1, and the number of '0's after 1<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do i = 2 %to &nobs &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the value of the standard level (i.e., the var named as 'theLevel', regardless of the original var names like<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspagegroup income, etc)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspData _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp5 (firstobs=&i obs=&i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('theLevelValue', &theVar)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelValue = %sysfunc(strip(&theLevelValue))&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevelValue = &theLevelValue&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The lowest level is picked up first (income =1 as reference level), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =2 \" intercept 1 theLevel 1 0 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =3 \" intercept 1 theLevel 0 1 0 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =4 \" intercept 1 theLevel 0 0 1 0 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =5 \" intercept 1 theLevel 0 0 0 1 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspestimate \"mean of income =6 \" intercept 1 theLevel 0 0 0 0 1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe levels appear in asending order, which is corresponding to the '1' appearing in ascending order. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*to determine the zeros before '1' */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nZerosBefore = %eval(&i - 2)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 1 %to &nZerosBefore&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the above generates the 0s before the value 1, e.g., 0 */<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*now add the value 1 into the argument, making it as, e.g., for income =3,  0 1*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 1&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*determine the levels after '1'*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nZerosAfter = %eval(&nobs - &i)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%do j = 1 %to &nZerosAfter&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg = &theLevelArg 0&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*now that the argument is complete, e.g., for income=3:  0 1 0 0 0*/<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theLevel &theLevelArg&#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the complete estimate statements for mean of each level*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelMeanEst=%str(estimate \"&theLevelValue\" intercept 1 theLevel &theLevelArg&#59)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &levelMeanEst&#59 */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelMeanEstStr=&levelMeanEstStr &levelMeanEst&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the complete estimate statements for OR of each level*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelOREst=%str(estimate \"&theLevelValue\" theLevel &theLevelArg /exp&#59)&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> &levelMeanEst&#59 */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let levelOREstStr=&levelOREstStr &levelOREst&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*clear the value of theLevelArg, as it is level-specific. If it is not cleared, it'll cause error when making argument strings for<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe following levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let theLevelArg=&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> levelMeanEstStr= &levelMeanEstStr&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> levelOREstStr=  &levelOREstStr&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Performe the poisson analyses, param=effect, i.e., the reference is the average of all levels. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthis is to have means of all levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> ods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"genmod param=effect\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoiPreg_tmp6 &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=effect&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*it'll still be necessary to specify the ref level, this is to ensure that the terms<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor mean estimate is correct (i.e.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor the reference level, it is -1 -1 -1 -1 -1 (given that there are 6 levels includng the ref level)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfor the rest levels in ascending order:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp1 0 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp   &nbsp&nbsp&nbsp&nbsp0 1 0 0 0<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp...<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the ordering of levels can be specified by individual vars. e.g.:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" descending) resitype   qaippe / param=ref &#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, the var 'theLevel' is ordered descendingly, restitype and qaippe ascendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe ordering of levels can also be set gloablly for all vars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" ) resitype   qaippe / param=ref  descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, all vars are ordered descendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_Preg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=getUniPoiPreg_tmp7 p=fitted lower=lower upper=uper stdresdev=resid_deviance stdreschi=resid_pearson cookd=cookd &#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the estimate statements, each for the mean of reference level, the means of non-referenc levels, and the ORs of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&estRefMean&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&levelMeanEstStr&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output &nbsp&nbsp&nbsp&nbspestimates=getUniPoiPreg_tmp8a&#59 /*output the result means and ORs*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results on&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*in the output table getUniPoiPreg_tmp8a, the first nLevels rows are for means*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp8a (obs=&nobs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep label MeanEstimate MeanLowerCL MeanUpperCL&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*follow the order in getUniPoiPreg_tmp5, such to be conformed with the orders in the report xls file<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthe standard levels are used as the bridge for joining tables, while the orignal values are used<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspto display the true levels in the orignal file*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoiPreg_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoiPreg_tmp9,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoiPreg_tmp10,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theVar, MeanEstimate, MeanLowerCL, MeanUpperCL),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(strip(t1.&theVar) = strip(t2.label)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=t1.theLevel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*making the format required in the final report*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCL='(' || strip(put(MeanLowerCL, 8.4)) || ',' ||  strip(put(MeanUpperCL, 8.4)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep MeanEstimate CL&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*Performe the poisson analyses, param=reference. This is to have effect ORs as oppsed to the reference level<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCheck SAS codes for assignment 3 of course PUBH 842*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results off&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspTitle \"genmod param=reference\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoiPreg_tmp6 &#59 /*for poisson models, it does not matter whether or not specifying the descindg order*/ <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=ref &#59 /*the level of the covariate is ordered descendingly so that the lowest value is set as ref*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the ordering of levels can be specified by individual vars. e.g.:<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" descending) resitype   qaippe / param=ref &#59&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, the var 'theLevel' is ordered descendingly, restitype and qaippe ascendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspThe ordering of levels can also be set gloablly for all vars&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\" ) resitype   qaippe / param=ref  descending&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the above line, all vars are ordered descendingly<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_Preg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspoutput out=getUniPoiPreg_tmp7 p=fitted lower=lower upper=uper stdresdev=resid_deviance stdreschi=resid_pearson cookd=cookd &#59*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the estimate statements, each for the mean of reference level, the means of non-referenc levels, and the ORs of non-reference levels*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&levelOREstStr &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output &nbsp&nbsp&nbsp&nbspestimates=getUniPoiPreg_tmp8b&#59 /*output the result means and ORs*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods results on&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptitle&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%macro notrun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*The following is a handy way to get estimates and OR/IRR, instead of repeatedly state the estimates.<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, the 95%CI need to be calculated mannually<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspRef: https://stats.idre.ucla.edu/sas/dae/poisson-regression<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc genmod data=getUniPoiPreg_tmp6 &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspclass theLevel (ref=\"1\") resitype qaippe / param=reference &#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmodel num_us_Preg =theLevel /type3 dist=negbin offset=log_timeInCohort &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstore out=getUniPoiPreg_tmp8e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*getUniPoiPreg_tmp6 contains all estimates. <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIf the path is not specified, it is saved in the work directory<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspHowever, the extension of the table file is '.sas7bitm'<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsuch files won't show up in the file list under work directory in the 'sever' explorer panel*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59quit&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspods output ParameterEstimates = getUniPoiPreg_tmp8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc plm source=getUniPoiPreg_tmp8e&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspshow parameters&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp8d&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp8c&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspIRRs=exp(estimate)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif parameter ne 'Intercept'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%mend notrun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the rows after nLevels rows are for OR*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp8b &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep label MeanEstimate MeanLowerCL MeanUpperCL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif label in: ('Exp') then delete&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*the following are similar, only that these are for OR results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> theRef=&theRef&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt1=getUniPoiPreg_tmp5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspt2=getUniPoiPreg_tmp12,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptarget=getUniPoiPreg_tmp13,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvars=%str(t1.&theVar, MeanEstimate, MeanLowerCL, MeanUpperCL,probChisq),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjtype=left,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspjterm=%str(strip(t1.&theVar) =strip(t2.label)),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsporderby=t1.theLevel,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilters =%str(strip(t1.&theVar) ne strip(&theRef))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata getUniPoiPreg_tmp15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspretain MeanEstimate CL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset getUniPoiPreg_tmp13&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspCL='(' || strip(put(MeanLowerCL, 8.4)) || ',' ||  strip(put(MeanUpperCL, 8.4)) || ')'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep MeanEstimate CL probChisq&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*report the final results*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getUniPoiPreg_tmp11,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=&startRow, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=6,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%SASToXlsRange(<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspExcelAppLoc=, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFilePath=&thexlsFilePath, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspxlsFileName=&thereport, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata=getUniPoiPreg_tmp15,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspSheetName=&theSheet, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellRow=%eval(&startRow+1), <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcellCol=8,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwaitSec=5,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspselectsheet=1,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspremoveChar=<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let nobs=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if &debug ne 1 %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc datasets nolist&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete getUniPoiPreg_tmp:&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getUniPoiPreg&#59<br/><br/>/*Age_Entry_Quintile, 5, ref='0'*/<br/>%freq(data=VGE, table=Age_Entry_Quintile)&#59<br/>%getUniPoiPreg(data=VGE, theVar=Age_Entry_Quintile, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=5, theRef=%str('0'), debug=,<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/>/*Natv_stat_flag, 11, ref=0*/<br/>%freq(data=VGE, table=Natv_stat_flag)&#59<br/>%getUniPoiPreg(data=VGE, theVar=Natv_stat_flag, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=11, theRef=%str('0'),debug=,<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/>/*ResiType, 14, ref=URBAN*/<br/>%freq(data=VGE, table=ResiType)&#59<br/>%getUniPoiPreg(data=VGE, theVar=ResiType, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=14, theRef=%str('URBAN'),debug=,<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=%str(if ResiType='URBAN' then theLevel=1&#59if ResiType='RURAL' then theLevel=2 &#59if ResiType='miss' then theLevel=3)<br/>)&#59<br/><br/>/*QAIPPE, 17, ref=1*/<br/>%getUniPoiPreg(data=VGE, theVar=QAIPPE, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, debug=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=17, theRef=%str('1'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=<br/>)&#59<br/><br/>/*nPregs_cat, 23, ref='1' (note, it is char)*/<br/>%freq(data=VGE, table=nPregs_cat)&#59<br/>%getUniPoiPreg(data=VGE, theVar=nPregs_cat, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=23, theRef=%str('1'),<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*preBirths_cat, 28, ref='00 - 00' (check the NA,should be the last)*/<br/>%freq(data=VGE, table=preBirths_cat)&#59<br/>%getUniPoiPreg(data=VGE, theVar=preBirths_cat, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=28, theRef=%str('00 - 00'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*OUTCOMETYPE, 34, ref='1.LIVBIRTH', note that special order is required*/<br/>%freq(data=VGE, table=OUTCOMETYPE)&#59<br/>%getUniPoiPreg(data=VGE, theVar=OUTCOMETYPE, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=34, theRef=%str('1.LIVBIRTH'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>/*age_outcome_quintile, 40, ref = '0' */<br/>%freq(data=VGE, table=age_outcome_quintile)&#59<br/>%getUniPoiPreg(data=VGE, theVar=age_outcome_quintile, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=40, theRef=%str('0'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/><br/>/*OCI_cat, 46, ref='00 - 00'*/<br/>%freq(data=VGE, table=OCI_cat)&#59<br/>%getUniPoiPreg(data=VGE, theVar=OCI_cat, theReport=Univariate Analysis_20181006.xlsx, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheSheet=Obstetrical population -Poisson, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp startRow=46, theRef=%str('00 - 00'),<br/>&nbsp&nbsp&nbsp&nbspcustomizedOrder=,<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdebug=<br/>)&#59<br/><br/>%print(data=VGE)&#59<br/><br/><br/><br/>s///<br/>t///"},{"idx":"CodeTask-bOZ6Z7rkK8bmGn5J","name":"Sample ZINB","NodeDescription":"///t<br/>///s<br/>/*<br/>/*Zero inflatted NegBin models (ZINB)*/<br/><br/>/*<br/>https://stats.idre.ucla.edu/sas/dae/zero-inflated-negative-binomial-regression/<br/>*/<br/><br/>libname s \"P:\\DRUMS(EvansC)_Bio18-83\\SAS code\"&#59<br/><br/>/*<br/>We have data on 250 groups that went to a park.  <br/>Each group was questioned about how many fish they caught (count), <br/>how many children were in the group (child), <br/>how many people were in the group (persons), <br/>and whether or not they brought a camper to the park (camper).<br/><br/>In addition to predicting the number of fish caught, there is interest in predicting the existence of excess zeros, <br/>i.e., the probability that a group caught zero fish. We will use the <br/>variables child, persons, and camper in our model.<br/>*/<br/>data fish&#59 set s.fish&#59run&#59<br/>proc means data = fish mean std min max var&#59<br/>  var count child persons&#59<br/>run&#59<br/><br/>ods graphics  / width=4in height=3in border=off&#59<br/>proc sgplot data = fish&#59<br/>  histogram count /binwidth=1&#59<br/>run&#59<br/>ods graphics off&#59<br/><br/>proc freq data = fish&#59<br/>  tables child persons camper&#59<br/>run&#59<br/><br/>proc means data = fish mean var n nway&#59<br/>  class camper&#59<br/>  var count&#59<br/>run&#59<br/>/*We can see from the table of descriptive statistics above that the variance of the outcome variable is quite large relative to the means. <br/>This might be an indication of over-dispersion.<br/>*/<br/><br/>/*<br/>What if choosing other methods<br/>Before we show how you can analyze this with a zero-inflated negative binomial analysis, letâs consider some other methods that you might use.<br/><br/>OLS Regression â You could try to analyze these data using OLS regression. However, count data are highly non-normal and are not well estimated by OLS regression.<br/>Zero-inflated Poisson Regression â Zero-inflated Poisson regression does better when the data is not overdispersed, i.e., when variance is not much larger than the mean.<br/>Ordinary Count Models â Poisson or negative binomial models might be more appropriate if there are not excess zeros.<br/><br/>*/<br/><br/>/*<br/>Intuitives of ZINB analysis<br/>A zero-inflated model assumes that zero outcome is due to two different processes. <br/>For instance, in the example of fishing presented here,  the two processes are that a subject has gone fishing vs. not gone fishing. <br/><br/>If not gone fishing, the only outcome possible is zero. <br/>If gone fishing, it is then  a  count process. <br/><br/>The two parts of the a zero-inflated model are <br/>&nbsp&nbsp&nbsp&nbspa binary model, usually a logit model to model which of the two processes the zero outcome is associated with <br/>&nbsp&nbsp&nbsp&nbspand a count model, in this case, a negative binomial model, to model the count process. <br/>The expected count is expressed as a combination of the two processes. <br/><br/>Taking the example of fishing again, E(#of fish caught=k) = prob(not gone fishing )*0 + prob(gone fishing)*E(y=k|gone  fishing).<br/><br/>Now letâs build up our model. <br/>We are going to use the variables child and camper to model the count in the part of negative binomial model  <br/> and the variable persons in the logit part of the model. <br/><br/>The SAS commands are shown below. <br/>We treat variable camper as a categorical variable by including it in the class statement. <br/>This will also make the post estimations easier. <br/>In this particular example, we also explicitly want to use camper = 0 as the reference group. <br/><br/>To this end, we sort the data in descending order and use the order= option in proc genmod to force it to take camper = 0 as the reference group.<br/>*/<br/><br/>proc sort data = fish&#59<br/>  by descending camper&#59<br/>run&#59<br/>proc genmod data = fish order=data&#59<br/>  class camper&#59<br/>  model count = child camper /dist=zinb&#59<br/>  zeromodel persons&#59<br/>run&#59<br/><br/>/*<br/>The output has a few components which are explained below.<br/><br/>Model Information: General information about the data set, outcome variable, distribution and the number of observations used in the model.<br/>Class Level Information: For each categorical variable, the number of levels and how the levels are coded. The last displayed level will be the reference group in the model. In this example, it will be 0.<br/>Criteria For Assessing Goodness Of Fit: These measures are usually used for comparing models.<br/>Analysis Of Maximum Likelihood Parameter Estimates: Negative binomial part of the model, estimated using maximum likelihood.<br/>Analysis Of Maximum Likelihood Zero Inflation Parameter Estimates: Logistic regression part of the model, for estimating the probability of being an excessive zero.<br/>*/<br/><br/>/*<br/>Looking through the results of regression parameters we see the following:<br/><br/>The predictors child and camper in the part of the negative binomial regression model predicting number of fish caught (count) are both significant predictors.<br/>The predictor person in the part of the logit model predicting excessive zeros is statistically significant.<br/>For these data, the expected change in log(count) for a one-unit increase in child is -1.515255.  This amounts to a 78% (1 â e-1.515255 = .78) decrease in the expected count for each additional child in the party holding other variables constant.<br/>Groups with campers (camper = 1) had an expected log(count) 0.879051 higher than groups without campers (camper = 0), i.e., the expected count of fish for a camper is about 2.41 (e0.879051 = 2.41) times higher than for a non-camper.<br/>The log odds of being an excessive zero would decrease by 1.67 for every additional person in the group. In other words, the more people in the group ,the less likely that the zero would be due to not gone fishing. Put it plainly, the larger the group the person was in, the more likely that the person went fishing.<br/>The estimate of the dispersion parameter is displayed with its confidence interval.  There seems enough indication of over dispersion, meaning that negative binomial model might be more appropriate.<br/>*/<br/><br/>/*<br/>Comparing ZINB, with the plain neg bin model<br/>We might want to compare the current zero-inflated negative binomial model with the plain negative binomial model, which can be done via, for example, Vuong test. Currently Vuong test is not a standard part of proc genmod, but a macro program is available from SAS that does the Vuong test. You can download this macro program following the link and store it on your hard drive. In this example, we saved the macro program in d:/work/dae directory and rename it as vuong.sas. To use the macro program, we use the %include statement. This macro program takes quite a few arguments shown below. We rerun the models to get produce these required input arguments. We have also used the statement store to store the estimates so we can do post-estimation using the same model via proc plm without having to rerun the model. With the zero-inflated negative binomial model, there are total of six regression parameters which includes the intercept, the regression coefficients for child and camper and the dispersion parameter for the negative binomial portion of the model as well as the intercept and regression coefficient for persons. The plain negative binomial regression model has a total of four regression parameters. The scale parameters (scale1 and scale2) are the dispersion parameters from each corresponding model.<br/><br/><br/>*/<br/><br/>%include \"P:\\DRUMS(EvansC)_Bio18-83\\SAS code\\vuong.sas\"&#59<br/>proc genmod data = fish order=data&#59<br/>  class camper&#59<br/>  model count = child camper /dist=zinb&#59<br/>  zeromodel persons&#59<br/>  output out=outzinb pred=predzinb pzero=p0&#59<br/>  store m1&#59<br/>run&#59<br/>proc genmod data = outzinb order=data&#59<br/>  class camper&#59<br/>  model count = child camper /dist=nb&#59<br/>  output out=out pred=prednb&#59<br/>run&#59<br/>%vuong(data=out, response=count,<br/>       model1=zinb, p1=predzinb, dist1=zinb, scale1=2.6788, pzero1=p0, <br/>       model2=nb,   p2=prednb,   dist2=nb,   scale2=3.9171,<br/>nparm1=6,    nparm2=4)<br/><br/>/*<br/>The output above shows the Vuong test followed by the Clarke Sign test. <br/>The positive values of the Z statistics for Vuong test indicate that it is the first model, the zero-inflated negative binomial model, <br/>&nbsp&nbsp&nbsp&nbspwhich is closer to the true model. <br/><br/>Both of these tests have the same null hypothesis and it happens that the two tests are not consistent with each other <br/>leading a weak support for the zero-inflated negative binomial model.<br/><br/>*/<br/><br/><br/>/*<br/>Post estimation commands<br/>Now, letâs try to understand the model better by using some of the post estimation commands. <br/>First off, we examine the distribution of the predicted probability of being an excessive zero by the number of persons in the group. <br/>We can see that the larger the group, the smaller the probability, meaning the more likely that the person went fishing.<br/><br/>*/<br/><br/>proc means data = outzinb nway mean&#59<br/>  class persons&#59<br/>  var p0&#59<br/>run&#59<br/><br/>/*<br/>Since we have saved our model previous as m1 previously, we use proc plm  to get the predicted number of fish caught, <br/>comparing campers with non-campers given different number of children.  <br/>To get the predict counts we have used the option ilink (for inverse link).<br/>*/<br/><br/>proc plm source = m1&#59<br/>  lsmeans camper /at child=(0) ilink&#59<br/>  lsmeans camper /at child=(1) ilink&#59<br/>  lsmeans camper /at child=(2) ilink&#59<br/>  lsmeans camper /at child=(3) ilink&#59<br/>run&#59<br/><br/>/*<br/>Notice by default, SAS fixes the value of the predictor variable persons at its mean value. <br/>Next, we can also ask proc plm to plot the fitted values by camper variable.<br/>*/<br/><br/>ods graphics  / width=4in height=3in border=off&#59<br/>proc plm source = m1&#59<br/>  effectplot slicefit (sliceby= camper)&#59<br/>run&#59<br/>ods graphics off&#59<br/><br/>/*<br/>Here are some issues that you may want to consider in the course of your research analysis.<br/><br/>Question about the over-dispersion parameter is in general a tricky one. A large over-dispersion parameter could be due to a miss-specified model or could be due to a real process with over-dispersion. Adding an over-dispersion problem does not necessarily improve a miss-specified model.<br/>The zinb model has two parts, a negative binomial count model and the logit model for predicting excess zeros, so you might want to review these Data Analysis Example pages, Negative Binomial Regression and Logit Regression.<br/>Since zinb has both a count model and a logit model, each of the two models should have good predictors. The two models do not necessarily need to use the same predictors.<br/>Problems of perfect prediction, separation or partial separation can occur in the logistic part of the zero-inflated model.<br/>Count data often use exposure variable to indicate the number of times the event could have happened. You can incorporate exposure into your model by using the exposure() option.<br/>It is not recommended that zero-inflated negative binomial models be applied to small samples. What constitutes a small sample does not seem to be clearly defined in the literature.<br/>Pseudo-R-squared values differ from OLS R-squareds, please see FAQ: What are pseudo R-squareds? for a discussion on this issue.<br/><br/>*/<br/>*/<br/>s///<br/>t///"}]},{"idx":"MY728ee353-49bd-46be-b6a3-d973919985c4","name":"Tools & Settings","children":[{"idx":"Note-DQP9zFTPng4Ckh6G","name":"Settings","NodeDescription":"///t<br/>Setting&nbspthe&nbsplocal&nbspand&nbspremote&nbspenvironment&nbsp(variables,&nbsplibnames,&nbspetc)<br/>t///"},{"idx":"CodeTask-zlO9ztVQoMSivIaE","name":"Test_remote","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/><br/><br/>/*the earliest Rx of a DMT*/<br/>%print(data=Remotes.A6_DinDx)&#59<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=hqc.dp_claim,<br/>&nbsp&nbsp&nbsp&nbspt2=Remotes.A6_DinDx,<br/>&nbsp&nbsp&nbsp&nbsptarget=test1,<br/>&nbsp&nbsp&nbsp&nbspdistinct=1,<br/>&nbsp&nbsp&nbsp&nbspvars=%str(min(Rx_ddddd) format datetime20. as minRxDate),<br/>&nbsp&nbsp&nbsp&nbspjtype=inner,<br/>&nbsp&nbsp&nbsp&nbspjvars=din<br/>)&#59<br/><br/>s///<br/>t///"},{"idx":"CodeTask-nFFfnUzpOAcAde3z","name":"Beep","NodeDescription":"///t<br/>///s<br/>%beep&#59<br/>s///<br/>t///"},{"idx":"CodeTask-b3OezYBUd9h9Xqga","name":"escape","NodeDescription":"///t<br/>///s<br/>/*data x&#59a=1&#59run&#59*/<br/>)&#59<br/><br/>s///<br/>t///"},{"idx":"CodeTask-q65h3IrNGuXafJ8T","name":"Test_local","NodeDescription":"///t<br/>///s<br/>data _null_&#59run&#59<br/>%let tmppath = /sasdata/hisc/shared_data/HQC_share/Population Grouping/DATA - 3 - Define Pop and Group 2018&#59<br/>libname grppop18 \"&tmppath\"&#59<br/><br/>%print(data=grppop18.pop_grouper_ses)&#59<br/>%print(data=grppop18.pop_grouper_hc_riw)&#59<br/><br/><br/>s///<br/>t///"},{"idx":"CodeTask-MFaCVD2HKG8H2ZiE","name":"MyMacros"}]},{"idx":"MY4479f0d9-3459-4422-81d6-fd3171c9314c","name":"Prepare Master Data ","children":[{"idx":"CodeTask-lm45gKn6MFkGPZo4","name":"Local Settings","NodeDescription":"///t<br/>///s<br/>/*include macro tools in drive S<br/>&nbsp&nbsp&nbsp&nbsp/LRECL to allow the length of a statement line to be 32767 bytes instead of the default 256<br/>*/<br/>%include \"S:\\Collaborative_researchers\\Shenzhen\\My Project\\Projects\\DoNotDelete Common Macros\\MyMacros.sas\" /LRECL=32767&#59<br/><br/>%global settingsXls h_Infoxls AnalyticalReport DataReport dicXls&#59<br/><br/>/*assign the address for the exchange folder between local and remote*/<br/>%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote&#59<br/>libname transLib \"&exchangeDir\"&#59 <br/><br/>/*the xlsx file with import information*/<br/>%let settingsXls =P:\\DRUMS(EvansC)_Bio18-83\\Input\\Forms\\InputForm_Drums_20181009.xlsm&#59<br/>%let h_Infoxls = %str(R:\\Data Warehouse\\Data Manuals\\Hospital %(CIHI DAD%)\\cihi_hosps_master_file.xlsx)&#59<br/><br/>/*the target files in local drive S<br/>&nbsp&nbsp&nbsp&nbspsee A_import_settings<br/>&nbsp&nbsp&nbsp&nbspthe local data, target, reports path are input from the xls file<br/>*/<br/><br/>/*the target files in local drive S*/<br/>/*%let localTargetPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Target&#59*/<br/>/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data&#59 /*the folder to save requested raw data files*/*/<br/>/*libname localT \"&localTargetPath\"&#59*/<br/><br/>/*the report in local drive S*/<br/>%let localReportPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Reports&#59<br/>/*libname localR \"&localReportPath\"&#59*/<br/>%let AnalyticalReport=Analytical Report_DRUMS_20181009.xlsx&#59<br/>%let DataReport=DataSum_Report_DRUMS_20181009.xlsx&#59<br/><br/>/*The following steps are to import file and var description in the data dictionary *******/<br/>%let dicXls = S:\\Reference\\Data Warehouse\\Data Manuals\\General Information\\HQC_MOH_DW_data_dictionary.xlsx&#59<br/><br/>%put >>> the local work directory is at %sysfunc(pathname(work))&#59<br/><br/><br/><br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-oyLU9215za4Elsgd","name":"Copy Macro file to Remote Server","children":[{"idx":"CodeTask-8XQczBciSUyozSiJ","name":"Remote settings","NodeDescription":"///t<br/>///s<br/>/*what is the diff between msb_doctor, and msb_doctor_mobility*/<br/><br/><br/>%include \"/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/DoNotDelete Common Macros/MyMacros.sas\" /LRECL=32767&#59<br/>libname Clean \"/sasdata/hisc/shared_data/HQC_share/Clean\"&#59<br/><br/>libname Clean17 \"/sasdata/hisc/shared_data/HQC_share/Clean/2017 Data/Clean files\"&#59<br/>libname Clean18 \"/sasdata/hisc/shared_data/HQC_share/Clean/2018 Data/Clean files\"&#59<br/><br/>/*do not use the folder 'exchange'. That one is quite confusing*/<br/><br/>/*assign the address for the exchange folder between local and remote<br/>&nbsp&nbsp&nbsp&nbsptheexChangeDir is the LOCAL exchange folder<br/>*/<br/>%let exchangeDir = S:\\Shenzhen\\Exchange_Local_Remote&#59<br/>libname transLib \"&exchangeDir\"&#59 <br/><br/>%let Rexchange =  /sasdata/hisc/shared_data/HQC_share/Shenzhen/FileExchangeBetweenLocalAndRemote&#59<br/>libname RexLib \"&RExchange\"&#59<br/><br/>/*%let localDataPath=S:\\Shenzhen\\Projects\\NewCohortCreating\\Data&#59*/ /* the folder to save requested raw data files*/<br/><br/>/*set raw file names*/<br/>%global<br/>&nbsp&nbsp&nbsp&nbspexchangeDir Rexchange  dp_benefitFile dp_nonbenefitFile dp_specFile ed_a2012File ed_b2012File<br/>&nbsp&nbsp&nbsp&nbsphospitalFile MSBFile MSB_DFile MSB_DocInfoFile PHRS_InfoFile PHRS_CovFile PHRS_RSDCFile PHRS_ArrvFile<br/>&nbsp&nbsp&nbsp&nbspPHRS_ResiFile PHRS_Resi_cleanFile PHRS_retrFile VerfMortFile MDS_LTC_File AnalyticalReport DataReport alldinfile<br/>&#59<br/><br/>%let dp_benefitFile=hqc.dp_claim&#59<br/>%let dp_nonbenefitFile=hqc.dp_claim_non_ben&#59<br/>%let dp_specFile = hqc.dp_drug&#59<br/><br/>%let ed_a2012File=hqc.ED_F_2012&#59<br/>%let ed_b2012File=hqc.nacrs&#59<br/><br/>%let hospitalFile=clean18.cihi_eoc_3_jfm18_01aug2018&#59<br/><br/>%let MSBFile=hqc.MSB_BILLING&#59<br/>%let MSB_DFile=hqc.MSB_Doctor&#59<br/>%let MSB_DocInfoFile=hqc.MSB_DOCTOR_MOBILITY&#59<br/><br/>%let PHRS_InfoFile = hqc.PHRS_PERS_INFO&#59<br/>%let PHRS_CovFile = hqc.PHRS_PERS_PROG&#59<br/>%let PHRS_RSDCFile=hqc.phrs_pers_rsdc&#59<br/>%let PHRS_ArrvFile = HQC.phrs_pers_arrv&#59<br/>%let PHRS_ResiFile = HQC.phrs_pers_resc&#59<br/>%let PHRS_Resi_cleanFile=clean17.PHRS_PERS_RESC_3_AMJ17_02NOV2017&#59 /*this is the last file with income quintile, AMJ = Apr May Jun*/<br/>%let PHRS_retrFile = HQC.PHRS.PERS_RETR&#59<br/>%let VerfMortFile = clean18.phrs_dths_3_jfm18_15aug2018&#59<br/>%let MDS_LTC_File = hqc.MDS_ASSESSMENT_F_2015&#59<br/><br/>%let AnalyticalReport=Analytical Report_DRUMS_20181009.xlsx&#59<br/>%let DataReport=DataSum_Report_DRUMS_20181009.xlsx&#59<br/><br/>/*see B_remote setting, the folder is defined in and input from the input xls file*/<br/><br/>/*the source files on remote server*/<br/>/*%let remoteSourcePath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Source&#59*/<br/>/*libname remoteS \"&remoteSourcePath\"&#59*/<br/>/*the target files on remote server*/<br/>/*%let remoteTargetPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Target&#59*/<br/>/*libname remoteT \"&remoteTargetPath\"&#59*/<br/><br/>/*the report on remote server*/<br/>/*%let remoteReportPath=/sasdata/hisc/shared_data/HQC_share/Shenzhen/Projects/NewCohortCreating/Reports&#59*/<br/>/*libname remoteR \"&remoteReportPath\"&#59*/<br/><br/>/*include the raw file extracing macros*/<br/>%let alldinfile=clean17.alldin_4_jas17_03oct2017&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_CIHI.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/demog_assign.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/Addquotes.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/reformat_datevars.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_Drug_non_ben_test.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_share/Xinya/Macros/GEO_INCQTL_assign.sas' /LRECL=32767&#59<br/><br/>/*the following is for calculating the Charlson-elixer score*/<br/>%INCLUDE '/SAS_data/dw0/HQC_share/Clean/library_dw0.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/DataManip/Extract_MSB.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_CH_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD9_E_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_CH_dxtype.sas' /LRECL=32767&#59 <br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/StatAnal/ICD10_EX_dxtype.sas' /LRECL=32767&#59<br/>%INCLUDE '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/ExpandLst.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/VarExist.sas' /LRECL=32767&#59<br/>%include '/SAS_data/dw0/HQC_Data_Lab/Macros/Util/IsEmptyDS.sas' /LRECL=32767&#59<br/><br/>%put >>> the remote work directory is at %sysfunc(pathname(work))&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-kdXNatjk26MJ53wd","name":"A_import settings","NodeDescription":"///t<br/>///s<br/><br/>data _null_&#59run&#59<br/><br/><br/>/*Import settings from the setting xls file (&settingXls)*/<br/>%global  localParentFolder localDataFolder localReportFolder localTargetPath localDataPath localReportPath<br/>RemoteParentFolder RemoteSourcePath DataStartDate DataEndDate&#59<br/><br/>Filename setXls \"&settingsXls\"&#59<br/><br/>/*create a folder dedicated for the project (by rem id?)*/<br/>/*copy a back up of the setting xls file in the log directory*/<br/>/*add a file for log (create date, etc)*/<br/><br/><br/>/*1.Import the dates*/<br/>/*always create an empty data set first<br/>&nbsp&nbsp&nbsp&nbspotherwise, when the source excel table contains 0 records, the import proc won't run,<br/>&nbsp&nbsp&nbsp&nbspthe setting file won't be created<br/>&nbsp&nbsp&nbsp&nbsplater, no files were copied to the remote site to overwrite the old files<br/>&nbsp&nbsp&nbsp&nbspAs such, the old setting files will be used in getting data, which is wrong <br/>*/<br/>data translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspformat Items $100. Values $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a1_MasterInput<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"MasterInput\"&#59<br/>run&#59<br/>%print(data=translib.a1_MasterInput)&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*Determine the local data/target/reports folder*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value)&#59<br/>run&#59<br/><br/>%let localParentFolder=%sysfunc(strip(&localParentFolder))&#59<br/>%let localTargetPath=&localParentFolder.\\Output\\Result data&#59<br/>%put >>> &localTargetPath&#59<br/>%let localDataPath=&localParentFolder.\\Data&#59 /*the folder to save requested raw data files*/<br/>libname localD \"&localDataPath\"&#59<br/>libname localT \"&localTargetPath\"&#59<br/>%put >>> &localDataPath&#59<br/>/*the report in local drive S*/<br/>%let localReportPath=&localParentFolder.\\Output\\Reports&#59<br/>%put >>> &localReportPath&#59<br/>libname localR \"&localReportPath\"&#59<br/><br/>/*2.Import the sourcefiles and fields*/<br/>data translib.A2_CohortDataVars&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. VarName_in_Raw_File $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.A2_CohortDataVars (<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspwhere=(Final_status=1) <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep= final_status file_nick_name VarName_in_Raw_File<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"StudyFields\"&#59<br/>run&#59<br/><br/><br/>/*3 import the case def ICD code list*/<br/>data translib.a3_ICDDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a3_ICDDx (where=(code ne \"\") keep= Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"ICD_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a3_ICDDx)&#59<br/><br/>/*4 import the case def procedure code list*/<br/>data translib.a4_IntvnDx&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a4_IntvnDx (where=(code ne \"\") keep=Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"Procedure_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a4_IntvnDx)&#59<br/><br/>/*5 import the case def SK fee for service code list*/<br/>data translib.a5_FSC&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source_file $100. Code_Version $100. Code $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a5_FSC (where=(code ne \"\") keep=Source_file Code_Version Code Disease Description)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"SK_fee_Codes\"&#59<br/>run&#59<br/>%print(data=translib.a5_FSC)&#59<br/><br/>/*6 import the case def DINPIN list*/<br/>data translib.a6_DINDx &#59<br/>&nbsp&nbsp&nbsp&nbspformat Therapeutic_Class $100. Generic_Name $100. DIN $100. Disease $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a6_DINDx (where=(DIN ne \"\") keep=Therapeutic_Class Generic_Name DIN Disease Description Subclass class_short generation_short)<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"DINs\"&#59<br/>run&#59<br/>%print(data=translib.a6_DINDx)&#59<br/>/*Save it to localT*/<br/>data localT.a6_DINDx&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a6_DINDx&#59<br/>run&#59<br/><br/>/*7 import the list of source files for case definition*/<br/>data translib.a7_DxFiles&#59<br/>&nbsp&nbsp&nbsp&nbspformat DxFiles $100. Inclusion 8.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a7_DxFiles (where=(Inclusion =1) )<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"DxFiles\"&#59<br/>run&#59<br/>%print(data=translib.a7_DxFiles)&#59<br/><br/>/*8 import the list of additional request*/<br/>data translib.a8_AddRequest&#59<br/>&nbsp&nbsp&nbsp&nbspformat Class $100. Description $100. SourceData $100. Syntax $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a8_AddRequest  (where=(syntax ne '') )<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"Additional request\"&#59<br/>run&#59<br/>%print(data=translib.a8_AddRequest)&#59<br/><br/>/*9 import cohort exclusion criteria*/<br/>data translib.a9_CohortExclusion&#59<br/>&nbsp&nbsp&nbsp&nbspformat Source $100. Criteria $100. Syntax $100. Description $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a9_CohortExclusion<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"cohort_exclusion\"&#59<br/>run&#59<br/>%print(data=translib.a9_CohortExclusion)&#59<br/><br/>%put >>> &h_Infoxls&#59<br/><br/>/*<br/>&nbsp&nbsp&nbsp&nbspif the source xls file is open by other users, the import program may report error<br/>&nbsp&nbsp&nbsp&nbspin that case, open the Excel application (do not have to open the source xls file, just the Excel App), <br/>&nbsp&nbsp&nbsp&nbspthen run the following import program<br/>*/<br/>/*10 import hospital info*/<br/>proc import datafile=\"&h_Infoxls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=translib.a10_hospInfo<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"facilities\"&#59<br/>run&#59<br/>%print(data=translib.a10_hospInfo)&#59<br/><br/><br/>/*import ed data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp1 (where = (f8='Y')) /*if required by HQC*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"ed (NACRS)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp1)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp2&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_ed_a2012'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp1 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf6=strip(upcase(f6))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf7=strip(upcase(f7))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f6&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f7&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f6='' and f7 ='' and f10 ='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import hospital data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp11<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Hosp (DAD)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp11)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp12&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_hosp'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp11 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf5=strip(upcase(f5))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf14=strip(upcase(f14))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf15=strip(upcase(f15))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf16=strip(upcase(f16))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f5&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f15&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f14&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f16&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f5='' and f14 ='' and f15 ='' and f16='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import phrs data description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp21<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"PHRS\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp21)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp22&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_phrs_'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp21 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/>&nbsp&nbsp&nbsp&nbsp<br/>/*import drug claim variable description*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp31<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Drug plan\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp31)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp32&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_dp_'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp31 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/*import description of msb billing variables*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp41<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Claims (MSB)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp41)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp42&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp41 (firstOBS=4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/*import description of msb mobility doc info variables*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp51<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Phys Mobility (MSB docs)\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp52&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'master_msb'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp51 (firstOBS=4)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf11=strip(upcase(f11))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f11&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f11 ='' and f10='')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/><br/>&nbsp&nbsp&nbsp&nbsp/*create an emtpy data set for var description*/<br/>&nbsp&nbsp&nbsp&nbspData importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdelete&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp/*Append  descriptions from source data files*/<br/>&nbsp&nbsp&nbsp&nbspdata importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91 importDIc_tmp2 importDIc_tmp12 importDIc_tmp22 importDIc_tmp32 importDIc_tmp42 importDIc_tmp52&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp91&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(varname, ' ')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then varname =substr(varname, 1, pos1-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/><br/><br/><br/>/*Determine the remote data/target/reports folder*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value)&#59<br/>run&#59<br/>%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder))&#59<br/>%put >>> RemoteParentFolder = &RemoteParentFolder&#59<br/>%let RemoteSourcePath=&RemoteParentFolder./Source&#59<br/>%put >>>RemoteSourcePath= &RemoteSourcePath&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataStartDate=%bquote('&DataStartDate')d&#59<br/>%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate))&#59<br/>%put >>> DataStartDate = &DataStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataEndDate=%bquote('&DataEndDate')d&#59<br/>%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate))&#59<br/>%put >>> DataEndDate = &DataEndDate&#59<br/><br/>/*import data from MDS LTC (MDS_ASSESSMENT_F_2015)  <br/>&nbsp&nbsp&nbsp&nbspfor diagnoses (if in DXFiles, long_term_care =1), <br/>&nbsp&nbsp&nbsp&nbspit is not to get any dxlist (not like the ICD list, etc), rather it is go run a specific macro so as to get the study patients.<br/>&nbsp&nbsp&nbsp&nbspe.g., to have dementia patients by running specific macros,<br/>&nbsp&nbsp&nbsp&nbspor<br/>&nbsp&nbsp&nbsp&nbspto have all who admitted into LTC within a certain period of time (like the Frailty-HRPIM study)<br/><br/>&nbsp&nbsp&nbsp&nbspfor MDS_LTC data requested for a cohort, the fields are from two sources:<br/>&nbsp&nbsp&nbsp&nbsp1) by default, get key_hsn, create_date,  MDS_AB1, AB1b, A3, and R4, these fields has been specified in A2_CohortDataVars<br/>&nbsp&nbsp&nbsp&nbsp2) fields specified in sheet 'vars_MDS_LTC'<br/><br/>&nbsp&nbsp&nbsp&nbspNote that the two sources may have overlapping vars&#59 therefore they are putting together to have a list of distinct vars.<br/>&nbsp&nbsp&nbsp&nbspThe distinct vars are then added to A2_CohortDataVars<br/>*/<br/>/*21 import data vars from sheet 'vars_mds_ltc' LTC file*/<br/>data translib.a2_vars&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status $100. file_nick_name $100. VarName_in_Raw_File $100.&#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>%print(data=translib.a2_cohortdatavars)&#59<br/>data _tmp201&#59<br/>&nbsp&nbsp&nbsp&nbspformat variable $100.  &#59<br/>&nbsp&nbsp&nbsp&nbspdelete&#59<br/>run&#59<br/>proc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=_tmp201 (keep=variable where=(variable ne ''))<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"vars_MDS_LTC\"&#59<br/>run&#59<br/>data _tmp202&#59<br/>&nbsp&nbsp&nbsp&nbspformat final_status 8. file_nick_name $100. &#59<br/>&nbsp&nbsp&nbsp&nbspset _tmp201&#59<br/>&nbsp&nbsp&nbsp&nbsprename variable = VarName_in_Raw_File&#59<br/>&nbsp&nbsp&nbsp&nbspfinal_status =1&#59<br/>&nbsp&nbsp&nbsp&nbspfile_nick_name='mds_ltc'&#59<br/>run&#59<br/>/*get ltc vars already input into a2 from sheet 'StudyFields'*/<br/>data _tmp203&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars&#59<br/>&nbsp&nbsp&nbsp&nbspif file_nick_name='mds_ltc' &#59<br/>run&#59<br/><br/>/*from _tmp202, remove those already appeared in _tmp203*/<br/>%sqljoinv2(<br/>&nbsp&nbsp&nbsp&nbspt1=_tmp202,<br/>&nbsp&nbsp&nbsp&nbsptarget=_tmp204,<br/>&nbsp&nbsp&nbsp&nbspvars=t1.*,<br/>&nbsp&nbsp&nbsp&nbspfilters=%str(VarName_in_Raw_File not in (select  VarName_in_Raw_File from _tmp203))<br/>)&#59<br/><br/>/*attach vars in _tmp202 to a2*/<br/>data translib.a2_cohortdatavars&#59<br/>&nbsp&nbsp&nbsp&nbspset translib.a2_cohortdatavars &nbsp&nbsp&nbsp&nbsp_tmp204&#59<br/>&nbsp&nbsp&nbsp&nbspVarName_in_Raw_File=upcase(strip(VarName_in_Raw_File))&#59<br/>run&#59<br/>%sort(data =  translib.a2_cohortdatavars, sorter=file_nick_name VarName_in_Raw_File)&#59<br/><br/><br/>/*get dictionary for mds_ltc vars*/<br/>/*import description of variables from mds_ltc */<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspproc import datafile=\"&dicXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=importDIc_tmp205<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=no&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"MDS-LTC\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>/*&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data=importDIc_tmp51)&#59*/<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat  filename $100. varname $100. description $10000. notes $10000. metadoc $20.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfilename = 'mds_ltc'&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp205 (firstOBS=3)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*strip: removing both leading and trailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptrim: removing tailing spaces<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcompress removing all spaces (including those in the string)*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf4=strip(upcase(f4))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf9=strip(upcase(f9))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf8=strip(upcase(f8))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspf10=strip(upcase(f10))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspkeep filename varName description notes metadoc lagvar&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*don't use rename, as the length f6-f8 is limited*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvarName=f4&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription=f9&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes=f8&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc=f10&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif not (f4='' and f9 ='' and f8 ='' and f10='') &#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprename varName = variable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*For some of the vars, the description is in two rows. The var name appears in the first row, but not the second row<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp207&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspobs=_n_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat lagVar1 $100. lagDesc $1000. lagNote $1000. lagMeta $1000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagVar1 = lag(variable)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagdesc = lag(description)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsplagNotes = lag(notes)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspLagMeta = lag(metadoc)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif variable='' then do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspvariable = lagVar1&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdescription = strip(Lagdesc) || ' ' || description&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspnotes = strip(lagNotes) || ' ' || notes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmetadoc = strip(LagMeta) || ' ' || metadoc&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspend&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%sort(data=importDIc_tmp207, sorter=variable obs)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata importDIc_tmp208&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset importDIc_tmp207&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspby variable obs&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif last.variable&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop obs lagVar1 lagdesc lagNotes lagMeta&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*for those like 'dx_code_1 to dx_code_25', truncate the var names before the first space<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspalso, for those like 'D000360,V1' in metadoc, truncate the string and keep the sub string before the first comma <br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdata translib.A11_DataVarDic&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset  translib.A11_DataVarDic importDIc_tmp206&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos1= index(variable, ' ')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos1 >0 then variable =substr(variable, 1, pos1-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos2= index(metadoc, ',')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos2 >0 then metadoc =substr(metadoc, 1, pos2-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppos3=index(metadoc, 'V')&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif pos3 >0 then metadoc =substr(metadoc, 1, pos3-1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdrop pos1 pos2 pos3&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>/****************************************************************/<br/><br/>/**getting macro file (full path) and command lines for getting dx from MDS_LTC files**/<br/><br/>%macro getLTCMacro&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp/*by default, always have a empty macro (for a later task, there has to be a file to be transferred)*/<br/>&nbsp&nbsp&nbsp&nbsp/*create an empty sas file. If A12 does not contain a real sas file, transfer the empty sas file*/<br/>&nbsp&nbsp&nbsp&nbspfilename EmpSAS \"&localDataPath.\\empty.sas\"&#59<br/>&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfile EmpSAS&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspput &#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/><br/>&nbsp&nbsp&nbsp&nbspproc import datafile=\"&settingsXls\"<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspout=translib.a12_DxMDSLTC (where = (strip(theFile) ne ''))<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspgetnames=yes&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspsheet=\"Dx_MDS_LTC_Macro\"&#59<br/>&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%nobs(data=translib.a12_DxMDSLTC)&#59<br/>&nbsp&nbsp&nbsp&nbsp%if %eval(&nobs=0) %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata translib.a12_DxMDSLTC&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspformat thePath $1000. theFile $100. theLines $1000.&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthePath = \"&localDataPath\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptheFile =\"empty.sas\"&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp%end&#59<br/>%mend getLTCMacro&#59<br/>%getLTCMacro&#59<br/><br/><br/><br/><br/>&nbsp&nbsp&nbsp&nbsp%delData(data=importDIc_tmp1 importDIc_tmp2 importDIc_tmp11 importDIc_tmp12<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp21 importDIc_tmp22 importDIc_tmp31 importDIc_tmp32<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp41 importDIc_tmp42 importDIc_tmp51 importDIc_tmp52<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp91 importDIc_tmp92<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspimportDIc_tmp205 importDIc_tmp206 importDIc_tmp207 importDIc_tmp208<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp_tmp201 _tmp202 _tmp203 _tmp204 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp)&#59<br/>&nbsp&nbsp&nbsp&nbsp/*************************************************************************************/<br/><br/>data _null_&#59<br/>run&#59<br/>s///<br/>t///","children":[{"idx":"EGTask-cWNDcRk2GJkT9UJm","name":"A1_Copy data sets in transLib to Remote Server","children":[{"idx":"CodeTask-CinsaqqKpNiJAroE","name":"A2_at Local, del files in transDir","NodeDescription":"///t<br/>///s<br/>/**/<br/>/*%delData(data=translib.a1_MasterInput translib.a2_vars */<br/>/*translib.a3_icddx translib.a4_intvndx translib.a5_fsc translib.a6_dindx*/<br/>/*translib.a7_dxfiles)&#59*/<br/><br/>Proc delete data=translib._all_&#59<br/>run&#59<br/><br/>s///<br/>t///","children":[{"idx":"CodeTask-B7GYeGViHcyJuijA","name":"B_Remote_get settings into macro variables","NodeDescription":"///t<br/>///s<br/>/*get the project start date. It is also the last Xtrc Date*/<br/><br/>data _null_&#59run&#59<br/><br/>%global <br/>&nbsp&nbsp&nbsp&nbspProjectName<br/>&nbsp&nbsp&nbsp&nbspProjectStartDate<br/>&nbsp&nbsp&nbsp&nbspContact<br/>&nbsp&nbsp&nbsp&nbspEmail<br/>&nbsp&nbsp&nbsp&nbspDataStartDate<br/>&nbsp&nbsp&nbsp&nbspDataEndDate<br/>&nbsp&nbsp&nbsp&nbspEntryStartDate<br/>&nbsp&nbsp&nbsp&nbspEntryEndDate<br/>&nbsp&nbsp&nbsp&nbspEntryStartYear<br/>&nbsp&nbsp&nbsp&nbspEntryEndYear<br/>&nbsp&nbsp&nbsp&nbspEntryYears&nbsp&nbsp&nbsp&nbsp<br/><br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_MSB<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_MSB<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_Ben<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_Ben<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_NBen<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_NBen<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_Cover<br/>&nbsp&nbsp&nbsp&nbspXtrc_Start_DP_SPEC<br/>&nbsp&nbsp&nbsp&nbspXtrc_End_DP_SPEC<br/>&nbsp&nbsp&nbsp&nbspXtrc_MDS_LTC<br/>&nbsp&nbsp&nbsp&nbspLPath_MDSLTC_DxMacro<br/>&nbsp&nbsp&nbsp&nbspFile_MDSLTC_DxMacro<br/>&nbsp&nbsp&nbsp&nbspCommand_MDSLTC_DxMacro<br/><br/>&nbsp&nbsp&nbsp&nbspRemoteParentFolder<br/>&nbsp&nbsp&nbsp&nbspremoteSourcePath<br/>&nbsp&nbsp&nbsp&nbspremoteReportPath<br/>&nbsp&nbsp&nbsp&nbspremoteTargetPath<br/>&nbsp&nbsp&nbsp&nbsplocalParentFolder<br/>&nbsp&nbsp&nbsp&nbsplocalDataPath<br/>&nbsp&nbsp&nbsp&nbsplocalTargetPath<br/>&#59<br/><br/>/*get remote path*/<br/>%print(data=RexLib.a1_MasterInput)&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'RemoteFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('RemoteParentFolder', Value)&#59<br/>run&#59<br/>%put >>> &RemoteParentFolder&#59<br/><br/>%let RemoteParentFolder=%sysfunc(strip(&RemoteParentFolder))&#59<br/>%put >>> &RemoteParentFolder&#59<br/><br/>/*the source files on remote server*/<br/>%let remoteSourcePath=&RemoteParentFolder./Source&#59<br/>%put >>> &remoteSourcePath&#59<br/>libname remoteS \"&remoteSourcePath\"&#59<br/>/*the target files on remote server*/<br/>%let remoteTargetPath=&RemoteParentFolder./Target&#59<br/>libname remoteT \"&remoteTargetPath\"&#59<br/>/*the report on remote server*/<br/>%let remoteReportPath=&RemoteParentFolder./Reports&#59<br/>libname remoteR \"&remoteReportPath\"&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset RexLib.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items = 'LocalFolder'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('localParentFolder', Value)&#59<br/>run&#59<br/>%let localParentFolder=%sysfunc(strip(&localParentFolder))&#59<br/>%put >>> &localParentFolder&#59<br/>%let localDataPath=&localParentFolder.\\Data&#59<br/>%put >>> localDataPath=&localDataPath&#59<br/>%let localTargetPath=&localParentFolder.\\Output\\Result data&#59<br/>%put >>> localTargetPath = &localTargetPath&#59<br/><br/><br/>/*copy all files from remote exchange to remoteS*/<br/>proc datasets lib=Rexlib&#59<br/>&nbsp&nbsp&nbsp&nbspcopy out=remoteS&#59<br/>run&#59<br/><br/>Proc delete data=Rexlib._all_&#59<br/>run&#59<br/><br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif Items='ProjectStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbsp/*in the source data, the date values are characters<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspin the folloiwng steps, the character date values are changed to numberical datavalues, <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspthen put into macro variables<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspWhy not directly put characters into macro variable values?<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspbecause the original character is like 'yyyymmdd', while the required data format is 'ddmmmyyyy'<br/>&nbsp&nbsp&nbsp&nbsp*/<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('ProjectStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let ProjectStartDate=%bquote('&ProjectStartDate')d&#59<br/>%let ProjectStartDate=%substr(&ProjectStartDate, 1, %length(&ProjectStartDate))&#59<br/>%put >>> ProjectStartDate = &ProjectStartDate&#59<br/>%let LastXtrcDate=&ProjectStartDate&#59<br/>%put >>> ProjectStartDate = &ProjectStartDate&#59<br/>%put >>> LastXtrcDate=&ProjectStartDate&#59<br/><br/>/*get the data start and end dates*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataStartDate=%bquote('&DataStartDate')d&#59<br/>%let DataStartDate=%substr(&DataStartDate, 1, %length(&DataStartDate))&#59<br/>%put >>> DataStartDate = &DataStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='DataEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('DataEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let DataEndDate=%bquote('&DataEndDate')d&#59<br/>%let DataEndDate=%substr(&DataEndDate, 1, %length(&DataEndDate))&#59<br/>%put >>> DataEndDate = &DataEndDate&#59<br/><br/>/*get the cohort entrydates*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='EntryStartDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('EntryStartDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let EntryStartDate=%bquote('&EntryStartDate')d&#59<br/>%let EntryStartDate=%substr(&EntryStartDate, 1, %length(&EntryStartDate))&#59<br/>%put >>> EntryStartDate = &EntryStartDate&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='EntryEndDate'&#59<br/>&nbsp&nbsp&nbsp&nbspdatevalue=input(value, anydtdte.)&#59<br/>&nbsp&nbsp&nbsp&nbspformat datevalue date9.&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('EntryEndDate', put(datevalue, date9.))&#59<br/>run&#59<br/>%let EntryEndDate=%bquote('&EntryEndDate')d&#59<br/>%let EntryEndDate=%substr(&EntryEndDate, 1, %length(&EntryEndDate))&#59<br/>%put >>> EntryEndDate = &EntryEndDate&#59<br/><br/>%let EntryStartYear = %sysfunc(year(&EntryStartDate))&#59<br/>%put >>> EntryStartYear=&EntryStartYear&#59<br/>%let EntryEndYear = %sysfunc(year(&EntryEndDate))&#59<br/>%put >>> EntryEndYear=&EntryEndYear&#59<br/>%let EntryYears = %eval(&EntryEndYear - &EntryStartYear +1)&#59<br/>%put >>> EntryYears=&EntryYears&#59<br/><br/><br/>/*The  project name, contact, and email*/<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='ProjectName'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('ProjectName', value)&#59<br/>run&#59<br/>%put >>> ProjectName = &ProjectName&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='Contact'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Contact', value)&#59<br/>run&#59<br/>%put >>> Contact = &Contact&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset remoteS.a1_MasterInput&#59<br/>&nbsp&nbsp&nbsp&nbspif items='Email'&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Email', value)&#59<br/>run&#59<br/>%put >>> Email = &Email&#59<br/><br/><br/>/*the following part is to determine the xtrc_date for each sources<br/>&nbsp&nbsp&nbsp&nbspMSB, Drug claims, coverage period (same for demo, resitype)<br/>&nbsp&nbsp&nbsp&nbspThe cleaned hospital file does not require xtrc date<br/>&nbsp&nbsp&nbsp&nbsp?? How about the mortality record file (verfdt), the emergancy file (f_2012)<br/><br/>*/<br/>%put >>> &dataStartDate&#59<br/>/*the xtrc_dates*/<br/>/*determine the msb xtrc_date***********/<br/>%freq(data=clean.xtrc_dates, table=ds)&#59<br/>%sort(data=clean.xtrc_dates, target=b11, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/><br/>data b12&#59<br/>&nbsp&nbsp&nbsp&nbspset b11&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'msb_billing'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b12, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b13&#59<br/>&nbsp&nbsp&nbsp&nbspset b12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_MSB', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_MSB=%str(%')&Xtrc_Start_MSB.%str(%')d&#59<br/>%let Xtrc_Start_MSB= %substr(&Xtrc_Start_MSB, 1, %length(&Xtrc_Start_MSB))&#59<br/>%put >>> &Xtrc_Start_MSB&#59<br/><br/>%sort(data=b12, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b14&#59<br/>&nbsp&nbsp&nbsp&nbspset b12 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_MSB', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_MSB=%str(%')&Xtrc_End_MSB.%str(%')d&#59<br/>%let Xtrc_End_MSB= %substr(&Xtrc_End_MSB, 1, %length(&Xtrc_End_MSB))&#59<br/>%put >>> &Xtrc_End_MSB&#59<br/>/******************************************/<br/><br/>/*determine the benefit drug claim xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b21, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b22&#59<br/>&nbsp&nbsp&nbsp&nbspset b21&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b22, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b23&#59<br/>&nbsp&nbsp&nbsp&nbspset b22 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_Ben', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_Ben=%str(%')&Xtrc_Start_DP_Ben.%str(%')d&#59<br/>%let Xtrc_Start_DP_Ben= %substr(&Xtrc_Start_DP_Ben, 1, %length(&Xtrc_Start_DP_Ben))&#59<br/>%put >>> &Xtrc_Start_DP_Ben&#59<br/><br/>%sort(data=b22, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b24&#59<br/>&nbsp&nbsp&nbsp&nbspset b22 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_Ben', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_Ben=%str(%')&Xtrc_End_DP_Ben.%str(%')d&#59<br/>%let Xtrc_End_DP_Ben= %substr(&Xtrc_End_DP_Ben, 1, %length(&Xtrc_End_DP_Ben))&#59<br/>%put >>> &Xtrc_End_DP_Ben&#59<br/>/******************************************/<br/><br/>/*determine the non-benefit drug claim xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b31, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b32&#59<br/>&nbsp&nbsp&nbsp&nbspset b31&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim_non_ben'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/><br/>%sort(data=b32, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b33&#59<br/>&nbsp&nbsp&nbsp&nbspset b32 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_NBen', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_NBen=%str(%')&Xtrc_Start_DP_NBen.%str(%')d&#59<br/>%let Xtrc_Start_DP_NBen= %substr(&Xtrc_Start_DP_NBen, 1, %length(&Xtrc_Start_DP_NBen))&#59<br/>%put >>> &Xtrc_Start_DP_NBen&#59<br/><br/>%sort(data=b32, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b34&#59<br/>&nbsp&nbsp&nbsp&nbspset b32 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_NBen', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_NBen=%str(%')&Xtrc_End_DP_NBen.%str(%')d&#59<br/>%let Xtrc_End_DP_NBen= %substr(&Xtrc_End_DP_NBen, 1, %length(&Xtrc_End_DP_NBen))&#59<br/>%put >>> &Xtrc_End_DP_NBen&#59<br/>/******************************************/<br/><br/>*&xtrc_cover&#59<br/>/*determine the coverage xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b41, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>/*%freq(data=b41, table=ds)&#59*/<br/>data b42&#59<br/>&nbsp&nbsp&nbsp&nbspset b41&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'phrs_pers_prog'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>%sort(data=b42, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b43&#59<br/>&nbsp&nbsp&nbsp&nbspset b42 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_Cover', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_Cover=%str(%')&Xtrc_Start_Cover.%str(%')d&#59<br/>%let Xtrc_Start_Cover= %substr(&Xtrc_Start_Cover, 1, %length(&Xtrc_Start_Cover))&#59<br/>%put >>> &Xtrc_Start_Cover&#59<br/><br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b44&#59<br/>&nbsp&nbsp&nbsp&nbspset b42 end=last&#59<br/>&nbsp&nbsp&nbsp&nbspif last&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_Cover', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_Cover=%str(%')&Xtrc_End_Cover.%str(%')d&#59<br/>%let Xtrc_End_Cover= %substr(&Xtrc_End_Cover, 1, %length(&Xtrc_End_Cover))&#59<br/>%put >>> &Xtrc_End_Cover&#59<br/>/******************************************/<br/><br/>/*determine the drug spec xtrc_date***********/<br/>%sort(data=clean.xtrc_dates, target=b51, <br/>&nbsp&nbsp&nbsp&nbspsorter=%str(report_start report_end xtrc_date))&#59<br/>data b52&#59<br/>&nbsp&nbsp&nbsp&nbspset b51&#59<br/>&nbsp&nbsp&nbsp&nbspif ds = 'dp_claim' or ds = 'dp_claim_non_ben'&#59<br/>&nbsp&nbsp&nbsp&nbspdataStartDate=&dataStartDate&#59<br/>&nbsp&nbsp&nbsp&nbspLastXtrcDate = &LastXtrcDate&#59/* &LastXtrcDate&#59*/<br/>&nbsp&nbsp&nbsp&nbspformat dataStartDate date9. LastXtrcDate date9.&#59<br/>&nbsp&nbsp&nbsp&nbspif (report_start <= dataStartDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_start > dataStartDate)<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspand (report_start <= LastXtrcDate <= report_end <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspor report_end < LastXtrcDate)<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>run&#59<br/><br/>%sort(data=b52, sorter=xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b53&#59<br/>&nbsp&nbsp&nbsp&nbspset b52 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_Start_DP_SPEC', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_Start_DP_SPEC=%str(%')&Xtrc_Start_DP_SPEC.%str(%')d&#59<br/>%let Xtrc_Start_DP_SPEC= %substr(&Xtrc_Start_DP_SPEC, 1, %length(&Xtrc_Start_DP_SPEC))&#59<br/>%put >>> &Xtrc_Start_DP_SPEC&#59<br/><br/>%sort(data=b52, sorter=descending xtrc_date)&#59<br/>/*the earliest xtrc_date should be the last one in the rows with a negative<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspstartgGap*/<br/>data b54&#59<br/>&nbsp&nbsp&nbsp&nbspset b52 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_End_DP_SPEC', put(xtrc_date, date9.))&#59<br/>run&#59<br/>%let Xtrc_End_DP_SPEC=%str(%')&Xtrc_End_DP_SPEC.%str(%')d&#59<br/>%let Xtrc_End_DP_SPEC= %substr(&Xtrc_End_DP_SPEC, 1, %length(&Xtrc_End_DP_SPEC))&#59<br/>%put >>> &Xtrc_End_DP_SPEC&#59<br/>/******************************************/<br/><br/>/***get xtrc_date for mds_ltc data****************************/<br/>data b61&#59<br/>&nbsp&nbsp&nbsp&nbspset clean.xtrc_dates&#59<br/>&nbsp&nbsp&nbsp&nbspif xtrc_date < = &LastXtrcDate  and ds='mds_assessment_f_2015'&#59<br/>run&#59<br/>%sort(data=b61, sorter=descending xtrc_date)&#59<br/>data _null_&#59<br/>&nbsp&nbsp&nbsp&nbspset b61 (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbspcall symput('Xtrc_MDS_LTC',  put(xtrc_date, date9.))&#59 <br/>run&#59<br/>%let XTRC_MDS_LTC=%str(%')&XTRC_MDS_LTC.%str(%')d&#59<br/>%let XTRC_MDS_LTC= %substr(&XTRC_MDS_LTC, 1, %length(&XTRC_MDS_LTC))&#59<br/>%put >>> &XTRC_MDS_LTC&#59<br/><br/>/****************************************************/<br/><br/>/*get the file (full path) and macro command for getting dx info from MDS_LTC*/<br/>%macro getMDSMacro&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*initially, let the following variables = nothing*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let File_MDSLTC_DxMacro=&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let Command_MDSLTC_DxMacro =&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%print(data =remoteS.A12_DXMDSLTC )&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*get the path, file name and command lines*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdata _null_&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspset remoteS.A12_DXMDSLTC (obs=1)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('LPath_MDSLTC_DxMacro',  thePath)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('File_MDSLTC_DxMacro',  theFile)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcall symput('Command_MDSLTC_DxMacro',  theLines)&#59 <br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsprun&#59<br/>&nbsp&nbsp&nbsp&nbsp<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp/*remove the slash at the end of the path*/<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%sysfunc(strip(&LPath_MDSLTC_DxMacro))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%if %substr(&LPath_MDSLTC_DxMacro, %length(&LPath_MDSLTC_DxMacro), 1) = \\ %then %do&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro=%substr(&LPath_MDSLTC_DxMacro, 1, %eval(%length(&LPath_MDSLTC_DxMacro)-1))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%end&#59<br/><br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%let LPath_MDSLTC_DxMacro= %sysfunc(strip(&LPath_MDSLTC_DxMacro))&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the local macro file to get dx data from MDS_LTC = %str(&LPath_MDSLTC_DxMacro.\\&File_MDSLTC_DxMacro)&#59<br/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp%put >>> the remote macro file to get dx data from MDS_LTC = %str(&remoteSourcePath.\\&File_MDSLTC_DxMacro)&#59<br/>%mend getMDSMacro&#59<br/>%getMDSMacro&#59<br/><br/>%freq(source=clean.xtrc_dates, table=ds)&#59<br/><br/><br/>s///<br/>t///","children":[{"idx":"EGTask-yUjgFuvpaSgEzUDM","name":"Copy LTCMacro to Remote","custparents":[{"idx":"CodeTask-B7GYeGViHcyJuijA"}]}],"custparents":[{"idx":"CodeTask-CinsaqqKpNiJAroE"}]}],"custparents":[{"idx":"EGTask-cWNDcRk2GJkT9UJm"}]}],"custparents":[{"idx":"CodeTask-kdXNatjk26MJ53wd"}]}],"custparents":[{"idx":"CodeTask-8XQczBciSUyozSiJ"}]}],"custparents":[{"idx":"EGTask-oyLU9215za4Elsgd"}]}],"custparents":[{"idx":"CodeTask-lm45gKn6MFkGPZo4"}]}]},{"idx":"CodeTask-QFzmN4G7tDtiLNTg","name":"SPECMapping","NodeDescription":"///t<br/>///s<br/>/*Mapping SPEC and SPEC categories*/<br/>%let SPECMAPFile = P:\\DRUMS(EvansC)_Bio18-83\\Data\\SPECGrouping.xlsx&#59<br/><br/>proc import datafile=\"&SPECMAPFile\"<br/>&nbsp&nbsp&nbsp&nbspDBMS=excel<br/>&nbsp&nbsp&nbsp&nbspout=localD.SPECMAP<br/>&nbsp&nbsp&nbsp&nbspreplace<br/>&nbsp&nbsp&nbsp&nbsp&#59<br/>getnames=yes&#59<br/>sheet=\"SPECMapping\"&#59<br/>run&#59<br/>%print(data=localD.SPECMAP)&#59<br/>s///<br/>t///"}]}]}]